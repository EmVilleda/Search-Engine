<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.9/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.9/ http://www.mediawiki.org/xml/export-0.9.xsd" version="0.9" xml:lang="en">
  <page>
    <title>File:Leaf shape 09.jpg</title>
    <ns>6</ns>
    <id>4477</id>
    <revision>
      <id>905665</id>
      <parentid>900487</parentid>
      <timestamp>2007-06-21T09:48:12Z</timestamp>
      <contributor>
        <username>Webaware</username>
        <id>27565</id>
      </contributor>
      <comment>licensing</comment>
      <text xml:space="preserve">One of many examples of leaf forms; photographed by Eric Guinther and released under the GNU Free Documentation License.

==Licensing==
{{GFDL}}</text>
      <sha1>8lmoyuxwyyjf0z3klrhs886hj5cm0wy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Leaf shape 10.jpg</title>
    <ns>6</ns>
    <id>4478</id>
    <revision>
      <id>905666</id>
      <parentid>900488</parentid>
      <timestamp>2007-06-21T09:48:36Z</timestamp>
      <contributor>
        <username>Webaware</username>
        <id>27565</id>
      </contributor>
      <comment>licensing</comment>
      <text xml:space="preserve">One of many examples of leaf forms; photographed by Eric Guinther and released under the GNU Free Documentation License.

==Licensing==
{{GFDL}}</text>
      <sha1>8lmoyuxwyyjf0z3klrhs886hj5cm0wy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Leaf shape 11.jpg</title>
    <ns>6</ns>
    <id>4481</id>
    <revision>
      <id>905667</id>
      <parentid>900489</parentid>
      <timestamp>2007-06-21T09:49:01Z</timestamp>
      <contributor>
        <username>Webaware</username>
        <id>27565</id>
      </contributor>
      <comment>licensing</comment>
      <text xml:space="preserve">One of many examples of leaf forms; photographed by Eric Guinther and released under the GNU Free Documentation License.

==Licensing==
{{GFDL}}</text>
      <sha1>8lmoyuxwyyjf0z3klrhs886hj5cm0wy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Leaf shape 12.jpg</title>
    <ns>6</ns>
    <id>4482</id>
    <revision>
      <id>905668</id>
      <parentid>900490</parentid>
      <timestamp>2007-06-21T09:49:27Z</timestamp>
      <contributor>
        <username>Webaware</username>
        <id>27565</id>
      </contributor>
      <comment>licensing</comment>
      <text xml:space="preserve">One of many examples of leaf forms; photographed by Eric Guinther and released under the GNU Free Documentation License.  This plant is ''Richardia brasiliensis'' Gomes (Rubiaceae).

==Licensing==
{{GFDL}}</text>
      <sha1>1udspwh52lf2jmrrht709rdl8fgxmwb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Parrotfeather.jpg</title>
    <ns>6</ns>
    <id>4483</id>
    <revision>
      <id>905770</id>
      <parentid>900604</parentid>
      <timestamp>2007-06-21T13:30:33Z</timestamp>
      <contributor>
        <username>Webaware</username>
        <id>27565</id>
      </contributor>
      <comment>licensing</comment>
      <text xml:space="preserve">The parrot's or water feather plant, ''Myriophyllum aquaticum'', photographed near Hale'iwa, O'ahu, Hawai'i by Eric Guinther and released under the GNU Free Documentation License.

==Licensing==
{{GFDL}}</text>
      <sha1>n6bhtvovymric0ny2rxtln4pmo4elfh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Parrotfeather reduced.jpg</title>
    <ns>6</ns>
    <id>4484</id>
    <revision>
      <id>905769</id>
      <parentid>900605</parentid>
      <timestamp>2007-06-21T13:29:55Z</timestamp>
      <contributor>
        <username>Webaware</username>
        <id>27565</id>
      </contributor>
      <comment>licensing</comment>
      <text xml:space="preserve">The parrot's or water feather plant, ''Myriophyllum aquaticum'', photographed near Hale'iwa, O'ahu, Hawai'i by Eric Guinther and released under the GNU Free Documentation License. This is just a reduced version of [[:image:Parrotfeather.jpg|this image]].

==Licensing==
{{GFDL}}</text>
      <sha1>pjaaq0sie7wh7zmgko4idhi359j5y3p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Leaf shape 13.jpg</title>
    <ns>6</ns>
    <id>4485</id>
    <revision>
      <id>905669</id>
      <parentid>900491</parentid>
      <timestamp>2007-06-21T09:49:58Z</timestamp>
      <contributor>
        <username>Webaware</username>
        <id>27565</id>
      </contributor>
      <comment>licensing</comment>
      <text xml:space="preserve">One of many examples of leaf forms; photographed by Eric Guinther and released under the GNU Free Documentation License.

==Licensing==
{{GFDL}}</text>
      <sha1>8lmoyuxwyyjf0z3klrhs886hj5cm0wy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Leaf shape 14.jpg</title>
    <ns>6</ns>
    <id>4486</id>
    <revision>
      <id>905670</id>
      <parentid>900492</parentid>
      <timestamp>2007-06-21T09:50:25Z</timestamp>
      <contributor>
        <username>Webaware</username>
        <id>27565</id>
      </contributor>
      <comment>licensing</comment>
      <text xml:space="preserve">One of many examples of leaf forms; photographed by Eric Guinther and released under the GNU Free Documentation License.

==Licensing==
{{GFDL}}</text>
      <sha1>8lmoyuxwyyjf0z3klrhs886hj5cm0wy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Computer Programming/Database Programming</title>
    <ns>0</ns>
    <id>4487</id>
    <revision>
      <id>1687077</id>
      <parentid>1615366</parentid>
      <timestamp>2009-12-27T16:53:59Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <comment>page has moved - go direct instead of via redirect</comment>
      <text xml:space="preserve">== Database Programming ==

=== Introduction ===

A database is a repository of information managed by a database engine which ensures integrity of data and fast access to the data. 

A very common implementation of a database is a Relational Database Management System (RDBM). To users, the information in a database can be accessed by using Structured Query Language ([[SQL]]) a database language common to most databases. However, [[SQL]] only provides commands to access and manipulate the data in the database. 

For any complex application, there commonly is a need for conditions, branching, and loops. None of these are a part of the SQL language. In order to fill this gap, many common programming languages allow integration with SQL through a common library such as Open Data Base Connectivity (ODBC), Object Linking and Embedding (OLE), and sometimes with application programming interfaces or libraries supplied with the database. 

In addition, most databases now have a simple language of their own which allows simple control for applications which do not need the full power of standard languages like [[C++ Programming|C++]] and [[Pascal]]. These simple languages are used to write stored procedures and are proprietary to each database. 

An alternate approach taken by other languages like [[Programming:MUMPS|MUMPS]] is to have a data model that includes persistent variables that are shared among multiple processes.  This approach hides the database operations within the programming language instead of hiding the language within the database.

&lt;!-- commenting this out until something is ready to be placed here
=== Access database through standard libraries ===
Access database through standard libraries
--&gt;

=== Stored procedure languages ===
* [[Oracle Programming/SQL Cheatsheet|Oracle PL/SQL Programming]]

{{BookCat}}</text>
      <sha1>r4yrc81lgvh212zsz2mja453sg3s4xc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>LPI Linux Certification/LPI Permission</title>
    <ns>0</ns>
    <id>4533</id>
    <revision>
      <id>985290</id>
      <parentid>981171</parentid>
      <timestamp>2007-09-26T21:28:05Z</timestamp>
      <contributor>
        <username>Barry Sharpe</username>
        <id>69085</id>
      </contributor>
      <minor />
      <text xml:space="preserve">Date: Fri, 16 Jan 2004 14:33:06 -0500&lt;br&gt;
From: &quot;Wilma Silbermann&quot;
&lt;wilma@lpi.org&gt;&lt;br&gt;
To: &quot;m strawser&quot; &lt;mind3ras3r@yahoo.com&gt;&lt;br&gt;
Subject: Re: reprinting of exam objectives&lt;br&gt;

Hi there Mark,

We are pleased that you are creating more training material for the LPI exams and would have no problem approving your request to reprint the objectives as long as you ensure you show that LPI does not approve or endorse your book in any way.

You may use the logo in the same manner - please read the logo license;

https://www.lpi.org/en/logo.html

Please give me a call if you have any further concerns or questions on this or any other matter.

Thanks again for your support of LPI.

Wilma

&lt;noinclude&gt;{{subject|linux}}&lt;/noinclude&gt;</text>
      <sha1>8607r2bgz3z5jqiwaavi9v77np4ljrh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Thomas</title>
    <ns>2</ns>
    <id>4558</id>
    <revision>
      <id>156272</id>
      <parentid>15426</parentid>
      <timestamp>2004-02-16T08:01:19Z</timestamp>
      <contributor>
        <username>Thomas Gehrlein</username>
        <id>599</id>
      </contributor>
      <text xml:space="preserve">Ich bin jetzt als [[User:Thomas Gehrlein|Thomas Gehrlein]] im Wiki unterwegs.</text>
      <sha1>84hn5eloxxqhlqt7geai9v19fxyhbqp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Puzzles/Decision puzzles/Monty Hall/Solution</title>
    <ns>1</ns>
    <id>4559</id>
    <revision>
      <id>1747785</id>
      <parentid>1747350</parentid>
      <timestamp>2010-03-31T12:46:49Z</timestamp>
      <contributor>
        <ip>84.148.76.162</ip>
      </contributor>
      <comment>/* EDIT BY ANOTHER USER: */</comment>
      <text xml:space="preserve">{{merged|Puzzles:Goats and sports car}}

The solution is wrong! Moreover, it's obvious for any mathematician...

If something's wrong, by all means, fix it. Be bold! :) [[User:129.94.6.30|129.94.6.30]] 22:19, 11 Feb 2004 (UTC) ([[User talk:Dysprosia|User:Dysprosia]], logged out)

----

I concur, the solution is incorrect.  This is basic [[Probability]].  Consider:
*goat
*goat
*prize

No matter which door you select, a door with a goat will be revealed.  The fact that the door opened is one other than you choose is irrelevant.  The remaining doors contain:
*goat
*prize

While 2 of the 3 original doors remain, the odds of selecting the prize from the two remaining doors is 1:2 NOT 2:3.  

'''However''', if the chosen door is revealed you effectively have two chances to select the prize from the three doors -- the odds are 2:3.  The odds of selecting the prize from the initial round is 1:3.

--[[User:Eibwen|Eibwen]] 19:30, 25 Sep 2004 (UTC)

== The solution is right, you are wrong ==

Your reasoning is flawed.  Read the explanation again.  For that matter, did either of you try doing a monte carlo experiment and seeing for yourself?

If this makes it clearer, suppose you choose door A.  Then:

  Star prize is in    If you stick    If you switch
  A                   Star prize      Goat
  B                   Goat            Star prize
  C                   Goat            Star prize

The same applies whichever door you pick. -- [[User:Smjg|Smjg]] 11:25, 20 Oct 2004 (UTC)

=== Elaboration ===

There are four (and only 4) permutations for a given door.  To illustrate, suppose you choose door A:

 Prize Door   Revealed Door   Contents   Remaining Doors   If you stay  If you switch   Prize recieved by
 A            B               Goat       A, C              A - Prize    C - Goat        Staying
              C               Goat       A, B                           B - Goat        Staying
 B            C               Goat       A, B              A - Goat     B - Prize       Switching
 C            B               Goat       A, C              A - Goat     C - Prize       Switching

Independent of whichever door is selected only two doors remain, of which only one contains the prize, 1:2.  Moreover, the odds of recieving the prize by either staying (2) or switching (2) relative to the number of permutations (4) is 2:4 or 1:2.

While there are 4 unique scenarios, staying or switching for any given door yield the same result.  Consequently, two of the four scenarios are identical and the practical odds are 2:3 in favor of switching.

Both odds are valid, but they reference the outcome from different perspectives.  2:3 is the practical odds and is the answer given the context of the question.  However, both the question and the solution could be further clarified to prevent this discrepancy while maintaining the integrity of the puzzle.

--[[User:Eibwen|Eibwen]] 01:58, 2 Nov 2004 (UTC)

: What matters is not so much which possibilities are the same as their relative probabilities.  Though statement 3 below does depend on the symmetry in B and C, and hence the equivalence of the first two....

: The key statements are:
:# The prize is equally likely to be in A, B or C.
:# Hence once a door is picked, the probability of that door having the prize is 1/3.
:# Monty opening a door cannot alter the fact of statement 2, since his opening a door you didn't choose is unconditional.

: Maybe the solution can be improved.  But how would you improve the question?
: -- [[User:Smjg|Smjg]] 18:27, 2 Nov 2004 (UTC)

== A demonstration ==

I've just written this C program for the doubters among you to try for yourself:

 #include &lt;stdio.h&gt;
 #include &lt;stdlib.h&gt;
 #include &lt;time.h&gt;
 
 int main() {
     const int ATTEMPTS = 10000;
     int stickWins = 0, switchWins = 0, attempt;
     
     srand(time(NULL));
     
     for (attempt = 0; attempt &lt; ATTEMPTS; attempt++) {
         int prizeIn = rand() % 3;  // prize is behind this door
         int choose = rand() % 3;   // contestant's first choice of door
         int open;                  // door opened by Monty
         int switchTo;              // door that contestant switches to
         
         // now reveal a goat
         if (prizeIn == choose) {
             open = rand() % 2;
             if (open == choose) open = 2;
         } else {
             for (open = 0; open &lt; 3; open++) {
                 if (open != choose &amp;&amp; open != prizeIn) break;
             }
         }
         
         // try sticking
         if (prizeIn == choose) {
             stickWins++;
         }
         
         // try switching
         for (switchTo = 0; switchTo &lt; 3; switchTo++) {
             if (switchTo != choose &amp;&amp; switchTo != open) break;
         }
         
         if (prizeIn == switchTo) {
             switchWins++;
         }
     }
     
     // now report on result
     printf(&quot;Wins by sticking:  %5d\n&quot;, stickWins);
     printf(&quot;Wins by switching: %5d\n&quot;, switchWins);
     
     return 0;
 }

== Never mind me ==
OK, I just ran the program, modified it to make it more fair (took out some unneeded code and made the choosing algorithm more transparent. My version keeps using rand() untill it finds a valid door to open, instead of falling back to a 'default' 2 if it detects a double. It STILL ends up is 33%/66%. I was suprized... Untill I realized that the clue behind this 'riddle' is that the door that gets opened isn't a random door. If you choose a goat door the door that get's opened is non random. So I'm not sure yet how the math on this works, but because of this you chance goes up. The description on the solution page is still wrong though. However, the solution mentioned here (mapping all possibilities out if you choose door A) does privide a sufficient explanation, if you explain properly that you can see the 2 equal situations as 1 situation (resulting in 1 no switch win and 2 switch wins).

The current solution, as of june 21 2005, is correct. 

Scenario A: Select prize; Switching after goat revealed means you lose.
Scenario B: Select Goat A; Switching after goat revealed means you win.
Scenario C: Select Goat B; Switching after goat revealed means you win. 

Scenario A, B and C are equally likely; Switching means you win 2/3 times.



== Merged [[Puzzles:Decision puzzles:Monty Hall|Puzzles:Goats and sports car]] ==
... which was a duplicate solution to this problem. --[[User:Kernigh|Kernigh]] 00:47, 14 February 2006 (UTC)</text>
      <sha1>9a2o6os3r22lvfe0t95e67ssd49vnvn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:212.14.13.203</title>
    <ns>3</ns>
    <id>4560</id>
    <revision>
      <id>156274</id>
      <timestamp>2004-02-11T22:18:40Z</timestamp>
      <contributor>
        <ip>129.94.6.30</ip>
      </contributor>
      <comment>fix it</comment>
      <text xml:space="preserve">If something's wrong, by all means, fix it. Be bold! :) [[User:129.94.6.30|129.94.6.30]] 22:18, 11 Feb 2004 (UTC) ([[User:Dysprosia]], logged out)</text>
      <sha1>pzhsnl1lwd8yzxg88jdn28lalmvy38z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Puzzles/How do you ... ?/Crossing the Bridge/Solution</title>
    <ns>1</ns>
    <id>4562</id>
    <revision>
      <id>875193</id>
      <parentid>499054</parentid>
      <timestamp>2007-05-24T00:24:30Z</timestamp>
      <contributor>
        <username>Mattb112885</username>
        <id>33615</id>
      </contributor>
      <minor />
      <comment>[[Talk:Puzzles/Crossing the Bridge/Solution]] moved to [[Talk:Puzzles/How do you ... ?/Crossing the Bridge/Solution]]: NC</comment>
      <text xml:space="preserve">The solution in my opinion is not correct. Even though during the juggling process, one of the apples is in the air, if you consider the man+ 3 apples as a system, this system is applying an average force of 101kg on the bridge. (actually, while throwing the apple up in the air, you exert a very large impulsive force and then you go back to your man + 2 apples weight)

I believe the solution is incorrect.</text>
      <sha1>04m8t1e2ggn5e40pq6mcqc2nx2knvre</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:High School Mathematics Extensions/Counting and Generating Functions</title>
    <ns>1</ns>
    <id>4563</id>
    <revision>
      <id>2482146</id>
      <parentid>2482144</parentid>
      <timestamp>2013-01-27T15:36:04Z</timestamp>
      <contributor>
        <username>Pratyush Sarkar</username>
        <id>539640</id>
      </contributor>
      <minor />
      <comment>/* Counting and Generating Functions */</comment>
      <text xml:space="preserve">== I think the guessing part is bad mathematics ==

I think the guessing solution is bad mathematics. I dont know who came up with the idea of guessing. I know that part of the mathematics isn't guessing, it's an observation turned generalisation. Nothing is guesswork, but careful deduction and elimination.
I think it would be good to just keep it there for the moment being. But it will need to be heavily edited before the first draft.[[User:Xiaodai|Xiaodai]] 22:54, 5 Feb 2004 (UTC)

Uh, ''smart'' guessing isn't bad mathematics - if you have a problem and you have a good idea that it may lead to a positive outcome, then there's no real harm in guessing - afterward you can clean up, and ''justify'' the guess. I suppose you'd like some justification of the &quot;guess&quot;, and I should have done that earlier, so I apologise [[User:Dysprosia|Dysprosia]] 23:20, 5 Feb 2004 (UTC)

:Yeah. Justification would be nice, but I think the idea comes from the derivation method. I dont think we should say it's guesswork, because it's something that follows naturally once you know the work. [[User:Xiaodai|Xiaodai]] 00:29, 6 Feb 2004 (UTC)

:: I would argue the opposite, if, say, you were confronting the theory of linear recurrence relations for the first time. You might try polynomials at first and see that they don't work, or try something else - then see that exponentials work, then try and fiddle around with exponentials and then see that they form the general solution, then try and explain why exponentials work. It's much more difficult to come up with some general theory, and then make it more specific. [[User:Dysprosia|Dysprosia]] 01:41, 6 Feb 2004 (UTC)


==== Alternate solution to example 1 ====
We have &lt;math&gt;x_n = 2x_{n-1} + 3x_{n-2}&lt;/math&gt;. Let us suppose that we will have a solution will be in the form ''r''&lt;sup&gt;n&lt;/sup&gt; for some ''r'' (Later we will show you that this is just the right form of solution to choose). If we substitute this guess in, we obtain
: ''r''&lt;sup&gt;n&lt;/sup&gt; = 2''r''&lt;sup&gt;n-1&lt;/sup&gt;+3''r''&lt;sup&gt;n-2&lt;/sup&gt;
Divide throughout by ''r''&lt;sup&gt;n-2&lt;/sup&gt;
: ''r''&lt;sup&gt;2&lt;/sup&gt; = 2''r''+3

But this is just a quadratic equation - we can easily solve to get roots 
: &amp;alpha;=-1, &amp;beta;=3

So we have two solutions, ''A''(-1)&lt;sup&gt;n&lt;/sup&gt;, and ''B''(3&lt;sup&gt;n&lt;/sup&gt;). We can add these solutions together to get a new solution&lt;sup&gt;*&lt;/sup&gt;, but we need to find out what coefficients ''A'' and ''B'' are. We've been given initial conditions ''x''&lt;sub&gt;0&lt;/sub&gt; = 1, ''x''&lt;sub&gt;1&lt;/sub&gt; = 1. So, let's substitute ''x''&lt;sub&gt;0&lt;/sub&gt; into ''x''&lt;sub&gt;n&lt;/sub&gt;=''A''(-1) &lt;sup&gt; n &lt;/sup&gt; +''B''(3 &lt;sup&gt; n &lt;/sup&gt;).
:1 = ''A''(-1)^0+B(3^0)
:1 = ''A''+''B''

Now substitute ''x''&lt;sub&gt;1&lt;/sub&gt;
:1 = -''A''+3''B''

Solve these two to get ''A''=''B''=1/2.

So our solution is ''x''&lt;sub&gt;n&lt;/sub&gt;=1/2((-1)&lt;sup&gt;n&lt;/sup&gt;+3&lt;sup&gt;n&lt;/sup&gt;), same as above.

&lt;sup&gt;*&lt;/sup&gt;We know this because,  if ''a''&lt;sup&gt;n&lt;/sup&gt; and ''b''&lt;sup&gt;n&lt;/sup&gt; are both solutions, and we substitute into the general recurrence relation
:''x''&lt;sub&gt;n&lt;/sub&gt;=''Ax''&lt;sub&gt;n-1&lt;/sub&gt;+''Bx''&lt;sub&gt;n-2&lt;/sub&gt;
we get, for ''a''&lt;sup&gt;n&lt;/sup&gt; and ''b''&lt;sup&gt;n&lt;/sup&gt;, since they are solutions
:0=''Aa''&lt;sup&gt;n-1&lt;/sup&gt;+''Ba''&lt;sup&gt;n-2&lt;/sup&gt;-''a''&lt;sup&gt;n&lt;/sup&gt;
:0=''Ab''&lt;sup&gt;n-1&lt;/sup&gt;+''Bb''&lt;sup&gt;n-2&lt;/sup&gt;-''b''&lt;sup&gt;n&lt;/sup&gt;
Substituting their sum,
:''A''(''a''&lt;sup&gt;n-1&lt;/sup&gt;+''b''&lt;sup&gt;n-1&lt;/sup&gt;)+''B''(''a''&lt;sup&gt;n-2&lt;/sup&gt;+''b''&lt;sup&gt;n-2&lt;/sup&gt;) - (''a''&lt;sup&gt;n&lt;/sup&gt;+''b''&lt;sup&gt;n&lt;/sup&gt;)
::=''Aa''&lt;sup&gt;n-1&lt;/sup&gt;+''Ba''&lt;sup&gt;n-2&lt;/sup&gt;-''a''&lt;sup&gt;n&lt;/sup&gt;+
:::''Ab''&lt;sup&gt;n-1&lt;/sup&gt;+''Bb''&lt;sup&gt;n-2&lt;/sup&gt;-''b''&lt;sup&gt;n&lt;/sup&gt;
::=0+0=0

So both the solutions and their sum satisfy the linear recurrence.

Now why is ''r''&lt;sup&gt;n&lt;/sup&gt; such a good solution for linear recurrences? For simplicity, we'll prove this for recurrences in the form ''a''&lt;sub&gt;n&lt;/sub&gt;=''Aa''&lt;sub&gt;n-1&lt;/sub&gt;+''Ba''&lt;sub&gt;n-2&lt;/sub&gt;, but the proof can be extended easily to general linear recurrences like the ones you see below. 

Now ''r'' must be a solution of the quadratic equation ''x''&lt;sup&gt;2&lt;/sup&gt;-''Ax''-B=0 to be a solution. Why is this so? We have the recurrence
:''a''&lt;sub&gt;n&lt;/sub&gt;=''Aa''&lt;sub&gt;n-1&lt;/sub&gt;+''Ba''&lt;sub&gt;n-2&lt;/sub&gt;
rearranging
:''a''&lt;sub&gt;n&lt;/sub&gt;-''Aa''&lt;sub&gt;n-1&lt;/sub&gt;-''Ba''&lt;sub&gt;n-2&lt;/sub&gt;=0
Substitute ''r''&lt;sup&gt;n&lt;/sup&gt; (r not zero) into the recurrence to get
:''r''&lt;sup&gt;n&lt;/sup&gt;-''Ar''&lt;sup&gt;n-1&lt;/sup&gt;-''Br''&lt;sup&gt;n-2&lt;/sup&gt;=0
Now factor out by ''r''&lt;sup&gt;n-2&lt;/sup&gt;, the term farthest on the right
:''r''&lt;sup&gt;n-2&lt;/sup&gt;(''r''&lt;sup&gt;2&lt;/sup&gt;-''Ar''-''B'')=0
We know that ''r'' isn't zero, so ''r''&lt;sup&gt;n-2&lt;/sup&gt; can never be zero. So ''r''&lt;sup&gt;2&lt;/sup&gt;-''Ar''-B must be zero, and so ''r''&lt;sup&gt;n&lt;/sup&gt;, with ''r'' a solution of ''r''&lt;sup&gt;2&lt;/sup&gt;-''Ar''-''B''=0, will be a solution of the linear recurrence.
----
Why is this removed, now? If you don't like the approach, just say the word, but it's just a good and logical method as the ones featured in the text. [[User:Dysprosia|Dysprosia]] 05:34, 12 Feb 2004 (UTC)

:This removal is temporary. I think what you have done there is good work. What I would like to do with is to modify it a little so that it's a demonstrastion of how this method of ''guessing'' is derived, not just an alternate solution to example 1, but something bigger and more general. The work you have done on this section isn't all that convincing, because the justification (derivation) part isn't fully complete. This will need to be modified (by you or me), before incorporating back into the main article. That's why I just copy-and-pasted it, I see value in this, but not just a solution for example 1. [[User:Xiaodai|Xiaodai]] 00:35, 13 Feb 2004 (UTC)

----
Thanks Xiaodai. How's this:
''moved to [[Discrete mathematics/Recursion]]''
Feel free to merge some stuff across here, if you like :) 
----
Note there are special circumstances when the roots of the characteristic equation are '''not''' distinct, and I'll add them later. [[User:Dysprosia|Dysprosia]] 04:49, 13 Feb 2004 (UTC)

----
==Partial fraction==
Has anyone done a tutorial on how to do partial fractions? Like how to separate into fraction with unique denomiators? Or do I have to write my own?

: It's not so easy to cover systematically and gently, but I'll have a go if I have some time to spare... [[Calculus/Integration techniques]] or something ... [[User:Dysprosia|Dysprosia]] 00:04, 18 Feb 2004 (UTC)

== Some hints please (1.1 2c) ==

I am kind of stuck on finding the answer to 1.1 2c (finding f(n) for &lt;math&gt;\frac{z^2 - 1}{1 + 3z^3} &lt;/math&gt;) I would really like it if somebody could give me some hints on how to solve this problem. [[User:Mmartin|Mmartin]] 15:18, 15 Aug 2004 (UTC)

:Well this is a hard exercise and it's requires a deep understanding of the topic. Try to emulate the derivation of the ''closed'' form of other generating functions. Note that
:&lt;math&gt;\frac{1}{1 - z} = 1 + z + z^2 + ... &lt;/math&gt;
now replace z by 3w^3, what happens?
[[User:Xiaodai|Xiaodai]] 07:10, 16 Aug 2004 (UTC)

: If you know Taylor series, you can try and apply that and glean the general form for the coefficients :P [[User:Dysprosia|Dysprosia]] 12:48, 30 Oct 2004 (UTC)

== Project ==

I'm considering writing a project on power sum,it may cross this chapter and the mathematical proof chapter. Anyway here is the working draft, I'll place it in the correct location once it has been done to a certain degrees.

Note: Notation is quite a problem here, in question 1, S(z) is a generating function of square number, S&lt;sub&gt;n&lt;/sub&gt; is the sum of the first n square number, and P&lt;sub&gt;2&lt;/sub&gt; is a generating function of power sum in degrees 2, i.e. the sum of square number.

Project-Power Sum-First draft&lt;p&gt;
1.a) Find the closed-form of the generating function
::&lt;math&gt;S(z)=1^2+2^{2}z+3^{2}z^{2}+4^{2}z^{3}+...&lt;/math&gt;
::(Hint:Reduce it into a linear generating function first)
:b) Hence find the generating function of
::&lt;math&gt;P_{2}(z)=S_{1}+S_{2}z+S_{3}z^2+S_{4}z^3+...&lt;/math&gt;
::Where &lt;math&gt;S_n=1^2+2^2+3^2+...+n^2&lt;/math&gt;
::And then find out the general formula for S&lt;sub&gt;n&lt;/sub&gt;

1.a)&lt;p&gt;

&lt;math&gt;
\begin{matrix}
&amp; &amp; S(z) &amp;=&amp; 1^2 &amp; +2^{2}z &amp; +3^{2}z^{2} &amp; +4^{2}z^{3}+...\\
z &amp; \times &amp; S(z) &amp;=&amp;  &amp; z &amp; +2^{2}z^2 &amp; +3^{2}z^3+...\\
(1-z) &amp; \times &amp; S(z) &amp;=&amp; 1 &amp; +3z &amp; +5z^2 &amp; +7z^3+...\\
\end{matrix}
&lt;/math&gt;

&lt;p&gt;
&lt;math&gt;
\begin{matrix}
&amp; &amp; (1-z)S(z) &amp;=&amp; 1 &amp; +3z &amp; +5z^2 &amp; +7z^3+...\\
z &amp; \times &amp; (1-z)S(z) &amp;=&amp; &amp; z &amp; +3z^2 &amp; +5z^3+...\\
(1-z) &amp; \times &amp; (1-z)S(z) &amp;=&amp; 1 &amp; +2z &amp; +2z^2 &amp; +2z^3+...\\
&amp; &amp; (1-z)^{2}S(z) &amp;=&amp; \frac{2}{1-z} -1\\
\end{matrix}
&lt;/math&gt;

&lt;p&gt;
&lt;math&gt;S(z) = \frac{2}{(1-z)^3} - \frac{1}{(1-z)^2}&lt;/math&gt;

:b)&lt;p&gt;

&lt;math&gt;
\begin{matrix}
&amp; &amp; S(z) &amp;=&amp; 1^2 &amp; +2^{2}z &amp; +3^{2}z^{2} &amp; +4^{2}z^{3}+...\\
z &amp; \times &amp; S(z) &amp;=&amp;  &amp; 1^{2}z &amp; +2^{2}z^2 &amp; +3^{2}z^3+...\\
z^2 &amp; \times &amp; S(z) &amp;=&amp;  &amp;  &amp; 1^{2}z^2 &amp; +2^{2}z^3+...\\
z^3 &amp; \times &amp; S(z) &amp;=&amp;  &amp;  &amp;  &amp; 1^{2}z^3+...\\
...\\
(1+z+z^2+z^3+...) &amp; \times &amp; S(z) &amp;=&amp; S_{1} &amp; + S_{2}z &amp; + S_{3}z^2 &amp; + S_{4}z^3+ ...\\
\end{matrix}
&lt;/math&gt;&lt;p&gt;


&lt;math&gt;\frac{S(z)}{1-z} = P_{2}(z)&lt;/math&gt;&lt;p&gt;
&lt;math&gt;P_{2}(z) = \frac{2}{(1-z)^4} - \frac{1}{(1-z)^3}&lt;/math&gt;&lt;p&gt;

&lt;math&gt;\sum_{i=0}^{\infty} [2{4+i-1 \choose i} z^i] - \sum_{i=0}^{\infty} [{3+i-1 \choose i} z^i] = P_{2}(z)&lt;/math&gt;&lt;p&gt;
&lt;math&gt;\sum_{i=0}^{\infty} [2{3+i \choose i} - {2+i \choose i}] z^i = \sum_{i=0}^{\infty} S_{i+1} z^i&lt;/math&gt;&lt;P&gt;
&lt;math&gt;[2{3+i \choose i} - {2+i \choose i}] z^i = S_{i+1} z^i&lt;/math&gt;&lt;p&gt;
&lt;math&gt;2{3+i \choose i} - {2+i \choose i} = S_{i+1}&lt;/math&gt;&lt;p&gt;
So n = i+1.&lt;p&gt;
&lt;math&gt;2{n+2 \choose n-1} - {n+1 \choose n-1} = S_{n}&lt;/math&gt;&lt;p&gt;
&lt;math&gt;S_{n} = 2{n+2 \choose (n+2)-(n-1)} - {n+1 \choose (n+1)-(n-1)}&lt;/math&gt;&lt;p&gt;
&lt;math&gt;S_{n} = 2{n+2 \choose 3} - {n+1 \choose 2}&lt;/math&gt;&lt;p&gt;
&lt;math&gt;S_{n} = \frac{2(n+2)(n+1)n}{6} - \frac{(n+1)n}{2}&lt;/math&gt;&lt;p&gt;
&lt;math&gt;S_{n} = \frac{2(n+2)(n+1)n - 3(n+1)n}{6}&lt;/math&gt;&lt;p&gt;
&lt;math&gt;S_{n} = \frac{[2(n+2) - 3](n+1)n}{6}&lt;/math&gt;&lt;p&gt;
&lt;math&gt;S_{n} = \frac{n(n+1)(2n+1)}{6}&lt;/math&gt;

&lt;p&gt;
2.Let &lt;math&gt;p_n = 1^n + 2^n z + 3^n z^2 + 4^n z^3 + ...&lt;/math&gt;
:a)Recall that &lt;math&gt;\frac{d}{dx}x^n = nx^{n-1}&lt;/math&gt;
::Try to define p&lt;sub&gt;n&lt;/sub&gt; recursively.
:b)Using 2a), or otherwise, find out the closed-form of the generating function of p&lt;sub&gt;3&lt;/sub&gt;, p&lt;sub&gt;4&lt;/sub&gt;, and p&lt;sub&gt;5&lt;/sub&gt;.

::Ok, cool. I will read the thing carefully now. [[User:Xiaodai|Xiaodai]] 23:39, 27 Dec 2004 (UTC)

:::Update:It appears that power sum is a deep and difficult topic, so... I've discovered that the topic of generating function is deep and wide, that we couldn't possibly cover 'em all in those 25 pages. I propose exploring exponential generating function in the project, is it ok? Somehow it is the most common generating function right after ordinary generating function. --[[User:Lemontea|Lemontea]] 10:49, 12 August 2005 (UTC)

::::Sounds good, i can't pretend to have cover everything i know about generating functions in those pages. Feel free to add your own content! It's great. But somehow i dont know how ppl will discover how to diff e^x. [[User:Xiaodai|Xiaodai]] 14:14, 12 August 2005 (UTC)

:::::Ha! When I learn differentiating, I was told to define e so that we can differentiate log x, then went on to discover e^x is the solution of the differential equation f'(x) = f(x) lol. (Opps, I spoiled what will appear later on!) --[[User:Lemontea|Lemontea]] 14:33, 12 August 2005 (UTC)

== Generating functions and the z-transformation ==

What do the counting and generating functions have in common with the z-transformation. (The z-transformation of &lt;math&gt;f(n)&lt;/math&gt; I came across is defined by &lt;math&gt;\sum_{n=0}^{\infty}f(n)z^n&lt;/math&gt;) It seems to me that the generating function of some series is the z-transform of the function that gives the coefficients of the polynomial. If that's the case it might be nice to inform the reader about it.


== Counting and Generating Functions ==
In the first section of &quot;Counting and Generating Functions&quot;, there is a note about it called &quot;Info - Infinite Sums&quot;. It says that the two expressions (the infinite geometric series and the formula for it) are not equal. An example was also given by adding a finite amount of terms of the series and comparing the sum with the result from the formula. I disagree with this statement that the two expressions are not equal. First, infinite sums have to be defined and it is DEFINED to be the limit of the partial sum as the number of terms go to infinity if the limit exists. So when the formula was derived, it IS equal to the geometric series according to the definition. The example is not a valid way of showing that the two things are different since it was a finite amount of terms, so of course the number will be close but not equal. According to the definition the value of the infinite series is the LIMIT defined before, so in the example it is 2 and the formula also gives 2 which are equal. Also, I am not just making up this definition, its in any rigorous calculus book such as by Spivak.</text>
      <sha1>8riqiu4003f31ve9sco48pgt5i76hzm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Java Swings/Overview</title>
    <ns>0</ns>
    <id>4566</id>
    <revision>
      <id>2460960</id>
      <parentid>2460827</parentid>
      <timestamp>2012-12-13T21:38:41Z</timestamp>
      <contributor>
        <username>Ftiercel</username>
        <id>239666</id>
      </contributor>
      <minor />
      <comment>Integrate the content into the new book.</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{Displaytitle|title=Swing}}
{{Side note|side=right|{{Java Swings/Content}}}}
__NOTOC__&lt;/noinclude&gt;

Swing is a tool kit in Java which provides a way to build cross platform user interfaces. It is built on top of and designed as a replacement for AWT, the other UI toolkit built into  Java. SWT is a third toolkit you may hear about. SWT is an open source toolkit and is a full topic in of itself, see [http://www.eclipse.org/swt/ SWT's Homepage] for more information.

== Overview ==
[[Image:GC SwingDemo.jpg|left|thumb|200px|Figure 10.1: Example of a Swing application]]
Swing&lt;ref&gt;Swing is also referred to incorrectly as JFC (Java Foundation Classes), however the JFC includes APIs in addition to Swing, such as the Java 2D and Drag-n-Drop APIs.&lt;/ref&gt; provides many controls and widgets to build user interfaces with. Swing class names typically begin with a J such as &lt;code&gt;JButton&lt;/code&gt;, &lt;code&gt;JList&lt;/code&gt;, &lt;code&gt;JFrame&lt;/code&gt;. This is mainly to differentiate them from their AWT&lt;ref&gt;AWT is the Abstract Windowing Toolkit, where the components are rendered by the native operating system&lt;/ref&gt; counterparts and in general are one-to-one replacements. Swing is built on the concept of ''Lightweight components'' vs AWT and SWT's concept of ''Heavyweight components''. The difference between the two is that the Lightweight components are rendered (drawn) using purely Java code, such as drawLine and drawImage, whereas Heavyweight components use the native operating system to render the components.

Some components in Swing are actually heavyweight components. The top-level classes and any derived from them are heavyweight as they extend the AWT versions. This is needed because at the root of the UI, the parent windows need to be provided by the OS. These top-level classes include &lt;code&gt;JWindow&lt;/code&gt;, &lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt; and &lt;code&gt;JApplet&lt;/code&gt;. All Swing components to be rendered to the screen must be able to trace their way to a root window or one of those classes.
{{XNote|Generally it is not a good idea to mix heavyweight components with lightweight components (other than as previously mentioned) as you will encounter layering issues, e.g., a lightweight component that should appear &quot;on top&quot; ends up being obscured by a heavyweight component. The few exceptions to this include using heavyweight components as the root pane and for popup windows. Generally speaking, heavyweight components will render on top of lightweight components and will not be consistent with the look and feel being used in Swing. There are exceptions, but that is an advanced topic. The truly adventurous may want to consider reading this [http://java.sun.com/products/jfc/tsc/articles/mixing/ article] from Sun on mixing heavyweight and lightweight components.}}

So what does using Swing get you? So far we've only talked about components and rendering. Well, to start with you get the following.
* Controls: Buttons, Check Boxes, Lists, Trees, Tables, Combo boxes (dropdown list), Menus, Text fields
* Displays: Labels, Progress bars, Icons, Tool Tips
* Pluggable look and feels (PLAFs): Windows, CDE/Motif, Mac. Allows for &quot;skinning&quot; the application without changing any code
{{XNote|Due to legal issues between Sun, Microsoft &amp; Apple, you are only able to use the Windows Look and Feel (LAF) on Windows and the Mac LAF on Apple computers}}
* Standard Top-Level Windows: Windows, Frames, Dialogs etc.
* Event Listener APIs
* Key bindings &amp; mnemonics: Allow keystrokes to map to specific actions.

==Notes==
&lt;!--See [[Wikipedia:Footnotes]] for an explanation of how to generate footnotes using the &lt;ref(erences/)&gt; tags--&gt;
&lt;references /&gt;

==External links==

* [http://javalessons.com/cgi-bin/fun/java-tutorials-main.cgi?sub=gui&amp;ses=ao789 Swing Tutorial, interactive lessons based on examples]
* [http://java.sun.com/docs/books/tutorial/ui/index.html The Java Tutorials: Graphic User Interfaces]

&lt;noinclude&gt;
{{Status|50%}}
[[de:Java Standard: Grafische Oberflächen mit Swing]]
[[nl:Programmeren in Java/GUI]]
[[pt:Java/Swing]]
{{BookCat}}&lt;/noinclude&gt;</text>
      <sha1>ji7acatsd46msyrwxh651q3hahcfxmq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>UK Constitution and Government/Parliament</title>
    <ns>0</ns>
    <id>4574</id>
    <revision>
      <id>2504112</id>
      <parentid>2376353</parentid>
      <timestamp>2013-03-21T15:53:33Z</timestamp>
      <contributor>
        <username>Dirk Hünniger</username>
        <id>343292</id>
      </contributor>
      <text xml:space="preserve">&lt;noinclude&gt;
&lt;!-- Generated for the page, UK Constitution and Government/Parliament, by Wikiversal version 1.12.72 on 7/11/2012. --&gt;
__NOEDITSECTION__ __NOTOC__

=== &lt;font size=1 color=dimgray&gt;Presentation&lt;/font&gt; ===
&lt;table height=1 border=1 style=&quot;border-collapse:collapse; border-color:LightSkyBlue; background-color:AliceBlue;&quot; width=&quot;100%&quot;&gt;&lt;tr&gt;
&lt;td align=left&gt;&lt;table width=&quot;100%&quot; align=left&gt;&lt;tr&gt;&lt;td&gt;[[File:1leftarrow.png|frameless||none||x40px|link=http://en.wikibooks.org/wiki/UK_Constitution_and_Government/Sovereign#Presentation||Sovereign]]&lt;/td&gt;
&lt;td&gt;[[File:Gohome.png|frameless||none||x40px|link=http://en.wikibooks.org/wiki/UK_Constitution_and_Government#Presentation]]&lt;/td&gt;
&lt;td nowrap&gt;&lt;font size=6 color=teal&gt;{{SUBPAGENAME}}&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;[[File:1rightarrow.png|frameless||none||x40px|link=http://en.wikibooks.org/wiki/UK_Constitution_and_Government/Government#Presentation||Government]]&lt;/td&gt;
&lt;td&gt;[[File:2rightarrow.png|frameless||none||x40px|link=http://en.wikibooks.org/wiki/UK_Constitution_and_Government/Topic_List#Presentation||List of Topics]]&lt;/td&gt;
&lt;td width=&quot;99%&quot;&gt; &amp;nbsp; &lt;/td&gt;
&lt;td&gt;&lt;td&gt;[[File:1rightarrow.png|frameless||none||x40px|link=http://en.wikibooks.org/wiki/UK_Constitution_and_Government/Government#Presentation||Government]]&lt;/td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;!-- -- -- -- -- -- -- -- -- -- -- --&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;big&gt;&lt;big&gt;The Parliament&lt;/big&gt;&lt;/big&gt;

[[UK Constitution and Government/Sovereign|Previous Chapter]] | [[UK Constitution and Government/Government|Next Chapter]]
------
&lt;/noinclude&gt;
== Parliament ==

Parliament is the supreme law-making body in the United Kingdom.  It is made up of two ''Houses of Parliament'', namely the ''House of Commons'' and the ''House of Lords'', as well as the Sovereign.  The Sovereign's involvement in the life and working of Parliament is purely formal.

In constitutional theory, Parliament in its strictest sense is sometimes referred to as the ''Queen-in-Parliament''; this contrasts with the more ordinary use of the term &quot;Parliament&quot;, meaning just the two Houses of Parliament.  Within the British constitutional framework, the Queen-in-Parliament is supreme (&quot;sovereign&quot;), able to make, alter, or repeal any law at will.

Both Houses of Parliament meet at the ''Palace of Westminster''.


== Parliaments and Sessions ==

As with most legislatures, Parliament does not continue in perpetual existence.  Typically, the &quot;life&quot; of a Parliament is around four years.

Parliament is initially ''summoned'' by the Sovereign.  This now always occurs after there has been a general election.  Once assembled, and a Speaker has been chosen by the House of Commons, Parliament is formally ''opened'' by the Sovereign.  The business of the two Houses is arranged into ''sessions'', which usually last a year (running from around October or November each calendar year).  However, there is usually a long ''recess'' during the summer months, when business is temporarily suspended.

The opening of each parliamentary session is conducted in accordance with a great deal of traditional ceremony.  The Sovereign takes his or her seat on the throne situated in the chamber of the House of Lords, and the Gentleman Usher of the Black Rod (one of that House's officers) is commanded to summon the House of Commons.  When Black Rod reaches the door of the Commons, it is slammed shut in his face, to symbolise the right of the Commons to debate without royal interference.  Black Rod then solemnly knocks on the door with his staff of office; on the third knock, the door is opened, and he is permitted to enter and deliver his message.  MPs then proceed from the Commons to the House of Lords, to hear the ''Speech from the Throne'', more commonly known as the ''Queen's Speech''.  The Speech outlines the Government's legislative proposals for the session; while worded as if it's the Sovereign's own policy, the Speech is in fact entirely drafted by Government ministers.

Each session is ended by a ''prorogation''.  The Commons are formally summoned to the House of Lords, where another formal Speech is read out, summing up the work of the two Houses of Parliament over the course of the session.  In practice the Sovereign no longer attends for the prorogation; ''Lords Commissioners'' are appointed to perform the task, and one of their number also reads out the Speech.

By law, each Parliament must come to an end no later than five years from its commencement; this is known as ''dissolution''.  The dissolution is made by royal proclamation.  The summoning, proroguing, and dissolving of Parliament are powers exercised by the Sovereign under the royal prerogative.  They are exercised in accordance with the &quot;advice&quot; of the Prime Minister.  Because a dissolution is necessary in order to trigger a general election, the Prime Minister is effectively able to choose to hold elections at a time that seems the most advantageous to his or her political party.

Although the duration of Parliament has been restricted to five years since 1911, legislation was passed during both World Wars to extend the life of the existing Parliament; this meant that the Parliament summoned in 1935 eventually continued in existence for around ten years, until 1945.


== House of Commons ==

=== Composition ===

While sometimes described as the &quot;lower house&quot;, the House of Commons is by far the most important of the two Houses of Parliament.  Members of the House of Commons are known as ''Members of Parliament'', or ''MPs''.

The entire United Kingdom is subdivided into ''constituencies'', each of which returns one MP to sit in the House of Commons.  There are presently 650 constituencies, however the exact number fluctuates over time as the boundaries of constituencies are periodically reviewed by Boundaries Commissions set up for each part of the UK.  Constituencies are intended to have roughly equal numbers of voters, but in practice the smallest and largest constituencies can have a significant difference in size.

At each ''general election'' all seats in the House of Commons become vacant.  If a seat becomes vacant during the life of a Parliament (i.e. between general elections), then a ''by-election'' is held for that constituency.  The election for each constituency is by secret ballot conducted according to the ''First-Past-the-Post'' system: the candidate with the most votes is ''returned'' as MP.

==== Qualifications of voters ====

A person must be aged at least eighteen in order to vote.

The following nationalities are entitled to vote at parliamentary elections:
*British citizens
*citizens of the Republic of Ireland
*citizens of Commonwealth countries

Irish and Commonwealth citizens must have been resident in the United Kingdom.  British citizens who are resident abroad are only able to vote if they had been resident in the United Kingdom within the previous 15 years.

Certain categories of people are unable to vote:
*the Sovereign
*members of the House of Lords
*people serving prison sentences
*persons convicted of &quot;corrupt practices&quot; (electoral malpractice) within the previous five years
*the insane

By convention, close relatives of the Sovereign also do not vote.

==== Qualifications of MPs ====

Anyone who is not disqualified to vote is also qualified to be an MP, except the following:
*undischarged bankrupts
*persons convicted of treason
*members of legislatures outside of the United Kingdom that are not in Commonwealth countries
*civil servants
*members of certain specific public bodies, and holders of certain specific statutory offices
*members of the armed forces
*judges

==== Resignation as an MP ====

Since the 17th century, the House of Commons has asserted that MPs may not resign.  However, in practice members are able to resign by the legal fiction of appointment as ''Crown Steward and Bailiff of the three Chiltern Hundreds of Stoke, Desborough, and Burnham'', or as ''Crown Steward and Bailiff of the Manor of Northstead''.  Neither of these offices carries any duties, but have been preserved in force so that those appointed to them automatically lose their seats in the House of Commons as having accepted an ''office of profit under the Crown''.

=== Speakership and procedure ===

The House of Commons is presided over by the ''Speaker''. There are also three Deputy Speakers, with the titles of ''Chairman of Ways and Means'', ''First Deputy Chairman of Ways and Means'', and ''Second Chairman of Ways and Means''.

The Speaker and his or her deputies are elected at the commencement of a Parliament, and serve until its dissolution. Following a general election, the ''Father of the House'' (the member with the longest unbroken service in the House, who is not also a Minister of the Crown) takes the chair. If the Speaker from the previous Parliament has been returned as a member of the new Parliament, and intends to continue in office, then the House votes on a motion that the member take the chair as Speaker. Otherwise, or if the motion for his or her re-election fails, then members vote by secret ballot in several rounds; after each round, the candidate with the fewest votes is eliminated. The election ends when one member secures a majority of votes in a particular round. Thereafter, the Speaker-elect leads the House of Commons to the House of Lords, where the Lords Commissioners (five Lords representing the Sovereign) officially declare the Royal Approbation (approval) of the Speaker, who immediately takes office. The Speaker traditionally lays claim to all of the House's privileges, including freedom of speech in debate, which the Lords Commissioners then confirm on behalf of the Sovereign.

If a Speaker should choose to resign from his post during the course of Parliament, then he must preside over the election of his successor. The new election is otherwise conducted in the same manner as at the beginning of a Parliament.  The new Speaker-elect receives the Royal Approbation from Lords Commissioners; however, the ceremonial assertion of the rights of the Commons is not repeated.

The Speaker is expected to act impartially.  He or she is an important figure within the House of Commons, controlling the flow of debate by selecting which members get to speak in debates, and by ensuring that the customs and procedures of the House are complied with. The Speaker and his deputies do not generally speak during debates, nor vote at divisions.

The Speaker also exercises disciplinary powers. He or she may order any member to resume his or her seat if they consistently contribute irrelevant or repetitive remarks during a debate. An individual who has disregarded the Speaker's call to sit down may be requested to leave the House; if the request is declined, then the Speaker may &quot;name&quot; the member. The House then votes on whether to suspend the member in question for a certain number of days, or even, in the case of repeated breaches, for the remainder of the session. In the most serious cases, the House may vote to expel a member. In the case of grave disorder, the Speaker may adjourn the House without a vote.

The House votes on all questions by voice first. The Speaker asks all those in favour of the proposition to say &quot;Aye,&quot; and those opposed to say &quot;No&quot;. The Speaker then assesses the result, saying &quot;I think the Ayes have it&quot; or &quot;I think the Noes have it&quot;, as appropriate. Only if a member challenges the Speaker's opinion is a ''division'', or formal count, called. During a division, members file into two separate lobbies on either side of the Commons chamber. As they exit each lobby, clerks and tellers count the votes and record the names. The result is then announced by the Speaker.  In the event of a tied vote, the Speaker (or other occupant of the Chair) has a ''casting vote''; however, conventions exist restricting the way in which this vote is actually cast.

== House of Lords ==

=== Composition ===

Generally speaking, membership of the House of Lords is by appointment for life.  However, up until 1999, hereditary peers were also members of the Lords; when this right was abolished, a compromise measure allowed them to elect ninety of their number to continue as members.

Certain office-holders are also ex officio members of the House of Lords:
*the Earl Marshal
*the Lord Great Chamberlain
*the Archbishop of Canterbury
*the Archbishop of York
*the Bishops of London, Durham, and Winchester

The Earl Marshal and Lord Great Chamberlain are mostly ceremonial offices.  In addition to the three ex officio bishops, the 21 longest-serving diocesan bishops also sit in the Lords.

The general qualifications for sitting and voting in the Lords are:
*to have reached the age of 21
*to be a British citizen, or a citizen of the Republic of Ireland, or a citizen of a Commonwealth country
*to not have been convicted of treason
*to not have been declared insane


=== Speakership and procedure ===

The ''Lord Speaker'' is elected by the House.  Until recently his or her duties were carried out by the Lord Chancellor, a Minister of the Crown.

In contrast with the Speaker of the House of Commons, the Lord Speaker has a relatively minor role, since the House of Lords is generally self-governing: the House itself decides upon points of order and other such matters.  The seat used by the Lord Speaker is known as ''the Woolsack''.

Similar to the House of Commons, the Lords also vote by voice first. The Lord Speaker (or whoever else is presiding) puts the question, with those in favour saying &quot;Content,&quot; and those opposed saying &quot;Not-Content.&quot; If the Lord Speaker's assessment of the result is challenged, a division follows, with members voting in the appropriate lobby just as is done in the Commons. The officer presiding may vote from his or her place in the chamber rather than from a lobby. In the case of a tie, the result depends on what type of motion is before the House. A motion that a bill be advanced to the next stage or passed is always decided in the positive, while amendments to bills or other motions are decided in the negative, if there is an equality of votes.

== Acts of Parliament ==

Legislation passed by Parliament is in the form of an ''Act of Parliament''.

A draft law is known as a ''Bill''.  A bill passes into law provided that it has either been passed by both Houses of Parliament, or the provisions of the Parliament Acts have been complied with; and provided it has received the Royal Assent.

A bill must pass through several stages in both of the two Houses.  A bill is &quot;read&quot; three times in each House.  The First Reading for Public Bills is almost always a formality.  The Second Reading is a debate on the merits of the general principles behind the bill.  Next follow the Committee and Report stages.  The Third Reading is a vote upon the bill as a whole, as amended during the Committee and Report stages.  Once the House into which the bill was first introduced has finished with it, the bill is then introduced into the other House.  Any amendments by the second House then have to be agreed to by the first before the bill can proceed.

Bills are classified as either ''Government Bills'' or as ''Private Members' Bills''. Ministers of the Crown introduce Government Bills; private members introduce Private Members' Bills.

Bills are also classified as ''Public'', ''Private'', ''Personal'' or ''Hybrid''. Public bills create laws applied generally (for instance, reforming the nation's electoral system). Private bills affect a specific named company, person or other entity (for instance, authorising major constructions on specific named public lands). Personal bills are private bills that confer specific rights to specific named individuals (for example by granting the right to marry a person one would not normally be allowed to wed). Hybrid bills are public bills that directly and specially affect private interests.

=== Public Bills ===

A Public Bill's First Reading is usually a mere formality, allowing its title to be entered in the Journals and for its text to be printed by the House's authority.

After two weeks, one of the bill's supporters moves &quot;that the bill be now read a second time&quot;. At the second reading debate, the bill's general characteristics and underlying principles, rather than the particulars, are discussed. If the vote on the Second Reading fails, the bill dies. It is, however, very rare for a Government bill to be defeated at the Second Reading; such a defeat signifies a major loss.

In the House of Commons, following the Second Reading, various procedural resolutions may need to be passed. If the bill seeks to levy or increase a tax or charge, then a ''Ways and Means Resolution'' has to be passed. If it involves significant expenditure of public funds, then a ''Money Resolution'' is necessary. Finally, the government may proceed with a ''Programme Motion'' or an ''Allocation of Time Motion''. A Programme Motion outlines a timetable for further debate on the bill and is normally passed without debate. An Allocation of Time Motion, commonly called the ''Guillotine'', limits time available for debate. Normally, a Programme motion is agreed to by both parties while an Allocation of Time Motion becomes necessary if the Opposition does not wish to cooperate with the Government. In the House of Lords, there are no Guillotines or other motions that limit the time available for debate.

Next, the bill can be committed to a committee. In the House of Commons, the bill may be sent to the ''Committee of the Whole House'', a ''Standing Committee'', a ''Special Standing Committee'' or a ''Select Committee.'' The Committee of the Whole House is a committee that includes all members of the House and meets in the regular chamber. The Speaker is normally not present during the meetings; a Deputy Speaker normally takes the chair. The procedure is used for parts of the annual Finance Bill and for bills of major constitutional importance. More often, the bill is committed to a Standing Committee. Though the name may suggest otherwise, the membership of Standing Committees is temporary. There can be from sixteen to fifty members; the strength of parties in the committee is proportional to their strengths in the whole House. It is possible for a bill to go to a Special Standing Committee, which is like a Standing Committee except that it may take evidence and conduct hearings; the procedure has not been used in several years. Finally, the bill may be sent to a Select Committee. Select Committees are permanent bodies charged with the oversight of a particular Government department. This last procedure is rarely used; the quinquennial Armed Forces Bill, however, is always referred to the Defence Select Committee.

In the House of Lords, the Bill is committed to the ''Committee of the Whole House'', a ''Public Bill Committee'', a ''Special Public Bill Committee'', a ''Select Committee'' or a ''Grand Committee''. The most common committee used is the Committee of the Whole House. Sometimes, the bill is sent to a Public Bill Committee of twelve to sixteen members (plus the Chairman of Committees) or to a Special Public Bill Committee of nine or ten members. These committees correspond in function to the Commons Standing and Special Standing Committees, but are less often utilised. Select Committees may also be used, like in the Commons, though it is rare for this to be done. The Grand Committee procedure is the only one unique to the House of Lords. The procedure is reserved for non-controversial bills that must be passed quickly; a proposal to amend the bill is defeated if a single member votes against it.

In both Houses, the committee used considers the bill clause-by-clause and may make amendments. Thereafter, the bill proceeds to the ''Consideration'' or ''Report Stage''. This stage occurs on the Floor of the House and offers it an opportunity to further amend the bill. While the committee is bound to consider every single clause of the bill, the House need only debate those clauses which members seek to amend.

Following the Report Stage, the motion ''that the bill be now read a third time'' is considered. In the House of Commons, there is a short debate followed by a vote; no further amendments are permitted. If the motion passes, then the Bill is considered passed. In the Lords, however, amendments may be moved. Following the vote on the third reading, there must be a separate vote on passage.

After one House has passed a bill, it is sent to the other for its consideration. Assuming both Houses have passed a bill, differences between their separate versions must be reconciled. Each House may accept or reject amendments made by the other House, or offer other amendments in lieu. If one House has rejected an amendment, the other House may nevertheless insist upon it. If a House insists upon an amendment that the other rejects, then the bill is lost unless the procedure set out in the Parliament Acts is complied with.

Once a bill has passed by both Houses, or has been certified by the Speaker of the Commons as having passed the House of Commons in conformity with the Parliament Acts, the bill is finally submitted to the Sovereign for ''Royal Assent''. Since 1708, no Sovereign has failed to grant Royal Assent to a bill. Assent may be given by the Sovereign in person, but is usually given in the form of letters patent read out in each of the Houses; in the House of Lords the Clerk announces the Norman French formula &quot;La Reyne le Veult&quot;, and the Bill thereupon becomes an Act of Parliament.  In 1708 the formula used for the Scottish Militia Bill was &quot;La Reyne s'avisera&quot; (however, this was on ministerial advice).

In theory the Sovereign has the right to either ''withhold'' or ''reserve'' the assent, however this right is not exercised.  If assent were withheld, then the bill would fail.  If assent were reserved, then formally a final decision on the bill has been put off until a later time; if Assent were not given before prorogation of the session, then the bill would fail.

=== Private, Personal and Hybrid Bills ===

In the nineteenth century several hundred private Acts were passed each year, dealing with such matters as the alteration of local authority powers, the setting up or alteration of turnpike trusts, etc.  A series of reforms has eliminated the necessity for much of this legislation, meaning that only a handful of private Acts are now passed each year.

A private bill is initiated when an individual petitions Parliament for its passage. After the petition is received, it is officially gazetted so that other interested parties may support or contest it. Counter-petitions objecting to the passage of the bill may also be received. To be able to file such a petition, the bill must &quot;directly and specially&quot; affect the individual. If those supporting the bill disagree that such an effect exist, then the matter is resolved by the ''Court of Referees'', a group of senior Members of Parliament.

The bill then proceeds through the same stages as public bills. Generally, no debate is held on the Floor during the Second Reading unless a Member of Parliament files a &quot;blocking motion&quot;. It is possible for a party whose petition was denied by the Court of Referees to instead lobby a Member to object to the bill on the Floor. After the bill is read a second time, it is sent to one of two committees: the ''Opposed Bill Committee'' if there are petitions against the bill, or the ''Unopposed Bill Committee'' if there aren't. After taking evidence, the committee may return a finding of ''Case Proved'' or ''Case Not Proved''. In the latter case, the bill is considered rejected, but in the former case, amendments to the bill may be considered. After consideration, third reading and passage, the bill is sent to the other House, which follows the same procedure. If necessary, the bill may have to face two different Opposed Bill Committees. After differences between the Houses are resolved, the bill is submitted for Royal Assent.

Personal bills relate to the &quot;estate, property, status, or style&quot; or other personal affairs of an individual. By convention, these bills are brought first in the House of Lords, where it is referred to a Personal Bill Committee before being read a &quot;first&quot; time. The Committee may make amendments or even reject the bill outright. If the bill is reported to the House, then it follows the same procedure as any other private bill, including going through an Unopposed or Opposed Bill Committee in both Houses. A special case involves bills that seek to enable marriages between those who are within a &quot;prohibited degree of affinity or cosanguinity&quot;. In those cases, the bill is not discussed on the Floor and is sent at the committee stage to a Select Committee that includes the Chairman of Committees, a bishop and two lay members.

Hybrid bills are public bills that have a special effect on a private interest. Prior to the second reading of any public bill, it must be submitted to the Clerk, who determines if any of the House's rules have been violated. If the Clerk finds that the bill does have such an effect on a private interest, then it is sent to the ''Examiners'', a body which then may report to the House that the bill does or does not affect private interests. If the latter, then it proceeds just like a public bill, but if the former, then it is treated as hybrid. The first and second readings are just as for public bills, but at the committee stage, if petitions have been filed against the bill, it is sent to a Select Committee, but the Committee does not have the same powers of rejection as Private Bill Committees. After the Committee reports, the bill is recommitted to another committee as if it were a public bill. Thereafter, the stages are the same as for a public bill, though, in the other chamber, the bill may have to be considered once more by a Select Committee.

=== Supremacy of the House of Commons ===

Under the Parliament Acts of 1911 and 1949, the House of Commons is essentially the pre-eminent chamber in Parliament. If the Lords fail to pass a bill (by rejecting it outright, insisting on amendments disagreed to by the Commons, or by failing to vote on it), and the bill has been passed by the Commons in two consecutive sessions, then the bill may be presented for Royal Assent unless the House of Commons otherwise directs, and provided that the bill was introduced in the Lords at least one month before the end of each session. However, twelve months must have passed between the Second Reading in the first session, and the final vote on passage in the second one. Also, the bill passed by the Commons in each session must be identical, except to take into account the passage of time since the bill was first proposed.

The effect of the procedure set out in the Parliament Acts is that the House of Lords may delay a bill for at least thirteen months, but would ultimately be unable to overturn the concerted will of the House of Commons. However, this procedure does not apply in the case of private or personal bills, nor to bills seeking to extend the life of Parliament beyond five years.

Under the Parliament Acts, a special procedure applies to &quot;money bills&quot;. A bill is considered a money bill if the Speaker certifies that it relates solely to national taxation or to the expenditure of public funds. The Speaker's decision is final and cannot be overturned. Following passage by the House of Commons, the bill can be considered by the House of Lords for not longer than one month. If the Lords have not passed the bill within that time, it is submitted for Royal Assent regardless. Any amendments made by the House of Lords are ignored unless accepted by the House of Commons.

In addition to the Parliament Acts, tradition and conventions limit the House of Lords. It is the privilege of the House of Commons to levy taxes and authorise expenditure of public funds. The House of Lords cannot introduce bills to do either; furthermore, they are barred from amending supply bills (bills appropriating money to expenditure). In some cases, however, the House of Lords can circumvent the rule by inserting a ''Privilege Amendment'' into a bill they have originated. The Amendment reads:

:''Nothing in this Act shall impose any charge on the people or on public funds, or vary the amount or incidence of or otherwise alter any such charge in any manner, or affect the assessment, levying, administration or application of any money raised by any such charge.''

The House of Commons then amend the bill by removing the above clause. Therefore, the privilege of the Commons is not violated as they, not the Lords, have approved the tax or public expenditure.

== Delegated legislation ==

Many Acts of Parliament authorise the use of Statutory Instruments (SIs) as a more flexible method of setting out and amending the precise details for new arrangements, such as rules and regulations.  This delegated power is given either to the Queen in Council, a Minister of the Crown, or to other named office holders.  An Act may empower the Government to make a Statutory Instrument and lay it before both Houses, the SI to take legal effect if approved by a simple vote in each House; or in other cases, if neither House objects within a set time.  In theory, Parliament does not lose control over such statutory instruments when delegating the power to make them, while being saved the necessity to debate and vote upon even quite trivial changes, unless members wish to raise objections.

== Privilege ==

Each House has a body of rights that it asserts, or which are conferred by statute, with the aim of being allowed to carry out its duties without interference. For example, members of both Houses have freedom of speech during parliamentary debates; what they have said cannot be questioned in any place outside Parliament, and so a speech made in Parliament cannot constitute slander.  These rights are collectively referred to as ''Parliamentary Privilege''.

Both Houses claim to determine their own privileges, and are acknowledged by the courts as having the authority to control their own proceedings, as well as to discipline members abusing the rules. Furthermore, each House is the sole judge of the qualifications of its members. Collectively, each House has the right of access to the Sovereign. Individually, members must be left free to attend Parliament. Therefore, the police are regularly ordered to maintain free access in the neighbouring streets, and members cannot be called on to serve on a jury or be subpoenaed as a witness while Parliament is in session. (Arrest for crime is still possible, but the relevant House must be notified of the same.) Parliament has the power to punish ''contempt of Parliament'', that is, violation of the privileges and rules of a House. Any decisions made in this regard are final and are cannot be appealed to any court. The usual modern penalty for contempt is a reprimand, or brief imprisonment in the precincts of the House, but historically large fines have been imposed.


{{BookCat}}</text>
      <sha1>83o8dyeo1a87925en89teebacjjth0w</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Cuisine of Russia</title>
    <ns>102</ns>
    <id>4575</id>
    <revision>
      <id>2584654</id>
      <parentid>2584653</parentid>
      <timestamp>2013-11-25T05:02:28Z</timestamp>
      <contributor>
        <ip>152.2.48.203</ip>
      </contributor>
      <text xml:space="preserve">{{cuisine|Russia}} | [[Cookbook:European cuisines|European cuisines]]

*[[Cookbook:Borscht|Borscht]]
*[[Cookbook:Tvorog|Tvorog]]
*[[Cookbook:Sirniki|Sirniki]]
*[[Cookbook:Vareniki|Vareniki]]
*[[Cookbook:Bliny|Bliny]]
*[[Cookbook:Vinegret|Vinegret]]
*[[Cookbook:Olivier salad|Olivier salad]]
*[[Cookbook:Okroshka|Okroshka]]
*[[Cookbook:Beef Stroganoff|Beef Stroganoff]]
*[[Cookbook:Solyanka|Solyanka]]
*[[Cookbook:Dressed herring|Dressed herring]]
*[[Cookbook:Kholodets|Kholodets]]
*[[Cookbook:Kulich|Kulich]]
*[[Cookbook:Kvass|Kvass]]
*[[Cookbook:Pelmeni|Pelmeni]]
*[[Cookbook:Pirozhki|Pirozhki]]
*[[Cookbook:Pirog|Pirog]]
*[[Cookbook:Rassolnik|Rassolnik]]
*[[Cookbook:Shashlik|Shashlik]]
*[[Cookbook:Shchi|Shchi]]
*[[Cookbook:Ukha|Ukha]]
*[[Cookbook:Vatrushka|Vatrushka]]

[[Category:Russian recipes| ]]</text>
      <sha1>losz0hiqbbaqr76m90m4cq4mvyw3jdq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Haskell/Overview</title>
    <ns>0</ns>
    <id>4576</id>
    <revision>
      <id>2634647</id>
      <parentid>2634646</parentid>
      <timestamp>2014-04-23T00:28:45Z</timestamp>
      <contributor>
        <username>Backfromquadrangle</username>
        <id>501417</id>
      </contributor>
      <minor />
      <comment>added space</comment>
      <text xml:space="preserve">Haskell is a standardized functional programming language with [[w:Functional programming#Strict_versus_non-strict_evaluation|non-strict]] semantics. Haskell features include support for recursive functions and datatypes, pattern matching and list comprehensions. By combining these features, functions that would be difficult to write in a procedural programming language are almost trivial to implement in Haskell. The language is, as of 2011, the functional language on and in which the most research is being performed.&lt;ref&gt;Based on crude Google Scholar &quot;since 2010&quot; queries – Haskell &quot;functional programming&quot;: 2220, Scheme &quot;functional programming&quot;: 1400, ML &quot;functional programming&quot;: 1020, Lisp &quot;functional programming&quot;: 779, OCaml &quot;functional programming&quot;: 316, Scala &quot;functional programming&quot;: 290, XSLT &quot;functional programming&quot;:93, Clojure &quot;functional programming&quot;: 76&lt;/ref&gt;

The examples below give a taste of Haskell, oriented toward those familiar with other programming languages.

== Examples ==
The classic definition of the factorial function:
&lt;source lang=&quot;haskell&quot;&gt;
  fac 0 = 1 
  fac n = n * fac (n - 1)
&lt;/source&gt;

A cute definition of the factorial function (using Haskell's built-in list notation and the standard &lt;code&gt;product&lt;/code&gt; function):
&lt;source lang=&quot;haskell&quot;&gt;
  fac n = product [1..n]
&lt;/source&gt;

Both factorial definitions are supposed to be compilable into ''same'' efficient code by a smart compiler using equational reasoning.


A naive implementation of a function which returns the nth number in the Fibonacci sequence:
&lt;source lang=&quot;haskell&quot;&gt;
  fib 0 = 0
  fib 1 = 1 
  fib n = fib (n - 2) + fib (n - 1)
&lt;/source&gt;

A function which returns a list of the Fibonacci numbers in linear time: 
&lt;source lang=&quot;haskell&quot;&gt;
  fibs = 0 : 1 : zipWith (+) fibs (tail fibs)
&lt;/source&gt;

The previous function defines an infinite list, which is possible because of [[#lazy evaluation|lazy evaluation]]. 

One could implement &lt;code&gt;fib&lt;/code&gt; as: 
&lt;source lang=&quot;haskell&quot;&gt;
  fib n = fibs !! n
&lt;/source&gt;
(&lt;code&gt;!!&lt;/code&gt; is an operator which gets the nth element of a list).


The Quicksort alogrithm can be expressed in Haskell concisely as:
&lt;source lang=&quot;haskell&quot;&gt;
  qsort []     = [] 
  qsort (x:xs) = qsort [y | y&lt;-xs, y &lt; x ] ++ [x] ++
                 qsort [y | y&lt;-xs, y &gt;= x]
&lt;/source&gt;                                                                         
(note that true quicksort sorts in-place but Haskell's lists are immutable so have to be copied around.)


Nonskipping stable mergesort is
&lt;source lang=&quot;haskell&quot;&gt;
  mgsort less [] = []
  mgsort less xs = head $ until (null.tail) pairs [[x] | x &lt;- xs]
    where 
      pairs (x:y:xs)    = merge x y : pairs xs
      pairs xs          = xs
      merge (x:xs) (y:ys)
            | less y x  = y : merge (x:xs) ys 
            | True      = x : merge  xs (y:ys)
      merge  xs     ys  = xs ++ ys
&lt;/source&gt;

where &lt;code&gt;('''.''')&lt;/code&gt; is the function composition operator &lt;code&gt; (h . g) x = h (g x) &lt;/code&gt;, &lt;code&gt;(\x -&gt; ...)&lt;/code&gt; is a lambda expression (a nameless function), and the predefined function &amp;nbsp;&lt;code&gt;'''until''' ''cond'' ''fun''&lt;/code&gt;  &amp;nbsp;repeatedly applies a function ''fun'' &amp;nbsp;until a condition ''cond'' &amp;nbsp;is met; with &lt;code&gt;where&lt;/code&gt; keyword introducing the local definitions showcasing the use of patterns (with &lt;code&gt;('''x:xs''')&lt;/code&gt; matching a non-empty list with the head &lt;code&gt;'''x'''&lt;/code&gt; and tail &lt;code&gt;'''xs'''&lt;/code&gt;) and guards.


The Hamming numbers sequence is just 
&lt;source lang=&quot;haskell&quot;&gt;
  hamm = 1 : map (2*) hamm `union` 
               (map (3*) hamm `union` map (5*) hamm)
  -- a union of two ordered lists:
  union (x:xs) (y:ys) = case (compare x y) of
          LT -&gt; x : union  xs  (y:ys)
          EQ -&gt; x : union  xs     ys 
          GT -&gt; y : union (x:xs)  ys 
&lt;/source&gt;

using sections (partially applied operators) and the built-in function &lt;code&gt;'''map'''&lt;/code&gt; working with lists, whether finite or not, due to lazy (i.e. ''by-need'' ) evaluation. Also, enclosing function's name into back-quotes turns it into infix operator so that sub-expressions are automatically formed as if by placing parentheses appropriately, forming a nested expression, as in 2+3+5 --&gt; ((2+3)+5) ; and a comment line is introduced by two dashes.


Finally, the infinite list of prime numbers, also using the above &lt;code&gt;union&lt;/code&gt; function, is: 
&lt;source lang=&quot;haskell&quot;&gt;
  primes = 2 : gaps 3 (join [[p*p,p*p+2*p..] | p &lt;- primes'])
   where
    primes' = 3 : gaps 5 (join [[p*p,p*p+2*p..] | p &lt;- primes'])
    join  ((x:xs):t)        = x : union xs (join (pairs t))
    pairs ((x:xs):ys:t)     = (x : union xs ys) : pairs t
    gaps k xs@(x:t) | k==x  = gaps (k+2) t 
                    | True  = k : gaps (k+2) xs 
&lt;/source&gt;

Here primes are defined corecursively as gaps between the composite numbers, i.e. the primes' multiples.

== It's not just for quicksort! ==

Haskell is also used to build &quot;real world&quot; programs, including [[../GUI/|graphical]] or web user interfaces.  To get a taste of Haskell in the real world, check out [http://www.haskell.org/haskellwiki/Web/Frameworks web frameworks in Haskell] and [http://www.haskell.org/haskellwiki/Haskell_in_industry Haskell in industry] articles on the Haskell wiki, or [http://www.darcs.net darcs], an advanced revision control system written in Haskell.

== Notes ==
&lt;references/&gt;

{{BookCat}}</text>
      <sha1>oxnhl9wiftyjjyi89aj4mfm54rj8bdq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Biochemistry/Proteins</title>
    <ns>0</ns>
    <id>4582</id>
    <revision>
      <id>2594884</id>
      <parentid>2261654</parentid>
      <timestamp>2013-12-20T12:50:35Z</timestamp>
      <contributor>
        <username>Chinaeslteacher2012</username>
        <id>1257679</id>
      </contributor>
      <text xml:space="preserve">'''Proteins''' are a primary constituent of living things and one of the chief classes of molecules studied in biochemistry. Proteins provide most of the molecular machinery of cells. Many are enzymes or subunits of enzymes. Other proteins play structural or mechanical roles, such as those that form the struts and joints of the cytoskeleton. Each protein is linear polymers built of [https://en.wikipedia.org/wiki/Amino_acids amino acids]. Proteins are also nutrient sources for organisms that do not produce their own energy from sunlight and/or are unable to fix nitrogen. Proteins can interact with one another and with others molecules to form complexes.

-----
'''Index of chapters and main sections'''

# [[Biochemistry/Proteins/Introduction|Introduction]]
## [[Biochemistry/Proteins/Introduction#Protein role in biology|Protein role in biology]]
## [[Biochemistry/Proteins/Introduction#Proteins as polymers of aminoacids|Proteins as polymers of amino acids]]
## [[Biochemistry/Proteins/Introduction#Protein function depends on structure|Protein function depends on structure]]
## [[Biochemistry/Proteins/Introduction#Protein synthesis|Protein synthesis]]
# [[Biochemistry/Proteins/The chemistry of proteins|The chemistry of proteins]]
## [[Biochemistry/Proteins/The chemistry of proteins#Aminoacid structure and chemistry|Amino acid structure and chemistry]]
## [[Biochemistry/Proteins/The chemistry of proteins#Disulfide bonds|Disulfide bonds]]
## [[Biochemistry/Proteins/The chemistry of proteins#Post-translational modifications|Post-translational modifications]]
# [[Biochemistry/Proteins/Protein structure and folding|Protein structure and folding]]
## [[Biochemistry/Proteins/Protein structure and folding#What is protein folding?|What is protein folding?]]
## [[Biochemistry/Proteins/Protein structure and folding#Protein structural levels|Protein structural levels]]
## [[Biochemistry/Proteins/Protein structure and folding#Secondary structure elements|Secondary structure elements]]
## [[Biochemistry/Proteins/Protein structure and folding#Tertiary structure elements|Tertiary structure elements]]
## [[Biochemistry/Proteins/Protein structure and folding#Common folds and modules|Common folds and modules]]
# [[Biochemistry/Proteins/Types of Protein|Types of Protein]]
## [[Biochemistry/Proteins/Types of Protein#Oxygen Binding Proteins|Oxygen Binding Proteins]]

{{BookCat}}</text>
      <sha1>8scksx9eon3cx8y42djto4nzbc532t7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
</mediawiki>