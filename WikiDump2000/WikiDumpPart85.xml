<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.9/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.9/ http://www.mediawiki.org/xml/export-0.9.xsd" version="0.9" xml:lang="en">
  <page>
    <title>User:ChrisAnderson</title>
    <ns>2</ns>
    <id>4122</id>
    <revision>
      <id>358282</id>
      <parentid>343065</parentid>
      <timestamp>2006-02-08T12:48:18Z</timestamp>
      <contributor>
        <ip>82.153.127.16</ip>
      </contributor>
      <text xml:space="preserve">Chris Anderson created the [[Wiki Science]] wikibook so that together we might discuss some of the forces at work in the development of wikis, and in particular seeing what makes a healthy wiki.

My major (wiki) interest at the moment is the [http://www.embodimentwiki.org Embodiment Wiki], so I hope that you will go there and check it out.

You can also see my website: [http://www.ironfire.org Ironfire] - although this is only the work of one human being (how old fashioned), so it is obviously not as interesting.

Major Interests:
* [[http://www.ironfire.org/wiki.php Wiki]]
* [[http://www.ironfire.org/ai.php Artificial Intelligence]] including [[http://www.ironfire.org/goai.php Go AI]] aka [[http://www.ironfire.org/goai.php Computer Go]]
* [[http://www.ironfire.org/go.php Go]]

Projects:
* [http://www.embodimentwiki.org Embodiment Wiki]
* [http://www.wikiveg.org Vegan Wiki]
 
----

Hi Chris! 

  I work on Wiki a lot, and am interested in talking with you.

  I share the vision of wiki for practically *everything,*
  with highly organized systems connecting them.

  I'm working aggressively towards manifesting this vision.
  You seem similarly motivated, and I'd like to connect with you.

  You can see my friends and I working on:

* http://communitywiki.org/
* http://wiki.taoriver.net/

  You might be particularly interested in ''plog.''
  http://plogdev.wiki.taoriver.net/
  (...though there are many other projects we do, as well.)

  -- LionKimbro
  http://speakeasy.org/~lion/

----

I am also a big fan of Wikis.  I'm trying to get a couple started at work, which is requiring me to learn about how they are hosted.  It seems a shame not to share what I learn, but I'm actually having trouble figuring out where at wikibooks or wikipedia it would best reside.  Do you have any ideas?  

Thanks, [[User:Rs2|Rs2]] 17:39, 22 Mar 2004 (UTC)

: Clearly, the answer is... on the [[Wiki Science]] wiki!</text>
      <sha1>js1ej8o3brz84ilazxsd4ycd48kbshi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:68.185.237.208</title>
    <ns>3</ns>
    <id>4123</id>
    <revision>
      <id>155928</id>
      <timestamp>2004-01-26T19:01:48Z</timestamp>
      <contributor>
        <username>Karl Wick</username>
        <id>6</id>
      </contributor>
      <comment>thanks for the edits friend</comment>
      <text xml:space="preserve">Thanks for all the help on the biology book ! I am working one full-time job and three part-time ones right now and have not had much time to devote to the book. Looks great what you've done ! --[[User:Karl Wick|Karl Wick]]</text>
      <sha1>oi4d1igxcfezj474pkgmnxdxa9hvwzk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Sandwiches</title>
    <ns>102</ns>
    <id>4130</id>
    <revision>
      <id>2670304</id>
      <parentid>2375501</parentid>
      <timestamp>2014-06-06T02:35:50Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <comment>Added some bland content.</comment>
      <text xml:space="preserve">[[Image:Poboy.jpg|thumb|right|Po'Boy sandwich]]
{{cookdp}}

'''Sandwiches''' are generally two slices of bread, with other food in between. They are named after the [[Wikipedia:John Montagu, 4th Earl of Sandwich|Earl of Sandwich]].

When serving sandwiches at a dinner party, they should be triangular, easily held between a finger and thumb, and have all crusts removed. Typical fillings for such sandwiches are smoked [[Cookbook:Salmon|salmon]], or [[Cookbook:Cucumber|cucumber]]. At a sandwich buffet, cocktail sticks are often stuck through the sandwiches, making them easier to lift by partygoers.

There are various slang terms for a sandwich, such as butty and sarnie.

There are many possible fillings for a savoury sandwich, including [[Cookbook:Bacon|bacon]], [[Cookbook:Turkey|turkey]], [[Cookbook:Alfalfa|alfalfa sprouts]], [[Cookbook:Spinach|spinach]], [[Cookbook:Pastrami|pastrami]], [[Cookbook:Corned Beef|corned beef]], [[Cookbook:Pickle|pickles]], [[Cookbook:Tongue|tongue]], [[Cookbook:Clam|fried clams]], [[Cookbook:Fried Fish|fried fish]], [[Cookbook:Ham|ham]], [[Cookbook:Olive|olives]], [[Cookbook:Cheese|cheese]], [[Cookbook:Tuna|tuna]], [[Cookbook:Lettuce|lettuce]], [[Cookbook:Tomato|tomatoes]], and [[Cookbook:Onion|onions]].

Sweet sandwiches typically include a combination of [[Cookbook:Peanut Butter|peanut butter]], [[Cookbook:Honey|honey]], or [[Cookbook:Jam|jam]].

==A Technical Definition of a Sandwich, For the Reader’s Amusement==
# A sandwich must contain at least one piece of bread which, prior to assembling the sandwich, has been sliced, cut, or pulled open. 
# All of the filling ingredients of a sandwich must, prior to assembly of the sandwich, be edible (i.e: previously cooked, if needed).
#Assembly of a sandwich involves putting sandwich filling ingredients of the cook's choice:
##in a pocket or slot, which has been cut or pulled open in the bread (for example in a bun or a bread roll), 
##between two (or more) pieces of sliced bread (which may be a bun or a  bread roll sliced entirely in half), 
##or, at  the very  least, on top of one piece of sliced bread.
#A sandwich should be capable of being eaten, as is, after it is assembled, although some recipes may call for further steps before serving.  
#Sandwiches should be designed to allow them to be picked up and eaten by hand, without utensils, although there are few limited exceptions to this requirement.

*The definition excludes food items in which uncut breads (such as tortillas or crepes) are:
**wrapped around the ingredients (for example, as in a burrito), which are considered wraps or rolls, instead of sandwiches; or 
**folded around the ingredients (for example, as in a taco, which is a class of food items in its own right.)

*The definition includes sausage-on-a-bun and hot dogs, although these items are not commonly referred to as sandwiches. 

*In a wider sense, the word ‘sandwich’ can mean ‘any assembly of one thing between two other things’.  In that sense the term sandwich is applied to a wider variety of foods, including ice cream sandwiches ‘sandwich cookies,’ and, perhaps, quesadillas, which meets many of the requirements for being a sandwich, although it is cut only after it has been prepared.

==Sandwich recipes==
[[Image:Ruben sandwich.jpg|right|thumb|Reuben sandwich]]
*[[Cookbook:Baloney Sandwich|Baloney Sandwich]]
*[[Cookbook:Bánh Mì|Bánh mì]]&amp;nbsp;&amp;ndash; Vietnamese
*[[Cookbook:BLT_Sandwich|BLT Sandwich]]
*[[Cookbook:Bulgher Burger|Bulgher Burger]]
*[[Cookbook:Chip Butty|Chip Butty]]
*[[Cookbook:Cucumber Sprout Sandwich|Cucumber Sprout Sandwich]] 
*[[Cookbook:Doc'Roberts Grilled Vegetable Sandwich|Doc'Roberts Grilled Vegetable Sandwich]]
*[[Cookbook:Au Jus Sandwich|Au Jus Sandwiches]]
*[[Cookbook:Garlic, Tomato and Cheddar Sandwich|Garlic, Tomato and Cheddar Sandwich]]
*[[Cookbook:Grilled Cheese Sandwich|Grilled Cheese Sandwich]]
*[[Cookbook:Grilled Peanut Butter Sandwiches|Grilled Peanut Butter Sandwiches]]
*[[Cookbook:Hamburger|Hamburger]] (see also [[Cookbook:Barbecuing|Barbecuing]])
*[[Cookbook:Peanut Butter Sandwich|Peanut Butter Sandwich]]
*[[Cookbook:Ploughman's Sandwich|Ploughmans]]
*[[Cookbook:Po' Boy|Po' Boy]]
*[[Cookbook:Red Devils|Red Devils]]
*[[Cookbook:Reuben Sandwich|Reuben Sandwich]]
*[[Cookbook:Sandwich Cake|Sandwich Layered Cake]]
*[[Cookbook:Toasted Cheese Sandwich|Toasted Cheese Sandwich]]

[[Category:Sandwich recipes| ]]

[[ko:샌드위치]]</text>
      <sha1>78ol48wahuul7ovwlq7hbeqkxg1ydpo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Chinese (Mandarin)/Contributors</title>
    <ns>0</ns>
    <id>4137</id>
    <revision>
      <id>1533531</id>
      <parentid>1533529</parentid>
      <timestamp>2009-06-14T23:51:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed category</comment>
      <text xml:space="preserve">&lt;center&gt;
=Contributors=
&lt;/center&gt;
The Chinese Wikibook was started 2003 December 13. Below is a list of users who have contributed greatly to the authoring of this Wikibook. Please add your username if you have made substantial additions and/or revisions to this textbook. Use '''&lt;nowiki&gt;*{{user|username}}&lt;/nowiki&gt;''' to add a name.

*{{user|everlong}}
*{{user|Taoster}}
*{{user|Ran}}

[[commons:user:M4RC0|M4RC0]], [[commons:user:Yug|Yug]] and [[commons:user:wikic|Wikic]] all made substantial contributions to the [[commons:Category:Chinese_stroke_order|Chinese stroke order project]] on [[commons:Main Page|Wikicommons]], which are used in our lessons. [[commons:user:Peter Isotalo|Peter Isotalo]], also of Wikicommons, contributed the first audio samples used in this Wikibook.

In addition, the authors would like to thank the development team in relation with the [http://www.wikimediafoundation.org/ Wikimedia Foundation] and its affiliates, without whom our text could not be so accessible.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>sfi2g9gcboq00hn8d5h5dmhmzn7e3md</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>XML - Managing Data Exchange/Preface</title>
    <ns>0</ns>
    <id>4138</id>
    <revision>
      <id>2403133</id>
      <parentid>1527053</parentid>
      <timestamp>2012-09-02T18:40:14Z</timestamp>
      <contributor>
        <username>Sandbergja</username>
        <id>604598</id>
      </contributor>
      <minor />
      <comment>added next parameter to book template, removed redundant topnav template</comment>
      <text xml:space="preserve">{{XML-MDE|next=Introduction to XML}}


=Goals=
==Book==
The goal of this book is to provide a comprehensive coverage of eXtensible Markup Language (XML) in a textbook format. This book is written and edited by students for students. Each student who uses the book should improve its quality by correcting errors, adding exercises, adding examples, starting new chapters and so forth.

Chapters 2 through 6 take the perspective that an XML schema is a representation of a data model, and thus these chapters deal with mapping the complete range of relationships that occur between entities. As you learn how to convert each type of relationship into a schema, other aspects of XML are introduced. For example, stylesheets are initially introduced in Chapter 2 and progressively more stylesheet features are added in Chapters 3 through 6.

Consolidation chapters (e.g., Chapter 7 &quot;Data schemas&quot;) bring together the material covered across previous chapters; in this case, Chapters 2 through 6. This means students see key skills twice: once in the context of gradually developing their broad understanding of XML and then again in the specific context of one dimension of XML. 

Application chapters cover particular uses of XML (e.g., SVG for scalable vector graphics) to give the reader examples of the use of XML to solve particular types of problems. This part of the book is expected to grow as the use of XML extends.

==Project==
Professors typically throw away their students’ projects at the end of the term. This is a massive waste of intellectual resources that can be harnessed for the betterment of many by creating an appropriate infrastructure. In our case, we use wiki technology as the infrastructure to create a free open content textbook.

University students are an immense untapped global resource. They can be engaged in creating open textbooks if the right infrastructure is in place to sustain renewable student projects. This book is an example of how waste can be avoided.

=History=
* Graduate students at the [http://www.uga.edu/ University of Georgia] started writing this book in January 2004. They were students in an Advanced Data Management class, and most were studying for a [http://ebiz.terry.uga.edu/ Masters in Internet Technology].
* Students at two German Universities, the [http://www.uni-passau.de/ University of Passau] and the [http://www.uni-halle.de/MLU/index_e.htm Martin-Luther University Halle-Wittenberg], added material to the first few chapters in May, 2004.
* A [[:zh:XML/引言|Chinese translation]] was started in mid 2004 by Dr. Xu Zhengchuan of [http://www.fudan.edu.cn/english/index_en.html Fudan University] in Shanghai.
* An [[:it:XML|Italian translation]] was started in late 2004 by [[User:Jubjub68|Jubjub68]].
* Students in Data Management classes at the University of Georgia use the book each semester and continue to improve it.
* In the first semester of 2006, the Advanced Data Management class at the University of Georgia undertook a complete review of the book to improve quality and consistency.
* 2006-Aug-31: [http://www.eurekalert.org/pub_releases/2006-08/uog-gtp083106.php &quot;Global Text Project aims to create free, Wiki-based textbooks for developing nations&quot;]: press release links directly to http://en.wikibooks.org/wiki/XML .
* http://globaltext.org/ links directly to http://en.wikibooks.org/wiki/XML .


=Software=
To complete the exercises in the book and view the slides, you will need access to the following software (or a suitable alternative):
* [http://java.sun.com/ Java] for NetBeans
* [http://www.netbeans.org/ NetBeans] for XML editing, validation, and transformation
* [http://www.mysql.org/ MySQL]
* [http://www.openoffice.org/ OpenOffice]
* [http://www.mozilla.com/firefox/ Firefox]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>1hlll7l3fx6tgi5f3t404klsyxm3ri0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Physics Study Guide/Electricity</title>
    <ns>1</ns>
    <id>4142</id>
    <revision>
      <id>466560</id>
      <parentid>155944</parentid>
      <timestamp>2006-05-24T11:42:33Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <comment>[[Talk:Electricity (Physics Study Guide)]] moved to [[Talk:Physics Study Guide/Electricity]]: naming convention</comment>
      <text xml:space="preserve">The electrostatic constant, k, has an approximate value of &lt;math&gt; 9 x 10^9 N m^2 / C^2 &lt;/math&gt;.  This number can also be expressed, in FORTRAN style, as 9E9 &lt;math&gt; N m^2 / C^2 &lt;/math&gt;.  I am curious why it is written here as simply  99 &lt;math&gt; N m^2 / C^2 &lt;/math&gt;.
[[User:Dah'r tchas|Dah'r tchas]] 23:14, 27 Jan 2004 (UTC)
:oops a typo i think, in a rat i should be able to fix that --[[User:Karl Wick|Karl Wick]]</text>
      <sha1>s6kqrpk5rv5b8dq3dork1u88rdlefc9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Io Programming</title>
    <ns>0</ns>
    <id>4143</id>
    <revision>
      <id>2709678</id>
      <parentid>2590778</parentid>
      <timestamp>2014-10-03T03:02:55Z</timestamp>
      <contributor>
        <ip>162.213.77.6</ip>
      </contributor>
      <comment>miss an &quot;is&quot; in discussion of arguments</comment>
      <text xml:space="preserve">__NOTOC__ __NOEDITSECTION__
== Beginner's Guide to Io ==
# [[/Beginner's Guide/About|About Io and the book]]
# [[/Beginner's Guide/Getting Started|Getting Started]]
# [[/Beginner's Guide/Your First Program|Your First Program]]
# [[/Beginner's Guide/Basic Components of Io Programs|Basic Components of Io Programs]]
# [[/Beginner's Guide/Objects|Objects]]

== Addons and You ==
=== Compression ===
* [[/Addons and You/LZO|LZO]]
* [[/Addons and You/Zlib|Zlib]]
=== Encryption ===
* [[/Addons and You/Blowfish|Blowfish]]
=== Networking ===
* [[/Addons and You/Beanstalk|Beanstalk]]
* [[/Addons and You/Socket|Socket]]
=== Server ===
* [[/Addons and You/Curses|Curses]]
* [[/Addons and You/Editline|Editline]]

== Io Language Pages ==

* [[/Io To-Do/]] -- Stuff that needs to be done.
* [[/Io Example Code/]] -- Paste your example code here.
* [[/Binding Io to C++/]] -- Learn how to bind Io using C++.
* [[/Io and CGI/]] -- Accessing Io through CGI
* [[/Io Style Guide/]] -- How to write good Io code.
* [[/Writing Addons/]] -- How to write new Addons.
* [[/Pitfalls/]] -- Some subtle Io pitfalls.

== About This Wiki ==

This work is disjointly licensed under the GNU FDL, the CC BY SA, and Io's license.

The authors of this tutorial are:
*Daniel Ehrenberg ([[User:LittleDan|LittleDan]])
*Samuel A. Falvo II
*Olle Jonsson (just a note on String concatenation)

And many others who wish to remain anonymous.

{{split}}

==Hello world==

When learning to program, the first thing usually learned is how to write a program that prints &quot;Hello, world!&quot; to the console. It gives programmers a feel of how simple programs are structured. Io has many ways to write things to the console, so at times it can be confusing about which one to use. The one that's most often used is the write function. Enter the Io's interactive interpreter (by typing &lt;code&gt;io&lt;/code&gt; at the console) and type the following:

 write(&quot;Hello, world!\n&quot;)

With the interactive interpreter, this should look like:

 user@computer:~$ io
 Io&amp;gt; write(&quot;Hello, world!\n&quot;)
 Hello, world!
 ==&amp;gt; nil

Another way would be:

 &quot;Hello, world!\n&quot; print

Some of this makes sense. It looks like &lt;code&gt;write&lt;/code&gt; is telling Io to write something to the console, specifically the stuff after it. The stuff after it is in quotes so it's some text, and it's what's going to be printed. But why are those parentheses there, what's with that &lt;code&gt;\n&lt;/code&gt; at the end of it, and why was there an arrow with the quoted text after it?

The parentheses are telling &lt;code&gt;write&lt;/code&gt; to use the thing within the parentheses, which is called an ''argument''. &lt;code&gt;write&lt;/code&gt; is called a ''function'' (remember functions in math?). There might be multiple arguments within the parentheses separated by commas in a single function. The first and only argument for &lt;code&gt;write&lt;/code&gt;, namely &lt;code&gt;&quot;Hello, world!\n&quot;&lt;/code&gt;, is a ''string'' (because it's a string of letters).

The &lt;code&gt;\n&lt;/code&gt; at the end of the string is an ''escape sequence''. You can tell that because it begins with a backslash. This particular escape sequence signals a newline, the equivalent of pressing enter. If you just pressed enter in the middle of the string (or at least this type of string -- we'll get to that later), it would confuse Io.  

The thing where there's an arrow and then the string that was the argument of the &lt;code&gt;write&lt;/code&gt; function is the value that &lt;code&gt;write&lt;/code&gt; ''return''ed. Every function returns a value. With some functions, it makes sense to return something (such as a function to add two numbers), but with other functions, it just returns something simple done with the arguments. In this case, &lt;code&gt;write&lt;/code&gt; returns the special value &lt;code&gt;nil&lt;/code&gt;, indicating it has nothing to return.

== Concatenate Strings ==

Use '''the double dot operator''' to concatenate strings. Or, you can use string interpolation, as shown below.

Let's say &lt;code&gt;olle&lt;/code&gt; is a &lt;code&gt;Person&lt;/code&gt; instance, and it has both a first name and a last name:

 Io&amp;gt; olle
 ==&amp;gt; Object_0080B818 do(
   appendProto(Object_00806B58)
   lastname := &quot;Jonsson&quot;
   title := &quot;Developer&quot;
   firstname := &quot;Olle&quot;
 )

We want a method to show first and last name with a space in-between:

 Io&amp;gt; olle fullname := method(firstname .. &quot; &quot; .. lastname)
 ==&amp;gt; method(firstname ..(&quot; &quot;) ..(lastname))

or, using string interpolation:

 Io&amp;gt; olle fullname := method(&quot;#{firstname} #{lastname}&quot; interpolate)
 ==&amp;gt; method(&quot;#{firstname} #{lastname}&quot; interpolate)

Now, calling &lt;code&gt;olle fullname&lt;/code&gt; will yield &lt;code&gt;&quot;Olle Jonsson&quot;&lt;/code&gt;. Looking at the returned method object, we can see how the Io interpreter creates regular message calls (the parentheses) for the method &lt;code&gt;..()&lt;/code&gt;.

So, this is the new &lt;code&gt;olle&lt;/code&gt; instance:

 Io&amp;gt; olle
 ==&amp;gt; Object_0080B818 do(
   appendProto(Object_00806B58)
   fullname := Block_007B5030
   lastname := &quot;Jonsson&quot;
   title := &quot;Developer&quot;
   firstname := &quot;Olle&quot;
 )

(Note: only this instance has the &lt;code&gt;fullname&lt;/code&gt; method. You could add the &lt;code&gt;fullname&lt;/code&gt; method to &lt;code&gt;Person&lt;/code&gt; instead, which would make it available to &lt;code&gt;olle&lt;/code&gt; via &lt;code&gt;olle&lt;/code&gt;'s prototype, &lt;code&gt;Person&lt;/code&gt;. Also, the firstname and lastname and title could also be moved up to the Person. But this is the way pieces of example code are.)

==Simple arithmetic==

In Io, you can use arithmetic expressions and they will work correctly. Arithmetic in Io is just like functions, except it uses objects to help. Objects make it so that instead of typing something like +(1, 2), you can type 1+2. More about objects later. + is still a function, though, so it returns a value. This is very useful; it makes it so you can use Io as a simple calculator. Notes about what it's doing are put after two slashes (like this: //).

 Io&amp;gt; 1+2 //addition
 ==&amp;gt; 3
 
 Io&amp;gt; 4-5 //subtraction
 ==&amp;gt; -1
 
 Io&amp;gt; 7*3 //multiplication
 ==&amp;gt; 21
 
 Io&amp;gt; 3/6 //division
 ==&amp;gt; 0.50000
 
 Io&amp;gt; 2**3 //exponents
 ==&amp;gt; 8
 
 Io&amp;gt; 7%2 //remainder of 7/2 (technically, 7 mod 2)
 ==&amp;gt; 1

This follows normal order of operations (called ''precedence'') and parentheses can be used. As you'd expect, you can use &lt;code&gt;write&lt;/code&gt; on numbers, but the newline isn't included. You have to use multiple arguments with &lt;code&gt;write&lt;/code&gt; to print multiple things and then it returns all of those things put together. So to print &lt;code&gt;(1/3)**2&lt;/code&gt;, you would write:

 write((1/3)**2, &quot;\n&quot;)

As you would expect, this prints 0.11111. It returns the string &quot;0.11111\n&quot; because with the &lt;code&gt;write&lt;/code&gt; function, multiple arguments are converted to strings and joined together. Then that value is printed and returned.

==Variables==

A ''variable'' is basically a word that stands for a value. They are somewhat like variables in mathematics, except in mathematics, variables could only be numbers and they were one letter long. In programming, functions, objects, strings, and numbers are all types of variables, but we haven't defined any yet.  Many variables, such as write, 3, and &quot;Hello, world!&quot; can already be used, but only some of them can be changed. You can make your own variables using = and :=. Below are some examples of making and using variables:

 x := 3
 line := &quot;\n&quot;
 write(x, line)

Can you tell what's happening? The variable x is being set to 3 and the variable line is being set to &quot;\n&quot;, which is equivalent to a newline. Then, the contents x and line are being written to the console. Since x is 3 and line is a newline, this prints 3 and then goes to the next line on the console. The function returns &quot;3\n&quot;.

In Io, there is a difference between creating and changing the value of variables. If a variable doesn't exist yet, you have to use :=, but if you've already given it an initial value using :=, you can use = for subsequent definitions. Here's an example:

 x := 1
 incrementor := 2
 write(&quot;x is &quot;, x, &quot;\n&quot;)
 x = x + incrementor
 write(&quot;but when we added &quot;, incrementor, &quot; to it, it became &quot;, x, &quot;\n&quot;)

It may be confusing that sometimes we use := and other times we use =, but you'll get used to it. If you want to, you can always use :=, but when we get into objects later, it will become very inconvenient to keep using :=, so you should probably start using = whenever appropriate.

==Programs==

Until now, you've been simply been going to Io's interactive interpreter. This prevents you from making larger applications or writing things for others. If you want to write code to be reused, simply put it in a text file and run it with &lt;code&gt;io &amp;lt;filename&gt;&lt;/code&gt;, where &amp;lt;filename&gt; is the name of the file you use. Here's an example of using a file on Linux to store a program:

 user@computer:~$ cat &gt; incrementor.io
 x := 1
 incrementor := 2
 writeln(&quot;x is &quot;, x)
 x = x + incrementor
 writeln(&quot;but when we added &quot;, incrementor, &quot; to it, it became &quot;, x)
 user@computer:~$ io incrementor.io
 x is 1
 but when we added 2 to it, it became 3
 user@computer:~$

That was the last example we just did. If you noticed, I used a .io file extension. This is in no way mandated, it is merely a convention. Something happened differently this time then when we did it from a file, if you noticed. Unlike before, we didn't see what each function returned. Instead, we only saw what was explicitly output by &lt;code&gt;write&lt;/code&gt;.

If you're on Linux or a similar system (such as Unix, Mac OS X, or Cygwin), you can make it so that your file can be run simply by typing &lt;code&gt;./yourProgram.io&lt;/code&gt; (where yourProgram.io is the name of your program), without needing to precede it with &lt;code&gt;io&lt;/code&gt;. This can be accomplished by putting a line of code at the beginning of your program and then giving it executable permissions. On Linux, that code is:

 #! /usr/bin/env io

It may differ for other systems. To give it executable permissions, simply type the following:

 chmod +x yourProgram.io

Again, this may be different on different systems. Once you do this, nothing will change about the actual execution of the code, but you can, for example, just double click on a source code file in a GUI and it will run.

==Writing functions==

As I said before, functions are just another type of variable, so you can create them using := and change them using =. Functions themselves are created with a function called &lt;code&gt;method&lt;/code&gt;. Here's an example of a function:

 add := method(a, b, //function to add 2 numbers
   a + b
 )
 writeln(add(1, 2)) //writes 3
 x := 1
 writeln(add(3, x)) //writes 4
 x = add(4, 5) //9
 writeln(x) //writes 9
 x = add(x, 1) //in effect increment x by 1
 writeln(x) //writes 10

The function add takes two arguments, a and b, and then returns a + b. It would do exactly the same thing if, instead of a and b, we used the variable names 'this' and 'that', everywhere that a and b were used. In that case, the function would be  written as:

 add := method(this, that,
   this + that
 )

What a function really does is take a list of arguments; then it assigns the arguments to ''local variable''s, which are specified when you make the function. Local variables stay in the function you're working in and you can't get to them outside of the function. In the most recent case, those local variables are 'this' and 'that', so the variable 'this' will take the first argument, and the variable 'that' will take the second argument. Then it executes the rest of the function and returns the result. The function can have multiple lines of code and the last line will be the value returned. Here's an example:

 examineArgs := method(this, that,
   writeln(&quot;This is &quot;, this, &quot;.&quot;)
   writeln(&quot;That is &quot;, that, &quot;.&quot;)
 )

 // usage:
 examineArgs(3, 5)
 /* writes:
 This is 3.
 That is 5. */

 x := examineArgs(&quot;hi&quot;, &quot;bye&quot;)
 /* writes:
 This is hi.
 That is bye. */

 write(x)
 /* writes:
 That is bye. */

Why was x set to &quot;That is bye.\n&quot;? Because that's what examineArgs returned. It returned the value of the last line, the value of write(&quot;That is &quot;, that, &quot;.\n&quot;). That was set to &quot;bye&quot;, so it printed the string &quot;That is bye.\n&quot; and returned the same string.

If you want to return something before the function ends, you can use the return function. Unlike most functions, you don't need to put parentheses around the argument to call the return function. Here is an example of its usage:

 returning := method(this, that,
   writeln(this)
   return this
   writeln(that)
 )
 x := returning(1, 2)
 //writes &quot;1\n&quot;
 write(x) //writes 1 with no newline

As you can see, the code after return isn't used at all. Right now, this doesn't seem very useful, but later, when we get into flow control, it will be used very often.

==Conditionals==

Conditionals in Io are made using the if function:

 if(a == 1) then(
   writeln(&quot;a is one&quot;)
 ) else(
   writeln(&quot;a is not one&quot;)
 )

However, the preferred way to write this (without the need for then() and else() messages, so it is faster):

&lt;pre&gt;
if(a == 1, writeln(&quot;a is one&quot;), writeln(&quot;a is not one&quot;))
&lt;/pre&gt;

==External links==
*[http://www.iolanguage.com/about/ Io website]
*[http://io-fans.jottit.com Harry Vangberg's Io links wiki]

{{Subjects|Computer programming languages}}
{{alphabetical|I}}
{{status|50%}}</text>
      <sha1>0hhwm3q7tjrnzadkrqin3gu7zetj64t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Karl Wick/Spiritual worksheet</title>
    <ns>2</ns>
    <id>4145</id>
    <revision>
      <id>155947</id>
      <parentid>13399</parentid>
      <timestamp>2004-01-30T14:53:01Z</timestamp>
      <contributor>
        <ip>129.22.154.139</ip>
      </contributor>
      <text xml:space="preserve">Who are your closest friends / relationships?

Who would you like to grow closer to?

What can you do to make that happen?

List strengths and self-identified spiritual gifts.

Plans for spiritual growth:

Describe your Bible study of late:

Describe your prayer life:

Areas for emotional growth:

Recreational / renewing activities:

Areas of service to others:

If lacking in service, how can you improve? Whom can you serve and how?

In what areas do you think you have loved or followed an image over a reality?

What are you most grateful for today?

What else to you have to be grateful for?

Steps to improve financial situation and be more responsible?

How can you be more loving?

In what areas have you been faithless? Why? What can you do about it?

Tools for personal change:

Have you truthfully confessed your sins before God and man?

Have you asked someone to pray specifically for/with you to overcome the repetitious sins in your life?

List of action steps to take:

How is God helping me to grow more faithful through this situation?</text>
      <sha1>155ohvxcgaqyqxwzdc2aaczxwpljyrv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Main page</title>
    <ns>0</ns>
    <id>4146</id>
    <redirect title="Main Page" />
    <restrictions>edit=sysop:move=sysop</restrictions>
    <revision>
      <id>344890</id>
      <parentid>326845</parentid>
      <timestamp>2006-01-24T08:23:44Z</timestamp>
      <contributor>
        <username>Spam cleanup script</username>
        <id>17972</id>
      </contributor>
      <comment>Cleaning up links to 90554.T.90d7.info</comment>
      <text xml:space="preserve">#Redirect[[Main Page]]</text>
      <sha1>l7464z3szyhcva3ou16px368vbf2xuu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cryptography/Breaking Caesar cipher</title>
    <ns>0</ns>
    <id>4147</id>
    <revision>
      <id>1039307</id>
      <parentid>1039306</parentid>
      <timestamp>2007-11-27T06:53:11Z</timestamp>
      <contributor>
        <ip>59.162.171.53</ip>
      </contributor>
      <comment>/* Brute force */</comment>
      <text xml:space="preserve">'''Breaking the Caesar cipher''' is trivial as it is vulnerable to most forms of attack. The system is so easily broken that it is often faster to perform a brute force attack to discover if this cipher is in use or not. An easy way for humans to decipher it is to examine the letter frequencies of the cipher text and see where they match those found in the underlying language.

===Frequency analysis===

By graphing the frequencies of letters in the ciphertext and those in the original language of the plaintext, a human can spot the value of the key but looking at the displacement of particular features of the graph. For example in the English language the frequencies of the letters Q,R,S,T have a particularly distinctive pattern.

Computers can also do this trivially by means of an auto-correlation function.

===Brute force===
As the system only has 26 non-trivial keys it is easy even for a human to cycle through all the possible keys until they find one which allows the ciphertext to be converted into plaintext.

===Known plaintext attack===
If you have a message in both ciphertext and in plaintext it is trivial to find the key by calculating the difference between them.

[[Category:Cryptography]]</text>
      <sha1>8hupw7l55wdonzq8cs2gd8qoaczts2g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Chinese (Mandarin)/Lesson 2</title>
    <ns>1</ns>
    <id>4150</id>
    <revision>
      <id>2153943</id>
      <parentid>2153942</parentid>
      <timestamp>2011-08-06T03:02:52Z</timestamp>
      <contributor>
        <username>Electricwhisper</username>
        <id>462819</id>
      </contributor>
      <comment>/* Jie2 */</comment>
      <text xml:space="preserve">{{WikiProject Languages}} 

==“今天她们没有一节课” really sounds unnatural==
I would say &quot;今天她们一节课都没有”
 
Does the character “都” in “今天,他們一節課&quot;都&quot;沒有。” mean &quot;any&quot;? I don't think so .I think &quot;even&quot; would better.There can be a feeling of envy.Like &quot;They don't 'even' have one class today&quot;.--[[User:Shinylight|Shinylight]] [[User talk:Shinylight|talk]]


&quot;今天她们没有一节课&quot; is just wrong.  When negating posession, you don't give a quantity: 他們沒有課.
(To get the idea of how wrong it feels, think of someone who has no money trying to express it in
English by saying &quot;I don't have three dollars and fifty four cents&quot; - it is true, but it is so
specific that it misses the general meaning that he wants.  He should say &quot;I have no money&quot;.)
If you want the emphasis of &quot;does not have even one class&quot; you could use 都 (dou1) or 也 (ye3),
but the word order is a little different from English: 他們一節課都沒有 or 他們一節課也沒有.
Literally, 都 (dou1) by itself means &quot;all&quot; and 也 (ye3) means &quot;also&quot;, but this is just one of
those patterns that does not map neatly onto English word-by-word.
I'm sure you could work 連 (lian2) &quot;any&quot; in there, but it would be icing on the cake; you
already have that meaning by using either of those constructions with 都 or 也.
--[[User:Yakowenko|Yakowenko]] ([[User talk:Yakowenko|talk]]) 06:43, 17 March 2009 (UTC)

Also, it looks like some discussion is creeping into the lesson itself (&quot;Actually,We seldom say...&quot;).
That's got to go.  :-)  --[[User:Yakowenko|Yakowenko]] ([[User talk:Yakowenko|talk]]) 07:11, 17 March 2009 (UTC)

I have cleaned up the area by creating separate examples for &quot;今天他们没有课&quot; and &quot;今天他们一门课都没有&quot;, with some explanation of the latter. Since I am a new editor, it would be awesome if someone could check it for formatting and quality. :) --[[User:Electricwhisper|Electricwhisper]] ([[User talk:Electricwhisper|discuss]] • [[Special:Contributions/Electricwhisper|contribs]]) 02:56, 6 August 2011 (UTC)

==Something about the &quot;Guo4&quot;(過)?==
 --[[User:Yacht|Yacht]] ([[User talk:Yacht|talk]])[[Queer|Q]] 02:53, 29 Jan 2004 (UTC)

Might be useful to have word-by-word translation of examples?


I'm going to change 你早 to 早安 as I, the native speaker I asked, and the Apple Simplified Chinese Input Method have never heard of the former, but have commonly heard the latter.

Someone had put in Roman spaces between Chinese punctuation marks and the first character of the next sentence.  This is superfluous since the Chinese punctuation already has space built in.  It also makes things look bad, as it keeps the characters from aligning vertically.  So I removed the spaces.

:I found this text a little bit &quot;English&quot;, seems like a word-to-word translation from English to Chinese. We seldom hear &quot;你好吗&quot;, &quot;我很好，谢谢。你呢？&quot;, &quot;我也很好。&quot; in Chinese. And the sentence &quot;一节？！太少了！&quot; a little bit unnature for me. they are all grammatically correct, just not sound native for me. --[[User:Yacht|Yacht]] 18:19, 2 Jan 2005 (UTC)

::As for &quot;你好吗&quot; and so on, that seems to be the starting place for most Chinese texts, even if it's not actually used every day.  After all, you have to start somewhere really simple and can't just immediately jump in to exactly how a native speaker would say something.  For &quot;一节？！太少了！&quot;, how would you say it?

::: Maybe  只一节？ (zhi3 yi1 jie2?)  But then, this lesson doesn't exactly need more vocabulary, does it? --[[User:Yakowenko|Yakowenko]] ([[User talk:Yakowenko|talk]]) 07:07, 17 March 2009 (UTC)

:So what's the deal with having different word choices in the simplified and traditional versions of the first sentence?  (&quot;早上好&quot; vs. &quot;早安&quot;)   Even if the most common usage differs between the mainland and Taiwan, the beginning lessons should present something that is acceptable in either locale.  If we want to show both greetings, maybe 東尼 could say &quot;早上好&quot; and 艾美 could reply with &quot;早安&quot;? --[[User:Yakowenko|Yakowenko]] ([[User talk:Yakowenko|talk]]) 07:07, 17 March 2009 (UTC)



:::Most (if not all) of the pronunciation for the vocabulary in this lesson is now uploaded at Commons. Since I'm not going to work on the actual content of this book, I thought it be best if someone else implemented the audio links here.
:::Enjoy.
:::[[User:Peter Isotalo|Peter]] &lt;sup&gt;[[User talk:Peter Isotalo|Isotalo]]&lt;/sup&gt; 07:23, 29 April 2006 (UTC)

::::Thank you, Peter. I'll link to them now.
::::[[User:Everlong|Everlong]] 21:35, 29 April 2006 (UTC)

I think putting 今天 at the beginning of the sentence sounds weird when spoken.  I think it should be 你今天忙不忙. -[[User:Deranged_physicist|deranged_physicist]]

== By Lie-Hap-Po ==

Good morning : 你早/早安
Both exist in Chinese so you can use both.

uhh no... the first is not used in standard Mandarin.

It is worth pointing out that the word ‘早’ literally means 'early' in chinese, and it can only 'literally' mean morning if it is ‘早上’. The first one - referring to 你早/早安 - could be used in dialects like Cantonese (but I'm not so sure about that), but I've never heard a person saying '你早' 'in Mandarin. - chinzh

:yeah 你早 is kinda informal, thou im sure you do get to hear this in somewhere of china, it would be a bit misleading for beginners. 
and unlike in English where different kind of saying may mean completely another word, even you dont give learners this word, when later as their knowlege about chinese lang grows they'll easily understand what 你早 means whenever they meet/hear it. [[User:KonW|KonW]] ([[User talk:KonW|talk]]) 15:01, 30 April 2009 (UTC)

== By  Lie-Hap-Po ==

Chinese uses different words and different topics when they are talking to foreigners than when they are talking to other Chinese.
Example How are you? CtC : 你吃了吗？CtF ：你好吗？
Example2 Your Chinese is very good. CtC:你普通话说得很好。CtF:你中文说得很好。

== Suggest reducing vocabulary and adding a writing lesson ==
I think that, compared to most mainstream textbooks, this introduces vocabulary slightly too quickly for people who are new to characters. Someone who is new to characters would struggle with memorizing this many words at once. For example, the DeFrancis book has ten characters per lesson at the beginning.[[User:86.137.109.142|86.137.109.142]] 11:06, 23 February 2007 (UTC)

== Need simplified characters in vocab list ==
The characters in the vocab list are all traditional. Only the ones in parentheses should be traditional. I'll see if I can cut and paste; if not, someone else can do it since I don't have a chinese character typing tool on my computer. [[User:Emmaskis|Emmaskis]] ([[User talk:Emmaskis|talk]]) 17:59, 5 March 2009 (UTC)


Never mind, I just changed them a couple of minutes ago. [[User:Emmaskis|Emmaskis]] ([[User talk:Emmaskis|talk]]) 18:04, 5 March 2009 (UTC)

== Zaoshang ==
Using this to learn mandarin for the first time, notice zaoshang isn't the vocabulary, just zao. It doesn't really change the meaning, but it was confusing for me as I thought there was an extra word that i didn't understand.

==Jie2==
There is no definition for Jie2 in either this lesson or in lesson one
:both &quot;mén&quot; and &quot;Jie2&quot; are measure word for school courses. --[[User:KaurJmeb|KaurJmeb]] ([[User talk:KaurJmeb|talk]]) 15:48, 13 April 2010 (UTC)

:门 refers to one course as a whole, whereas 节 refers to a single class period. It sounds a bit unnatural to me to say &quot;今天我有四门课,&quot; where I would be more likely to say &quot;这个学期我有四门课.&quot; I would rather say &quot;今天我有四节课.&quot; I think 节 should be incorporated into the examples to reflect this. --[[User:Electricwhisper|Electricwhisper]] ([[User talk:Electricwhisper|discuss]] • [[Special:Contributions/Electricwhisper|contribs]]) 03:02, 6 August 2011 (UTC)

== Disapearing Pīnyīn ==

Pīnyīn disappears half-way through the dialogues and also half way through the grammar. This is not consistent, and also makes that part of the lesson useless for anyone who cannot read Chinese characters.</text>
      <sha1>peu0ooeac9zlx4clakmexec1bzieilh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Pickert</title>
    <ns>102</ns>
    <id>4151</id>
    <revision>
      <id>1763996</id>
      <parentid>852248</parentid>
      <timestamp>2010-04-20T21:49:50Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Side dishes|Side dishes]] | [[Cookbook:Cuisine of Germany|German Cuisine]]

This is the traditional Lippischer '''Pickert''', a type of [[Cookbook:Potato|potato]] dish somewhere between a [[Cookbook:Dumpling|dumpling]] and a [[Cookbook:Pancake|pancake]].

==Ingredients==

*1 [[Cookbook:kg|kg]] (5 [[Cookbook:Cup|cups]]) [[Cookbook:Flour|flour]]
*1 [[Cookbook:L|litre]] (4 cups) [[Cookbook:Milk|milk]]
*10 [[Cookbook:Egg|eggs]]
*6 big [[Cookbook:Potato|potatoes]], grated
*1 cube [[Cookbook:Yeast|yeast]] (about 16 g or 0.6 oz dried yeast)
*500 [[Cookbook:g|g]] (2 cups) [[Cookbook:Raisin|raisins]]
*1 [[Cookbook:Tablespoon|tablespoon]] [[Cookbook:Sugar|sugar]]
*1 tablespoon [[Cookbook:Salt|salt]]
*[[Cookbook:Oil|oil]] for frying

==Yield==

10-15 pickerts - enough for four to five people.

==Procedure==

#Put the yeast in a very big pot. Mix it with hand warm milk and with the grated potatoes. Put all the flour into the pot and the eggs too. Finally add salt and sugar. Now stir it until it is a homogenous mass. It should be neither runny nor solid, but have a consistency like soft cookie dough; add milk or flour to adjust. Let sit for 30 minutes.
#Put palm-sized amounts into a frying pan and fry them on low heat with lots of oil. 
#Serve it with [[Cookbook:Liver|liver]] [[Cookbook:Sausage|sausage]] (Leberwurst), syrup, [[Cookbook:Plum|plum]] [[Cookbook:Jam|jam]] or a small chunk of butter. After a few Pickerts you will get desire for another special pleasure from Lippe: a glass of Wacholder schnapps.

==Variants==
To make a ''pfannenpickert'', add half a handful of raisins to the dough and fry a larger amount of dough (approx. 15 centimeters across). A single pfannenpickert is often enough for one person.

[[Category:Dumpling recipes|{{PAGENAME}}]]
[[Category:Potato recipes|{{PAGENAME}}]]
[[Category:German recipes|{{PAGENAME}}]]</text>
      <sha1>kwsck5vcurnuy3bsedzz47ywnndgm0x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Computer Programming/Highlevel</title>
    <ns>0</ns>
    <id>4152</id>
    <revision>
      <id>1361439</id>
      <parentid>680015</parentid>
      <timestamp>2008-12-18T01:42:24Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <minor />
      <comment>[[Computer programming/Highlevel]] moved to [[Computer Programming/Highlevel]]:&amp;#32;naming convention consistency</comment>
      <text xml:space="preserve">{{stub}}

Computer languages come in many flavors.  Generally there are high-level and low-level languages.  The term &quot;language level&quot; is an attempt to convey information about how close the programming language is to the machine language of the particular hardware.  Low-level languages are closer to the machine language, and high-level languages are further away from machine language, and close to natural languages (e.g., English).

An extreme example of a low-level language is the machine language which consists of ones and zeros.  It is extremely rare (difficult, and error prone), however, for people to write programs in machine language.  The closest programming language to machine language is assembly language, which normally has one instruction, or statement, for each machine language instruction.  An example of the kind of instruction that exists in assembly language is to copy the contents of a particular memory address into a machine register.

One example of a high-level computer language might be [[Programming:Visual Basic Classic|Visual Basic/VB6]], where the language is programmed by the user with specific words which can be found in the English dictionary.

Any language (computer or natural) still must have certain structures, though. English sentences are made of English words which are combined to respect the grammar (i.e., the structure) of English. We understand a sentence if the grammar is (more or less) correct. However, just because a high-level language uses some words which seem to be natural English does not mean that the computer can directly understand English sentences as we would speak them to a person.  A program must be written to respect the structure (grammar) of the computer language used, if the computer is to understand. Typically the grammar of a computer language is more rigid than the grammar of a natural language.

[[Category:Computer Programming|{{SUBPAGENAME}}]]</text>
      <sha1>8b09r5if0g58ffwu6v6pxjcj77p157m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:No-Bake Chocolate Chip Cookie Pie</title>
    <ns>102</ns>
    <id>4153</id>
    <revision>
      <id>2692245</id>
      <parentid>2468032</parentid>
      <timestamp>2014-08-16T23:24:30Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Removed from featured recipe cat.  Has no pic. Not on the current list</comment>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Dessert|Dessert]]

This recipe is quite easy, as it doesn't require cooking.

==Ingredients==
*1 (15 or 18-ounce) [about 450g] package [[Cookbook:Chocolate Chip Cookies|chocolate chip cookies]] (recipe uses 26 cookies)
*1 cup (240ml) [[Cookbook:Milk|milk]]
*1 (9-ounce) (270g) commercial [[Cookbook:Graham Cracker|graham cracker]] pie crust (&quot;extra serving&quot; or &quot;deep dish&quot; size)
*1 (8-ounce) (240g) container frozen whipped topping, thawed

==Procedure==
#Dip 8 cookies in milk, then place in a single layer in graham cracker crust.  Top with one-third of the whipped topping.
#Repeat above so that you have a total of three layers of cookies and whipped topping.
#Crumble 2 chocolate chip cookies, and sprinkle over pie.
#Cover and chill 8 hours before serving. 

Yields 8 servings.

[[Category:Dessert recipes|{{PAGENAME}}]]
[[Category:Chocolate recipes|{{PAGENAME}}]]
[[Category:Pie recipes|{{PAGENAME}}]]

[[Category:Recipes_with_metric_units|{{PAGENAME}}]]</text>
      <sha1>hsv45j7ta9rps4rlr49mvwlq5bwy0kt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook talk:No-Bake Chocolate Chip Cookie Pie</title>
    <ns>103</ns>
    <id>4154</id>
    <revision>
      <id>686739</id>
      <parentid>353933</parentid>
      <timestamp>2006-12-15T02:55:20Z</timestamp>
      <contributor>
        <username>Sugarpine</username>
        <id>38814</id>
      </contributor>
      <comment>comment</comment>
      <text xml:space="preserve">This recipe was featured on the cookbook page from April 7, 2004 - April 18, 2004. [[User:Gentgeen|Gentgeen]]

Please define terms. What are &quot;graham crackers&quot;? PML.

Can we get a picture of this? [[User:Sugarpine|Sugarpine]] 02:55, 15 December 2006 (UTC)</text>
      <sha1>fkq3h3cvcyi7qg1h4jkibvbsq9xjqof</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Breakfast Recipes</title>
    <ns>102</ns>
    <id>4159</id>
    <revision>
      <id>2692569</id>
      <parentid>2692522</parentid>
      <timestamp>2014-08-17T15:43:13Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>/* Waffles */ Corrected link to Waffles II</comment>
      <text xml:space="preserve">{{cooknav}}

[[Image:NCI cream cheese bagel.jpg|thumb|A bagel with cream cheese, a light breakfast meal in some parts of North America.]]

'''Breakfast''' is the first meal of the day, eaten in the morning to ''break'' the ''fasting'' period of sleep. Breakfast traditions vary greatly around the world, from the minimal [[Cookbook:Café au lait|Café au lait]] of France to the hearty spreads to the substantial [[Cookbook:English Breakfast|English Breakfast]]. A breakfast should provide enough energy to realize the daily activity until noon or lunch but it should also be light enough as to be easy to digest.

For a complete, automatically generated, list of recipes which have been categorized, on their individual pages, as being breakfast recipes, see [[:Category:Breakfast recipes|Breakfast recipes]].

Also, below, is a list of a few selected breakfast recipes contributors have manually added to this page:

==Breads==
*[[Cookbook:Cardamom_Bread|Cardamom Bread]]
*[[Cookbook:Chipped beef on toast|Chipped beef on Toast]]
*[[Cookbook:Dosa|Dosa]] &amp;ndash; eat with [[Cookbook:Sambar|sambar]] and [[Cookbook:Coconut Chutney|coconut chutney]], or with [[#Eggs|eggs]]
*[[Cookbook:French Toast|French Toast]]
*[[Cookbook:Orange French Toast|Orange French Toast]]
*[[Cookbook:Idli|Idli]] &amp;ndash; eat with [[Cookbook:Sambar|sambar]] and [[Cookbook:Coconut Chutney|coconut chutney]]
*[[Cookbook:Pumpkin bread|Pumpkin Bread]]
*[[Cookbook:Toast|Toast]]

===Muffins===
*[[Cookbook:Apple Streusel Muffins|Apple Streusel Muffins]]
*[[Cookbook:Banana Chip Muffins|Banana Chip Muffins]]
*[[Cookbook:Banana nut muffin|Banana Nut Muffins]]
*[[Cookbook: Blueberry muffin|Blueberry Muffins]]
*[[Cookbook:Bran Muffins|Bran Muffins]]
*[[Cookbook:Chunky Cran Apple Bran Muffins|Chunky Cran Apple Bran Muffins]]
*[[Cookbook:Corn Muffins|Corn Muffins]]
*[[Cookbook:Oatmeal Muffins|Oatmeal Muffins]]
*[[Cookbook:Orange Chocolate Chip Muffins|Orange Chocolate Chip Muffins]]
*[[Cookbook:Raisin Oatmeal Muffins|Raisin Oatmeal Muffins]]

===Pancakes===
*[[Cookbook:Æbleskiver|Æbleskiver]]
*[[Cookbook:Bliny|Bliny]] (Russian blini/bliny/blin)
*[[Cookbook:Chocolate Chip Pancakes|Chocolate Chip Pancakes]]
*[[Cookbook:Cottage Cheese Pancakes|Cottage Cheese Pancakes]] (much lighter than regular pancakes)
*[[Cookbook:Crêpe|Crêpe]]
*[[Cookbook:Pancake|Pancakes]] (basic pancakes)
**[[Cookbook:Pancakes (Vegan)|Vegan]]
**[[Cookbook:Whole Wheat Pancakes (Vegan)|Whole Wheat Vegan]]
*[[Cookbook:Blueberry Pancakes|Blueberry Pancakes]]
*[[Cookbook:Whole Wheat Pancakes|Whole Wheat Pancakes]]

===Waffles===
*[[Cookbook:Breakfast Waffles|Breakfast Waffles]]
*[[Cookbook:Breakfast Waffles (Gluten-Free)|Breakfast Waffles (Gluten-Free)]]
*[[Cookbook:Waffles II|Waffles II]]
*[[Cookbook:Whole Wheat Waffles|Whole Wheat Waffles]]

==Eggs==
*[[Cookbook:Cazuela Gallega|Cazuela Gallega]]
*[[Cookbook:Cottage Cheese Eggs|Cottage Cheese Eggs]]
*[[Cookbook:Breakfast Burrito|Breakfast Burrito]]
*[[Cookbook:Fried Eggs|Fried Eggs]]
*[[Cookbook:Hard Boiled Eggs|Hard Boiled Eggs]]
*[[Cookbook:Latino Scramble|Latino Scramble]]
*[[Cookbook:Not Quite Eggs Benedict|Not Quite Eggs Benedict]]
*[[Cookbook:Poached egg|Poached Eggs]]
*[[Cookbook:Scrambled Eggs|Scrambled Eggs]]
*[[Cookbook:Soft Boiled Eggs|Soft Boiled Eggs]]
*[[Cookbook:Southwestern Scramble|Southwestern Scramble]]

===Omelets===
*[[Cookbook:Basic Omelet|Basic Omelet]]
*[[Cookbook:Bacon Cheese Omelet|Bacon Cheese Omelet]]
*[[Cookbook:Potato Omelet|Potato Omelet]]
*[[Cookbook:French Omelette|French Omelette]]
*[[Cookbook:Denver Omelet|Denver Omelet]]
*[[Cookbook:Spanish Omelet|Spanish Omelet]]
*[[Cookbook:Greek Omelet|Greek Omelet]]
*[[Cookbook:Frittata Omelet|Frittata Omelet]]

==Hot Cereal==
*[[Cookbook:Hominy Grits|Hominy Grits]]
*[[Cookbook:Porridge|Porridge]] (oatmeal)
*[[Cookbook:Øllebrød|Øllebrød]]

==Miscellaneous breakfast recipes==
*[[Cookbook:Grand Union Bacon|Grand Union Bacon]]
*[[Cookbook:Vegetarian Gravy|Vegetarian &quot;Bacon&quot; Gravy over Biscuits]]
*[[Cookbook:Hash Browns|Hash Browns]]
*[[Cookbook:Slinger|Slinger]]
*[[Cookbook:English Breakfast|English Breakfast]]
*[[Cookbook:Chupaqueso|Chupaqueso]]
*[[Cookbook:Wakeup Sausage Casserole|Wakeup Sausage Casserole]] AKA &quot;Sausage Tossage&quot;


[[Category:Meals|{{PAGENAME}}]]
[[Category:Breakfast recipes|{{PAGENAME}}]]
[[Category:Cookbook pages with recipe lists]]


[[he:ספר מתכונים/ארוחת בוקר]]</text>
      <sha1>g8rds9gl0lewtwptgmvsmcjpji5u4sv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Not Quite Eggs Benedict</title>
    <ns>102</ns>
    <id>4160</id>
    <revision>
      <id>1740569</id>
      <parentid>650364</parentid>
      <timestamp>2010-03-21T00:36:41Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Breakfast|Breakfast]]

==Ingredients==
*4 slices [[Cookbook:Bacon|Bacon]]
*2 [[Cookbook:Egg|Eggs]]
*2 Tbsp. [[Cookbook:Milk|Milk]]
*1 Tbsp. chopped [[Cookbook:Parsley|Parsley]]
*[[Cookbook:Salt|Salt]]
*[[Cookbook:pepper|Black pepper]]
*1/4 cup [[Cookbook:Butter|Butter]], melted
*1 Tbsp. cold [[Cookbook:Water|Water]]
*2-3 tsp. [[Cookbook:Lemon|Lemon]] juice
*[[Cookbook:Cayenne Pepper|Cayenne pepper]]
*crusty [[Cookbook:Bread|bread]]

==Procedure==

===Eggs===

#Separate eggs. Mix whites with milk and parsley, then add salt and pepper. Beat with a fork until slightly bubbly. Set aside.
#Cook bacon on medium-high heat in a large, nonstick [[Cookbook:Skillet|skillet]] and set on paper towels or napkins to drain. Pour off all but 1-2 tablespoons fat. Turn heat down to medium-low and add egg whites.

===Hollandaise sauce===

#As egg whites cook, mix egg yolks with water in [[Cookbook:Double boiler|double boiler]] on medium to medium-high heat. Water should simmer, not boil. Stir constantly with a fork until yolks increase in size and thickness and turn a pale, opaque yellow. Remove from heat and slowly stir in melted butter. Then add lemon juice and salt and cayenne pepper to taste.
#Place cooked egg whites on a plate, top with bacon, then cover with Hollandaise sauce. Serve with warm crusty bread for dipping in the sauce.

Serves 1 for a full meal or 2 for a light breakfast.

Notes: 
The amount of butter in this recipe is less than in standard recipes for Hollandaise sauce. This is the smallest amount that still produces an acceptable sauce. If fat is not a concern, however, increase the amount to 1/3 or 1/2 cup.

Egg whites usually cook in the same amount of time as the sauce, but keep an eye on them and remove them to a separate plate if they finish cooking before the sauce is done.

[[Category:Breakfast recipes|Not Quite Eggs Benedict]]
[[Category:Egg recipes|Not Quite Eggs Benedict]]
[[Category:Bacon recipes|{{PAGENAME}}]]</text>
      <sha1>b1jpufek25oz1galvcemlfh840xiwtm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Sunglow Motel-Cafe Pickle Pie</title>
    <ns>102</ns>
    <id>4161</id>
    <revision>
      <id>2691154</id>
      <parentid>1874105</parentid>
      <timestamp>2014-08-14T00:25:55Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added baking cat.</comment>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Dessert|Desserts]]

The Sunglow Motel-Cafe in Bicknell, Utah serves the unique '''Pickle Pie''', developed by Cula Ekker.

This is their recipe, as it appeared in a ''Salt Lake Tribune'' article that is framed and hangs on the cafe's wall.

==Ingredients==
*5 [[Cookbook:Eggs|eggs]]
*2 cups [[Cookbook:Sugar|sugar]]
*1 tsp. [[Cookbook:Cinnamon|cinnamon]]
*1 tsp. [[Cookbook:Nutmeg|nutmeg]]
*1 tsp. lemon extract
*2 tbsp. cornstarch
*1 cup + 2 tbsp. light cream
*1/8 cup [[Cookbook:Margarine|margarine]], melted
*12 oz. sweet pickles, drained and ground
*2 unbaked 9-inch pie shells

==Procedure==
#Beat eggs and sugar until lemon colored and thick; beat in cinnamon, nutmeg, lemon extract, cornstarch, cream and margarine. 
#Stir ground sweet pickles into mixture.
#Pour pickle mixture into unbaked pie shell. 
#Bake at 350 degrees for one hour to one hour and 15 minutes, until a knife inserted in center comes out clean.

Makes two pies.

==Notes==
''Note: Although the recipe says to bake for one hour to one hour and 15 minutes, I'd suggest checking it earlier (perhaps at 45 minutes) just to be safe, because when I tested it at one hour the pies I made were already clearly past done.'' -- [[w:User:RTC|RTC]] 15:22 Nov 14, 2002 (UTC)

''Note: I found by accident that increasing the pickles from 12 oz. to about 17 oz. introduces a distinct &quot;fruity&quot; flavor that the original recipe does not have. Both versions are very good, in my opinion!'' -- [[w:User:RTC|RTC]] 19:04 Nov 17, 2002 (UTC)

[[Category:Dessert recipes]]
[[Category:Pickle recipes]]
[[Category:Pie recipes]]
[[Category:Baking recipes]]</text>
      <sha1>bqqojzldbvc8mbzwgqac0ze0a13clu7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:American Potato Salad</title>
    <ns>102</ns>
    <id>4162</id>
    <revision>
      <id>2679631</id>
      <parentid>1494997</parentid>
      <timestamp>2014-07-08T14:32:35Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>/* Notes, tips, and variations */ Changed 'Side Dish' to 'Side dish' cat per the renaming of that cat.</comment>
      <text xml:space="preserve">{{recipesummary
|Category=Salad recipes
|Time=30 minutes
|Rating=3
}}
{{recipe}} | [[Cookbook:Side dishes|Side dishes]]

'''Potato Salad''' is able to trace its origins to Germany before the turn of the 17th century, where it first became popular to use vinegar and spices on the potato as side to a meal.  The salad has a bite to it and is served warm as often as not.

== Ingredients ==

* 3 pounds small white [[cookbook:potato|potatoes]] (use waxy or red potatoes)
* [[cookbook:Salt|Salt]] and ground [[cookbook:Pepper|pepper]]
* 5 large [[cookbook:Egg|hard boiled egg]]s, chopped
* 1 medium [[cookbook:Onion|red onion]], chopped finely
* 2 Tbsp chopped [[cookbook:Basil|sweet basil]] leaves
* 1 cup [[cookbook:corn|corn]]
* ½ cup freshly squeezed [[cookbook:Lemon Juice|lemon juice]] (2-3 lemons)
* ½ cup extra virgin [[cookbook:Olive Oil|olive oil]]
* 2 Tbsp [[cookbook:pasta seasoning|pasta seasoning]]



Southern Ontario Style:

* 2 pounds small white [[cookbook:potato|potatoes]] (use waxy or red potatoes)
* [[cookbook:Salt|Salt]] and ground [[cookbook:Pepper|pepper]]
* 2 large [[cookbook:Egg|hard boiled egg]]s, chopped
* 4 medium [[cookbook:Onion|red onion]], chopped finely
* 2 Tbsp chopped [[cookbook:Basil|sweet basil]] leaves
* 4 cup [[cookbook:corn|corn]]
* 1 cup freshly squeezed [[cookbook:Lemon Juice|lemon juice]] (2-3 lemons)
* 2 cup extra virgin [[cookbook:Olive Oil|olive oil]]
* 1 Tbsp [[cookbook:pasta seasoning|pasta seasoning]]
* 1 Tbsp of standard mustard
* 3 Tbsp of HP Bold steak sauce

== Procedure ==

# Place potatoes and 2 tablespoons of salt in a large pot of water. Bring the water to a [[Cookbook:Boiling|boil]], cook for 15-20 minutes, until the potatoes are tender when pierced with a knife. Drain the potatoes in a [[cookbook:colander|colander]].
# Meanwhile, boil the eggs in water for about 10 minutes until hard-boiled. Drain water and let cold water run over the eggs before peeling the shell. Once shells are peeled, dice the eggs and place in a large bowl.
# [[cookbook:Sautéing|Sauté]] some diced onions until light golden brown and add to the bowl with eggs. 
# When the potatoes are cool enough to handle, cut them in quarters, or smaller, depending on their size. Place the potatoes in the bowl with the eggs. Add the corn along with some salt, pepper and pasta seasoning to the potato and egg mixture. Set aside.
# In a small bowl add the lemon juice while [[cookbook:Whisk|whisking]] in olive oil slowly. Add to the potatoes, mix all ingredients. Chill for 30 minutes before eating.



Southern Ontario Style

# Place potatoes mixed with mustard and HP steak sauce along with 2 tablespoons of salt in a large pot of water. Bring the water to a [[Cookbook:Boiling|boil]], cook for 45-55 minutes, until the potatoes are tender when pierced with a knife. Drain the potatoes in a [[cookbook:colander|colander]].
# Meanwhile, boil the eggs in water for about 30 minutes until hard-boiled. Drain water and let cold water run over the eggs before peeling the shell. Once shells are peeled, dice the eggs and place in a large bowl.
# [[cookbook:Sautéing|Sauté]] some diced onions until light golden brown and add to the bowl with eggs. 
# When the potatoes are cool enough to handle, cut them in quarters, or smaller, depending on their size. Place the potatoes in the bowl with the eggs. Add the corn along with some salt, pepper and pasta seasoning to the potato and egg mixture. Set aside.
# In a small bowl add the lemon juice while [[cookbook:Whisk|whisking]] in olive oil slowly. Add to the potatoes, mix all ingredients. Chill for 3 hours, cover with extra HP sauce, enjoy.

== Notes, tips, and variations ==
*[[Cookbook:Grammy's Potato Salad|Grammy's Potato Salad]]
*[[Cookbook:Potato Salad|Potato Salad]]

[[Category:Potato recipes|{{PAGENAME}}]]
[[Category:Salad recipes|{{PAGENAME}}]]
[[Category:Egg recipes|{{PAGENAME}}]]
[[Category:Side dish recipes|{{PAGENAME}}]]
[[Category:American recipes|{{PAGENAME}}]]</text>
      <sha1>621eomif0n58z7nqszswas4tuzdeqo3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook talk:American Potato Salad</title>
    <ns>103</ns>
    <id>4163</id>
    <revision>
      <id>353336</id>
      <parentid>249557</parentid>
      <timestamp>2006-02-03T03:21:58Z</timestamp>
      <contributor>
        <username>Uncle G's major work 'bot</username>
        <id>10904</id>
      </contributor>
      <minor />
      <comment>[[Talk:Cookbook:American Potato Salad]] moved to [[Cookbook talk:American Potato Salad]]: COOKBOT: Renaming talk page to Cookbook talk namespace</comment>
      <text xml:space="preserve">Page history from [[w:Potato salad]].

Legend: (cur) = difference with current version, (last) = difference with preceding version, M = minor edit 

*	(cur) (last) . . 02:40, 29 Jan 2004 . . Gentgeen (transwikied recipe to wikibooks)
*	(cur) (last) . . 19:53, 5 Aug 2003 . . SpeakerFTD
*	(cur) (last) . . 22:41, 21 Mar 2003 . . Karen Johnson
*	(cur) (last) . . 22:30, 21 Mar 2003 . . 203.166.96.234

----</text>
      <sha1>52bxyo2bvff7swom1f9ps1htqm1jm6m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
</mediawiki>