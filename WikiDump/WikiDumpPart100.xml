<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.9/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.9/ http://www.mediawiki.org/xml/export-0.9.xsd" version="0.9" xml:lang="en">
  <page>
    <title>ETD Guide:Technical Issues</title>
    <ns>0</ns>
    <id>199402</id>
    <redirect title="ETD Guide/Technical Issues" />
    <revision>
      <id>1537537</id>
      <timestamp>2009-06-18T04:26:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Technical Issues]] to [[ETD Guide/Technical Issues]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Technical Issues]]</text>
      <sha1>tiqhcmljsmp6zc431oed8kfrxb5grpt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Axweather34</title>
    <ns>3</ns>
    <id>199403</id>
    <revision>
      <id>1537541</id>
      <timestamp>2009-06-18T04:33:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Notification regarding [[:Tornadoes]]. using [[User:Mike.lifeguard/Twinkle Speedy documentation|TW]]</comment>
      <text xml:space="preserve">

==[[Tornadoes]]==
{{mbox|type=notice|msg=
[[Tornadoes|This page]] appears to have been created in error (due to a test, or some kind of [[Help:Editing|misplaced edit]]). It might be a [[Help:Stub|stub]], if so, please use [[{{TALKPAGENAME:Tornadoes}}|the discussion page]] as to explain what this page is about. If it evolves into a [[WB:WIW|legitimate Wikibooks module]], you may remove the tag. If not fixed, explained, or improved, it will automatically be considered a candidate for [[Wikibooks:Deletion policy#Speedy deletions|speedy deletion]] in 7 days. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 04:33, 18 June 2009 (UTC)
}}</text>
      <sha1>s59pzgf3cbb45cgagu06q0w8wnb4mbu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Becoming a researcher in the electronic age</title>
    <ns>0</ns>
    <id>199404</id>
    <redirect title="ETD Guide/Students/Becoming a researcher in the electronic age" />
    <revision>
      <id>1537543</id>
      <timestamp>2009-06-18T04:39:06Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Becoming a researcher in the electronic age]] to [[ETD Guide/Students/Becoming a researcher in the electronic age]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Becoming a researcher in the electronic age]]</text>
      <sha1>2hc654sjsjp6sv7j9nbk3gjiz4e7ir5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - typical workflow, local policies and procedures</title>
    <ns>0</ns>
    <id>199405</id>
    <redirect title="ETD Guide/Students/Typical workflow, local policies and procedures" />
    <revision>
      <id>1537547</id>
      <timestamp>2009-06-18T04:40:17Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - typical workflow, local policies and procedures]] to [[ETD Guide/Students/Typical workflow, local policies and procedures]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Typical workflow, local policies and procedures]]</text>
      <sha1>ksndregoielhd13eo53fm5x8s8hlggu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - local support</title>
    <ns>0</ns>
    <id>199406</id>
    <redirect title="ETD Guide/Students/Local support" />
    <revision>
      <id>1537551</id>
      <timestamp>2009-06-18T04:41:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - local support]] to [[ETD Guide/Students/Local support]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Local support]]</text>
      <sha1>4xpcnv6pz3iun19jtjd2uzeqz7m6tfw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - How to submit your ETD?</title>
    <ns>0</ns>
    <id>199407</id>
    <redirect title="ETD Guide/Students/How to submit your ETD?" />
    <revision>
      <id>1537554</id>
      <timestamp>2009-06-18T04:42:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - How to submit your ETD?]] to [[ETD Guide/Students/How to submit your ETD?]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/How to submit your ETD?]]</text>
      <sha1>syw19e5xnb7rnn60qdcw9jzild57nor</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Naming standards: file names; unique Ids</title>
    <ns>0</ns>
    <id>199408</id>
    <redirect title="ETD Guide/Students/Naming standards: file names; unique Ids" />
    <revision>
      <id>1537557</id>
      <timestamp>2009-06-18T04:44:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Naming standards: file names; unique Ids]] to [[ETD Guide/Students/Naming standards: file names; unique Ids]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Naming standards: file names; unique Ids]]</text>
      <sha1>aswoitvldlg1iuhrzd24eai29tvkqe6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Summer Flowers of Northern New England/Yellow and Orange Flowers</title>
    <ns>111</ns>
    <id>199409</id>
    <revision>
      <id>1546135</id>
      <parentid>1537559</parentid>
      <timestamp>2009-06-24T00:56:32Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <text xml:space="preserve">To create new pages, paste this text in and fill it in.
&lt;pre&gt;
{{WJ Flower
|common name =
|binomial =
|image1 =
|caption1 =
|image2=
|caption2=
|image3 =
|caption3=
|description =
|facts = 
}}

&lt;/pre&gt;</text>
      <sha1>is5eur0nmzzropeiw6r6vje81igmwzv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Protecting intellectual property / how to deal with plagiarism</title>
    <ns>0</ns>
    <id>199410</id>
    <redirect title="ETD Guide/Students/Protecting intellectual property and how to deal with plagiarism" />
    <revision>
      <id>1537561</id>
      <timestamp>2009-06-18T04:45:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Protecting intellectual property / how to deal with plagiarism]] to [[ETD Guide/Students/Protecting intellectual property and how to deal with plagiarism]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Protecting intellectual property and how to deal with plagiarism]]</text>
      <sha1>ftfl55ab9cqijtliz0fdcl0gep5130j</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Providing metadata – inside, outside documents</title>
    <ns>0</ns>
    <id>199411</id>
    <redirect title="ETD Guide/Students/Providing metadata – inside, outside documents" />
    <revision>
      <id>1537564</id>
      <timestamp>2009-06-18T04:47:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Providing metadata – inside, outside documents]] to [[ETD Guide/Students/Providing metadata – inside, outside documents]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Providing metadata – inside, outside documents]]</text>
      <sha1>l8iei52lx0d0orv1m22f7jlzvk6sj4t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Integrating multimedia elements</title>
    <ns>0</ns>
    <id>199412</id>
    <redirect title="ETD Guide/Students/Integrating multimedia elements" />
    <revision>
      <id>1537567</id>
      <timestamp>2009-06-18T04:48:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Integrating multimedia elements]] to [[ETD Guide/Students/Integrating multimedia elements]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Integrating multimedia elements]]</text>
      <sha1>qqyevm4h5hdklszvrjwp2fkn5kmshwe</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - checking and correcting</title>
    <ns>0</ns>
    <id>199413</id>
    <redirect title="ETD Guide/Students/Checking and correcting" />
    <revision>
      <id>1537570</id>
      <timestamp>2009-06-18T04:49:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - checking and correcting]] to [[ETD Guide/Students/Checking and correcting]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Checking and correcting]]</text>
      <sha1>fqgy9s3qixjitjwr361xgmj2re6mt2z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - in LaTeX</title>
    <ns>0</ns>
    <id>199414</id>
    <redirect title="ETD Guide/Students/In LaTeX" />
    <revision>
      <id>1537575</id>
      <timestamp>2009-06-18T04:51:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - in LaTeX]] to [[ETD Guide/Students/In LaTeX]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/In LaTeX]]</text>
      <sha1>9uykdrffuw2eouz870ifutb06yebs1c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - in WordPerfect</title>
    <ns>0</ns>
    <id>199415</id>
    <redirect title="ETD Guide/Students/In WordPerfect" />
    <revision>
      <id>1537578</id>
      <timestamp>2009-06-18T04:52:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - in WordPerfect]] to [[ETD Guide/Students/In WordPerfect]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/In WordPerfect]]</text>
      <sha1>swln3p5k8gcct6swk94k7e7e03yidhk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - in MS Word</title>
    <ns>0</ns>
    <id>199416</id>
    <redirect title="ETD Guide/Students/In MS Word" />
    <revision>
      <id>1537581</id>
      <timestamp>2009-06-18T04:53:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - in MS Word]] to [[ETD Guide/Students/In MS Word]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/In MS Word]]</text>
      <sha1>hh05xqj4kzjjcei8vtpkf4yxovqbhfp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Preparing for conversion to SGML/XML</title>
    <ns>0</ns>
    <id>199417</id>
    <redirect title="ETD Guide/Students/Preparing for conversion to SGML\XML" />
    <revision>
      <id>1537588</id>
      <timestamp>2009-06-18T04:57:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Preparing for conversion to SGML/XML]] to [[ETD Guide/Students/Preparing for conversion to SGML\XML]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Preparing for conversion to SGML\XML]]</text>
      <sha1>k2372jjcdubtcu5m396wvsornb2usof</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Taraxacum officinale</title>
    <ns>110</ns>
    <id>199418</id>
    <revision>
      <id>1876073</id>
      <parentid>1542231</parentid>
      <timestamp>2010-07-07T18:34:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Taraxacum officinale&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Common Dandelion
|binomial =Taraxacum officinale
|image1 =TARAXACUMOFFICINALE4.jpg
|caption1 =Flower
|image2=TARAXACUMOFFICINALE2.jpg
|caption2=Seed head
|image3 =Starr 080417-4096 Taraxacum officinale.jpg
|caption3=Flower and leaves
|description =The Common Dandelion is one of the most easily recognizable flowers in the United States.  But be careful!  There are a lot of other flowers that ''look'' like the Common Dandelion, but ''aren't''.  To be sure, check the stem and make sure it's both round and hollow.  There should be only one flower on each stem.  When you break the stem, a milky sap should ooze out.  Then check the leaves.  They should not be hairy, but they should have jagged edges shaped like a lion's teeth. In fact, that's what the word ''dandelion'' means - tooth of the lion.  

It is fun to pick a ripe seed head and blow all the seeds off the stem.  You can also tie the stems of the flowers together to form a chain.  
|facts = You can eat Dandelions!  Many people put the young leaves in their salads (old leaves are bitter), and some people even dry the roots and use them as a coffee substitute.  Look, Ma! No caffeine!
}}</text>
      <sha1>hdgj1sxp59rugnznmjxoy9kueqhe1zm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - From LaTeX</title>
    <ns>0</ns>
    <id>199419</id>
    <redirect title="ETD Guide/Students/From LaTeX" />
    <revision>
      <id>1537593</id>
      <timestamp>2009-06-18T04:59:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - From LaTeX]] to [[ETD Guide/Students/From LaTeX]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/From LaTeX]]</text>
      <sha1>m4uib01vv9hvsgql44vdwzcdxnkc498</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Preparing a PDF document</title>
    <ns>0</ns>
    <id>199420</id>
    <redirect title="ETD Guide/Students/Preparing a PDF document" />
    <revision>
      <id>1537597</id>
      <timestamp>2009-06-18T05:00:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Preparing a PDF document]] to [[ETD Guide/Students/Preparing a PDF document]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Preparing a PDF document]]</text>
      <sha1>b2a8rxjzkltn4dlwwpq7y6j885ptw9t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Writing directly in SGML/XML</title>
    <ns>0</ns>
    <id>199421</id>
    <redirect title="ETD Guide/Students/Writing directly in SGML\XML" />
    <revision>
      <id>1537600</id>
      <timestamp>2009-06-18T05:01:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Writing directly in SGML/XML]] to [[ETD Guide/Students/Writing directly in SGML\XML]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Writing directly in SGML\XML]]</text>
      <sha1>inpqniice1iqc3199dgz9snneyw6ys3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - FrameMaker</title>
    <ns>0</ns>
    <id>199422</id>
    <redirect title="ETD Guide/Students/FrameMaker" />
    <revision>
      <id>1537603</id>
      <timestamp>2009-06-18T05:02:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - FrameMaker]] to [[ETD Guide/Students/FrameMaker]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/FrameMaker]]</text>
      <sha1>otjqfpp2oqag4eqndpzxskrj0q4puak</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - LaTeX</title>
    <ns>0</ns>
    <id>199423</id>
    <redirect title="ETD Guide/Students/LaTeX" />
    <revision>
      <id>1537606</id>
      <timestamp>2009-06-18T05:03:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - LaTeX]] to [[ETD Guide/Students/LaTeX]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/LaTeX]]</text>
      <sha1>c44ci0la02s94j9xcm7rx2utwbzuqdn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Corel WordPerfect</title>
    <ns>0</ns>
    <id>199424</id>
    <redirect title="ETD Guide/Students/Corel WordPerfect" />
    <revision>
      <id>1537611</id>
      <timestamp>2009-06-18T05:06:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Corel WordPerfect]] to [[ETD Guide/Students/Corel WordPerfect]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Corel WordPerfect]]</text>
      <sha1>9z9qe1gjfhowi1n6iwxbpa26fuxt809</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Using Plug-ins: Bibliography Plug-in</title>
    <ns>0</ns>
    <id>199425</id>
    <redirect title="ETD Guide/Students/Using Plug-ins: Bibliography Plug-in" />
    <revision>
      <id>1537615</id>
      <timestamp>2009-06-18T05:07:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Using Plug-ins: Bibliography Plug-in]] to [[ETD Guide/Students/Using Plug-ins: Bibliography Plug-in]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Using Plug-ins: Bibliography Plug-in]]</text>
      <sha1>oco5olvgcico0n0f1uoejhpn67b7i8c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Using Style Sheets</title>
    <ns>0</ns>
    <id>199426</id>
    <redirect title="ETD Guide/Students/Using Style Sheets" />
    <revision>
      <id>1537619</id>
      <timestamp>2009-06-18T05:08:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Using Style Sheets]] to [[ETD Guide/Students/Using Style Sheets]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Using Style Sheets]]</text>
      <sha1>bqq5ub4bfhsfyuafm341hggbj8iowau</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Microsoft Word and Office 2007</title>
    <ns>0</ns>
    <id>199427</id>
    <redirect title="ETD Guide/Students/Microsoft Word and Office 2007" />
    <revision>
      <id>1537625</id>
      <timestamp>2009-06-18T05:10:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Microsoft Word and Office 2007]] to [[ETD Guide/Students/Microsoft Word and Office 2007]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Microsoft Word and Office 2007]]</text>
      <sha1>cimq9bcbuwv3ehbcem0q4mrwposeucy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Writing in word processing systems</title>
    <ns>0</ns>
    <id>199428</id>
    <redirect title="ETD Guide/Students/Writing in word processing systems" />
    <revision>
      <id>1537628</id>
      <timestamp>2009-06-18T05:11:06Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Writing in word processing systems]] to [[ETD Guide/Students/Writing in word processing systems]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Writing in word processing systems]]</text>
      <sha1>6058izwttacuhdpdtft7oe4xldjimnq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Overview: writing with word processors and structured editors</title>
    <ns>0</ns>
    <id>199429</id>
    <redirect title="ETD Guide/Students/Overview: writing with word processors and structured editors" />
    <revision>
      <id>1537632</id>
      <timestamp>2009-06-18T05:11:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Overview: writing with word processors and structured editors]] to [[ETD Guide/Students/Overview: writing with word processors and structured editors]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Overview: writing with word processors and structured editors]]</text>
      <sha1>aby1slln50unyxy3hsog4doa5vioppf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - How to prepare an ETD? (approaches)</title>
    <ns>0</ns>
    <id>199430</id>
    <redirect title="ETD Guide/Students/How to prepare an ETD? (approaches)" />
    <revision>
      <id>1537635</id>
      <timestamp>2009-06-18T05:12:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - How to prepare an ETD? (approaches)]] to [[ETD Guide/Students/How to prepare an ETD? (approaches)]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/How to prepare an ETD? (approaches)]]</text>
      <sha1>b8z9a0jha69fb500srk7z4ssasu7250</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Learning from other ETDs</title>
    <ns>0</ns>
    <id>199431</id>
    <redirect title="ETD Guide/Students/Learning from other ETDs" />
    <revision>
      <id>1537640</id>
      <timestamp>2009-06-18T05:14:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Learning from other ETDs]] to [[ETD Guide/Students/Learning from other ETDs]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Learning from other ETDs]]</text>
      <sha1>3jetba1wl646fb4wubfpp682kq228xr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - Importance of satisfying local requirements</title>
    <ns>0</ns>
    <id>199432</id>
    <redirect title="ETD Guide/Students/Importance of satisfying local requirements" />
    <revision>
      <id>1537643</id>
      <timestamp>2009-06-18T05:15:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - Importance of satisfying local requirements]] to [[ETD Guide/Students/Importance of satisfying local requirements]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/Importance of satisfying local requirements]]</text>
      <sha1>58f7mk8ibme60abv8wrxn1a8x8fd112</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students - How to learn about ETDs? (workshops, online resources, helpers)</title>
    <ns>0</ns>
    <id>199433</id>
    <redirect title="ETD Guide/Students/How to learn about ETDs? (workshops, online resources, helpers)" />
    <revision>
      <id>1537646</id>
      <timestamp>2009-06-18T05:16:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students - How to learn about ETDs? (workshops, online resources, helpers)]] to [[ETD Guide/Students/How to learn about ETDs? (workshops, online resources, helpers)]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students/How to learn about ETDs? (workshops, online resources, helpers)]]</text>
      <sha1>lprbg3nopk23jjkyryhc8aihjlcrgdb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Students</title>
    <ns>0</ns>
    <id>199434</id>
    <redirect title="ETD Guide/Students" />
    <revision>
      <id>1537649</id>
      <timestamp>2009-06-18T05:17:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Students]] to [[ETD Guide/Students]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Students]]</text>
      <sha1>8xyznfiajyw8m62jni9fwxgaee203v6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Hieracium pratense</title>
    <ns>110</ns>
    <id>199435</id>
    <revision>
      <id>1876113</id>
      <parentid>1542226</parentid>
      <timestamp>2010-07-07T18:39:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Hieracium pratense&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Yellow Hawkweed
|binomial =Hieracium pratense
|image1 =Hieracium_pratense_4973.jpg
|caption1 =Opened and closed flower heads
|image2=Hieracium pratense.jpg
|caption2=
|image3 =Yellow Hawkweed.jpg
|caption3=
|description = Yellow Hawkweed is a tall weed (about three feet) whose flower looks a lot like a dandelion.  But unlike the dandelion, it will produce several flowers in a cluster at the top of the stem.  The leaves are hairy and stay near the ground grouped around the stem (which is also hairy).
|facts = How did Yellow Hawkweed get its name?  They ''yellow'' part is easy (look at the flower!).  The ''weed'' part is easy too.  But what about the ''hawk'' part?  Long ago people used Yellow Hawkweed to treat poor eyesight.  They thought that hawks ate this plant, and that was why they have such great vision.  Though there is a connection between our health and our diet, eating Yellow Hawkweed will not make you see better. 
}}</text>
      <sha1>s6apvq06ecofkjirrp6a1qox5u6u4hh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:VeroMaryBrrr</title>
    <ns>2</ns>
    <id>199436</id>
    <revision>
      <id>1537685</id>
      <timestamp>2009-06-18T11:39:49Z</timestamp>
      <contributor>
        <username>VeroMaryBrrr</username>
        <id>243563</id>
      </contributor>
      <comment>Starting out</comment>
      <text xml:space="preserve">Here goes.

My name is Veronica.  I am a homeschooling mother of four.

My homepage is [http://www.brandt.id.au Brandt Family].

Interests include Catholicism, history, web development, education, arts and crafts, open source software, breastfeeding and gardening.</text>
      <sha1>6dfszuq3184j0b9ae0qerkdjwk0zz3l</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Femalenerd</title>
    <ns>3</ns>
    <id>199437</id>
    <revision>
      <id>1537691</id>
      <timestamp>2009-06-18T12:26:12Z</timestamp>
      <contributor>
        <username>SB Johnny</username>
        <id>19159</id>
      </contributor>
      <comment>welcome</comment>
      <text xml:space="preserve">Welcome, Femalenerd!
{| style=&quot;background:white; border:1px solid #abd5f5;; padding:0px; border-spacing:0px; color: #000000;&quot;
 ! style=&quot;background:#d0e5f5; color: #000000;&quot; | [[Wikibooks:Welcome|Getting started]] with Wikibooks
 |-
 | style=&quot;padding:5px;&quot; |
* Wikibooks is a collection of open-source textbooks. Find out [[WB:WIW|what this means]].
* To sign your name (on discussion pages), use four tildes, like this: &amp;#126;&amp;#126;&amp;#126;&amp;#126; 
* Learn how to [[Using Wikibooks|use Wikibooks]] and learn more about the community.
* [[WB:CCO|Explore]], [[Wikibooks:Be bold|be bold]], and have fun!
 |}

Come introduce yourself in the [[Wikibooks:Reading room/General|general reading room]] or your project in the [[Wikibooks:Reading room/Projects|project reading room]].  If you have any questions, you can ask in the [[Wikibooks:Reading room/Assistance|assistance reading room]] or contact me personally. --[[User:SB_Johnny|&lt;font color=&quot;green&quot;&gt;'''SB_Johnny'''&lt;/font&gt;]]  &lt;sup&gt;[[User_talk:SB_Johnny|&lt;font color=&quot;green&quot;&gt;talk&lt;/font&gt;]]&lt;/sup&gt; 12:26, 18 June 2009 (UTC)</text>
      <sha1>8wimv5xm4u92yn1b4y3afvnrtd16l2d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:XRX/Dictionary Editor</title>
    <ns>1</ns>
    <id>199438</id>
    <revision>
      <id>1537696</id>
      <timestamp>2009-06-18T12:47:25Z</timestamp>
      <contributor>
        <username>VGermscheid</username>
        <id>197955</id>
      </contributor>
      <comment>Created page with 'In several examples, you state that ''xmldb:collection('/db/dictionary/data', 'mylogin', 'mypassword')'' logs you into the database - shouldn't this be ''xmldb:login('/db/diction...'</comment>
      <text xml:space="preserve">In several examples, you state that ''xmldb:collection('/db/dictionary/data', 'mylogin', 'mypassword')'' logs you into the database - shouldn't this be ''xmldb:login('/db/dictionary/data', 'mylogin', 'mypassword')''?</text>
      <sha1>24ye6rk34fm6jhs3hmg1u5ah5naezzt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Blender 3D Reference Guide/Windows Reference/File Browser</title>
    <ns>1</ns>
    <id>199440</id>
    <revision>
      <id>1616360</id>
      <parentid>1537707</parentid>
      <timestamp>2009-08-25T19:39:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Talk:Blender 3D: Reference Guide/Windows Reference/File Browser]] to [[Talk:Blender 3D Reference Guide/Windows Reference/File Browser]]: Naming convention.</comment>
      <text xml:space="preserve">Since the file interface is quite unixbased (or something) i wonder if the description &quot;easy selection of files&quot; is slightly sarcastic or a sales pitch? It is NOT easy to use. I could use an introduction to how it works, and what the pitfalls are.</text>
      <sha1>gjpxfjw5tcss1k6oy0mcsafmmpjicj9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Tangy Lemon Battered Fried Chicken</title>
    <ns>102</ns>
    <id>199441</id>
    <revision>
      <id>2691543</id>
      <parentid>1740062</parentid>
      <timestamp>2014-08-15T13:17:24Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added deep fried and main course cats.</comment>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Chicken|Chicken]]

Even more tangy than using buttermilk.

== Ingredients ==

* 2 each thighs, legs, and boneless breasts
* 1 tbsp smoked [[Cookbook:Paprika|paprika]]
* 1 tbsp [[Cookbook:Salt|salt]]
* 1 tbsp [[Cookbook:Pepper|black pepper]]
* 1 tsp granulated [[Cookbook:Garlic|garlic]]
* 1 tsp ground [[Cookbook:Ginger|ginger]]
* 1 tbsp [[Cookbook:Cayenne Pepper|cayenne pepper]]
* Freshly squeezed [[Cookbook:Lemon Juice|lemon juice]]
* [[Cookbook:Cornmeal|Cornmeal]] as needed for dredging
* 16 ounces vegetable [[Cookbook:Shortening|shortening]]

== Procedure ==
# Combine seasonings.
# Moisten chicken with lemon juice and coat with seasoning mixture.
# Dredge chicken in cornmeal and let rest 2-3 minutes only.
# Melt shortening in a large cast iron skillet; heat to 350°. WATCH CAREFULLY!
# Place legs and breasts around the edges, then place thighs in the center. (more on that later)
# Fry for 12 minutes, then turn and fry another 12 minutes.
# Drain on a cooling or oven rack. Please don't use paper towels, they will make your chicken greasy.
# Sprinkle with black pepper; serve.

== Notes ==

The reason for putting the chicken in different spots is because there is usually a hotspot in the center of the pan.

Also, the chicken will stay rocket-hot for a good 20 minutes, so do not put the chicken into an oven. Especially a GAS oven. It'll just make it soggy.

[[Category:Chicken recipes]]
[[Category:Lemon recipes]]
[[Category:Deep fried recipes]]
[[Category:Main course recipes]]</text>
      <sha1>jqo3xidxtpobuijb6kx01mie7c47mvf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:VeroMaryBrrr</title>
    <ns>3</ns>
    <id>199443</id>
    <revision>
      <id>1537715</id>
      <timestamp>2009-06-18T14:30:40Z</timestamp>
      <contributor>
        <username>Teh Rote</username>
        <id>240468</id>
      </contributor>
      <comment>welcomed</comment>
      <text xml:space="preserve">{{welcome}} 

I'm new here as well, but I'm pretty experienced at wiki in general. Let me know if you need any help. [[User:Teh Rote|Teh Rote]] ([[User talk:Teh Rote|talk]]) 14:30, 18 June 2009 (UTC)</text>
      <sha1>6nu63dg32khmvw0z1cyb5jtfr006xz2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Maple-Glazed BBQ Ribs</title>
    <ns>102</ns>
    <id>199444</id>
    <revision>
      <id>2687597</id>
      <parentid>1742701</parentid>
      <timestamp>2014-08-01T22:59:26Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats. Minor text adjustment.</comment>
      <text xml:space="preserve">{{recipe}}

Maple syrup and pork just sort of seem to be made for each other.

== Ingredients ==
* 1 slab pork spareribs
* 1 Tbsp salt
* 3 Tbsp dark brown sugar
* 2 Tbsp smoked paprika
* 2 Tbsp cayenne pepper
* 1 cup maple syrup
* 1 cup white wine
* 1/4 cup Worcestershire sauce
* 1/4 cup soy sauce
* 3 Tbsp cider vinegar
* Hickory wood chunks

== Procedure ==
#Combine seasonings and rub on pork ribs.
#Refrigerate for at least 1 hour.
#Place hickory chunks into a 350°F (175C) smoker ''or'' a charcoal grill set for indirect heat at 350°F.
#Combine liquid ingredients and bring to a boil over high heat until reduced by half.
#Place ribs in smoker/grill and cook, basting often with maple syrup mixture, for 3-4 hours
#Brush ribs with remaining mixture and place on a medium high grill until well browned.
#Rest 15 minutes; serve.

[[Category:Maple Syrup recipes]]
[[Category:Pork recipes]]
[[Category:Barbecue recipes]]
[[Category:Main course recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>9v2z8nrzrpfivpcfky69ebl8pq8it4c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Southwest Activity Map.jpg</title>
    <ns>6</ns>
    <id>199445</id>
    <revision>
      <id>1537718</id>
      <timestamp>2009-06-18T14:38:27Z</timestamp>
      <contributor>
        <username>Jerry vlntn</username>
        <id>202532</id>
      </contributor>
      <comment>Southwest Activity Map.jpg</comment>
      <text xml:space="preserve">== Summary ==
Southwest Activity Map.jpg
== Licensing: ==
{{PD-self}}</text>
      <sha1>algvl7lhc4hnevmpkqhxv096orwk9i4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Firecracker Rub</title>
    <ns>102</ns>
    <id>199447</id>
    <revision>
      <id>2682290</id>
      <parentid>1720682</parentid>
      <timestamp>2014-07-18T00:25:12Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Had no cats.  Added 2 appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

This rub kicks it up a notch from oversalted flavorless commercial rubs by packing quite some heat.

== Ingredients ==
* 1 cup smoked paprika
* 1/4 cup salt
* 1/4 cup cayenne pepper
* 1/4 cup black pepper
* 3/4 cup dark brown sugar
* 1/4 cup ground coriander
* 3 tbsp granulated garlic
* 1/2 cup dried rosemary

== Procedure ==
#Combine all ingredients in an airtight container.

[[Category:Spice Mix recipes]]
[[Category:Chile recipes]]</text>
      <sha1>9nmb6qw663cd0cicowq126cybqncup7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Firecracker Ribs</title>
    <ns>102</ns>
    <id>199448</id>
    <revision>
      <id>2684848</id>
      <parentid>2682289</parentid>
      <timestamp>2014-07-26T13:04:39Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Cat was renamed.  Adjusted name in the link. Minor text adjustment.</comment>
      <text xml:space="preserve">{{recipe}}

These ribs pack a kick from cayenne pepper.

== Ingredients ==
* 1 slab pork spareribs
* 1/4 cup [[Cookbook:Firecracker Rub|Firecracker Rub]]
* Several drops liquid smoke
* 1 cup white wine
* 2 tbsp cider vinegar
* 2 tbsp Worcestershire sauce
* 2 tbsp soy sauce
* 2 tbsp honey

== Procedure ==
#Season ribs with rub and refrigerate for at least 1 hour.
#Preheat oven to 225°F (110C).
#Combine liquid ingredients.
#Place ribs in a large foil pouch, pour in liquid mixture and seal pouch.
#Bake at 225°F (110C) for 5-6 hours.
#Remove ribs from pouches and set aside. Save liquid.
#Reduce liquid by half over high heat then lightly brush some reduction on top of ribs and place under a preheated broiler. Watch carefully and remove when nicely browned.
#Rest 15 minutes; serve.

[[Category:Pork recipes]]
[[Category:Wine recipes]]
[[Category:Braised recipes]]</text>
      <sha1>jty784g7s20x5nrcxmfnkjwtmlawuzl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Iwatchaltonbrown</title>
    <ns>3</ns>
    <id>199451</id>
    <revision>
      <id>1600249</id>
      <parentid>1600059</parentid>
      <timestamp>2009-08-04T13:07:47Z</timestamp>
      <contributor>
        <username>Iwatchaltonbrown</username>
        <id>243605</id>
      </contributor>
      <text xml:space="preserve">&lt;big&gt;Please don't add obscene pictures or vandalize this page (or any other page for that matter). Just see what happened to that Bfbggon guy. He/she got indefinitely blocked, and all of his other accounts.&lt;/big&gt;

== No problem ==

Just keep up the good work. - [[User:Taxman|Taxman]] ([[User talk:Taxman|talk]]) 15:01, 9 July 2009 (UTC)</text>
      <sha1>8wh43j73b36vg3afs029oxtik0xeakx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Transwiki:Black hole FAQ</title>
    <ns>108</ns>
    <id>199452</id>
    <revision>
      <id>1799758</id>
      <parentid>1537780</parentid>
      <timestamp>2010-05-20T02:15:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>{{tw-adopt}}{{dewikify}}</comment>
      <text xml:space="preserve">{{tw-adopt}}{{dewikify}}
== Black Hole FAQ ==
Here are some frequently asked questions on [[black hole]]s, the strangest objects in the sky.

----

1. Q. What is a black hole?

A. A black hole is a region is space with so much gravitational  attraction that nothing, not even light can escape.

----

2. Q. Will black holes suck up everything in the [[universe]]?

A. No, black holes have an area around them called an [[event horizon]]. Once you go pass this horizon you'll get sucked up, but as long as you are out of the event horizon you are safe.

----

3. Q. How come we can't see a black hole?

A. No light emits out of a black hole and if there is any light emitting out of the black hole it gets sucked right back into the black hole so it never reaches our eyes.

----

4. Q. What would happen if I got sucked into a black hole?

A. You will be pulled long and thin due to the gravitational tidal forces from the black hole. Then you'll be squeezed into an extremely small space called a [[singularity]].

----

5. Q. What is a black hole's effect on time?

A. General relativity (A theory proposed by [[Albert Einstein]], that states how matter creates gravitational force by distorting the very fabric of [[spacetime]] and how matter reacts to the shape of spacetime.) predicts that when an object approaches close enough to a black hole, it's infall rate will slow down as seen from far away. Also, any signal from the object show that clocks are running more slowly than of ours. This difference is called [[time dilation]].

----

6. Q. Can a black hole transport a Human being to one place to another?

A. Science fiction supports such objects called [[wormhole]]s that transport you to one spot in spacetime to another spot. Transporting beings through a black hole is pretty much impossible. First, you wouldn't survive the fall into a black hole, so there is no use in transporting people by this means. Second, cosmic censorship states that no object that enters a body with a singularity (such as a black hole) can escape.

Different types of black holes have differently shaped singularities: in a stationary black hole it is a point, in a rotating black hole it is a ring. If you passed through the center of the ring without touching the ring singularity itself, the mathematics predicts you will come out ''somewhere else'' and you '''''cannot return'''''. This is the basis of the wormhole idea. However the mathematics gives no indication of where (or when) that ''somewhere else'' is, and no way to control or select it yourself.

----

7. Q. Do black holes last forever?

A. No, black holes evaporate by a process called [[virtual particle]] production (see [[Hawking Radiation]]). In this process a particle pairs up with it's [[antiparticle]] at the event horizon. Normally particles and antiparticles destroy each other on contact, but in this case the black hole rips the particle and antiparticle apart before they can annihilate each other. One of these particles fly off into space and the other falls into the black hole. Since the one of the black holes particles have just been lost, the black hole has lost mass, and since this is happening all the time black holes are always losing mass.

----

8. Q. Will the sun turn into a Black Hole?

A. No, the sun is not massive enough. If it was 10 times as massive as it is now it would.

----

9. Q. If the sun did turn into a Black Hole what would it's effect on our [[Earth]] be?

A. Even though the sun won't turn into a black hole, if it did without gaining or losing any mass, the only effect on our Earth would be EXTREME freezing temperatures. The earth wouldn't get suck up because it has the same amount of mass and the same amount of gravitational attraction.

----

10. Q. How many types of black holes are there?

A. Three, a stationary black hole ([[Schwarzschild Black Hole]]), a rotating black hole ([[Kerr Black Hole]]), and an electrically charged black hole ([[Reissner-Nordström Black Hole]]). However in the real world only rotating black holes are likely to exist (nothing in the universe is truly stationary and any [[electrical charge]] on a black hole would tend to be neutralized rapidly).

----

11. Q. What is a Schwarzchild Radius?

A. It is the distance to the center (singulatity) of a stationary black hole to it's outer region (Event horizion).

----

12. Q. Do galaxies contain supermassive black holes in their centers?

A. Recent calculations predict that there are supermassive black holes in the center of most (if not all) galaxies, including the Milky Way.</text>
      <sha1>dg1nf4higz47wrc62bfquhub412mq6d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Transwiki:Graphing vertical transverse waves</title>
    <ns>108</ns>
    <id>199453</id>
    <revision>
      <id>1626764</id>
      <parentid>1537792</parentid>
      <timestamp>2009-09-08T15:51:13Z</timestamp>
      <contributor>
        <username>ThaddeusB</username>
        <id>206035</id>
      </contributor>
      <minor />
      <comment>minor cleanup</comment>
      <text xml:space="preserve">{{tw-adopt}}
{{unreferenced|date=December 2008}}

The equation used to graph a vertical transverse wave, which rests apon a line segment medium, is as follows:

y=mx+b; ∑_(t &gt;0)^∞▒〖t f(tsub1,tsub2,…)〗

An extension of ‘y = mx+b’, this is used to draw lines with crests and troughs, such as that of a transverse wave. T is the number of crests and troughs, and t-sub 1, t-sub 2, etc, are the lengths of each continual trough. For example, a line with a slope of 3 and a y-intercept of 2 that has 3 troughs and 4 crests, where the first crest–trough accompanies 1 unit, the second pair accompanies half a unit, and the third pair accompanies half a unit, and the last pair accompanies a full unit, is written like this:

Y = 3x + 2; 4 f[1, .5, .5, 1] 

*The values that of said lengths of the trough–crest pairs MUST be equal to the slope. The slope, while obviously cannot pertain to a curved line, is used to represent the slope of the line that all the crests and troughs pass through. Let's look at the line we drew based on our numbers:
 
(Ignoring the green line) We can see that there are indeed four sets of crests and troughs,  and that each line does encompass the length that we set, and that the added total length equals the slope of the Initial Line, or line that the crests and/or troughs branch off of. Which, in this case, is the red line. The purple line is the actually transverse wave. The green line is something I did in my spare time the night before this on this same MS Paint file.

Width of the Crest and/or Trough
If the width of the crest or trough is to pass 1 unit, it is to be written as a side note in our equation, for example, using the same line we drew, if say the first crest or trough (the first being the one in the lowest value quadrant ) was to extend to 2 units in width, it would be written like this:

y=mx+b; ∑_(t &gt;0)^∞▒〖t f(tsub1,tsub2,…)〗  [tsub1WID=2]
In the event that multiple crests or troughs have width that goes beyond 1, it shall be written as such:
y=mx+b; ∑_(t &gt;0)^∞▒〖t f(tsub1,tsub2,…) 〗  [tsub1WID=2]
							**         [tsub2WID = 1.5]
								[tsub3WID = 1.2]
								….
In the case that the width of a crest or trough Is BELOW that of 1 unit, then it shall be written on the same format, but where we put “2” before, we would instead put a value below one, such as **.6 or 5/6.
								 
*This is if the total line segment length is equal to one “Slope Unit,” which is the entire slope, or m/1. For example, a line segment with a slope of 2, that is only one slope unit in length, would go up ONLY from one unit to the right and two units  up, which should look like this:
 
With a length of say, three slope units, a line with the same slope would look like this:
 
In the event that the line segment is equal to more than 1 slope unit, then the added lengths of the crests and troughs must be equal to the slope times the number of slope units.
** These values are merely an example. The actual values depend on the wave.

==Final observation==
Here is an example of a more complex, and real transverse wave.

Y = 10x – 10; 4 f(1.5, .5, 2.5, 5.5)

The first and second crest–trough may look kind of weird, but the ones smaller in length usually do.

==References==</text>
      <sha1>041eteeq2ua659jqkbyrkgtv4cd2vx2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:General Astronomy/Black holes/Introduction</title>
    <ns>1</ns>
    <id>199454</id>
    <revision>
      <id>1537791</id>
      <timestamp>2009-06-18T15:16:28Z</timestamp>
      <contributor>
        <username>Mike.lifeguard</username>
        <id>55262</id>
      </contributor>
      <minor />
      <comment>Created page with '[[Transwiki:Black hole FAQ]] will probably be useful for developing this further. ~~~~'</comment>
      <text xml:space="preserve">[[Transwiki:Black hole FAQ]] will probably be useful for developing this further. &amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 15:16, 18 June 2009 (UTC)</text>
      <sha1>tfup6z4csp376pjf7lbzn0tbp3v5wyl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Conlang/Appendix/Word list</title>
    <ns>0</ns>
    <id>199455</id>
    <revision>
      <id>2064285</id>
      <parentid>1538105</parentid>
      <timestamp>2011-03-04T19:37:21Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: eg.  → e.g. using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">{{Navlist/Top}}

These lemmas, sets of inflected words (e.g. be, is, am, are...) make up 50% of English text.

&lt;div style=&quot;float: left&quot;&gt;
{| class=&quot;wikitable&quot;

|-
! style=&quot;width:3em;&quot; | Rank 
! style=&quot;width:4em;&quot; | Word
|-
| 1 || the
|-
| 2 || be
|-
| 3 || to
|-
| 4 || of
|-
| 5 || and
|-
| 6 || a
|-
| 7 || in
|-
| 8 || that
|-
| 9 || have
|-
| 10 || I
|}
&lt;/div&gt;

&lt;div style=&quot;float: left&quot;&gt;
{| class=&quot;wikitable&quot;
|-
! style=&quot;width:3em;&quot; | Rank 
! style=&quot;width:4em;&quot; | Word
|-
| 11 || it
|-
| 12 || for
|-
| 13 || not
|-
| 14 || on
|-
| 15 || with
|-
| 16 || he
|-
| 17 || as
|-
| 18 || you
|-
| 19 || do
|-
| 20 || at
|}
&lt;/div&gt;

&lt;div style=&quot;float: left&quot;&gt;
{| class=&quot;wikitable&quot;
|-
! style=&quot;width:3em;&quot; | Rank 
! style=&quot;width:4em;&quot; | Word
|-
| 21 || this
|-
| 22 || but
|-
| 23 || his
|-
| 24 || by
|-
| 25 || from
|-
| 26 || they
|-
| 27 || we
|-
| 28 || say
|-
| 29 || her
|-
| 30 || she
|}
&lt;/div&gt;

&lt;div style=&quot;float: left&quot;&gt;
{| class=&quot;wikitable&quot;
|-
! style=&quot;width:3em;&quot; | Rank 
! style=&quot;width:4em;&quot; | Word
|-
| 31 || or
|-
| 32 || an
|-
| 33 || will
|-
| 34 || my
|-
| 35 || one
|-
| 36 || all
|-
| 37 || would
|-
| 38 || there
|-
| 39 || their
|-
| 40 || what
|}
&lt;/div&gt;

&lt;div style=&quot;float: left&quot;&gt;
{| class=&quot;wikitable&quot;
|-
! style=&quot;width:3em;&quot; | Rank 
! style=&quot;width:4em;&quot; | Word
|-
| 41 || so
|-
| 42 || up
|-
| 43 || out
|-
| 44 || if
|-
| 45 || about
|-
| 46 || who
|-
| 47 || get
|-
| 48 || which
|-
| 49 || go
|-
| 50 || me
|}
&lt;/div&gt;

&lt;div style=&quot;float: left&quot;&gt;
{| class=&quot;wikitable&quot;
|-
! style=&quot;width:3em;&quot; | Rank 
! style=&quot;width:4em;&quot; | Word
|-
| 51 || when
|-
| 52 || make
|-
| 53 || can
|-
| 54 || like
|-
| 55 || time
|-
| 56 || no
|-
| 57 || just
|-
| 58 || him
|-
| 59 || know
|-
| 60 || take
|}
&lt;/div&gt;

&lt;div style=&quot;float: left&quot;&gt;
{| class=&quot;wikitable&quot;
|-
! style=&quot;width:3em;&quot; | Rank 
! style=&quot;width:4em;&quot; | Word
|-
| 61 || people
|-
| 62 || into
|-
| 63 || year
|-
| 64 || your
|-
| 65 || good
|-
| 66 || some
|-
| 67 || could
|-
| 68 || them
|-
| 69 || see
|-
| 70 || other
|}
&lt;/div&gt;

&lt;div style=&quot;float: left&quot;&gt;
{| class=&quot;wikitable&quot;
|-
! style=&quot;width:3em;&quot; | Rank 
! style=&quot;width:4em;&quot; | Word
|-
| 71 || than
|-
| 72 || then
|-
| 73 || now
|-
| 74 || look
|-
| 75 || only
|-
| 76 || come
|-
| 77 || its
|-
| 78 || over
|-
| 79 || think
|-
| 80 || also
|}
&lt;/div&gt;

&lt;div style=&quot;float: left&quot;&gt;
{| class=&quot;wikitable&quot;
|-
! style=&quot;width:3em;&quot; | Rank 
! style=&quot;width:4em;&quot; | Word
|-
| 81 || back
|-
| 82 || after
|-
| 83 || use
|-
| 84 || two
|-
| 85 || how
|-
| 86 || our
|-
| 87 || work
|-
| 88 || first
|-
| 89 || well
|-
| 90 || way
|}
&lt;/div&gt;

&lt;div style=&quot;float: left&quot;&gt;
{| class=&quot;wikitable&quot;
|-
! style=&quot;width:3em;&quot; | Rank 
! style=&quot;width:4em;&quot; | Word
|-
| 91 || even
|-
| 92 || new
|-
| 93 || want
|-
| 94 || because
|-
| 95 || any
|-
| 96 || these
|-
| 97 || give
|-
| 98 || day
|-
| 99 || most
|-
| 100 || us
|}
&lt;/div&gt;
&lt;br style=&quot;clear: both&quot;&gt;

{{Navlist/Bottom}}</text>
      <sha1>5szkbmc9kp4ep0y7vfw04rhgq1y4imb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - E-Commerce: fee based methods</title>
    <ns>0</ns>
    <id>199456</id>
    <redirect title="ETD Guide/Universities/E-Commerce: fee based methods" />
    <revision>
      <id>1537831</id>
      <timestamp>2009-06-18T16:17:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - E-Commerce: fee based methods]] to [[ETD Guide/Universities/E-Commerce: fee based methods]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/E-Commerce: fee based methods]]</text>
      <sha1>erh3cyi9ycz5uauwjs1k63jalncyz93</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Policy Initiatives: The Case of France</title>
    <ns>0</ns>
    <id>199457</id>
    <redirect title="ETD Guide/Universities/Policy Initiatives: The Case of France" />
    <revision>
      <id>1537834</id>
      <timestamp>2009-06-18T16:18:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Policy Initiatives: The Case of France]] to [[ETD Guide/Universities/Policy Initiatives: The Case of France]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Policy Initiatives: The Case of France]]</text>
      <sha1>68li31fflnw52f32hs7uhzx2fv0dhb3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Policy Initiatives: National, Regional, and Local; Discipline specific; Language specific</title>
    <ns>0</ns>
    <id>199458</id>
    <redirect title="ETD Guide/Universities/Policy Initiatives: National, Regional, and Local; Discipline specific; Language specific" />
    <revision>
      <id>1537842</id>
      <timestamp>2009-06-18T16:22:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Policy Initiatives: National, Regional, and Local; Discipline specific; Language specific]] to [[ETD Guide/Universities/Policy Initiatives: National, Regional, and Local; Discipline specific; Language specific]]: Subpage n</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Policy Initiatives: National, Regional, and Local; Discipline specific; Language specific]]</text>
      <sha1>9lt6govfjo95agm2umulkkkadwwl1rp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Resources List</title>
    <ns>0</ns>
    <id>199459</id>
    <redirect title="ETD Guide/Universities/Resources List" />
    <revision>
      <id>1537846</id>
      <timestamp>2009-06-18T16:24:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Resources List]] to [[ETD Guide/Universities/Resources List]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Resources List]]</text>
      <sha1>e0rqr0c2ersqi90ohf4fgkg84lmdrzt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Student Comments</title>
    <ns>0</ns>
    <id>199460</id>
    <redirect title="ETD Guide/Universities/Student Comments" />
    <revision>
      <id>1537853</id>
      <timestamp>2009-06-18T16:25:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Student Comments]] to [[ETD Guide/Universities/Student Comments]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Student Comments]]</text>
      <sha1>euyi1xs55yajms14hm4q9dbazvi8t3j</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Guidelines for Implementing an Assessment Program for ETDs</title>
    <ns>0</ns>
    <id>199461</id>
    <redirect title="ETD Guide/Universities/Guidelines for Implementing an Assessment Program for ETDs" />
    <revision>
      <id>1537862</id>
      <timestamp>2009-06-18T16:27:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Guidelines for Implementing an Assessment Program for ETDs]] to [[ETD Guide/Universities/Guidelines for Implementing an Assessment Program for ETDs]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Guidelines for Implementing an Assessment Program for ETDs]]</text>
      <sha1>ltabu94alowm5fhbqr4jalysel3erg5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Measurement in Related Contexts</title>
    <ns>0</ns>
    <id>199462</id>
    <redirect title="ETD Guide/Universities/Measurement in Related Contexts" />
    <revision>
      <id>1537866</id>
      <timestamp>2009-06-18T16:28:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Measurement in Related Contexts]] to [[ETD Guide/Universities/Measurement in Related Contexts]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Measurement in Related Contexts]]</text>
      <sha1>7cgqcnu3fihy5l8nz2167zk7pxy02sg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Statistics and Usage</title>
    <ns>0</ns>
    <id>199463</id>
    <redirect title="ETD Guide/Universities/Statistics and Usage" />
    <revision>
      <id>1537870</id>
      <timestamp>2009-06-18T16:28:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Statistics and Usage]] to [[ETD Guide/Universities/Statistics and Usage]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Statistics and Usage]]</text>
      <sha1>ge81sugx4hqcjul4zsugaymru78uv9p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Measuring Production and Use of ETDs: Useful Models</title>
    <ns>0</ns>
    <id>199464</id>
    <redirect title="ETD Guide/Universities/Measuring Production and Use of ETDs: Useful Models" />
    <revision>
      <id>1537877</id>
      <timestamp>2009-06-18T16:32:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Measuring Production and Use of ETDs: Useful Models]] to [[ETD Guide/Universities/Measuring Production and Use of ETDs: Useful Models]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Measuring Production and Use of ETDs: Useful Models]]</text>
      <sha1>gcphls5553cf9ov2sl2dnxmkgqtgo5n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - The Assessment and Measurement Process</title>
    <ns>0</ns>
    <id>199465</id>
    <redirect title="ETD Guide/Universities/The Assessment and Measurement Process" />
    <revision>
      <id>1537883</id>
      <timestamp>2009-06-18T16:34:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - The Assessment and Measurement Process]] to [[ETD Guide/Universities/The Assessment and Measurement Process]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/The Assessment and Measurement Process]]</text>
      <sha1>6z6pl4ipr21ju3zjlocwxnyeldk4bj1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Types of Assessment</title>
    <ns>0</ns>
    <id>199466</id>
    <redirect title="ETD Guide/Universities/Types of Assessment" />
    <revision>
      <id>1537886</id>
      <timestamp>2009-06-18T16:35:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Types of Assessment]] to [[ETD Guide/Universities/Types of Assessment]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Types of Assessment]]</text>
      <sha1>6l2irkdjqtxng2i22x2sm0wt9p9gl6z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Assessment and Measurement Introduction</title>
    <ns>0</ns>
    <id>199467</id>
    <redirect title="ETD Guide/Universities/Assessment and Measurement Introduction" />
    <revision>
      <id>1537890</id>
      <timestamp>2009-06-18T16:36:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Assessment and Measurement Introduction]] to [[ETD Guide/Universities/Assessment and Measurement Introduction]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Assessment and Measurement Introduction]]</text>
      <sha1>rw1fxzq09muxjwys731wamdgqtraptt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Plagiarism</title>
    <ns>0</ns>
    <id>199468</id>
    <redirect title="ETD Guide/Universities/Plagiarism" />
    <revision>
      <id>1537896</id>
      <timestamp>2009-06-18T16:37:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Plagiarism]] to [[ETD Guide/Universities/Plagiarism]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Plagiarism]]</text>
      <sha1>ci3u4tzo9hwzmv9r1c3n8h29klyn4rd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Budgets</title>
    <ns>0</ns>
    <id>199469</id>
    <redirect title="ETD Guide/Universities/Budgets" />
    <revision>
      <id>1537902</id>
      <timestamp>2009-06-18T16:38:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Budgets]] to [[ETD Guide/Universities/Budgets]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Budgets]]</text>
      <sha1>qsqt3bhzw93kzj5g0l15x65kgh9bn6v</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Processing charges</title>
    <ns>0</ns>
    <id>199470</id>
    <redirect title="ETD Guide/Universities/Processing charges" />
    <revision>
      <id>1537907</id>
      <timestamp>2009-06-18T16:39:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Processing charges]] to [[ETD Guide/Universities/Processing charges]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Processing charges]]</text>
      <sha1>srjxce3y0a5s7gw93c9k0s2q8xm9p9a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Costs</title>
    <ns>0</ns>
    <id>199471</id>
    <redirect title="ETD Guide/Universities/Costs" />
    <revision>
      <id>1537913</id>
      <timestamp>2009-06-18T16:40:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Costs]] to [[ETD Guide/Universities/Costs]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Costs]]</text>
      <sha1>e852sxhjg730ale0o5ox62ilis1tql9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Sources for funding</title>
    <ns>0</ns>
    <id>199472</id>
    <redirect title="ETD Guide/Universities/Sources for funding" />
    <revision>
      <id>1537918</id>
      <timestamp>2009-06-18T16:41:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Sources for funding]] to [[ETD Guide/Universities/Sources for funding]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Sources for funding]]</text>
      <sha1>0fv0cybkyojqj7uf3bvv38r11f9qk6e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:White wizard</title>
    <ns>3</ns>
    <id>199473</id>
    <revision>
      <id>1937456</id>
      <parentid>1537920</parentid>
      <timestamp>2010-09-21T15:05:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book nominated for deletion</comment>
      <text xml:space="preserve">== Welcome! ==
&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, White wizard!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, [[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 16:41, 18 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;

==[[:Kyo]]==
{{tmbox|type=delete|text=
'''[[:Kyo|Kyo]] has been nominated for deletion. Please [[Wikibooks:Requests for deletion#Kyo|share your thoughts]].'''&lt;br/&gt;You are being notified because you have contributed to this work. If you haven't read it already, please see our [[WB:DP|deletion policy]]. &amp;ndash;&amp;nbsp;[[User:Adrignola|Adrignola]]&amp;nbsp;&lt;small&gt;[[User talk:Adrignola|talk]]&lt;/small&gt; 15:05, 21 September 2010 (UTC)}}</text>
      <sha1>rdieg3qx5tarfzav5kst3insutmegpl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Human resources and expertise needed for an ETD program</title>
    <ns>0</ns>
    <id>199474</id>
    <redirect title="ETD Guide/Universities/Human resources and expertise needed for an ETD program" />
    <revision>
      <id>1537922</id>
      <timestamp>2009-06-18T16:41:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Human resources and expertise needed for an ETD program]] to [[ETD Guide/Universities/Human resources and expertise needed for an ETD program]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Human resources and expertise needed for an ETD program]]</text>
      <sha1>qv1gpw5hm7ai0gyjslr4g1l11ikpfej</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Publishers</title>
    <ns>0</ns>
    <id>199475</id>
    <redirect title="ETD Guide/Universities/Publishers" />
    <revision>
      <id>1537928</id>
      <timestamp>2009-06-18T16:42:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Publishers]] to [[ETD Guide/Universities/Publishers]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Publishers]]</text>
      <sha1>a2ffaquaocxa4ydlm6b96e4xuv9i28p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Intellectual Property Rights</title>
    <ns>0</ns>
    <id>199476</id>
    <redirect title="ETD Guide/Universities/Intellectual Property Rights" />
    <revision>
      <id>1537933</id>
      <timestamp>2009-06-18T16:43:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Intellectual Property Rights]] to [[ETD Guide/Universities/Intellectual Property Rights]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Intellectual Property Rights]]</text>
      <sha1>kbwaboeefyvj3guvw488102ixdywxlf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Role of the Library and Archives</title>
    <ns>0</ns>
    <id>199477</id>
    <redirect title="ETD Guide/Universities/Role of the Library and Archives" />
    <revision>
      <id>1537936</id>
      <timestamp>2009-06-18T16:44:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Role of the Library and Archives]] to [[ETD Guide/Universities/Role of the Library and Archives]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Role of the Library and Archives]]</text>
      <sha1>pk4bjyzkgxl4fllklyymtqokesaizto</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Role of the Graduate School / Graduate Program</title>
    <ns>0</ns>
    <id>199478</id>
    <redirect title="ETD Guide/Universities/Role of the Graduate School and Graduate Program" />
    <revision>
      <id>1537939</id>
      <timestamp>2009-06-18T16:45:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Role of the Graduate School / Graduate Program]] to [[ETD Guide/Universities/Role of the Graduate School and Graduate Program]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Role of the Graduate School and Graduate Program]]</text>
      <sha1>qngr70cg4tygtgiozbx3u1up7goq5bz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Scenarios illustrating approaches, schedules and workflow</title>
    <ns>0</ns>
    <id>199479</id>
    <redirect title="ETD Guide/Universities/Scenarios illustrating approaches, schedules and workflow" />
    <revision>
      <id>1537945</id>
      <timestamp>2009-06-18T16:48:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Scenarios illustrating approaches, schedules and workflow]] to [[ETD Guide/Universities/Scenarios illustrating approaches, schedules and workflow]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Scenarios illustrating approaches, schedules and workflow]]</text>
      <sha1>2x6jonvgfapr8huambyj2mv66tk3dxm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - How to develop an ETD program</title>
    <ns>0</ns>
    <id>199480</id>
    <redirect title="ETD Guide/Universities/How to develop an ETD program" />
    <revision>
      <id>1537948</id>
      <timestamp>2009-06-18T16:48:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - How to develop an ETD program]] to [[ETD Guide/Universities/How to develop an ETD program]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/How to develop an ETD program]]</text>
      <sha1>1pvq2ixas9yrqwowk8ab95w90q4385v</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Reasons and strategies for archiving electronic theses and dissertations</title>
    <ns>0</ns>
    <id>199481</id>
    <redirect title="ETD Guide/Universities/Reasons and strategies for archiving electronic theses and dissertations" />
    <revision>
      <id>1537955</id>
      <timestamp>2009-06-18T16:49:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Reasons and strategies for archiving electronic theses and dissertations]] to [[ETD Guide/Universities/Reasons and strategies for archiving electronic theses and dissertations]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Reasons and strategies for archiving electronic theses and dissertations]]</text>
      <sha1>7t82vqv5hkq89jrw06l7ssrbydo4gyr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities - Why ETDs?</title>
    <ns>0</ns>
    <id>199482</id>
    <redirect title="ETD Guide/Universities/Why ETDs?" />
    <revision>
      <id>1537958</id>
      <timestamp>2009-06-18T16:50:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities - Why ETDs?]] to [[ETD Guide/Universities/Why ETDs?]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities/Why ETDs?]]</text>
      <sha1>o6ul8owz5s426yd7spqx7isutbmsmls</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Universities</title>
    <ns>0</ns>
    <id>199483</id>
    <redirect title="ETD Guide/Universities" />
    <revision>
      <id>1537962</id>
      <timestamp>2009-06-18T16:51:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Universities]] to [[ETD Guide/Universities]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Universities]]</text>
      <sha1>n9j25n13ef9ievaxqsp1ijuv51gexw0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Ginger-Glazed Grilled Peaches</title>
    <ns>102</ns>
    <id>199485</id>
    <revision>
      <id>2683450</id>
      <parentid>1731225</parentid>
      <timestamp>2014-07-22T00:37:51Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

Run out of ideas for grilled desserts? This is your solution!

== Ingredients ==
* 2 lbs. peeled and halved large peaches
* 1 cup peach nectar
* 1/2 cup dark brown sugar
* 1/4 cup crystallized ginger, finely minced
* 1 tsp pure vanilla extract
* 1/4 tsp salt
* Melted butter as needed

== Procedure ==
#Combine liquid ingredients and bring to a boil over medium high heat until reduced by half.
#Brush peaches with melted butter and place on a medium grill until well marked, brushing with nectar mixture often.
#Pour remaining glaze into large bowl and toss with peaches; serve.

[[Category:Ginger recipes]]
[[Category:Peach recipes]]
[[Category:Grilled recipes]]
[[Category:Dessert recipes]]</text>
      <sha1>krc170rmfrn60togzo1g8yoi8821osm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Spicy Fried Wings</title>
    <ns>102</ns>
    <id>199486</id>
    <revision>
      <id>2690889</id>
      <parentid>1846224</parentid>
      <timestamp>2014-08-12T23:13:55Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added categories based on recipe contents.</comment>
      <text xml:space="preserve">{{recipe}}

No need for wing sauce. These are already plenty hot.

== Ingredients ==
* 12 whole chicken wings, tips removed and cut in half
* 1 1/2 Tbsp cayenne pepper
* 2 Tbsp lemon pepper
* 1/2 Tbsp black pepper
* 1/2 Tbsp salt
* 1 Tbsp smoked paprika
* 1 egg, beaten
* 2 Tbsp finely grated lemon zest
* Cornmeal as needed for dredging
* Oil for deep frying

== Procedure ==
#Combine seasoning except lemon zest and then sprinkle over chicken. Refrigerate for at least 1 hour.
#Combine egg and lemon zest in a pie plate and place cornmeal in another pie plate.
#Heat oil to 350°.
#Dip chicken into egg mixture and then dredge in cornmeal.
#Fry in batches for 11-12 minutes. Drain on a rack. Please don't use paper towels unless you want greasy chicken.
#Sprinkle with red pepper flake for hotter wings, but this is completely optional. Serve.


[[Category:Chicken wing recipes]]
[[Category:Appetizer recipes]]
[[Category:Main course recipes]]
[[Category:Deep fried recipes]]</text>
      <sha1>t1q32rv3dus1kyojkaee104vmllaq0e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Dul</title>
    <ns>10</ns>
    <id>199487</id>
    <revision>
      <id>1777061</id>
      <parentid>1777060</parentid>
      <timestamp>2010-04-26T23:40:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>fix cat</comment>
      <text xml:space="preserve">&lt;table cellspacing=0 border=0 style=&quot;width:100%;border:1px solid lightgrey;background:rgb(220,220,220);&quot;&gt;
&lt;td style=&quot;padding:2px 5px 2px 5px;&quot;&gt;&lt;ul&gt;&lt;li&gt;{{{content|{{{1}}} }}}&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
&lt;/table&gt;
&lt;noinclude&gt;
&lt;br clear=all&gt;
===Use===
Makes an unnumbered bullet item in a dark coloured box.   Intended to alternate with '''Lul''', all within '''Container'''.   For full page widths or when the amount of text is sufficient to form more than one line for every bullet point, use '''Lightul''' and '''Darkul''' without a container in a stack. 

===Example===
{{block|ta=left|1=&lt;poem&gt;&lt;nowiki&gt;
[[image:gerbera_pink.jpg|200px|thumb|right|Gerbera]]
{{Container|1=
{{dul|Short text}}
{{lul|{{text}}}}
{{dul|{{text}}}}
}}&lt;/poem&gt;&lt;/nowiki&gt;}}
gives;
[[image:gerbera_pink.jpg|200px|thumb|right|Gerbera]]
{{Container|1=
{{dul|Short text}}
{{lul|{{text}}}}
{{dul|{{text}}}}
}}

[[Category:Text formatting templates|{{PAGENAME}}]]
&lt;/noinclude&gt;</text>
      <sha1>eps1scy8xa7nsbayf44zjpt3ar8snat</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Lul</title>
    <ns>10</ns>
    <id>199488</id>
    <revision>
      <id>1777062</id>
      <parentid>1548199</parentid>
      <timestamp>2010-04-26T23:41:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>recat</comment>
      <text xml:space="preserve">&lt;table cellspacing=0 border=0 style=&quot;width:100%;border:1px solid lightgrey;background:rgb(240,240,240);&quot;&gt;
&lt;td style=&quot;padding:2px 5px 2px 5px;&quot;&gt;&lt;ul&gt;&lt;li&gt;{{{content|{{{1}}} }}}&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
&lt;/table&gt;
&lt;noinclude&gt;
&lt;br clear=all&gt;
===Use===
Makes an unnumbered bullet item in a light coloured box.   Intended to alternate with '''Dul''', all within '''Container'''.   For full page widths or when the amount of text is sufficient to form more than one line for every bullet point, use '''Lightul''' and '''Darkul''' without a container in a stack. 

===Example===
{{block|ta=left|1=&lt;poem&gt;&lt;nowiki&gt;
[[image:gerbera_pink.jpg|200px|thumb|right|Gerbera]]
{{Container|1=
{{dul|Short text}}
{{lul|{{text}}}}
{{dul|{{text}}}}
}}&lt;/poem&gt;&lt;/nowiki&gt;}}
gives;
[[image:gerbera_pink.jpg|200px|thumb|right|Gerbera]]
{{Container|1=
{{dul|Short text}}
{{lul|{{text}}}}
{{dul|{{text}}}}
}}

[[Category:Text formatting templates|{{PAGENAME}}]]
&lt;/noinclude&gt;</text>
      <sha1>96xxjuvz5zpb377aea835w5ci76d65w</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Container</title>
    <ns>10</ns>
    <id>199489</id>
    <revision>
      <id>1777057</id>
      <parentid>1553555</parentid>
      <timestamp>2010-04-26T23:39:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">&lt;table align={{{align|{{{left}}} }}} cellpadding=0 border=0 style=&quot;border-collapse:collapse;margin:5px none none none;background:transparent;width:{{{width|auto}}}&quot;&gt;
&lt;td&gt;{{{content|{{{1}}} }}}&lt;/td&gt;
&lt;/table&gt;
&lt;noinclude&gt;
&lt;br clear=all&gt;
===Use and Options===
Makes an invisible container to hold coloured bullet strips.   Needed to ensure that short bullet texts nonetheless still fill the space.   Used with '''Lul''' and '''Dul''' to make the bullet strips.   For full page widths or when the amount of text is sufficient to form more than one line for every bullet point, use '''Lightul''' and '''Darkul''' without a container, in a stack. 

===Example===
{{block|ta=left|1=&lt;poem&gt;&lt;nowiki&gt;
[[image:gerbera_pink.jpg|200px|thumb|right|Gerbera]]
{{Container|1=
{{dul|Short text}}
{{lul|{{text}}}}
{{dul|{{text}}}}
}}&lt;/poem&gt;&lt;/nowiki&gt;}}
gives;
[[image:gerbera_pink.jpg|200px|thumb|right|Gerbera]]
{{Container|1=
{{dul|Short text}}
{{lul|{{text}}}}
{{dul|{{text}}}}
}}

===Options===
;align:   left, center, or right for the container
;width:   default auto, container width
[[Category:Text formatting templates|{{PAGENAME}}]]
&lt;/noinclude&gt;</text>
      <sha1>mv25axw4r30br5agg52nku9moafjqw3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Honey BBQ Hot Wings</title>
    <ns>102</ns>
    <id>199490</id>
    <revision>
      <id>2689998</id>
      <parentid>2684769</parentid>
      <timestamp>2014-08-09T02:36:03Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>/* Procedure */ added chicken wing cat.</comment>
      <text xml:space="preserve">{{recipe}}

Like BBQ and like hot wings? This combines both that in one dish!

== Ingredients ==
* 24 chicken wingettes
* Salt and black pepper
* 1/2 cup tomato paste
* 2 Tbsp honey
* 2 Tbsp cider vinegar
* 2 Tbsp hot sauce
* Oil for deep frying

== Procedure ==
#Sprinkle wings with salt and black pepper. 
#Heat oil to 350°F (175C).
#Fry wings in batches 11-12 minutes. Drain on a cooling rack.
#Combine liquid ingredients except for oil.
#Bring to a boil over medium high heat until reduced to 10 Tbsp.
#Remove from heat and let rest for 5 minutes.
#Toss wings with sauce; serve warm.

[[Category:Chicken wing recipes]]
[[Category:Barbecue sauce recipes]]
[[Category:Deep fried recipes]]
[[Category:Appetizer recipes]]
[[Category:Main course recipes]]
[[Category:Side dish recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>oj0aj0pyreva840dkseedm1bzv94fg7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Blender 3D: Noob to Pro/3D Geometry</title>
    <ns>1</ns>
    <id>199493</id>
    <revision>
      <id>2364816</id>
      <parentid>2359676</parentid>
      <timestamp>2012-06-16T21:12:37Z</timestamp>
      <contributor>
        <username>JustinTime55</username>
        <id>666948</id>
      </contributor>
      <comment>/* Axes / Origin */ Add comment</comment>
      <text xml:space="preserve">== Complete Rewrite ==

I have completely rewritten the text on this page, and added more diagrams, to try to give a clearer explanation of how coordinates work. [[User:Ldo|Ldo]] ([[User talk:Ldo|talk]]) 06:47, 13 December 2010 (UTC)

== more info needed ==

The sentence where it says positive rotation
&quot;If you point your thumb into the direction of the positive rotation axis and close your fingers, they show the direction of the rotation, i.e. the angles get larger in that direction.&quot;
 
How can i understand what positive rotation is to point my thumb at it?.This sentence needs further explanation if a noob is to continue.
regards

:I would say that figure 3 makes it fairly clear. Presumably, in the tool a rotation operation can be implemented by defining a vector for the rotation axis and a separate value for the angle of the rotation. If the value of the angle is positive, that means a &quot;positive&quot; rotation following the fingers of the right hand. To produce a &quot;negative&quot; rotation about the same axis, you leave the axis vector the same and set the &quot;angle&quot; to a negative value. Regards, [[User:Recent Runes|Recent Runes]] ([[User talk:Recent Runes|talk]]) 19:24, 14 May 2010 (UTC)

:I agree with Recent Runes. Assuming you're rotating something about an axis parallel to one of the axes, figures 1 and 3 make this concept quite easy to understand.  Besides, this is not massively important (&quot;needs further explanation if a noob is to continue&quot;) -- if you're unsure about the direction of rotation, use Blender to try it, you can always Ctrl-Z to undo the rotation if it went the wrong way for you.  The text is only there to explain that, by the right-hand rule, positive angles are counterclockwise when viewed from &quot;above&quot; the axis of rotation.
[[User:Zoinks|Zoinks]] ([[User talk:Zoinks|talk]]) 16:12, 26 October 2010 (UTC)

I would also suggest erasing the [a b c I B F] labels in the image 2 (or not adding them in a replacement) as these aren't mentioned in the page text.
[[User:Zoinks|Zoinks]] ([[User talk:Zoinks|talk]]) 15:58, 26 October 2010 (UTC)


The way I see them, the graphical examples appear counter-clockwise. I am puzzled, but will figure it out. ETA: OK I think I understand. I am supposed to orient my view towards the direction of the thumb.
[[Special:Contributions/70.179.155.91|70.179.155.91]] ([[User talk:70.179.155.91|discuss]]) 16:40, 9 June 2011 (UTC)

== Axes / Origin ==

Maybe also define the origin as the point at which the X,Y,Z axes cross each other -- this (important) fact isn't mentioned; the axes seem to be defined in terms of their (relative) directions rather than as (imaginary) lines in 3D space.
This ''is'' covered in Blender_3D:_Noob_to_Pro/Coordinate_Spaces_in_Blender, but perhaps worth mentioning here too.
[[User:Zoinks|Zoinks]] ([[User talk:Zoinks|talk]]) 16:45, 26 October 2010 (UTC)

The description is also confusing as written. The clause &quot;they are conventionally labelled X (the vertical or height), Y (the horizontal or length) and Z (the breadth), in that order&quot; completely contradicts the rest of the paragraph's use of x, y, and z. Also, using the word &quot;breadth&quot; while W is used for width is also confusing. I have submitted a correction for this. [[User:JustinTime55|JustinTime55]] ([[User talk:JustinTime55|discuss]] • [[Special:Contributions/JustinTime55|contribs]]) 21:12, 16 June 2012 (UTC)

==the diagram is not show what whirt it should show==

in the diagrm it have just three images and also those just show the Y axe and the Z axe.</text>
      <sha1>io5k5dhda13k0161g9gddjm4roh7fh7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:86.20.191.105</title>
    <ns>3</ns>
    <id>199495</id>
    <revision>
      <id>1538079</id>
      <timestamp>2009-06-18T18:16:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/86.20.191.105|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 18:16, 18 June 2009 (UTC)}}</text>
      <sha1>8nldbi9kw6cqyx8tpz70po409iq8oxv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Biology, Answering the Big Questions of Life/Cover</title>
    <ns>1</ns>
    <id>199497</id>
    <revision>
      <id>1538118</id>
      <parentid>1538089</parentid>
      <timestamp>2009-06-18T19:35:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Don't copy the category code.</comment>
      <text xml:space="preserve">I found lots of words on this page. I am removing them to upload the cover image.
I will upload it as soon as I can figure out where cover images belong.
[[User:Rozzychan|Rozzychan]] ([[User talk:Rozzychan|talk]]) 18:36, 18 June 2009 (UTC)

I did not write the text listed in the cover section.
It looks like a failed attempt to merge two books.
I will put the text found on the cover page here in the discussion section and delete it on the main page.
The cover should be an image.
[[User:Rozzychan|Rozzychan]] ([[User talk:Rozzychan|talk]]) 18:40, 18 June 2009 (UTC)


====ODD TEXT FOUND ON COVER PAGE====
Cell Biology/Introduction/What is a cell
From Wikibooks, the open-content textbooks collection
&lt; Cell Biology | Introduction 
There are no reviewed revisions of this page, so it may not have been checked for quality.
Jump to: navigation, search
File:Biological cefundamental building blocks of life. Cells vary to form individual &quot;single-cell&quot; organisms (bacteria) to &quot;multi-cellular&quot; structures (tissue,ll.svg 
Schematic of typical animal cell, showing subcellular components. Organelles: (1) nucleolus (2) nucleus (3) ribosome (4) vesicle (5) rough endoplasmic reticulum (ER) (6) Golgi apparatus (7) Cytoskeleton (8) smooth ER (9) mitochondria (10) vacuole (11) cytoplasm (12) lysosome (13) centrioles
Cells are structural units that make up plants and animals; also, there are many single celled organisms. What all living cells have in common is that they are small 'sacks' composed mostly of water. The 'sacks' are made from a phospholipid bilayer membrane. This membrane is semi-permeable (allowing some things to pass in or out of the cell while blocking others). There exist other methods of transport across this membrane that we will get into later.
So what is in a cell? Cells are 90% fluid (called cytoplasm) which consists of free amino acids, proteins, carbohydrates, fats, and numerous other molecules. The cell environment (i.e., the contents of the cytoplasm and the nucleus, as well as the way the DNA is packed) affect gene expression/regulation, and thus are VERY important aspects of inheritance. Below are approximations of other components (each component will be discussed in more detail later):

[edit] Elements
•	59% Hydrogen (H) 
•	24% Oxygen (O) 
•	11% Carbon (C) 
•	4% Nitrogen (N) 
•	2% Others - Phosphorus (P), Sulphur (S), etc. 
[edit] Molecules
•	50% protein 
•	15% nucleic acid 
•	15% carbohydrates 
•	10% lipids 
•	10% Other 
[edit] Components of cytoplasm
•	Cytosol - contains mainly water and numerous molecules floating in it- all except the organelles. 
•	Organelles (which also have membranes) in 'higher' eukaryote organisms: 
o	Nucleus (in eukaryotes) - where genetic material (DNA) is located, RNA is transcribed. 
o	Endoplasmic Reticulum (ER) - Important for protein synthesis. It is a transport network for molecules destined for specific modifications and locations. There are two types: 
	Rough ER - Has ribosomes, and tends to be more in 'sheets'. 
	Smooth ER - Does not have ribosomes and tends to be more of a tubular network. 
o	Ribosomes - half are on the Endoplasmic Reticulum, the other half are 'free' in the cytosol, this is where the RNA goes for translation into proteins. 
o	Golgi Apparatus - important for glycosylation, secretion. The Golgi Apparatus is the &quot;UPS&quot; of the cell. Here, proteins and other molecules are prepared for shipping outside of the cell. 
o	Lysosomes - Digestive sacks found only in animal cells; the main point of digestion. 
o	Peroxisomes - Use oxygen to carry out catabolic reactions, in both plant and animals. In this organelle, an enzyme called catalase is used to break down hydrogen peroxide into water and oxygen gas. 
o	Microtubules - made from tubulin, and make up centrioles,cilia,etc. 
o	Cytoskeleton - Microtubules, actin and intermediate filaments. 
o	Mitochondria - convert foods into usable energy. (ATP production) A mitochondrion does this through aerobic respiration. They have 2 membranes, the inner membranes shapes differ between different types of cells, but they form projections called cristae. The mitochondrion is about the size of a bacteria, and it carries its own genetic material and ribosomes. 
o	Vacuoles - More commonly associated with plants. Plants commonly have large vacuoles. 
•	Organelles found in plant cells and not in animal cells: 
o	Plastids - membrane bound organelles used in storage and food production. These are similar to entire prokaryotic cells - for example, like mitochondria they contain their own DNA and self-replicate. They include: 
	Chloroplasts - convert light/food into usable energy. (ATP production) 
	Leucoplasts - store starch, proteins and lipids. 
	Chromoplasts - contain pigments. (E.g. providing colors to flowers) 
o	Cell Wall - found in prokaryotic and plant cells; provides structural support and protection.
Cell biology | Parts of the cell
 
 
Plasma membrane bilayer
The phospholipid bilayer which the cell membrane is an example of, is composed of various cholesterol, phospholipids, glycolipids, blagoscony and proteins. Below is an example of a simple phospholipid bilayer.
 
The smaller molecules shown between the phospholipids are Cholesterol molecules. They help to provide rigidity or stability to the membrane. The two main components of phospholipids are shown in these figures by blue circles representing the hydrophilic head groups and by long thin lines representing the hydrophobic fatty acid tails.
Both the interior of the cell and the area surrounding the cell is made up of water or similar aqueous solution. Consequently, phospholipids orient themsleves with respect to the water and with each other so that the hydrophilic (&quot;water loving&quot;) head groups are grouped together and face the water, and the hydrophobic (&quot;water fearing&quot;) tails turn away from the water and toward each other. This self-organization of phospholipids results in one of just a few easily recognizable structures. Cell membranes are constructed of a phospholipid bilayer as shown above.
Smaller structures can also form, known as 'micelles' in which there is no inner layer of of phospholipid. Instead, the interior of a micell is wholly hydrophobic, filled with the fatty acid chains of the phospholipids and any other hydrophobic molecule they enclose. Micelles are not so important for the understanding of cellular structure, but are useful for demonstrating the principles of hydrophilicity and hydrophobicity, and for contrasting with lipid bilayers.
At least 10 different types of lipids are commonly found in cell membranes. Each type of cell or organelle will have a different percentage of each lipid, protein and carbohydrate. The main types of lipids are:
•	Cholesterol 
•	Glycolipids 
•	Phosphatidylcholine 
•	Sphingomyelin 
•	Phosphatidylethnolamine 
•	Phosphatydilinositol 
•	Phosphatidylserine 
•	Phosphatidylglycerol 
•	Diphosphatidylglycerol (Cardiolipin) 
•	Phosphatidic acid 
Nucleus
The nucleus contains genetic material or DNA in the form of chromatin. It is a double membraned structure, with pores on it. These pores act as a &quot;gateway&quot; to help the nucleoplasm to maintain continuity with the cytoplasm.
[edit] Mitochondria
A mitochondrian is the organelle responsible for a cell's metabolism. It synthetizes ATP through a protein called ATP synthase. Mitochondria have a double membrane. An outer membrane and a folded inner membrane. The internal membrane, called the 'cristaeAWDQS' is invaginated (folded or creased), to maximize surface area enabling it to hold more ATP synthases.
[edit] Chloroplasts
 
 
The inside of a chloroplast with the granum circled.
Chloroplasts are found only in photosynthesizing cells; e.g. plant cells. Chloroplasts carry out photosynthesis by using several photosystem proteins. Chloroplasts also give a cell its green colour and are widely believed to have evolved from symbiotic prokaryotes that adapted to live inside eukaryotic cells. Physiologically, chloroplasts are flat discs usually 2-10 micrometer in diameter and 1 micrometer thick. The chloroplast has a two membrane envelope termed the Inner &amp; Outer membrane respectively. Between these two layers is the intermembrane space.
[edit] Ribosomes
Ribosomes are responsible for protein synthesis; they are composed of two subunits that to elongate an aminoacid sequence. And they were dicovered by 'Chris Jennings'.
[edit] Endoplasmic Reticulum
The Endoplasmic Reticulum (ER) acts as a transport from the nucleus and ribosomes to the Golgi apparatus. There are two types of endoplasmic reticulum:
[edit] Smooth ER
Smooth ER act as transport for various things, mainly the RNA from the nucleus to the ribosomes (RNA is a small piece of the DNA code specifically designed to tell the ribosomes what to make). Smooth ER appears smooth in texture, hence the name.
[edit] Rough ER
Rough ER are &quot;rough&quot; because of the ribosomes embedded in them. The rough ER take the protein to the Golgi apparatus to be packaged into vacuoles
[edit] Golgi Complex
The Golgi Complex bonds functional groups to different biomolecules to direct them to their respective destinations. It basically &quot;packages&quot; the stuff into vacuoles. The Golgi Complex looks like pieces of pita bread stacked on top of each other.They are the ones that have their origin from the ER.They basically function as the delivery system of the cell.
[edit] Vacuole
Vacuoles are storage places. They store water, food or cell waste products.
[edit] Central Vacuole
The central vacuole is found only in plant cells. It is filled with water and is pressurised, like a balloon. This forces all the other organelles within the cell out toward the cell wall. This pressure is called turgor pressure and is what gives plants their &quot;crisp&quot; and firm structure.
[edit] Peroxisomes
Peroxisomes perform a variety of metabolic processes and as a by-product, produce hydrogen peroxide. Peroxisomes use peroxase enzyme to break down this hydrogen peroxide into water and oxygen.
[edit] Lysosomes
Lysosomes are vacuoles containing digestive and destructive membranes. In white blood cells, these are used to kill the bacteria or virus, while in tadpole-tail cells they kill the cell by separating the tail from the main body.
They also do much of the cellular digestion involved in apoptosis, the process of programmed cell death.
[edit] A day in the life of a cell
The nucleus has transcribed a piece of its DNA, called RNA, and sent it to the ribosomes embedded in the rough endoplasmic reticulum. These ribosomes then translate the RNA into valuable protein, which is then transported to the Golgi Apparatus. The Golgi Apparatus &quot;packages&quot; the protein into a secretory vesicle where it eventually reaches the cell membrane ready for secretion out of the cell and into the external environment.

====END ODD TEXT====</text>
      <sha1>4kvhl3mee1odsbncrrcik3wcxdtravg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>F Sharp Programming/Reflection</title>
    <ns>0</ns>
    <id>199498</id>
    <revision>
      <id>2065646</id>
      <parentid>1650047</parentid>
      <timestamp>2011-03-06T02:45:27Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: intepret → interpret using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">{{prognav|F Sharp|Advanced Data Structures|Quotations}}

{{fsharpTitle|Reflection}}

'''Reflection''' allows programmers to inspect types and invoke methods of objects at runtime without knowing their data type at compile time.

At first glance, reflection seems to go against the spirit of ML as it is inherently not type-safe, so typing errors using reflection are not discovered until runtime. However, .NET's typing philosophy is best stated as ''static typing where possible, dynamic typing when needed'', where reflection serves to bring in the most desirable behaviors of dynamic typing into the static typing world. In fact, dynamic typing can be a huge time saver, often promotes the design of more expressive APIs, and allows code to be refactored much further than possible with static typing.

This section is intended as a cursory overview of reflection, not a comprehensive tutorial.

== Inspecting Types ==
There are a variety of ways to inspect the type of an object. The most direct way is calling the &lt;code&gt;.GetType()&lt;/code&gt; method (inherited from &lt;code&gt;System.Object&lt;/code&gt;) on any non-null object:
&lt;source lang=&quot;ocaml&quot;&gt;&gt; &quot;hello world&quot;.GetType();;
val it : System.Type =
  System.String
    {Assembly = mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;
     AssemblyQualifiedName = &quot;System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;;
     Attributes = AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit;
     BaseType = System.Object;
     ContainsGenericParameters = false;
     DeclaringMethod = ?;
     DeclaringType = null;
     FullName = &quot;System.String&quot;;
     GUID = 296afbff-1b0b-3ff5-9d6c-4e7e599f8b57;
     GenericParameterAttributes = ?;
     GenericParameterPosition = ?;
     ...&lt;/source&gt;

Its also possible to get type information without an actual object using the built-in &lt;code&gt;typeof&lt;/code&gt; method:
&lt;source lang=&quot;ocaml&quot;&gt;&gt; typeof&lt;System.IO.File&gt;;;
val it : System.Type =
  System.IO.File
    {Assembly = mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;
     AssemblyQualifiedName = &quot;System.IO.File, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;;
     Attributes = AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit;
     BaseType = System.Object;
     ContainsGenericParameters = false;
     DeclaringMethod = ?;
     DeclaringType = null;
     FullName = &quot;System.IO.File&quot;;
     ...&lt;/source&gt;

&lt;code&gt;''object''.GetType&lt;/code&gt; and &lt;code&gt;typeof&lt;/code&gt; return an instance of &lt;code&gt;[http://msdn.microsoft.com/en-us/library/system.type_members.aspx System.Type]&lt;/code&gt;, which has a variety of useful properties such as:
* '''&lt;code&gt;val Name : string&lt;/code&gt;'''
: Returns the name of the type.
* '''&lt;code&gt;val GetConstructors : unit -&gt; ConstructorInfo array&lt;/code&gt;'''
: Returns an array of constructors defined on the type.
* '''&lt;code&gt;val GetMembers : unit -&gt; MemberInfo array&lt;/code&gt;'''
: Returns an array of members defined on the type.
* '''&lt;code&gt;val InvokeMember : (name : string, invokeAttr : BindingFlags, binder : Binder, target : obj, args : obj) -&gt; obj&lt;/code&gt;'''
: Invokes the specified member, using the specified binding constraints and matching the specified argument list

=== Example: Reading Properties ===

The following program will print out the properties of any object passed into it:
&lt;source lang=&quot;ocaml&quot;&gt;type Car(make : string, model : string, year : int) =
    member this.Make = make
    member this.Model = model
    member this.Year = year
    member this.WheelCount = 4
    
type Cat() =
    let mutable age = 3
    let mutable name = System.String.Empty
    
    member this.Purr() = printfn &quot;Purrr&quot;
    member this.Age
        with get() = age
        and set(v) = age &lt;- v
    member this.Name
        with get() = name
        and set(v) = name &lt;- v
        
let printProperties x =
    let t = x.GetType()
    let properties = t.GetProperties()
    printfn &quot;-----------&quot;
    printfn &quot;%s&quot; t.FullName
    properties |&gt; Array.iter (fun prop -&gt;
        if prop.CanRead then
            let value = prop.GetValue(x, null)
            printfn &quot;%s: %O&quot; prop.Name value
        else
            printfn &quot;%s: ?&quot; prop.Name)

let carInstance = new Car(&quot;Ford&quot;, &quot;Focus&quot;, 2009)
let catInstance =
    let temp = new Cat()
    temp.Name &lt;- &quot;Mittens&quot;
    temp
    
printProperties carInstance
printProperties catInstance&lt;/source&gt;

This program outputs the following:

&lt;pre&gt;-----------
Program+Car
WheelCount: 4
Year: 2009
Model: Focus
Make: Ford
-----------
Program+Cat
Name: Mittens
Age: 3&lt;/pre&gt;

=== Example: Setting Private Fields ===
In addition to discovering types, we can dynamically invoke methods and set properties:
&lt;source lang=&quot;ocaml&quot;&gt;let dynamicSet x propName propValue =
    let property = x.GetType().GetProperty(propName)
    property.SetValue(x, propValue, null)&lt;/source&gt;

Reflection is particularly remarkable in that it can read/write private fields, even on objects which appear to be immutable. In particular, we can explore and manipulate the underlying properties of an F# list:
&lt;source lang=&quot;ocaml&quot;&gt;&gt; open System.Reflection
let x = [1;2;3;4;5]
let lastNode = x.Tail.Tail.Tail.Tail;;

val x : int list = [1; 2; 3; 4; 5]
val lastNode : int list = [5]

&gt; lastNode.GetType().GetFields(BindingFlags.NonPublic ||| BindingFlags.Instance) |&gt; Array.map (fun field -&gt; field.Name);;
val it : string array = [|&quot;__Head&quot;; &quot;__Tail&quot;|]
&gt; let tailField = lastNode.GetType().GetField(&quot;__Tail&quot;, BindingFlags.NonPublic ||| BindingFlags.Instance);;

val tailField : FieldInfo =
  Microsoft.FSharp.Collections.FSharpList`1[System.Int32] __Tail

&gt; tailField.SetValue(lastNode, x);; (* circular list *)
val it : unit = ()
&gt; x |&gt; Seq.take 20 |&gt; Seq.to_list;;
val it : int list =
  [1; 2; 3; 4; 5; 1; 2; 3; 4; 5; 1; 2; 3; 4; 5; 1; 2; 3; 4; 5]&lt;/source&gt;
The example above mutates the list in place and to produce a circularly linked list. In .NET, &quot;immutable&quot; doesn't really mean ''immutable'' and private members are mostly an illusion.

: '''Note:''' The power of reflection has definite security implications, but a full discussion of reflection security is far outside of the scope of this section. Readers are encouraged to visit the [http://msdn.microsoft.com/en-us/library/stfy7tfc(VS.100).aspx Security Considerations for Reflection] article on MSDN for more information.

== Microsoft.FSharp.Reflection Namespace ==
While .NET's built-in reflection API is useful, the F# compiler performs a lot of magic which makes built-in types like unions, tuples, functions, and other built-in types appear strange using vanilla reflection. The [http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/fsharp.core/microsoft.fsharp.reflection.html Microsoft.FSharp.Reflection namespace] provides a wrapper for exploring F# types.

&lt;source lang=&quot;ocaml&quot;&gt;open System.Reflection
open Microsoft.FSharp.Reflection

let explore x =
    let t = x.GetType()
    if FSharpType.IsTuple(t) then
        let fields =
            FSharpValue.GetTupleFields(x)
            |&gt; Array.map string
            |&gt; fun strings -&gt; System.String.Join(&quot;, &quot;, strings)
        
        printfn &quot;Tuple: (%s)&quot; fields
    elif FSharpType.IsUnion(t) then
        let union, fields =  FSharpValue.GetUnionFields(x, t)
        
        printfn &quot;Union: %s(%A)&quot; union.Name fields
    else
        printfn &quot;Got another type&quot;&lt;/source&gt;

Using fsi:
&lt;source lang=&quot;ocaml&quot;&gt;
&gt; explore (Some(&quot;Hello world&quot;));;
Union: Some([|&quot;Hello world&quot;|])
val it : unit = ()

&gt; explore (7, &quot;Hello world&quot;);;
Tuple: (7, Hello world)
val it : unit = ()

&gt; explore (Some(&quot;Hello world&quot;));;
Union: Some([|&quot;Hello world&quot;|])
val it : unit = ()

&gt; explore [1;2;3;4];;
Union: Cons([|1; [2; 3; 4]|])
val it : unit = ()

&gt; explore &quot;Hello world&quot;;;
Got another type
&lt;/source&gt;

== Working With Attributes ==
.NET attributes and reflection go hand-in-hand. Attributes allow programmers to decorate classes, methods, members, and other source code with metadata used at runtime. Many .NET classes use attributes to annotate code in a variety of ways; it is only possible to access and interpret attributes through reflection. This section will provide a brief overview of attributes. Readers interested in a more complete overview are encouraged to read MSDN's [http://msdn.microsoft.com/en-us/library/5x6cd29c(VS.100).aspx Extending Metadata With Attributes] series.

Attributes are defined using &lt;code&gt;&lt;nowiki&gt;[&lt;AttributeName&gt;]&lt;/nowiki&gt;&lt;/code&gt;, a notation already seen in a variety of places in previous chapters of this book. The .NET framework includes a number of built-in attributes, including:

* [http://msdn.microsoft.com/en-us/library/system.obsoleteattribute.aspx System.ObsoleteAttribute] - used to mark source code intended to be removed in future versions.
* [http://msdn.microsoft.com/en-us/library/system.flagsattribute.aspx System.FlagsAttribute] - indicates that an enumeration can be treated as a bit field.
* [http://msdn.microsoft.com/en-us/library/system.serializableattribute.aspx System.SerializableAttribute] - indicates that class can be serialized.
* [http://msdn.microsoft.com/en-us/library/system.diagnostics.debuggerstepthroughattribute.aspx System.Diagnostics.DebuggerStepThroughAttribute] - indicates that the debugger should not step into a method unless it contains a break point.

We can create custom attributes by defining a new type which inherits from &lt;code&gt;[http://msdn.microsoft.com/en-us/library/system.attribute.aspx System.Attribute]&lt;/code&gt;:

&lt;source lang=&quot;ocaml&quot;&gt;type MyAttribute(text : string) =
    inherit System.Attribute()
    
    do printfn &quot;MyAttribute created. Text: %s&quot; text
    
    member this.Text = text

[&lt;MyAttribute(&quot;Hello world&quot;)&gt;]    
type MyClass() =
    member this.SomeProperty = &quot;This is a property&quot;&lt;/source&gt;

We can access attribute using reflection:

&lt;source lang=&quot;ocaml&quot;&gt;&gt; let x = new MyClass();;

val x : MyClass

&gt; x.GetType().GetCustomAttributes(true);;
MyAttribute created. Text: Hello world
val it : obj [] =
  [|System.SerializableAttribute {TypeId = System.SerializableAttribute;};
    FSI_0028+MyAttribute {Text = &quot;Hello world&quot;;
                          TypeId = FSI_0028+MyAttribute;};
    Microsoft.FSharp.Core.CompilationMappingAttribute
      {SequenceNumber = 0;
       SourceConstructFlags = ObjectType;
       TypeId = Microsoft.FSharp.Core.CompilationMappingAttribute;
       VariantNumber = 0;}|]&lt;/source&gt;
The &lt;code&gt;MyAttribute&lt;/code&gt; class has the side-effect of printing to the console on instantiation, demonstrating that &lt;code&gt;MyAttribute&lt;/code&gt; does not get constructed when instances of &lt;code&gt;MyClass&lt;/code&gt; are created.

=== Example: Encapsulating Singleton Design Pattern ===

Attributes are often used to decorate classes with any kind of ad-hoc functionality. For example, let's say we wanted to control whether single or multiple instances of classes are created based on an attribute:

&lt;source lang=&quot;ocaml&quot;&gt;type ConstructionAttribute(singleInstance : bool) =
    inherit System.Attribute()
    member this.IsSingleton = singleInstance

let singletons = new System.Collections.Generic.Dictionary&lt;System.Type,obj&gt;()
let make() : 'a =
    let newInstance() = System.Activator.CreateInstance&lt;'a&gt;()
    let attributes = typeof&lt;'a&gt;.GetCustomAttributes(typeof&lt;ConstructionAttribute&gt;, true)
    let singleInstance =
        if attributes.Length &gt; 0 then
            let contructionAttribute = attributes.[0] :?&gt; ConstructionAttribute
            contructionAttribute.IsSingleton
        else false
    
    if singleInstance then
        match singletons.TryGetValue(typeof&lt;'a&gt;) with
        | true, v -&gt; v :?&gt; 'a
        | _ -&gt;
            let instance = newInstance()
            singletons.Add(typeof&lt;'a&gt;, instance)
            instance
    else newInstance()

[&lt;ConstructionAttribute(true)&gt;]
type SingleOnly() =
    do printfn &quot;SingleOnly contructor&quot;

[&lt;ConstructionAttribute(false)&gt;]
type NewAlways() =
    do printfn &quot;NewAlways constructor&quot;

let x = make&lt;SingleOnly&gt;()
let x' = make&lt;SingleOnly&gt;()
let y = make&lt;NewAlways&gt;()
let y' = make&lt;NewAlways&gt;()

printfn &quot;x = x': %b&quot; (x = x')
printfn &quot;y = y': %b&quot; (y = y')
System.Console.ReadKey(true) |&gt; ignore&lt;/source&gt;

This program outputs the following:

&lt;pre&gt;SingleOnly constructor
NewAlways constructor
NewAlways constructor
x = x': true
y = y': false&lt;/pre&gt;

Using the attribute above, we've completely abstracted away the implementation details of the singleton design pattern, reducing it down to a single attribute. Its worth noting that the program above hard-codes a value of &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; into the attribute constructor; if we wanted to, we could pass a string representing a key from the application's config file and make class construction dependent on the config file.


{{prognav|F Sharp|Advanced Data Structures|Quotations}}</text>
      <sha1>jhom9iw4h2gv1y30qz3feicbht98g53</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Advanced Structural Analysis</title>
    <ns>0</ns>
    <id>199500</id>
    <revision>
      <id>1858176</id>
      <parentid>1809935</parentid>
      <timestamp>2010-06-25T18:35:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>removing deprecated DDC/LOC classifications</comment>
      <text xml:space="preserve">[[File:Effective Notch.svg|thumb|right|300px|Geometric assumption of the Effective Notch method.]]

The aim of this work is to present a rich discussion of the various aspects of modern structural analysis, ranging from elementary continuum mechanics theory to advanced analysis using open-source software.  The text is geared towards practical engineering problems and attempts to cover all essential analysis considerations and techniques present in the daily work of the experienced professional.

The content is divided in two main parts: [[/Part I - Theory/]], and [[/Part II - Application/]].  The idea is that Part I - Theory provides the foundation for the analysis described in Part II - Application.  Ideally, all the reasoning described in Part II - Application should stem from and refer to statements in Part I - Theory.

The work may refer to any high-quality open-source software, such as [http://www.code-aster.org Code Aster] and [http://wxmaxima.sourceforge.net/wiki/index.php/Main_Page wxMaxima].  Commercial tools are not incorporated unless related information is of exceptional interest and no open-source alternative exists.

It is important that all users of this resource realize that the material is subordinated to relevant normative documents and that its content might be incorrect; and act accordingly!

==Chapters==
# [[/Motivation/]]
# [[/Participate/]]
# [[/Layout/]]
# [[/Part I - Theory/]]
# [[/Part II - Application/]]
# [[/References/]]
# [[/The Contributors/]]

{{Subjects|Structural engineering}}
{{Alphabetical|A}}
{{status|25%}}</text>
      <sha1>06otucwq9i1qltchh5525rw7esiwuhv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Biology Answering the Big Questions of life cover.jpg</title>
    <ns>6</ns>
    <id>199502</id>
    <revision>
      <id>1538119</id>
      <timestamp>2009-06-18T19:36:08Z</timestamp>
      <contributor>
        <username>Rozzychan</username>
        <id>10544</id>
      </contributor>
      <comment>{{Information
|Description= Cover for Biology, Answering the big questions of life (wikibooks)
|Source= Own work, collage of free licenced images
|Date= June 18, 2009
|Author= Rozzychan
|Permission=
|other_versions= none
|Detailed description= This is the</comment>
      <text xml:space="preserve">== Summary ==
{{Information
|Description= Cover for Biology, Answering the big questions of life (wikibooks)
|Source= Own work, collage of free licenced images
|Date= June 18, 2009
|Author= Rozzychan
|Permission=
|other_versions= none
|Detailed description= This is the cover for my wikibook, &quot;Biology, Answering the Big |Questions of Life&quot;.All of the images come from Wikimedia commons. Detailed attributions follow.
|
|Images used to make this cover:
|
*File:Aardbei bloembodem vlezig.jpg
**GNU Free Documentation License, 
**nl:Afbeelding:Aardbei bloembodem vlezig.jpg Category:Unidentified Fragaria.
**624×657 (50,608 bytes) - 21:33, 5 May 2009

*File:Beechforest062005.jpg
**GNU Free Documentation License,
**Description Beeches (Fagus sylvatica ) in Bad Nenndorf, Germany) | Source Own work - **photo taken by Tortuosa | Date 2005-06-xx | Author ...2,048×1,536 (799,064 bytes) - **22:15, 6 September 2008

*File:Frog in frogspawn.jpg
**GNU Free Documentation License, 
**Description A garden frog (species Rana temporaria), swimming in a pond full of **frogspawn (frog eggs). Sammakko uimassa kudun keskellä | ...
**1,536×1,152 (397,068 bytes) - 08:52, 20 January 2008

*File:Satelliteimage 300.jpg
**Public domain
**Printing resolution: 300 DPI. Downloaded from http://www. sanctuaries. nos. noaa.gov/pgallery/pgchannel/habitats/habitats_1.html. ...
**1,155×837 (187,258 bytes) - 23:55, 1 June 2007

*File:The Moon Bay on the River Burqin.jpg
**GNU Free Documentation License,
**Description: The Moon Bay in Xinjiang, China, near Lake Kanas ... Category:burqin river 
**Category:Rivers of China Category:Geography of Xinjiang ...
**2,048×1,536 (1,581,905 bytes) - 13:11, 16 July 2008

*File:Blue Ridge NC.jpg
**This file is licensed under Creative Commons Attribution ShareAlike 2.0 License
**Shining Rock wilderness area. Source: Jan van der Crabben (Photographer) **Category:National Forests of North Carolina Category:Appalachian ...
**700×454 (71,309 bytes) - 22:27, 2 December 2008

*File:Flower-04-KayEss-2.jpeg
**GNU Free Documentation License
**A bee pollinating a water-lily flower. taken by KayEss Category:Apoidea **Category:Unidentified Nymphaea Category:Pollination Category:Macro ...
**640×482 (68,671 bytes) - 18:13, 16 December 2008

*File:Lamellen.jpg
**GNU Free Documentation License
**Description Lamellen des Fliegenpilzes (Amanita muscaria )Parte inferior de amanita muscaria. | 
**Source fotografiert von de:Benutzer: ...
**699×500 (72,372 bytes) - 14:32, 10 May 2008

}}
== Licensing: ==
{{cc-by-sa-3.0}}</text>
      <sha1>0x526sbm34js69a79rcwhv99igs10e5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Spanish: Contents</title>
    <ns>1</ns>
    <id>199503</id>
    <revision>
      <id>1538122</id>
      <timestamp>2009-06-18T19:37:37Z</timestamp>
      <contributor>
        <ip>201.2.111.250</ip>
      </contributor>
      <comment>eu amo..</comment>
      <text xml:space="preserve">eu amo muitão voce</text>
      <sha1>6926tfskp9ogskl6hkinle9ha7oxn0y</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Overview of rest of the Guide</title>
    <ns>0</ns>
    <id>199504</id>
    <redirect title="ETD Guide/Introduction/Overview of rest of the Guide" />
    <revision>
      <id>1538131</id>
      <timestamp>2009-06-18T19:51:06Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Overview of rest of the Guide]] to [[ETD Guide/Introduction/Overview of rest of the Guide]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Overview of rest of the Guide]]</text>
      <sha1>pfecf00jenckii2fmp3pybhhv4u7wpf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Global cooperation in ETD activities</title>
    <ns>0</ns>
    <id>199505</id>
    <redirect title="ETD Guide/Introduction/Global cooperation in ETD activities" />
    <revision>
      <id>1538134</id>
      <timestamp>2009-06-18T19:52:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Global cooperation in ETD activities]] to [[ETD Guide/Introduction/Global cooperation in ETD activities]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Global cooperation in ETD activities]]</text>
      <sha1>rio6dcnlzqp1ghh1nfqz8zlj7hp9br1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Brief history of ETD activities: 1987-2007</title>
    <ns>0</ns>
    <id>199506</id>
    <redirect title="ETD Guide/Introduction/Brief history of ETD activities: 1987-2007" />
    <revision>
      <id>1538137</id>
      <timestamp>2009-06-18T19:53:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Brief history of ETD activities: 1987-2007]] to [[ETD Guide/Introduction/Brief history of ETD activities: 1987-2007]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Brief history of ETD activities: 1987-2007]]</text>
      <sha1>5nvz6azz21wlkpsknxkoh78ygdwkfr2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Well known sites/resources for ETDs</title>
    <ns>0</ns>
    <id>199507</id>
    <redirect title="ETD Guide/Introduction/Well known sites and resources for ETDs" />
    <revision>
      <id>1538143</id>
      <timestamp>2009-06-18T19:56:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Well known sites/resources for ETDs]] to [[ETD Guide/Introduction/Well known sites and resources for ETDs]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Well known sites and resources for ETDs]]</text>
      <sha1>hy6vvqpa5b9gx4falob7vfs1z4lpa3d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Browsing: Classification systems, classification schemes used in different disciplines</title>
    <ns>0</ns>
    <id>199508</id>
    <redirect title="ETD Guide/Introduction/Browsing: Classification systems, classification schemes used in different disciplines" />
    <revision>
      <id>1538146</id>
      <timestamp>2009-06-18T19:58:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Browsing: Classification systems, classification schemes used in different disciplines]] to [[ETD Guide/Introduction/Browsing: Classification systems, classification schemes used in different disciplines]]: Subpage notatio</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Browsing: Classification systems, classification schemes used in different disciplines]]</text>
      <sha1>5ispxmagfvopftcmjqb60bghya6twp8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Searching</title>
    <ns>0</ns>
    <id>199509</id>
    <redirect title="ETD Guide/Introduction/Searching" />
    <revision>
      <id>1538149</id>
      <timestamp>2009-06-18T20:00:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Searching]] to [[ETD Guide/Introduction/Searching]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Searching]]</text>
      <sha1>264odwddmsj997exe915548vf8lhfop</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Enhancing access to university research</title>
    <ns>0</ns>
    <id>199510</id>
    <redirect title="ETD Guide/Introduction/Enhancing access to university research" />
    <revision>
      <id>1538153</id>
      <timestamp>2009-06-18T20:01:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Enhancing access to university research]] to [[ETD Guide/Introduction/Enhancing access to university research]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Enhancing access to university research]]</text>
      <sha1>mxwdiavmfy9sv7m9peevib0alnvvehd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Increasing sharing and collaboration among universities and students</title>
    <ns>0</ns>
    <id>199511</id>
    <redirect title="ETD Guide/Introduction/Increasing sharing and collaboration among universities and students" />
    <revision>
      <id>1538156</id>
      <timestamp>2009-06-18T20:02:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Increasing sharing and collaboration among universities and students]] to [[ETD Guide/Introduction/Increasing sharing and collaboration among universities and students]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Increasing sharing and collaboration among universities and students]]</text>
      <sha1>9qfcioi2n5f2uqtit4duafpryt5ewi4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Helping universities develop digital library services &amp; infrastructure</title>
    <ns>0</ns>
    <id>199512</id>
    <redirect title="ETD Guide/Introduction/Helping universities develop digital library services &amp; infrastructure" />
    <revision>
      <id>1538159</id>
      <timestamp>2009-06-18T20:03:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Helping universities develop digital library services &amp; infrastructure]] to [[ETD Guide/Introduction/Helping universities develop digital library services &amp; infrastructure]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Helping universities develop digital library services &amp; infrastructure]]</text>
      <sha1>9u7twb00dz4us765yp1hlwqiobw4xrj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Increasing readership of ETDs, communicating research results</title>
    <ns>0</ns>
    <id>199513</id>
    <redirect title="ETD Guide/Introduction/Increasing readership of ETDs, communicating research results" />
    <revision>
      <id>1538162</id>
      <timestamp>2009-06-18T20:03:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Increasing readership of ETDs, communicating research results]] to [[ETD Guide/Introduction/Increasing readership of ETDs, communicating research results]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Increasing readership of ETDs, communicating research results]]</text>
      <sha1>s8tsf42955qavjpbakmv4ebw7artdgq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Helping faculty</title>
    <ns>0</ns>
    <id>199514</id>
    <redirect title="ETD Guide/Introduction/Helping faculty" />
    <revision>
      <id>1538166</id>
      <timestamp>2009-06-18T20:04:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Helping faculty]] to [[ETD Guide/Introduction/Helping faculty]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Helping faculty]]</text>
      <sha1>katrgbvfy9eeahjan8oj8jiwdd2l3sa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Improving graduate education, and quality/expressiveness of ETDs</title>
    <ns>0</ns>
    <id>199515</id>
    <redirect title="ETD Guide/Introduction/Improving graduate education, and quality/expressiveness of ETDs" />
    <revision>
      <id>1538170</id>
      <timestamp>2009-06-18T20:05:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Improving graduate education, and quality/expressiveness of ETDs]] to [[ETD Guide/Introduction/Improving graduate education, and quality/expressiveness of ETDs]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Improving graduate education, and quality/expressiveness of ETDs]]</text>
      <sha1>5cdwf4owb2mj3xfgw8dnrx1uuejg2be</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Helping students network professionally</title>
    <ns>0</ns>
    <id>199516</id>
    <redirect title="ETD Guide/Introduction/Helping students network professionally" />
    <revision>
      <id>1538173</id>
      <timestamp>2009-06-18T20:06:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Helping students network professionally]] to [[ETD Guide/Introduction/Helping students network professionally]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Helping students network professionally]]</text>
      <sha1>q0g4qunk1q99o0g46coe4xa02t53k16</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Helping students be original</title>
    <ns>0</ns>
    <id>199517</id>
    <redirect title="ETD Guide/Introduction/Helping students be original" />
    <revision>
      <id>1538176</id>
      <timestamp>2009-06-18T20:07:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Helping students be original]] to [[ETD Guide/Introduction/Helping students be original]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Helping students be original]]</text>
      <sha1>pmcvp17rzl6hbb3sv7sfisk5fj7iqbh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Helping students be better prepared as knowledge workers</title>
    <ns>0</ns>
    <id>199518</id>
    <redirect title="ETD Guide/Introduction/Helping students be better prepared as knowledge workers" />
    <revision>
      <id>1538179</id>
      <timestamp>2009-06-18T20:07:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Helping students be better prepared as knowledge workers]] to [[ETD Guide/Introduction/Helping students be better prepared as knowledge workers]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Helping students be better prepared as knowledge workers]]</text>
      <sha1>m0r3gfvkcfe6qdha3qdjeq68edsuxk2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Purpose, goals, objectives of ETD activities</title>
    <ns>0</ns>
    <id>199519</id>
    <redirect title="ETD Guide/Introduction/Purpose, goals, objectives of ETD activities" />
    <revision>
      <id>1538182</id>
      <timestamp>2009-06-18T20:08:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Purpose, goals, objectives of ETD activities]] to [[ETD Guide/Introduction/Purpose, goals, objectives of ETD activities]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Purpose, goals, objectives of ETD activities]]</text>
      <sha1>dajxze6j8dx211an9on0kki0mb8oqg5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Costs and benefits</title>
    <ns>0</ns>
    <id>199520</id>
    <redirect title="ETD Guide/Introduction/Costs and benefits" />
    <revision>
      <id>1538185</id>
      <timestamp>2009-06-18T20:09:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Costs and benefits]] to [[ETD Guide/Introduction/Costs and benefits]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Costs and benefits]]</text>
      <sha1>mlnd88opweefike8uv7g83j2swg43zm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Accelerate workflow: graduate more quickly, make ETDs available faster to outside audience</title>
    <ns>0</ns>
    <id>199521</id>
    <redirect title="ETD Guide/Introduction/Accelerate workflow: graduate more quickly, make ETDs available faster to outside audience" />
    <revision>
      <id>1538188</id>
      <timestamp>2009-06-18T20:10:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Accelerate workflow: graduate more quickly, make ETDs available faster to outside audience]] to [[ETD Guide/Introduction/Accelerate workflow: graduate more quickly, make ETDs available faster to outside audience]]: Subpage</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Accelerate workflow: graduate more quickly, make ETDs available faster to outside audience]]</text>
      <sha1>rm5y4qr0yjpou76mcwtrttxzbxxycil</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Improve visibility</title>
    <ns>0</ns>
    <id>199522</id>
    <redirect title="ETD Guide/Introduction/Improve visibility" />
    <revision>
      <id>1538191</id>
      <timestamp>2009-06-18T20:11:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Improve visibility]] to [[ETD Guide/Introduction/Improve visibility]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Improve visibility]]</text>
      <sha1>leruukm0phj4go8nqpv30bfu5mv0inu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Minimize duplication of effort</title>
    <ns>0</ns>
    <id>199523</id>
    <redirect title="ETD Guide/Introduction/Minimize duplication of effort" />
    <revision>
      <id>1538194</id>
      <timestamp>2009-06-18T20:11:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Minimize duplication of effort]] to [[ETD Guide/Introduction/Minimize duplication of effort]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Minimize duplication of effort]]</text>
      <sha1>ckfsbxrg9zr8l2scns861lj6dhbg0pe</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - Why ETDs?</title>
    <ns>0</ns>
    <id>199524</id>
    <redirect title="ETD Guide/Introduction/Why ETDs?" />
    <revision>
      <id>1538197</id>
      <timestamp>2009-06-18T20:12:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - Why ETDs?]] to [[ETD Guide/Introduction/Why ETDs?]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/Why ETDs?]]</text>
      <sha1>iu0nffesy2u7nvram4n4rkctly5gqxy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - ETDs as new genre of documents</title>
    <ns>0</ns>
    <id>199525</id>
    <redirect title="ETD Guide/Introduction/ETDs as new genre of documents" />
    <revision>
      <id>1538201</id>
      <timestamp>2009-06-18T20:13:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - ETDs as new genre of documents]] to [[ETD Guide/Introduction/ETDs as new genre of documents]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/ETDs as new genre of documents]]</text>
      <sha1>rim6xpqof02aee9tbyxwlx3ampozimi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction - What are ETDs</title>
    <ns>0</ns>
    <id>199526</id>
    <redirect title="ETD Guide/Introduction/What are ETDs" />
    <revision>
      <id>1538204</id>
      <timestamp>2009-06-18T20:14:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction - What are ETDs]] to [[ETD Guide/Introduction/What are ETDs]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction/What are ETDs]]</text>
      <sha1>kxy1q61a3hwhou9ouujl6fooiidtshg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ETD Guide:Introduction</title>
    <ns>0</ns>
    <id>199527</id>
    <redirect title="ETD Guide/Introduction" />
    <revision>
      <id>1538207</id>
      <timestamp>2009-06-18T20:14:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ETD Guide:Introduction]] to [[ETD Guide/Introduction]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[ETD Guide/Introduction]]</text>
      <sha1>nv41z4vmjj9f1gdqe1w1vtq8syntqsf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Prog</title>
    <ns>2</ns>
    <id>199528</id>
    <revision>
      <id>2029376</id>
      <parentid>2029371</parentid>
      <timestamp>2011-02-11T21:47:22Z</timestamp>
      <contributor>
        <username>Prog</username>
        <id>95465</id>
      </contributor>
      <text xml:space="preserve">{{userboxtop
| align = right
| backgroundcolor = #ffffC0
| bordercolor = #000080
| toptext = User language
}}
{{user language|de|N}}
{{user language|en|2}}
{{userboxbottom}}

I am mainly active in [[:de:Benutzer:Prog|german Wikibooks]].

== sub pages ==

* [[User:Prog/ Test site]]

== skripts ==

* [[User:Prog/monobook.js]]
* [[User:Prog/vector.js]]
* [[User:Prog/common.js]]

== stylesheets ==

* [[User:Prog/monobook.css]]
* [[User:Prog/vector.css]]
* [[User:Prog/common.css]]
* [[MediaWiki:Monobook.css]]
* [[MediaWiki:Common.css]]</text>
      <sha1>t55ztxmzadepluq5fi8vl686hhd8a4u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Prog/ Test site</title>
    <ns>2</ns>
    <id>199529</id>
    <revision>
      <id>1548458</id>
      <parentid>1538273</parentid>
      <timestamp>2009-06-25T21:07:59Z</timestamp>
      <contributor>
        <username>Prog</username>
        <id>95465</id>
      </contributor>
      <minor />
      <text xml:space="preserve">== This Templates ... ==

{{Info|I test the template replacement.}}


{{SideBox|I test the template replacement.}}


{{TextBox|I test the template replacement.}}


{{Warning|I test the template replacement.}}

{{OutputSwitch
|HTML=I'am the web-browser text
|PDF=I'am the PDF-version text
}}

== ... should become in PDF ==

{{PrintInfo|I test the template replacement.}}


{{PrintSideBox|I test the template replacement.}}


{{PrintTextBox|I test the template replacement.}}


{{PrintWarning|I test the template replacement.}}

{{PrintOutputSwitch
|HTML=I'am the web-browser text
|PDF=I'am the PDF-version text
}}</text>
      <sha1>pegxynv46xq5v2v14i1bmopvbuvqayw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:OutputSwitch</title>
    <ns>10</ns>
    <id>199530</id>
    <revision>
      <id>1549134</id>
      <parentid>1538269</parentid>
      <timestamp>2009-06-26T18:24:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">{{{HTML}}}&lt;noinclude&gt;

----

With this template, you can switch the text for different output types. At the moment the following types are supported:

* HTML – web-browser
* PDF – PDF-version

'''Example:'''

&lt;pre&gt;&lt;nowiki&gt;
{{OutputSwitch
|HTML=I'am the web-browser text
|PDF=I'am the PDF-version text
}}
&lt;/nowiki&gt;&lt;/pre&gt;

See [[Template:PrintOutputSwitch]]

[[Category:Print templates|{{PAGENAME}}]]
&lt;/noinclude&gt;</text>
      <sha1>fogyocquc3xdtentav47kylq4nh6h6y</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:OutputSwitch/Print</title>
    <ns>10</ns>
    <id>199531</id>
    <revision>
      <id>1551150</id>
      <parentid>1549141</parentid>
      <timestamp>2009-06-29T01:33:17Z</timestamp>
      <contributor>
        <username>Prog</username>
        <id>95465</id>
      </contributor>
      <minor />
      <comment>moved [[Template:PrintOutputSwitch]] to [[Template:OutputSwitch/Print]]: Format has probably changed.</comment>
      <text xml:space="preserve">{{{PDF}}}&lt;noinclude&gt;

----

See [[Template:OutputSwitch]]

[[Category:Print templates|OutputSwitch]]
&lt;/noinclude&gt;</text>
      <sha1>akte6pbyw02z38uyiv11pm8b7zabn25</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Caramelized Pineapple</title>
    <ns>102</ns>
    <id>199532</id>
    <revision>
      <id>2680304</id>
      <parentid>1699271</parentid>
      <timestamp>2014-07-10T20:20:49Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>/* Directions */ Recipe had no cats. Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

Crispy on the outside, sweet, and fruity.

== Ingredients ==
* 2 cups diced pineapple
* 1/2 cup dark brown sugar, divided
* 1/2 cup heavy cream
* 3 tbsp dark rum
* 1 vanilla bean, split and scraped

== Directions ==
#Combine vanilla bean and liquid ingredients except rum and 1/4 cup brown sugar.
#Heat over medium heat until sugar is dissolved and has thickened slightly, 15-30 minutes.
#Remove vanilla pod and let sit at room temperature for 30 minutes.
#Dip pineapple into sugar mixture then dredge in remaining sugar, adding more as needed.
#Place on a greased baking sheet and place under broiler, shaking constantly until well browned.
#Remove pineapple;keep warm.
#Place pan on two burners and heat over high heat. Add rum and ignite. Scrape browned bits off of pan and boil rum until reduced by half.
#Add rum to remaining sugar mixture and stir. Serve pineapple with remaining sugar mixture on the side.

[[Category:Pineapple recipes]]
[[Category:Vanilla recipes]]
[[Category:Rum recipes]]
[[Category:Dessert recipes]]
[[Category:Boiled recipes]]
[[Category:Broiled recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>ey1hwaa9q1q52oxrsf2jsqnq5sjl6i8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Crispy Sweet Potato Fries</title>
    <ns>102</ns>
    <id>199533</id>
    <revision>
      <id>2693956</id>
      <parentid>2683028</parentid>
      <timestamp>2014-08-23T10:51:45Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Correcting Southern U.S. recipes cat link.</comment>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Southern cuisine|Southern U.S. cuisine]]

Crispy on the outside, coated in a sweet maple glaze.

== Ingredients ==
* 4 sweet potatoes, julienned
* 3/4 cup maple syrup
* 2 tbsp dark brown sugar
* 1 tsp cinnamon
* 1 tsp vanilla
* Pinch of salt
* Oil for deep frying

== Procedure ==
#Cover potatoes with water. Bring to a rolling boil and cook until tender.
#Drain thoroughly and cold shock in a bowl of iced water. Drain again.
#Combine syrup and vanilla; set aside.
#Heat oil to 375°F and fry in batches until golden brown and crispy. Drain on a cooling rack.
#Combine remaining ingredients and sprinkle on potatoes once all fried.
#Warm syrup mixture in a large saucepan over low heat; toss with potatoes and serve.

[[Category:Southern U.S. recipes]]
[[Category:Potato recipes]]
[[Category:Maple Syrup recipes]]
[[Category:Deep fried recipes]]
[[Category:Side dish recipes]]</text>
      <sha1>5cp41pmgzva7nzn7gw2tj7yktw2oxh7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>The simple Subject+Verb sentence</title>
    <ns>0</ns>
    <id>199534</id>
    <redirect title="Modern Media Hebrew Corpus/Verbal Phrase" />
    <revision>
      <id>1538324</id>
      <timestamp>2009-06-18T22:05:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[The simple Subject+Verb sentence]] to [[Modern Media Hebrew Corpus/Verbal Phrase]]: Moving into book linking to it.</comment>
      <text xml:space="preserve">#REDIRECT [[Modern Media Hebrew Corpus/Verbal Phrase]]</text>
      <sha1>pn8ffjtyo1qsb30rvew2ytgkz2ie7b1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Nominal-Subject+Nominal-Predicate</title>
    <ns>0</ns>
    <id>199535</id>
    <redirect title="Modern Media Hebrew Corpus/Nominal Phrase/Nominal-Subject+Nominal-Predicate" />
    <revision>
      <id>1538328</id>
      <timestamp>2009-06-18T22:08:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Nominal-Subject+Nominal-Predicate]] to [[Modern Media Hebrew Corpus/Nominal Phrase/Nominal-Subject+Nominal-Predicate]]: Moving into book linking to it.</comment>
      <text xml:space="preserve">#REDIRECT [[Modern Media Hebrew Corpus/Nominal Phrase/Nominal-Subject+Nominal-Predicate]]</text>
      <sha1>efiuwexn5aee6t1nhtsbqevmhp8zhxk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Editing Hebrew/Media Hebrew/Corpus/Nominal-Subject+Copula+Infinitive</title>
    <ns>0</ns>
    <id>199536</id>
    <redirect title="Modern Media Hebrew Corpus/Nominal Phrase/Nominal-Subject+Copula+Infinitive" />
    <revision>
      <id>1538330</id>
      <timestamp>2009-06-18T22:08:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Editing Hebrew/Media Hebrew/Corpus/Nominal-Subject+Copula+Infinitive]] to [[Modern Media Hebrew Corpus/Nominal Phrase/Nominal-Subject+Copula+Infinitive]]: Moving into book linking to it.</comment>
      <text xml:space="preserve">#REDIRECT [[Modern Media Hebrew Corpus/Nominal Phrase/Nominal-Subject+Copula+Infinitive]]</text>
      <sha1>nz66f0okxhi61aqpzukwkz0m0gj6v7z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Hebrew/Media Hebrew/Corpus/Nominal</title>
    <ns>0</ns>
    <id>199537</id>
    <redirect title="Modern Media Hebrew Corpus/Nominal Phrase" />
    <revision>
      <id>1538332</id>
      <timestamp>2009-06-18T22:09:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Hebrew/Media Hebrew/Corpus/Nominal]] to [[Modern Media Hebrew Corpus/Nominal Phrase]]: Moving into book linking to it.</comment>
      <text xml:space="preserve">#REDIRECT [[Modern Media Hebrew Corpus/Nominal Phrase]]</text>
      <sha1>loecjeqq8myjfy013x3gbgn4hay39w2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:203.89.173.247</title>
    <ns>3</ns>
    <id>199538</id>
    <revision>
      <id>1538341</id>
      <timestamp>2009-06-18T22:19:28Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>{{subst:test|--~~~~}}</comment>
      <text xml:space="preserve">{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/203.89.173.247|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 22:19, 18 June 2009 (UTC)}}</text>
      <sha1>jx6476yi2wd5bt7qv459781zxi5hjd5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:142.26.181.81</title>
    <ns>3</ns>
    <id>199539</id>
    <revision>
      <id>1538344</id>
      <timestamp>2009-06-18T22:20:27Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>{{subst:test|--~~~~}}</comment>
      <text xml:space="preserve">{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/142.26.181.81|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 22:20, 18 June 2009 (UTC)}}</text>
      <sha1>bfihxjdw1klwngqvagys1pwc2w4rg3v</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Modern Media Hebrew Corpus</title>
    <ns>14</ns>
    <id>199540</id>
    <revision>
      <id>1538346</id>
      <timestamp>2009-06-18T22:21:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Languages of Asia]]</text>
      <sha1>6vinxcx851r9oykxsbspzjldoe5ywt5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:93.192.22.112</title>
    <ns>3</ns>
    <id>199541</id>
    <revision>
      <id>1538350</id>
      <timestamp>2009-06-18T22:22:30Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>{{subst:test|--~~~~}}</comment>
      <text xml:space="preserve">{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/93.192.22.112|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 22:22, 18 June 2009 (UTC)}}</text>
      <sha1>gxwx6cfafigobn975s6gid9t43ubuh2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Electromagnetics</title>
    <ns>14</ns>
    <id>199542</id>
    <revision>
      <id>1538362</id>
      <timestamp>2009-06-18T22:28:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Electromagnetism]]</text>
      <sha1>a1z7xjo7zbg7lq69dcz8ge3anlcchyb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Adrignola/2009/04</title>
    <ns>3</ns>
    <id>199544</id>
    <revision>
      <id>1678062</id>
      <parentid>1538376</parentid>
      <timestamp>2009-12-10T23:24:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[User talk:Adrignola/2009/04]]&quot;: preserving history ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{talkarchive|http://en.wikibooks.org/wiki/User_talk:Adrignola}}

== Categorisation ==

Like many Wikibookians, I saw noticed your impressive work on categorisation in my watchlist. I've long looked with dread at the categorisation schemes as these desperately need a lot of work. I'm glad someone has taken the initiative on this important task.

One of my areas of interest is project documentation, mainly the help pages (see: [[Help:Contents]] and a full list at [[User:Swift/Help pages]]) and project resources (e.g. [[Wikibooks:Templates]] and [[Wikibooks:Maintenance]]). As you should now have a great deal of experience with the categorisation aspect of our project, I was hoping you migth be able to lend a hand to explain the cataloguing schemes to others.

I just did a bit of copyediting on [[WB:CCR]] (which should perhaps be moved to something like {{bad link|Help:Cataloguing}}) and brought it up to date. Where did you read up on categorisation, and do you know of a better place to put this information? --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 21:43, 29 April 2009 (UTC)
:I was a bit nervous when I first tried to add some order to the chaos, knowing that I might stir things up a bit on Recent Changes and even worried that someone might get angry.  I'm glad you're all supportive!  Before I got the itch to start taking the broom to things, so to speak, I believe I looked over [[Help:Category]], which is linked from [[Help:Contents]].  It's pretty extensive in covering categories in general, but at the time I was looking for any rhyme or reason for how things were organized.  I already had knowledge of Mediawiki from my own use of it on my website.  I did a search on &quot;categories&quot; to find more information and came across [[Wikibooks:Categories]], which I now see is linked to at the very bottom of [[Help:Category]].  I see it's marked for cleanup and I would probably agree.  

:I leave what the title ought to be up to you, but I think a merge of [[WB:CCR]] and [[Wikibooks:Categories]] would be helpful for explaining guidelines for Wikibooks in particular.  [[Help:Category]] focuses mostly on Mediawiki operation.  [[WB:CCR]] mentions book categories, subject categories, dewey decimal, alphabetical listing, and library of congress.  [[Wikibooks:Categories]] contains good descriptions of subject and book categories with no information on implementation or mention of the others covered by [[WB:CCR]].  [[Wikibooks:Reading_Levels]] could be good for incorporating into a final page as well, since it's something that would need to be considered at the same time as the others.  I'd certainly be game for lending a hand in explaining cataloguing on a nice combined page with all the information a prospective Wikibook creator would need to know in order to file their book properly for others to find it.  After all, I'd hate to spend time trying to spend time getting things sorted out for it to go to waste in a matter of months when others don't follow the same pattern!  Just let me know which target page should be the focus for our efforts on documentation.  

:The following is some additional information that may or may not be in that page but, at the least, defines for you my plan of action.  I'd eventually like to see categories match up in structure to the structure of subjects with [[:Category:Books by subject]] matching [[Subject:Major_Subjects]] from top-down.  But as Whiteknight noted above, the subjects were ad-hoc as well.  My initial focus is getting books I see in the categories filed properly and the categories filed within themselves properly.  Then I can take a higher level look as Whiteknight suggests and analyzing whether the subjects themselves make sense.  I've seen the discussion at [[Subject_talk:Major_Subjects]] on sentence or title case.  Guidelines here seem to point to book titles being title case and so sentence case for categories avoids conflicts.  While subjects can be any name as the category they pull from is in the code, it'd be nice if they match, so that would mean they should be sentence case too.  It's why I made the subject category [[:Category:European history]] to file all the books that were put in [[:Category:European History]] and that serves as the one major example that defines my stance on that, in the absence of technical changes or policy changes that would prevent another occurrence.  I'd also like to note that [[:Category:Fine arts]] shows how I'm filing subject categories within other subject categories using &lt;nowiki&gt;[[Category:Blah| {{PAGENAME}}]]&lt;/nowiki&gt;.  In this way someone browsing the categories immediately sees the difference between a book's category and a subject's category (subject categories show up first).  This hasn't been done for all the categories yet, of course, but I feel it will be helpful to prevent people from filing their new books into a category reserved solely for another book and improve navigation when browsing by category. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 04:09, 30 April 2009 (UTC)</text>
      <sha1>0chfehv8w6rcwym1r3r215ujwieax4t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Adrignola/2009/05</title>
    <ns>3</ns>
    <id>199545</id>
    <revision>
      <id>1678063</id>
      <parentid>1538379</parentid>
      <timestamp>2009-12-10T23:25:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[User talk:Adrignola/2009/05]]&quot;: preserving history ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{talkarchive|http://en.wikibooks.org/wiki/User_talk:Adrignola}}


== Re: Categories ==

Hello Adrignola, I'm sorry that I haven't replied sooner. I want to say first that your efforts to get books organized is quite exemplary, thanks! I wrote a little [http://wikibooks.blogspot.com/2009/04/categorization-continues.html blog post] to showcase some of your work and also to explain why the category system here has become so messy over time.

A problem with categories is that there is no unified plan: A lot of people are just making and organizing categories in an ad hoc way, and the lack of planning really starts to show after a while. [[User:Whiteknight/Wikibooks Categories|The planning work]] that I had done in my user space was an attempt to introduce a roadmap of sorts to future efforts, but obviously that effort never took off. I didn't even get a complete plan written down before I abandoned it myself. If you find anything of value on that page, you are welcome to use it yourself for any purpose.

Following the organization structure of the [[WB:AS|subject pages]] is a reasonable idea, but then again those pages were put together in the same ad hoc way that categories were: A lot of it was according to my whims as I was doing it, and so that structure isn't completely sane either. My suggestion is that you can follow it so long as it makes sense, and don't follow it when I've obviously done something stupid (it happens!). I'm very happy to help you out too, just let me know what help you need and I'll take to it. Also, never hesitate to ask if you have any questions. --'''Whiteknight'''&amp;nbsp;([[User:Whiteknight|Page]])&amp;nbsp;([[User talk:Whiteknight|Talk]]) 13:04, 28 April 2009 (UTC)

:I think there should be consistency between subjects and categories but there are also some important differences: subjects use one particular way of categorization (in the case of language books by continent) but categories can include several ways of categorization (e.g. by difficulty for native English speakers: [[:Category:Languages by category]]). Also, not all categories need to appear in the subject pages (e.g. [[:Category:Soundbite requests]], [[:Category:Languages textbook pages]]). Thus, while there should be consistency, hierarchies of categories and subjects should not be identical . --[[User:Martin Kraus|Martin Kraus]] ([[User talk:Martin Kraus|talk]]) 09:40, 1 May 2009 (UTC)

:: I am focusing primarily on matching categories to subjects and not the other way around.  Soundbite requests and Languages by category won't be showing up in [[Subject:Languages]], I agree.  Not every language has been marked as level one, two, or three, anyway, so that would be a poor choice to have show up in the subject hierarchy.  Soundbite requests is a maintenance category, so it also won't be showing up in the subjects. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 14:14, 1 May 2009 (UTC)

== A small hint ==

Hey Adrignola.  First, great job with categorization.  It seems every time I check Recent Changes, you've categorized another dozen pages!  Also, I appreciate your responses to my post in the Reading Room.  

Anyway, I wanted to let you know that there is a template, {{tlx|BookCat}}, that automatically adds the book to the appropriate Book Category.  It can be used on the main page of a book, or any of its subpages.  Furthermore, you can add it to a template.  For example, see what I've done to [[1 Corinthians]].  Every page contains a navigation box at the bottom.  This is {{tlx|1 Corinthians Navigation}}.  I simply place {{tlx|BookCat}} into this template, and now every page in 1 Corinthians is automatically added to [[:Category:1 Corinthians]] (assuming it includes the navigation template).  The reason BookCat is &lt;tt&gt;&amp;lt;includeonly&amp;gt;&lt;/tt&gt; is because the template itself is not within a book, and the reason the actual category link is &lt;tt&gt;&amp;lt;noinclude&amp;gt;&lt;/tt&gt; is because BookCat does a better job (see how the main page is separate from the rest in the category listing).

Most books don't have a common template like this, but many do.  It might make life a little easier if you can exploit that technique. -- &lt;font color=&quot;#000090&quot;&gt;[[User:NipplesMeCool|Mr.&amp;nbsp;'''NMC''']]&lt;/font&gt; (&lt;font color=&quot;#000090&quot;&gt;[[User talk:NipplesMeCool|talk]]&lt;/font&gt;) 23:55, 28 April 2009 (UTC)

: Yeah, that's fine the way you use it.  I just wanted to let you know, in case you come across a situation it can be used. -- &lt;font color=&quot;#000090&quot;&gt;[[User:NipplesMeCool|Mr.&amp;nbsp;'''NMC''']]&lt;/font&gt; (&lt;font color=&quot;#000090&quot;&gt;[[User talk:NipplesMeCool|talk]]&lt;/font&gt;) 00:16, 29 April 2009 (UTC)

: I would like to add that there are several categories to include book categories, in particular {{bad link|Category:Computing textbook pages}}, {{bad link|Category:Engineering textbook pages}}, {{bad link|Category:Languages textbook pages}}, {{bad link|Category:Science textbook pages}}, etc. All book categories should be in one of these categories (and no other). (At least that's the way I understand the scheme.) --[[User:Martin Kraus|Martin Kraus]] ([[User talk:Martin Kraus|talk]]) 09:44, 1 May 2009 (UTC)

: I just realized that you are systematically including book categories in other categories, could you please undo these changes and discuss them first? Thanks. --[[User:Martin Kraus|Martin Kraus]] ([[User talk:Martin Kraus|talk]]) 09:51, 1 May 2009 (UTC)

== [[Adventist Youth Honors Answer Book]] ==

Hi Adrignola,

Thanks for adding the Dewey/LOC cats to [[Adventist Youth Honors Answer Book]].  That project has been a major part of my life for the past 3.5 years.  I would have added it long ago, but I could not decide how it would be classified.  I guess 000 is general works (such as encyclopedias?) - I guess that fits.

For a while I had considered breaking this into nine books instead of having it as one - that would have made it easier to classify.  It's just nice to have someone &quot;be bold&quot; like that.  Thanks again. 

I've also noticed that you have done a lot of other categorization work.  I was especially pleased that you added a few of my transcluded modules to my transcluded category.  From that I can tell you are really digging into things before making changes.  That too is very much appreciated. 

--[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 01:30, 1 May 2009 (UTC)

:I saw those pages that I added to the transcluded modules when I first started trawling the uncategorized pages listing.  It was then that I realized I would have a hard time figuring out where to categorize books without a bit more order to the current system.  One thing led to another, so now I'm trying to do what you see in the paragraph above your comment.  You've made an impressive number of pages in your book.  It certainly reflects the time you've spent on it.  Given the classification under religious organization, {{tlx|DDC|200}} or {{tlx|LOC|B}} may also be possibilities.  The important thing is that it shows up somewhere for people browsing via any method.  Take care.  -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 02:12, 1 May 2009 (UTC)

== University level mathematics, a better way? ==

Is there some other way math books could be categorized? All mathematic books could likely be considered university level because at what point in a person's education subjects are taught can depend on the school and where you are in the world. Also unless someone has gone to public schools or a university they may not know which category to look for a book in using this approach. A similar problem was [[Wikibooks talk:Reading Levels|previously discussion]] and subsequent [{{fullurl:Wikibooks:Reading Levels|diff=1162055&amp;oldid=1147197}} change] made to [[Wikibooks:Reading Levels]] because of this issue. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 16:44, 2 May 2009 (UTC)
: Probably?  I was just following the subjects that were already there.  The items in University level mathematics were already targetted for University Level Mathematics.  I was just changing case.  I don't know enough about math to classify them under, say Calculus or Geometry, etc.  Maybe Jomegat could help with that and then [[:Category:University level mathematics]] and {{bad link|Subject:University level mathematics}} can be deleted.  It is a bad category to have, I agree, but I'm not in a good position knowledge-wise about math to fix it. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 16:48, 2 May 2009 (UTC)
: I'll see what I can do for the ones that are more obvious, to empty out that category.  I do indeed like to not have redundant categories. I was too focused on actually creating a category to go with the subject without looking at the bigger picture. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 16:55, 2 May 2009 (UTC)
:: I sometimes use Wikipedia to quickly read up on a subject I don't know anything about, to help me figure out ways to improve categorization. If something doesn't make sense to you, by all means don't follow it. Sometimes its not a category that needs updating but subject pages or books, because people do make improvements to categories while not making the same improvements to subject pages or books. Being focused isn't necessary a bad thing. I appreciated the work you've been putting into improving the category system. I hope realizing there is a bigger picture won't cause you to slow down any, but will rather help you to see new possibilities. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 17:38, 2 May 2009 (UTC)
::: Wikipedia's a good suggestion.  Looking at the big picture I do see more possible redundancies.  If University level mathematics is no good, [[Subject:Introductory Mathematics]] might be for the same reason.  Also, I'm curious about the differences between [[Subject:Mathematical analysis]] and [[Subject:Calculus and analysis]].  However, Whiteknight did write way above that he made these off the top of his head and they may need to be changed.  I do think I'll go back to working on Computing and save Mathematics for last since it will be the most difficult.  I'm thinking [[Subject:Programming language]] and its contents will need to be filed under [[Subject:Compiled languages]]  to differentiate the content from [[Subject:Scripting languages]] and a possible Subject to match with [[:Category:Markup languages]], all at the same level under [[Subject:Programming]]. I still haven't fully sorted everything under Computing either.  So that's my plan of attack for later today. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 18:05, 2 May 2009 (UTC)
:::: Programming is an area I know something about. I don't really care for the current approach to categorization for some things, but at the same time I'm not always sure what can be done to improve it. There are languages that can be interpreted and compiled for instance. Programming languages may need to be treated similar to how [[:Category:Languages]] needs to be treated, by using a lot of intermediate categories so people can find what they are looking for by following many different paths. Like maybe &quot;Programming languages by family&quot; and &quot;Programming languages by paradigm&quot;. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 19:40, 2 May 2009 (UTC)

== Programming languages by paradigm ==

Can't be correctly implemented since several languages do cover several paradigms (some don't).
Simple examples C evolved from an imperative programming language model but today it supports objects. C++ is by definition a multiparadigm language so to be rightly classified it would have to be present in most categories even as a functional programming language. Going that way will be painfully hard.&lt;br&gt;
I'm not stating my opposition to any of the changes. Since your opinion is as valid as mine and we still haven't got a community shared vision on the issue, I do consider the changes in the scale you are going a bit premature (a better way to go about it is to get the community backing for a static proposal/system, since the visions are too diverse).&lt;br&gt;
I confess I don't particularly like or agree with some of the changes, but if you can manage to commit to maintain and work on some better model that the chaos it is today, you will have all my support even if I don't appreciate all the changes.&lt;br&gt;Good luck to you on this endeavor...  --[[User:Panic2k4|Panic]] ([[User talk:Panic2k4|talk]]) 04:54, 3 May 2009 (UTC)

== [[:Category:WMOG plant finder categories]] ==

You said that you think this category and its subcategories were never used in its speedy deletion. However when I checked yesterday they were used. I think you must of made some changes since than, perhaps to some templates that caused those categories to suddenly become empty. A quick look suggests     [[Template:Horticat (add &quot;y&quot; where applicable)]] and [[Template:Horticat-topic (add &quot;y&quot; where applicable)]] are at least two of the templates you changed that might be responsible for it. I also notice you renamed a few of the category more general categories rather than in as Category:Horticulture/subcategory. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 11:59, 16 May 2009 (UTC)

:You're probably right about that.  I forgot I changed those two templates along with the example, profile, and box templates.  I'm not entirely sure what you mean by the &quot;category more general categories&quot;, but I think you are talking about ones link &quot;Soil-related topics&quot;.  That and others that are sentence-case (which do in fact conflict with the standard we've been following for subject categories) were already created and I wasn't sure I wanted to endeavor to reclassify all the pages into ones of the form &quot;Horticulture/Subcategory&quot;.  I will remedy this, then, so as to not leave a job unfinished. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 15:22, 16 May 2009 (UTC)

:: I meant that a few of the categories you had changed went from Category:WMOG/Subcategory to Category:Some_other_page, while most categories you had changed to Category:Horticulture/subcategory, and yes I meant categories like &quot;Soil-related topics&quot;. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 20:06, 16 May 2009 (UTC)

== Muggles' Guide to Harry Potter ==

Yeah, I'm going to ask you to back out that change to the categories. The purpose of the category, I believe, is to have a common place to keep everything related to a book (or a subject &amp;mdash; though in the case of the subject it's enough to have the landing page there, and everything else in the book can go off that one landing page). The fact that there are 900 pages in the category is a good thing, in my not-so-humble opinion. Additionally, if all the pages are in the one category, you can see any changes to the book by going to the category page and looking for changes on anything in the category.

On tabs and titles, that seems like a useful innovation; we can try that, though I don't know how the PDF tool will handle it. It will, of course, have to be done to all 199 chapter pages... but perhaps we can try it on PS first, and take a look at that before we go hog-wild.

As far as the PDF tool goes, like so much else on any Wiki, it is maintained by volunteers, and as such maintenance can be sketchy. The fact that it doesn't handle relative links is a minor issue, apparently, as it can be worked around, and so a fix for that is low-priority. [[User:Chazz|Chazz]] &lt;small&gt;([[User talk:Chazz|talk]])&lt;/small&gt; 15:44, 16 May 2009 (UTC)

:On the categories, I think I'm going to have to argue with you a bit. Right now, the page [[Muggles' Guide to Harry Potter/Books/Chamber of Secrets]] is in the category &quot;Muggles' Guide to Harry Potter/Books&quot;. If you go to the category page for &quot;Muggles' Guide to Harry Potter&quot;, it is not in the pages listed as being in that category; rather, it shows up as one of the pages in a related category, &quot;Muggles' Guide to Harry Potter/Books&quot;. If you expand that category, you can see the books, but not the chapters within the books; to see the chapters, you have to go to the Books subpage, and then expand the related category Chamber of Secrets. If you really want to go in that direction, it is possible, and may be useful; but I would strongly suggest retaining the base category, as &lt;nowiki&gt;[[Category: Muggles' Guide to Harry Potter/Books/Chamber of Secrets]][[Category:Muggles' Guide to Harry Potter]]&lt;/nowiki&gt;. [[User:Chazz|Chazz]] &lt;small&gt;([[User talk:Chazz|talk]])&lt;/small&gt; 16:56, 16 May 2009 (UTC)

::Perhaps I'm reading things too fast... I usually do. My apologies.

::On the &lt;nowiki&gt;{{Displaytitle}}&lt;/nowiki&gt; thing, I have never run the tool myself; it's [[User:withinfocus]] who has always done that. I believe that quite possibly the best course is to add the template to the one book, and then PDF just that. I'll check with withinfocus to see if he wants to try the PDF thing, or whether he can give me instructions. [[User:Chazz|Chazz]] &lt;small&gt;([[User talk:Chazz|talk]])&lt;/small&gt; 18:24, 16 May 2009 (UTC)

::Just to let you know: The first step in creation of PDF is to convert to LaTeX, which is done with Hagindaz' [[User:Hagindaz/Wiki2LaTeX|Wiki2LaTeX]]. [[User:Chazz|Chazz]] &lt;small&gt;([[User talk:Chazz|talk]])&lt;/small&gt; 18:34, 16 May 2009 (UTC)

'''FYI''' displaytitle relys on javascript, so unless the tool parses javascript, displaytitle should have zero effect. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 20:02, 16 May 2009 (UTC)

: I suspected that might be the case, but it's good to have confirmation.  I don't see a PDF linked to from the book's main title page, so I may let the tools I downloaded continue to work to try to make a PDF file just for the heck of it anyway.  Thanks for the tip! -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 20:17, 16 May 2009 (UTC)

::Not to say displaytitle should be removed; but we might want to leave the Title heading and chapter title so that it appears at printout time. [[User:Chazz|Chazz]] &lt;small&gt;([[User talk:Chazz|talk]])&lt;/small&gt; 22:18, 16 May 2009 (UTC)

:::We can leave it like that for the moment... withinfocus is a little busy of late, so it may be a while before he can get back to give that a try. And he's been at this a lot longer than I have, so I sort of tend to defer to him... [[User:Chazz|Chazz]] &lt;small&gt;([[User talk:Chazz|talk]])&lt;/small&gt; 07:30, 17 May 2009 (UTC)

== Interested in Promotion? ==

Hello Adrignola, how are you? I've been watching your contributions and you're doing a great job cleaning up the messes we've created over the years. I'd like to nominate you for +Rollbacker, as a precursor for an eventual nomination to become an admin. You interested? --'''Whiteknight'''&amp;nbsp;([[User:Whiteknight|Page]])&amp;nbsp;([[User talk:Whiteknight|Talk]]) 17:03, 17 May 2009 (UTC)

: I'd be happy to accept the nomination.  I do gain pleasure in straightening things out.  I'm a very neat person in my everyday life, so these changes are a natural extension of myself.  Thank you for the compliment. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 17:10, 17 May 2009 (UTC)

== [[WB:RFP]] ==

I've added you to the [[WB:ROLLBACK|rollback]] and [[Help:Revision review|editor]] user groups. If you need help figuring out how to use the tools, feel free to let me know and I'll be happy to help. You've done great work on Wikibooks so far, and I hope you'll continue for quite some time. &amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 01:40, 18 May 2009 (UTC)
:Thanks. I will look those pages over carefully before actually using the tools. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 01:46, 18 May 2009 (UTC)

== [[:Category:US law]] ==

My opinion is that it should be US Law and it would be cool to be a subcategory of Law... (Only pointing you this since you were working on the categories and subjects.)  --[[User:Panic2k4|Panic]] ([[User talk:Panic2k4|talk]]) 03:33, 19 May 2009 (UTC)
: Well, the subject categories have been getting standardized to sentence-case to avoid conflicts with books of the same name, like [[:Category:First aid]] (subject category) and [[:Category:First Aid]] (book category), to name one that comes to mind.  If you put aside the name case, it does appear that [[:Category:US law]] actually is already a subcategory of [[:Category:Law]], unless I'm missing something? The subjects also appear to match that same structure, with Law being a parent of US law.  I haven't had a chance to go over the Social sciences tree yet, so that whole area is probably disorganized currently. I hope I've addressed any concerns you have. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 03:41, 19 May 2009 (UTC)

::My opinion on the name collision is that books should avoid generalist titles like US Law or Law in this case, a book per definition shouldn't overcrowd a generalist namespace like First Aid, but I see your point and I don't think that the solution to accommodate the issue is the best one. I disagree with having a book named only &quot;The US Law&quot;, as it is, is just as bad.
::The issue here is that the books names should be addressed/fixed, so that other works on the same fields can be created and read on a even plain field, keeping the practice will probably centralize people in the more general titles, this was an issue with the Programming:&lt;language&gt; books (and other) titles that was a reason for the last change. This to me is the same issue.  
::As for the structure, I haven't examined it, just noticed US law and Law and didn't particularly like it, since you were working on this subject I refrained messing things.
::In any case I still dislike the standardization to sentence-case to avoid conflicts with books, since it looks funny and is just as scheme to avoid the real issue.
::The other and also related thing I have an opinion regarding categories is the use of plurals in some topic it seems fine but a standardization on the singular would be best. For instance Art, Architecture and Law could all be pluralized.    --[[User:Panic2k4|Panic]] ([[User talk:Panic2k4|talk]]) 04:38, 19 May 2009 (UTC)

:::Books starting with &quot;A&quot;, &quot;An&quot;, or &quot;The&quot; don't sort well, so I would agree that &quot;The US Law&quot; is bad.  Plus, there's more than one law in the US.  The category and subject Art were both renamed to Fine arts a bit ago, so that is now plural.  I've not heard &quot;Architectures&quot; used and &quot;Law&quot; would be better to cover the entire legal field as compared to &quot;Laws&quot; which could be interpreted as the legislative items.  Most of the categories do work well pluralized.  (I'm not sure where you stand on that, as you wrote &quot;singular would be best&quot;, but then added &quot;...could be pluralized&quot;.  I certainly agree that specific titles are a good way to avoid confusion, especially for those that don't pay attention to small details like whether that second word is capitalized or not.  The many C++ books do a good job of that.  

:::Sentence-case, title-case, singular, plural.  Unfortunately, like many hot-button issues of the day, there's only one side or the other.    I have been leaning toward the style Wikipedia uses for its categories, namely, sentence case and plural, when it makes sense.  I've noticed Darklama follows this pattern, which is good, in that we don't work against each other.  Since books are usually given a title in title case, following Wikipedia's lead in that respect avoids conflicts, though it may indeed look funny.  Truth is, we could go one way or the other on title/sentence case and singular/plural and no matter what somebody would not be entirely satisfied.  There's a cleanup tag on [[Subject:Major_Subjects|the top-level subject]] to this day. I read over the [[Subject_talk:Major_Subjects|discussions]] on title versus sentence case on the top-level subject page before I started working on things to try to decide which way to go.  They didn't seem to reach a consensus there on the issue.   I had to make a decision at that point how to proceed, otherwise I could not proceed.  My bottom line is, at least, a goal of consistency.  -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 05:15, 19 May 2009 (UTC)

I agree that books should use better names rather then generic titles, but we have to deal with what the situation is rather than what the ideals are. Panic if you would like to see that change, you could create and propose a new policym or create an unstable branch of the naming policy, that tries to address this concern. I would likely support a policy that required books (and even chapters) to use more descriptive names, but until then using casing and plurals to differentiate subjects from books is as good a method as any.

As for &quot;US law&quot; I would like to see that expanded to &quot;United states laws&quot; or &quot;Laws of the united states&quot;. One of my things has been an attempt to reduce the use of abbreviations and acronyms as well, not everyone may be familiar with abbreviations and acronyms used and Wikibooks should strive to be as geographically/location-neutral and age-neutral as possible with categories. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 08:30, 19 May 2009 (UTC)

&quot;US law&quot; may not be the best example of this problem, but &quot;US&quot; could also refer to [[w:Union State|Union State]] according to [[w:US (disambiguation)|US (disambiguation)]]. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 08:49, 19 May 2009 (UTC)

== [[Template:Copyvio]] ==

Please don't subst that template &amp; others like it. The ones that need to be substed have that noted on them: [[Template:nld]] for example. Thanks. &amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 21:20, 19 May 2009 (UTC)
== &quot;Broken&quot; noinclude tag ==

I saw your [http://en.wikibooks.org/w/index.php?diff=1505708&amp;oldid=1327179&amp;rcid=1510471 edit to my header template]. It probably is a good idea to move some of my ugly HTML to XHTML. However, the noinclude tags were not broken: They were setup that way intentionally. The templates are not designed to be transcluded like normal templates, they're supposed to be substituted in order to create other templates. Here's a quick rundown:
# The [[User:Whiteknight/Simple Header]] template is substituted at Template:Foo/Page. The &lt;nowiki&gt;&lt;includeonly&gt;&lt;/nowiki&gt; tags disappear, leaving the complete &lt;nowiki&gt;&lt;noinclude&gt;&lt;/nowiki&gt; tags in Template:Foo/Page.
# Template:Foo/Page is transcluded into the pages in the book, and the stuff in the &lt;nowiki&gt;&lt;noinclude&gt;&lt;/nowiki&gt; tags is not displayed on the book pages.
So it's complicated and very ugly, but intentional. I have a few other templates in my namespace that use this same trick (or trices that are even worse!) to do some fancy-schmance stuff. I'll fix up the weird tags, but I'll try to keep your XHTML fixes in place. Thanks! --'''Whiteknight'''&amp;nbsp;([[User:Whiteknight|Page]])&amp;nbsp;([[User talk:Whiteknight|Talk]]) 01:49, 23 May 2009 (UTC)
:That's actually pretty neat trick and I don't ever recall seeing documentation on it before.  I learn something new every day! -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 01:57, 23 May 2009 (UTC)
:Of course I've just gone and [{{fullurl:User:Whiteknight:Simple_Header|diff=1505959&amp;oldid=1505733}} improved the trick] so it doesn't expose itself when looking at the head template. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 15:51, 23 May 2009 (UTC)

== [[w:Fine arts|Fine arts]] ==

The wikipedia article says this type of art is often expressed in the production of art objects using '''visual''' and '''performing art''' forms, including ''painting'', ''sculpture'', ''music'', ''dance'', ''theatre'', ''architecture'', ''photography'' and ''printmaking''. Schools, institutes, and other organizations still use the term to indicate a traditional perspective on the art forms, often implying an association with classic or academic art.

I figured the best option is to keep visual and performing arts under fine arts, but have fine arts be under humanities, since the arts are considered to be a field of humanities. This should also keep the humanities category from growing too big. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 15:17, 25 May 2009 (UTC)
: Okay, I see where you're going with that.  I'll work toward that end goal and straighten this all out.  It would end up with Fine arts having two children of visual arts and performing arts, performing arts having music, singing, and dance, and visual arts including the others.  I had been working based on [[w:Humanities|Humanities]] on Wikipedia.  Guess they should consult each other when writing their articles. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 15:24, 25 May 2009 (UTC)

:: This also benefits us in that general art topics or arts that mix visual and performing arts have a place to go, other than in humanities. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 15:37, 25 May 2009 (UTC)

::: Indeed.  You do a great job of double-checking my work and correcting any mistakes I make.  Glad you've &quot;got my back&quot; so to speak. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 15:41, 25 May 2009 (UTC)

== [[:Category:Education]] ==

Seems like your having some trouble deciding how best to categorize books under there. Like with study guides, all books are educational if you really think about it. The education category should probably have a very limited scope. Like for books about:

* Learning or teaching methods/approaches that aren't subject specific,
* Educational institutes (colleges, universities, etc),
* Financial aid programs (grants, tuitions, etc), and
* School life

Categories like &quot;Tertiary education&quot; should IMO be avoided due to being dependent on location. If there are ever enough books, I would suggest breaking things down by country instead like &quot;education in the united states&quot;, &quot;schools of the united states&quot;, &quot;financial aids programs in the united states&quot;, etc. How does that sound to you? --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 21:17, 28 May 2009 (UTC)
: Bullet one will be Education theory, then.  Bullet two would be Educational institutions.  Bullet three would be Financial aid.  Bullet four would be School life.  You're right about the study guides and books being educational.  I keep getting stuck in the existing subjects instead of &quot;being bold&quot;.  I'll work to reduce the redundancy to books that are about education, rather than ones that simply educate.  I might have to move some of them back into Education temporarily to keep track of them, just to let you know. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 21:25, 28 May 2009 (UTC)
:I'm having a hard time differentiating between Education theory , Education Psychology, and Teaching and instruction. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 23:15, 28 May 2009 (UTC)

: After reading up on education theory and education psychology on Wikipedia, I think education theory is broader subject area that includes education psychology and other subject areas. Education psychology seems to be concerned with the study of how students learn. I guess you could say its also like the difference between theory and psychology. Theories are based on any/general observations, and Psychology is about observation of human behavior, which is a more specific type of observation. Teaching and instruction is likely more about doing rather then understanding the whys and hows, or if you will, applying what education theory and education psychology teaches, turning theory into practice. Does that sound right to you? --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 00:24, 29 May 2009 (UTC)

:: It does.  Thanks for taking the time to look into that.  I'll have to make sure books in those categories match up with their subjects.  On a brighter note, I've eliminated several categories and Education is already looking a lot less crowded. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 00:34, 29 May 2009 (UTC)

::: Education being less crowded is good to hear. Looks like [[w:Instructional design]], [[w:Instructional theory]], [[w:Learning theory]] or [[w:Teacher education]] might be the actual name for &quot;teaching and instruction&quot;. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 17:21, 29 May 2009 (UTC)

:::: I'm liking &quot;Instructional theory&quot; because [[Subject:Education theory]] would be better named &quot;Learning theory&quot; based on the content of the books in it. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 18:52, 29 May 2009 (UTC)

::::: Your right it does look a bit backwards. &quot;Learning theory&quot; and &quot;instructional theory&quot; I guess are both subfields of &quot;Education theory&quot;. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 18:59, 29 May 2009 (UTC)</text>
      <sha1>0oic6q8ddqbvz3qxcmn37y0nqhmc49m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Adrignola/2009/06</title>
    <ns>3</ns>
    <id>199546</id>
    <revision>
      <id>1678064</id>
      <parentid>1561484</parentid>
      <timestamp>2009-12-10T23:25:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[User talk:Adrignola/2009/06]]&quot;: preserving history ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{talkarchive|http://en.wikibooks.org/wiki/User_talk:Adrignola}}

== Programming categories ==

I think we should use &quot;X programming language&quot; for the category names to reduce ambiguity. Take python, ruby, cocoa, and java as examples. Python is also the name of a snake. Ruby is also the name of gemstone,, cocoa is also the name of a drink or the seed extract of the cocoa bean, and java is a type of coffee. Oh also why have you decided to abandon the paradigm approach? --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 11:50, 3 June 2009 (UTC)

:: On paradigms, I'm seeing what Panic stated a while back: &lt;blockquote&gt;&quot;Can't be correctly implemented since several languages do cover several paradigms (some don't). Simple examples C evolved from an imperative programming language model but today it supports objects. C++ is by definition a multiparadigm language so to be rightly classified it would have to be present in most categories even as a functional programming language. Going that way will be painfully hard.&quot;.&lt;/blockquote&gt;  The languages, from what I've seen, have evolved from one type to another, and so seeing their presence under one paradigm you'd have to wonder &quot;at what time in the lifespan of the language does this apply?&quot;.  Also, since most are multiparadigm, you end up with the multiparadigm category having nearly as many subcategories as [[:Category:Programming languages by family]] has right now.  In addition, categorizing them will be difficult, as Wikipedia does not have consistency.  [[w:List of programming languages by category]] doesn't often match what the pages for the individual programming languages say, making it hard to determine which is correct.  And most people looking for a book will have a specific language in mind, the way I look at it.  I do believe your other idea on categorizing by operating system would be more useful to those newer programmers and it would be less ambiguous as well, if anything other than families is implemented at all.  If you were really set on paradigms, I could reverse that, but the above constitutes the line of thinking I've been on since the idea was first proposed. 

:: I can recategorize the books into X programming languages later today.  I was just matching the existing subcategories for families for consistency, but I can go the other way because you make a good argument. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 12:54, 3 June 2009 (UTC)

::: By operating system would have similar problems, but I do think there needs to be ways to compare languages to help new users make an informed decision when deciding what programming language(s) to learn without having to do a lot of research first. By operating system would be more friendly for new users than paradigms. By family was really intended to identify languages with a common ancestry. Like there are many variants of the Basic programming language that share a common history despite being widely different from each other. There are also variants of Lisp. Each architecture has its own assembly language but tend to share some common history as well. OTOH languages like C, C++, and Java while having similar grammar aren't really part of the same language family. Looking at [[w:Comparison of programming languages]], I'm thinking maybe &quot;by operating system&quot;, &quot;by intended use&quot; and &quot;by standards&quot; could be useful to a general audience in addition to &quot;by family&quot; which is likely more useful for an intermediate or advanced audience. So if you plan to substitute &quot;by paradigm&quot; with something else I can accept its deletion, just keep in mind the alternatives may not be any better or worse then it. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 14:45, 3 June 2009 (UTC)

== Are you sure speedy-delete is the right thing? ==

I'm not a regular anymore, but won't deleting a page turn all the links to the ACT-test page into red-links and someone will have to manually fix all the broken links?  Isn't a merge-tag better suited?  I don't have any experience with wikibooks, but just wanted to comment since i'm one of the few who contribute to the content geared for high schoolers.  I just don't want anybody to be unaware that the page is moved, since it will come up as having been deleted.  Doesn't [[move]] and [[redirect]] work better for this? [[Special:Contributions/70.185.120.125|70.185.120.125]] ([[User talk:70.185.120.125|talk]]) 04:21, 5 June 2009 (UTC)

: I nominated [[:Category:ACT]] for deletion because I filed the books in [[:Category:ACT test]].  The [[ACT]] book was moved to [[ACT Study Guide]] and so won't need it for a book category and no pages link to the category of the same name.  No pages link to [[Subject:ACT]] either.  Unless you're talking about something else. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 04:24, 5 June 2009 (UTC)

== BookCat ==

I've noticed that you use &lt;nowiki&gt;[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]&lt;/nowiki&gt; rather than {{tlx|BookCat}}.  Any particular reason?  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 14:03, 5 June 2009 (UTC)

: You're not the first person to ask that.  BookCat evaluates whether it's placed on a subpage or not to determine what code is used to categorize.  Since the main book page is automatically put in the book's category when {{tlx|Subjects}} is used, BookCat should never be used in a situation where it's on the main book page.  I know they have that additional code in there just in case, but I feel there's no need to involve parser functions on the page when I can just paste in the code that BookCat would evaluate to anyways and save some processing when the page is viewed. {{tlx|BookCat}} is only linked to from [[Using Wikibooks/Cleanup and Maintenance]] and it says &lt;blockquote&gt;&quot;If you do not know what book category to use, or how to use it, tag every page in the book with {{tlxs|BookCat}}. This will automatically add the book pages to the proper categories.&quot;&lt;/blockquote&gt; It's commonly transcluded and not substituted.  But, if I follow guidelines and substitute it, I'll have all the code in the template put on the page.  As I said above, it has more than is needed when I'm aware of the page I'm working on, so pasting in &lt;nowiki&gt;[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]] &lt;/nowiki&gt; also saves length as compared to the documented method of using it via substitution. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 14:16, 5 June 2009 (UTC)

:: That's very helpful perspective; thanks.  The suggestion from Whiteknight to use subst with BookCat is certainly based on a different set of priorities from mine; one of the things I always liked about BookCat is that it simplifies administrative code on content pages, which is only true if it's transcluded.  Of course, I actually don't use it directly in the book I mainly contribute to, because I've built it into the [[Template:Navlist/Doc|Navlist]] /Top and /Bottom templates &amp;mdash; but then again, the Navlist templates are themselves a pretty spectacular exercise in preferring intensive transclusion over visible content-page complexity.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 15:16, 5 June 2009 (UTC)
== Help ==

My partner (Secondguess) and I have gone through several revisions of a section. Can you see if my new one makes sense, and maybe grammar check the book? [[Unlingvae|Unlingv&amp;auml;]] [[Unlingvae/Lesson 1.1#Syllables|Li Alfibeti/Syllables]]--[[User:Finaloffer|Finaloffer]] ([[User talk:Finaloffer|talk]]) 23:07, 5 June 2009 (UTC)
: Sure thing.  I'll look it over and make changes as needed. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 00:39, 6 June 2009 (UTC)

== [[:Category:Effective Student Organization]] ==

Thanks for creating Category:Effective Student Organization for our course project book. Any ideas of higher order categories it may fit within? --[[User:Paul James|Paul James]] ([[User talk:Paul James|talk]]) 18:06, 6 June 2009 (UTC)
: You are quite welcome.  I'm doing quite a bit of categorizing lately. Both your book's main page and the category of the same name are filed in [[:Category:School life]], which is a category in [[:Category:Education]], which is a category in [[:Category:Social sciences]], which is a category in [[:Category:Books by subject]].  Rather than filing a book at every level of the hierarchy, books have been filed at the lowest level possible given their subject matter. 
 
:It sounds and appears that your book is a class project, so I'll also put it in [[:Category:Class projects]], which is a category in [[:Category:Standard curricula]], which is a category in [[:Category:Books by subject]].  I hadn't done so at first because you are doing well in designing the book to be accessible to a general audience as opposed to students at any particular school.  I've only categorized a few other class projects in areas other than class projects for that very reason, so you should take pride in your work. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 18:14, 6 June 2009 (UTC)
== Cats ==

Great work and a huge patience...
Some requests for consideration:
*Simplify Computer programming (and others like Console game programming into the same category Programming).
*Simplify Computer software as Software (move open source as a sub-category there).
*Simplify Computer science and Computer engineering as Computing (this can be tricky but will simplify overall categorization without a specific loss of metadata information, I understand that it attempts to classify some areas as scientific but the classification is not as exact when dealing in computation).
*I miss the Programming category, for instance &quot;Algorithms and data structure&quot; or &quot;Software reverse engineering&quot; would best fit there. The clean/small title and specific languages categories is also very much missed. (in a Programming languages as a subcategory).  --[[User:Panic2k4|Panic]] ([[User talk:Panic2k4|talk]]) 19:35, 6 June 2009 (UTC)

: Well, the move towards longer category titles makes it so that two-word category titles that are sentence case will avoid conflicts with two-word books that are title case.  Merging Computer science and Computer engineering in Computing would be problematic.  Right now Computing is a top-level category, so that would cause it to become very large with all the books currently in those two categories. That move would have to be part of a larger reorganization to be successful. You can find programming language categories in [[:Category:Programming languages by family]].  And the longer names in there were created because things like Cocoa, Java, and Ruby, can reference things other than programming languages.

: As for Programming, [http://en.wikibooks.org/w/index.php?title=Category%3AProgramming&amp;diff=1503675&amp;oldid=1496111 this revision] of it should prove that it was actually Darklama who initiated the move to [[:Category:Computer programming]] and [[:Category:Computer engineering]].  I just followed through to make that happen.  Darklama's area of expertise is computer science/programming and has made several changes under Computing.  Even if Programming would be better than Computer programming, it'd be contrary to the direction Darklama wanted to go in and things work more smoothly when we work together.

: I am certainly open to suggestions and do not intend for anyone to think the current organization is firm, but since Darklama has played such a key role in shaping how Computing looks today, he needs to be brought in on this discussion before any massive changes can be made. I see from both your user pages that you are both interested in computer science/programming, so I think discussions would more fruitful involving you two primarily. I'll leave him a note asking for input on your ideas, so stay tuned. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 20:03, 6 June 2009 (UTC)

: Actually Whiteknight first started Computer Engineering in 2006, I merely moved it to a lowercase name to be consistent with other subject categories. I don't think the categories should be simplified. First the longer names can reduce the possibility of conflicting with book titles. Second if people do a search using &quot;computer&quot; they can find the engineering, programming, software, etc. categories with the longer names, but not with the shorter names. Third computer science and computer engineering shouldn't be merged into computing because there distinctly separate fields. Fourth if you look at [[:Category:Computing]] you can see that computer science, computer programming and computer software are already listed as related categories so there is no need to merge the categories. Software reverse engineering right now is in computer engineering, but at some point I hope to make a [[w:Software engineering|Software engineering]] category. Algorithms and data structure are in a related category link to from the computer programming category. I thought I had put computer engineering into computing but apparently I didn't that is one change I can make to improve that situation. [[:Category:Computer programming languages]] replaces the programming languages category. I would also like to replace the console game programming category with an electronic games programming category to compliment [[:Category:Electronic games]], which brings up another point. Fifth &quot;programming&quot; can also refer to television programming, radio programming, music programming, and other sorts of programming that has nothing to do with computers. Sixth a subject page can be created to list books from the many categories to compensate for these changes, while combining categories would result in a loss of useful information. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 21:01, 6 June 2009 (UTC)
== Administrator ==

Hi Adrignola,

If I were to nominate you for admin rights, would you accept?  The work you've done here has clearly demonstrated your thoughtfulness, attention to detail, and general knowledge not only of the MediaWiki software, but also of how the Wikibooks community operates.  Having you as an admin here would do nothing but enhance this project. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 13:08, 8 June 2009 (UTC)
: I am pleased that you think so highly of me.  I have a website I operate for an open-source game being developed where had I set up and now manage the MediaWiki installation there so I had a certain amount of knowledge of MediaWiki before I started becoming active here.  However, that site is quite inactive because the game is not finished yet, so it's been a learning experience seeing it in action here.  Wikibooks does feel like a community and that gave me the inspiration and confidence to attempt the significant categorization effort you've no doubt noticed.  I can't think of any reason not to accept, so yes, I would accept.  I hope my efforts so far and efforts to come will benefit the project, regardless of the outcome. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 14:23, 8 June 2009 (UTC)
::Thanks.  I'll put up the nomination shortly. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 14:39, 8 June 2009 (UTC)
::OK, it's up at [[Wikibooks:Requests for permissions]].  The next step is for you to accept, and then voting can begin. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 14:44, 8 June 2009 (UTC)
== Enhancing subject pages ==

I've been working on and off in my userspace on ways to improve subject pages. [[User:Darklama/Subject]] has what I've been working on. I plan to eventually turn it into several templates. I think this sort of thing would be good for the computer programming, education and languages subject pages and with some changes for a lot of other pages too. Any thoughts? --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 23:03, 8 June 2009 (UTC)

: I think some might be disappointed that featured books aren't shown on the page.  Recategorizing would be more difficult. Right now you only have to change the subject and category of the same name.  This layout requires you to change all the parent subjects that include that subject you're recategorizing on the same page as the books filed into the parent subject itself. Then there's the question of what sub-subjects get top billing on the top-level subject page.  For instance, computer science isn't listed on the page for Computing.  And what if someone's interested in computer programming libraries but sees the pages listed under the computer programming heading and thinks that's all there is, when libraries are actually filed in a subcategory of computer programming?

: Those are ''constructive'' criticisms.  Some things I especially like are the use of color beyond purple and the elimination of collections, which I've yet to see done for any books and of which I've yet to fully grasp the use of.  I wasn't involved in the decision to move to subjects, so I don't know if there were any additional goals beyond the dynamic listing of books in a subject to know how close the current subjects are to their vision. I do believe there's room for improvement and so I encourage experimentation since creative design is not a strong point of mine. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 23:25, 8 June 2009 (UTC)

:: I plan to include featured books in it, just haven't yet. This layout is only intended for some subject pages. For most subject pages there would be one list of books like now. I know some people prefer the layout of the Languages bookshelf over the Languages subject page, which is where the idea of using multiple book listing comes into play for some subject pages.
:: Beyond moving toward a more flexible system than bookshelves and departments there aren't really any specific community goals or visions for the subject pages. Experimentation is suppose to be fine. For myself I prefer to think of the subject pages as a web rather then as a hierarchy and how I'd like other people to see it if I can. Which is part of why I replaced &quot;Subtopics&quot; with &quot;Related Subjects&quot; at one point in Whiteknight's template. Another part of that goal that isn't apparent from my subject page is that instead of using back links, subject pages like Subject:Computing would also be categorized in each of its related categories too, so that it would show up in the related subjects list, resulting in a more dynamic two way link between subject pages that requires even fewer changes to update.
:: Collections are intended to provide an easy way to generate PDF files for books, so might eventually replace the PDF list. Collections can also be printed and generate other formats, so they might also eventually replace the print versions books have as well. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 00:14, 9 June 2009 (UTC)
== Categorizing pages that don't have their own identities ==

There are three pages in the [[Conlang]] book that are effectively sections of the book's main page.  Each of them manifests as part of the main page and can be edited via an edit button in that part of the main page &amp;mdash; and each of them should not be edited or viewed outside of that context.  I deliberately didn't categorize them because I didn't want any categories pointing to these inherently non-independent pages.  As part of your heroic efforts at cleaning up categorization, though, you added the usual book-category code to each of them.  Rather than knee-jerk decategorizing them again, I thought I'd check with you first.  Is there some additional factor that interferes with my reason for not categorizing them?  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 06:34, 16 June 2009 (UTC)
: Having a category on them prevents them from showing up in [[Special:UncategorizedPages]], allowing for easier viewing of new books/pages and also double-checking to make sure new pages weren't accidentally created as standalone instead of subpages.  Could we put the pages you mention in, say, [[:Category:Conlang/Structural]] (or your choice), where that category is filed in [[:Category:Conlang]] and holds all the pages that are structural and not content-related? I do that for books with a lot of templates using Bookname/Templates or images using Bookname/Images. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 14:33, 16 June 2009 (UTC)
:: A very solid additional factor.  I'll give it some thought, and meanwhile the book category will do to keep Special:UncategorizedPages happy.  Thanks.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 15:39, 16 June 2009 (UTC)
== [[Using Wikibooks]] ==

Hi Adrignola,

I was wondering if I could interest you in writing a section of [[Using Wikibooks]] covering subjects and categories and their proper use.  It could answer questions like:
*What's the difference between subjects and categories?
*What subject should I file a book under, and how do I do that?
*What sort of subcategories should a book have?
I'm sure you can think of other aspects that elude me ATM.  If you're ambitious, you could even help us catch the clue train about DDC and LOC.  My thinking is that the better people understand what you're doing and what the logic is, the smaller the messes they will make and the better off the project will be.  --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 01:31, 17 June 2009 (UTC)
: Well, sure. I ought to be something of an expert on all that by now. I'll try not to duplicate [[Wikibooks:CCO Resources]] or [[Help:Categories]] by taking a different tack. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 01:39, 17 June 2009 (UTC)
::I've taken a crack at it, Jomegat. If you could be so kind as to do a peer review? [[Using Wikibooks/Subjects, Categories, and Classifications]]. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 05:21, 17 June 2009 (UTC)
:::Thank you!  I did make one change to [[Using Wikibooks/Subjects, Categories, and Classifications]] to hopefully clarify the text.  You should definitely fact-check it though. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 13:05, 17 June 2009 (UTC)
== Congratulations on your RFA ==

Feel free to ask if the buttons present any mysteries :-). --[[User:SB_Johnny|&lt;font color=&quot;green&quot;&gt;'''SB_Johnny'''&lt;/font&gt;]]  &lt;sup&gt;[[User_talk:SB_Johnny|&lt;font color=&quot;green&quot;&gt;talk&lt;/font&gt;]]&lt;/sup&gt; 20:44, 17 June 2009 (UTC)
:Congrats from me too, and hoorays! --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 20:52, 17 June 2009 (UTC)
:: Thanks for your support. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 22:41, 17 June 2009 (UTC)

== creating books? ==

Please help me if you can. Thanks --[[User:WokHush|WokHush]] ([[User talk:WokHush|talk]]) 00:14, 18 June 2009 (UTC)
== Welcome to the team, admin! ==

Thanks for agreeing to help with [[WB:ADMIN|project maintenance]]. There are several scripts you may be interested in using to make common administrative tasks easier. All can be enabled on the ''Gadgets'' tab of ''[[Special:Preferences|my preferences]]'':
*[[User:Mike.lifeguard/TW|Twinkle Speedy]]
*Range and wildcard contributions
*Modify rollback
*AJAX patrolling
*Clean delete reasons
*Autodelete links

As well, you may wish to join us in [[WB:IRC|IRC]] at [[irc:wikibooks|#wikibooks]] for work and play, or on the [[WB:ML|mailing list]] [[mail:textbook-l|textbook-l]]. If you need help with the tools, feel free to leave a message on my talk page.
Congrats again &amp; I look forward to working with you. &amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 15:29, 18 June 2009 (UTC)
: Thanks for the welcome. I've done some tagging of unlicensed images with Twinkle already and warning/welcoming of users with other gadgets. It is a very convenient tool. I subscribed to the mailing list and I've registered a nickname and am working on a cloak for IRC chats. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 19:30, 18 June 2009 (UTC)

== Uncreated &quot;book&quot; category of template-space pages ==

My [[Template:Navlist]] suite has an accidental, uncreated, sporadically populated &quot;book&quot; category, [[:Category:Template:Navlist]] &amp;mdash; which comes about because some templates in the suite invoke {{tl|BookCat}} to automatically categorize the calling page, and some pages in the suite invoke those templates.  Is this category as-is apt to cause some sort of problem down the road, or is it harmless as-is?  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 20:55, 18 June 2009 (UTC)
:It will make the category appear in [[Special:WantedCategories]], but other than that, I don't see a problem, as long as your pages have other categories on them that do exist (so they'll appear somewhere). -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 20:57, 18 June 2009 (UTC)
::Should all template-space pages be categorized (that is, generic ones, not affiliated with a particular book)?  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 22:21, 18 June 2009 (UTC)
:::I would say that they should, given the existence of [[:Category:Templates]]. (I've not gone through that category, yet, so it's probably messy.). -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 22:23, 18 June 2009 (UTC)
:::I'd probably eventually get to going through [[Special:UncategorizedTemplates]], so templates that are categorized will help out there. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 22:31, 18 June 2009 (UTC)
::::Perhaps then I will create and systematically populate [[:Category:Template:Navlist]], and put it in [[:Category:Navigational templates]].  (Good luck if you do tackle template space; it looks like about two thousand out of four thousand pages there are uncategorized.)  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 23:06, 18 June 2009 (UTC)
:::::Sometimes I wonder if I'm somewhat masochistic... -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 23:08, 18 June 2009 (UTC)

== A quick question ==

I ran across something I thought was odd and I thought I would ask you what to think about it.  Some pages (I'll take as an example [[Functional_Analysis/Hilbert_spaces]]) place themselves in the Category corresponding to the book by having a tag like &lt;nowiki&gt;{{subject|Functional_Analysis/Hilbert_spaces}}&lt;/nowiki&gt;.  This is a bit different then things I have usually seen and I was curious if it had undesired results.  But before I started reading the template to figure out exactly what it would do I thought I would ask someone a bit more knowledgeable then myself. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 09:34, 19 June 2009 (UTC)

:Just as {{tlx|BookCat}} is intended for subpages, but will alter what it does if accidentally placed on the main page of a book, {{tlx|Subjects}} is intended for the main page of a book, but will alter what it does if placed on a subpage of a book. Someone cleverly designed the code so that, no, there are no unintended consequences. It does leave at least three different methods to categorize a book's subpages: {{tlx|BookCat}}, {{tlx|Subject}}, and &lt;nowiki&gt;[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]&lt;/nowiki&gt;. Which one to use really depends on personal preference, since they produce the same result. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 11:55, 19 June 2009 (UTC)
:: A bot could parse uses of the subjects template on subpages for its own purposes, making there use on subpages a form of meta data. Of course that potential benefit is a personal preference too. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 12:49, 19 June 2009 (UTC)
== Categories of non-mainspace pages ==

I'm trying to suss out some grand-scale issues in arrangement of categories of non-mainspace pages; most of this I've been thinking about just recently with regard to template space, but one part of it I've also been mulling over for some time with regard to Wikijunior.  (I do apologize for springing this on you when you've already got more than enough on your plate already; but it seemed like a good idea to try to clear these broad issues out of the way sooner rather than later.)

You'll recall that since {{tl|BookCat}} was being incidentally applied to several pages in my Template:Navlist suite anyway, I categorized all of them by simply adding {{tl|BookCat}} to the rest and creating [[:Category:Template:Navlist]].  I had initially worried that it would seem anomalous to have a category whose name begins with &quot;&lt;tt&gt;Template:&lt;/tt&gt;&quot;, but in the event it seems to me to work out well, because when you look at {{nowrap|[[:Category:Navigational templates]]}}, this way ''everything'' belonging to it starts with &quot;&lt;tt&gt;Template:&lt;/tt&gt;&quot; &amp;mdash; both member category and member pages.

Now, the vast majority (I think) of template-space pages are actually specific to particular books; and in your Using Wikibooks write-up, you've recommended putting such templates in a subcategory of the book category called&amp;nbsp; &lt;tt&gt;Category:My Book/Templates&lt;/tt&gt;.  But, logically, should all pages in template space be somewhere under [[:Category:Templates]]?  Because if they should, then these template subcategories of book categories should have a place in the hierarchy depending from &lt;tt&gt;Category:Templates&lt;/tt&gt;.  (And if not, then &lt;tt&gt;Category:Templates&lt;/tt&gt; should probably be called something else, like&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Generic templates&lt;/tt&gt;}}.)

: ''(A side problem at this point is where in the hierarchy to put them that won't swamp the existing categories of generic templates.  For example, there are probably a lot of book-specific navbox templates, but putting them directly in&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Navigational templates&lt;/tt&gt;}}&amp;nbsp; would make the generics hard to find.  Perhaps one could just throw all the subcategories of book categories into a&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Book-specific templates&lt;/tt&gt;}}?  If more precision is needed, one could also have subcategories like&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Book-specific navigational templates&lt;/tt&gt;}}, though that seems liable to get out of hand.)''

There seems to be at least some merit, though, to giving these book-specific categories names starting with &quot;&lt;tt&gt;Template:&lt;tt&gt;&quot;, thus&amp;nbsp; &lt;tt&gt;Category:Template:My Book&lt;/tt&gt;&amp;nbsp; rather than&amp;nbsp; &lt;tt&gt;Category:My Book/Templates&lt;/tt&gt;.  Besides the straightforwardness of prefixing space-specific category names with the name-prefix of the space, this also means that ''if'' the book-specific templates for {{nowrap|&lt;tt&gt;My Book&lt;/tt&gt;}} are given names of the form {{nowrap|&lt;tt&gt;Template:My Book/Some template&lt;/tt&gt;}}, then generic categorization techniques such as {{tl|BookCat}} could be used.  Were we to go with the &lt;tt&gt;Category:Template:&lt;/tt&gt; form, we'd want to recommend the {{nowrap|&lt;tt&gt;Template:My Book/Some template&lt;/tt&gt;}} form.  (I might actually have seen a semi-recommendation of that naming scheme, somewhere or other.)

A similar situation exists with Wikijunior pages:  the book categories there, that I've seen, always have to be written out manually because they are prefixed with &lt;tt&gt;Wikijunior_&lt;/tt&gt; rather than &lt;tt&gt;Wikijunior:&lt;/tt&gt;, e.g. {{nowrap|[[:Category:Wikijunior The Elements]]}} rather than {{nowrap|[[:Category:Wikijunior:The Elements]]}}, so that techniques like {{tl|BookCat}} cannot be used.

Looking over all that, there seem to be three distinct possibilities raised.
* Put book-specific templates in a catch-all&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Book-specific templates&lt;/tt&gt;}}.
* Give template subcategories of book categories names of the form&amp;nbsp; {{nowrap|&lt;tt&gt;Cagetory:Template:My Book&lt;/tt&gt;}}.
* Give Wikijunior book categories names of the form&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Wikijunior:My Book&lt;/tt&gt;}}.

Thoughts?  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 15:13, 19 June 2009 (UTC)

: I noticed that with Wikijunior. Historically the categories matched the books' names &amp;mdash; they were moved to the Wikijunior namespace later when it was created. I'd have to recategorize all the Wikijunior pages to correct that (though it wouldn't be any more work than categorizing an uncategorized page).  I would agree with the effort to create new Wikijunior categories and correct their books' pages' categories.

: I would prefer book-specific templates be filed in their book's category, regardless of what the name of their container category is. The generic category would get too cluttered otherwise.

: Supporting the above, I would agree that [[:Category:Templates]] needs to have a name change. Wikipedia has [[w:Category:Wikipedia templates]], so the top-level category for generic templates on Wikibooks can be [[:Category:Wikibooks templates]]. It's blue because it's a redirect to [[:Category:Templates]]. (That should be reversed).

: I do agree that using the form &lt;tt&gt;Template:My Book/Template Blah&lt;/tt&gt; would enable easier categorizing using {{tlx|BookCat}}. The container category would be &lt;tt&gt;Category:Template:My Book&lt;/tt&gt;, yes.  You'd have to manually specify your book's category when filing your template category, still. That would differ from using &lt;tt&gt;Category:My Book/Templates&lt;/tt&gt; where you have to manually specify the category on the templates ''and'' the template category. I happen to like the look of &lt;tt&gt;Category:My Book/Templates&lt;/tt&gt;, though, but since it's something unique to each book, authors can use whatever they feel is best. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 15:31, 19 June 2009 (UTC)

:: I agree the Wikijunior categories should be renamed to Category:Wikijunior:Book. I also don't like a catch-all category for all book-specific templates. Keeping track of templates would become more difficult. Personally I think a lot of book-specific templates don't need to be book-specific. I think the only templates that need to be book specific are templates that provide navigation between pages, and even that isn't really necessary for books that only care to have back, forward, and table of content links. Books are required by policy to use the &lt;tt&gt;Book/Page&lt;/tt&gt; form for any pages of the book, and I think sticking with that form for any templates and categories for the book creates consistency and is a good idea. Other forms have been discussed in the past on the talk pages for Naming convention, Hierarchy and Naming policy, and rejected by the community. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 16:55, 19 June 2009 (UTC)

::: Okay,&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Book-specific templates&lt;/tt&gt;}}&amp;nbsp; was a daft idea; it would serve no useful organizational purpose.  Renaming&amp;nbsp; &lt;tt&gt;Catetory:Templates&lt;/tt&gt;&amp;nbsp; to {{nowrap|&lt;tt&gt;Category:Wikibooks templates&lt;/tt&gt;}}&amp;nbsp; appeals to me.

::: I agree, actually, about the look/uniformity of&amp;nbsp; {{nowrap|&lt;tt&gt;Category:My Book/Templates&lt;/tt&gt;}}.  Also, because we are only filing this category under the book category, and not at all under the&amp;nbsp; &lt;tt&gt;Category:Templates&lt;/tt&gt;&amp;nbsp; hierarchy, mnemonic sense is all for prefixing the category name with the book name rather than with&amp;nbsp; &lt;tt&gt;Template:&lt;/tt&gt;.  It occurs to me that if the templates are called&amp;nbsp; {{nowrap|&lt;tt&gt;Template:My Book/Template Blah&lt;/tt&gt;}}, one could exploit that naming scheme with a template alternative to&amp;nbsp; &lt;tt&gt;Template:BookCat&lt;/tt&gt;, call it&amp;nbsp; &lt;tt&gt;Template:BookTemplateCat&lt;/tt&gt;, that would automatically add&amp;nbsp; {{nowrap|&lt;tt&gt;Template:My Book/Template Blah&lt;/tt&gt;}}&amp;nbsp; to&amp;nbsp; {{nowrap|&lt;tt&gt;Category:My Book/Templates&lt;/tt&gt;}}.

::: I too think that most book-specific templates don't have to be book-specific, but categorizing what we already have seems both simpler than, and a facilitator to, thoughtfully reforming detailed template tactics across the whole of Wikibooks.  Sufficient unto the day is the colossal task thereof.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 17:33, 19 June 2009 (UTC)

:::: I knew I forgot to comment on something. &lt;tt&gt;Category:Wikibooks templates&lt;/tt&gt; could be mistaken for templates used in the Wikibooks namespace only. &lt;tt&gt;Category:Generic templates&lt;/tt&gt; or &lt;tt&gt;Category:General templates&lt;/tt&gt; could be confused for templates for generic or general uses rather than a root/top category for all templates. Why does the category name need to be any more specific? --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 18:20, 19 June 2009 (UTC)

:::: I don't have my heart set one way or the other. Keeping it as it is means less work recategorizing. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 18:23, 19 June 2009 (UTC)

::::: As I understand it, [[:Category:Templates]] is (whatever one calls it) the common ancestor of all non-book-specific categories of templates.  It isn't the root category of all templates, because some book-specific templates will not belong to it or any descendant of it.  It isn't a category only of generic templates, because some book-specific templates will belong to various subcategories of it (such as [[:Category:Exclude in print]], or [[:Category:Intricate templates]]).  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 18:58, 19 June 2009 (UTC)

:::::: Not that its likely to make a difference, but I meant common ancestor for all templates and template categories. Some book specific templates will be listed somewhere within Category:Templates because they are categorized by other means too. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 20:17, 19 June 2009 (UTC)

::::::: Under the current plan, there will be both templates, and categories of templates, that are not descended in any degree from&amp;nbsp; &lt;tt&gt;Category:Templates&lt;/tt&gt;.  This is because&amp;nbsp; {{nowrap|&lt;tt&gt;Template:My Book/Template Blah&lt;/tt&gt;}}&amp;nbsp; might belong directly only to&amp;nbsp; {{nowrap|&lt;tt&gt;Category:My Book/Templates&lt;tt&gt;}}, which in turn belongs directly only to&amp;nbsp; {{nowrap|&lt;tt&gt;Category:My Book&lt;/tt&gt;}}, which is not a descendant of&amp;nbsp; &lt;tt&gt;Category:Templates&lt;/tt&gt;.  It would be different if we also filed each&amp;nbsp; {{nowrap|&lt;tt&gt;Category:My Book/Templates&lt;/tt&gt;}}&amp;nbsp; in a catch-all&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Book-specific templates&lt;/tt&gt;}}, which would itself belong to&amp;nbsp; &lt;tt&gt;Category:Templates&lt;/tt&gt;&amp;nbsp; &amp;mdash; but unless we do that, some templates and categories of templates will not be descended from&amp;nbsp; &lt;tt&gt;Category:Templates&lt;/tt&gt;.  Indeed, I'm now thinking I was too hasty in withdrawing my proposal for&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Book-specific templates&lt;/tt&gt;}}.  It would perform two moderately useful functions, by&amp;nbsp; (1)&amp;nbsp;clarifying that those templates are book-specific, and&amp;nbsp; (2)&amp;nbsp;causing&amp;nbsp; &lt;tt&gt;Category:Templates&lt;/tt&gt;&amp;nbsp; to be, indeed, the root/top category of all templates.  Function&amp;nbsp;(1) would be especially useful, because systematically identifying all book-specific templates would make them easy to target in a later campaign to drastically reduce the number of book-specific templates.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 21:09, 19 June 2009 (UTC)

(reset)

I don't focus on [[:Category:Templates]] as the root. I see ''[[:Category:Categories]]'' as the root. If you want an alphabetical index to search for a specific book's templates, wouldn't [[Special:PrefixIndex]] with the template namespace do?  If filing template categories in {{nowrap|&lt;tt&gt;Category:Book-specific templates&lt;/tt&gt;}} would result in a category tree like that for the subject categories that books are put in, in order to organize them, then why not leave them filed in their book's category, which is itself part of the main category tree and allows the templates to move with the book if the book is refiled? I'd need more information on how {{nowrap|&lt;tt&gt;Category:Book-specific templates&lt;/tt&gt;}} won't simply duplicate [[:Category:Books by subject]]. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 04:42, 20 June 2009 (UTC)

: Here is the arrangement I'm now talking about.
:* Each book-specific template has a name of the form&amp;nbsp; {{nowrap|&lt;tt&gt;Template:My Book/Blah&lt;/tt&gt;}}, and contains markup &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;tt&gt;&lt;nowiki&gt;[[Category:{{BOOKNAME}}/Templates|{{FULLCHAPTERNAME}}]]&lt;/nowiki&gt;&lt;/tt&gt; &lt;br/&gt;(which might be generated by a template call&amp;nbsp; &lt;tt&gt;&lt;nowiki&gt;{{BookTemplateCat}}&lt;/nowiki&gt;&lt;/tt&gt;).  Presumably, calls to this template from within the book would have the form&amp;nbsp; {{nowrap|&lt;tt&gt;&lt;nowiki&gt;{{{{BOOKNAME}}/Blah|...}}&lt;/nowiki&gt;&lt;/tt&gt;}}.
:* {{nowrap|&lt;tt&gt;Category:My Book/Templates&lt;/tt&gt;}}&amp;nbsp; contains markup &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;tt&gt;&lt;nowiki&gt;[[Category:{{BOOKNAME}}|{{FULLCHAPTERNAME}}]]&lt;/nowiki&gt;&lt;/tt&gt; &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;tt&gt;&lt;nowiki&gt;[[Category:Book-specific templates|{{BOOKNAME}}]]&lt;/nowiki&gt;&lt;/tt&gt; &lt;br/&gt;(which might be generated by a template call, perhaps&amp;nbsp; &lt;tt&gt;&lt;nowiki&gt;{{Book-specific templates}}&lt;/nowiki&gt;&lt;/tt&gt;).
:* {{nowrap|&lt;tt&gt;Category:Book-specific templates&lt;/tt&gt;}}&amp;nbsp; contains markup &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;tt&gt;&lt;nowiki&gt;[[Category:Templates]]&lt;/nowiki&gt;&lt;/tt&gt;
:* As an alternative for a given book, if one didn't want to have a separate&amp;nbsp; {{nowrap|&lt;tt&gt;Category:My Book/Templates&lt;/tt&gt;}}, one could have each&amp;nbsp; {{nowrap|&lt;tt&gt;Template:My Book/Blah&lt;/tt&gt;}}&amp;nbsp; call&amp;nbsp; &lt;tt&gt;&lt;nowiki&gt;{{Book-specific templates}}&lt;/nowiki&gt;&lt;/tt&gt;, instead of&amp;nbsp; &lt;tt&gt;&lt;nowiki&gt;{{BookTemplateCat}}&lt;/nowiki&gt;&lt;/tt&gt;.  (These may not be the ideal names for the two categorizing templates, after all...)
:* It would also be possible for book-specific templates that don't conform to the naming convention to manually put themselves into the appropriate category(-ies).  Wikijunior book-specific templates would probably always be non-conformant; I don't see any natural way to extend the book-specific-template naming convention to cover Wikijunior.
:Under this arrangement,
:* Every book-specific template would belong either directly to its book category, or to a child of its book category.  This is just as in the flat- and deep-filing arrangements you recommended in Using Wikibooks, so I assume that this would be fine when renaming a book.
:* Every book-specific template would belong either directly to&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Book-specific templates&lt;/tt&gt;}}, or to a child of that category.  This would not clutter the pre-existing categories of templates, because all the book-specific templates and book-specific template categories would be tucked away under&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Book-specific templates&lt;/tt&gt;}}; the only effect on&amp;nbsp; &lt;tt&gt;Category:Templates&lt;/tt&gt;&amp;nbsp; would be the addition of one child category, and there would be no effect at all on any of the other pre-existing categories of templates.  It would provide us with a convenient way of finding all book-specific templates; it would clarify the status of these templates ''as'' book-specific; and it would guarantee that, to the extent that everything is conformant, &lt;tt&gt;Category:Templates&lt;/tt&gt; is the root/top of all templates and categories of templates &amp;mdash; that is, every template-space page, and every category of only template-space pages, occurs somewhere in the hierarchy of categories descending from&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Templates&lt;/tt&gt;}}.
: --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 15:48, 20 June 2009 (UTC)
:: I've created {{tlx|BookTemplateCat}} that puts a book's templates in their book's template category '''and''' also puts book template categories in their book's category and [[:Category:Book-specific templates]]. See it in action at [[Template:FHSST Physics/Units]] and [[:Category:FHSST Physics/Templates]]. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 16:49, 20 June 2009 (UTC)
::: Very clean.
::: Do I take it you're inclined, then, to always have a&amp;nbsp; {{nowrap|&lt;tt&gt;Category:My Book/Templates&lt;/tt&gt;}}&amp;nbsp; when there are book-specific templates, rather than only when a given book has a lot of them?  I admit I'd prefer that uniformity myself.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 18:12, 20 June 2009 (UTC)
:::: I am inclined.  I find that if an author has made one template or uploaded one image, they'll likely make/upload more.  Also, it's easier to explain things in one standard way than to make exceptions and try to deal with things like how many templates a book must have before it has a /Templates category. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 18:17, 20 June 2009 (UTC)
::::: Darklama had the great idea of adding the code to {{tlx|BookCat}} to have one template to rule them all. It's done, so replace all instances of BookTemplateCat above with BookCat. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 20:38, 20 June 2009 (UTC)

:::::: It ''is'' a great idea... for Wikibooks.  Go team.

:::::: It does make a mess out of my categorization of the [[Template:Navlist]] suite, whose book category should ''not'' be called [[:Category:Navlist/Templates]] since it is not a category of book-specific templates for a book called&amp;nbsp; &lt;tt&gt;Navlist&lt;/tt&gt;.  I tried (hoping against hope) creating a redirect from [[:Category:Navlist/Templates]] to [[:Category:Template:Navlist]], but the member pages are left behind in the category with the wrong name.  I suppose I'll probably create a special template just for use by the suite, that checks to see whether the client page has bookname&amp;nbsp; &lt;tt&gt;Template:Navlist&lt;/tt&gt;, and does&amp;nbsp; {{nowrap|&lt;tt&gt;&lt;nowiki&gt;[[Category:{{FULLBOOKNAME}}|{{FULLPAGENAME}}]]&lt;/nowiki&gt;&lt;/tt&gt;}}&amp;nbsp; if so,&amp;nbsp; {{nowrap|&lt;tt&gt;&lt;nowiki&gt;{{BookCat}}&lt;/nowiki&gt;&lt;/tt&gt;}}&amp;nbsp; otherwise.  Sigh.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 22:51, 20 June 2009 (UTC)

::::::: Sorry about that. It does sound like custom code will be the way to go.  What's a bit more custom code for your suite?  To continue your analogy above, thanks for &quot;taking one for the team&quot;. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 22:58, 20 June 2009 (UTC)

== Undefined FULLCHAPTERNAME variable ==

There are two problems I see with your placement of chapter names as part of the category system, and that is for most of these older books, FULLCHAPTERNAME is not defined, and also, the way you are using the category command is not the way it wants to be used. The Category command does not take two fields the way it is written so that even if you did, have a valid variable it would not result in a change in the category. The way I have managed to get chapter to work is to put it after a &lt;nowiki&gt;/&lt;/nowiki&gt; character then you get &lt;nowiki&gt;Bookname/Chaptername&lt;/nowiki&gt; as its category. I hope this helps --[[User:Graeme E. Smith|Graeme E. Smith]] ([[User talk:Graeme E. Smith|talk]]) 18:39, 20 June 2009 (UTC)

: I'm afraid I'm not understanding where you're having a problem. Do you have a book or one of its pages that you're not getting the code on Wikibooks' documentation pages to work with? -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 19:01, 20 June 2009 (UTC)

:: Perhaps there is some failure of communication about what the markup is meant to do?

:: Piping a category link provides a sort key that is applied when listing the page in the category.  That is,&amp;nbsp; {{nowrap|&lt;tt&gt;&lt;nowiki&gt;[[{{BOOKNAME}}|{{FULLCHAPTERNAME}}]]&lt;/nowiki&gt;&lt;/tt&gt;}}&amp;nbsp; on a page&amp;nbsp; &lt;tt&gt;[[Conlang/Beginner]]&lt;/tt&gt;&amp;nbsp; would cause that page to be added to&amp;nbsp; &lt;tt&gt;[[:Category:Conlang]]&lt;/tt&gt;, and appear in that category alphabetically under &lt;tt&gt;B&lt;/tt&gt; (for &lt;tt&gt;Beginner&lt;/tt&gt;) rather than &lt;tt&gt;C&lt;/tt&gt; (for &lt;tt&gt;Conlang/Beginner&lt;/tt&gt;).  {{tl|FULLCHAPTERNAME}} is a template that strips the book name off the front of the page name, unless the page is the main page of its book.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 19:14, 20 June 2009 (UTC)

Well color me embarrassed. See I thought it should show up in the Category listing at the bottom of the page, but never thought about the category listing at the category site. Now I've got to find the one I changed and change it back!   Silly Me--[[User:Graeme E. Smith|Graeme E. Smith]] ([[User talk:Graeme E. Smith|talk]]) 23:37, 20 June 2009 (UTC)
== Featured Books ==

A user [[User:Triwikanto]] seems to have added a very new book to the featured books list.  I have removed it, but thought I should let an admin know.  [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 14:18, 22 June 2009 (UTC)
Never mind, I think Darklama is on top if it. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 14:21, 22 June 2009 (UTC)
: Happy I could help. :P -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 14:23, 22 June 2009 (UTC)

== Moved Pages ==

I noticed you moved some pages into the [[Computer Programming Principles]] book. Troubleshooting Software has nothing to do with Error Handing in the context of this book. While a functional programming language may be helpful for a functional approach to software development its by no means the same thing. Ditto for Procedural. Debugging was probably the only chapter moved into the book so far that makes sense. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 17:11, 22 June 2009 (UTC)

: I hoped to give the book content to start with and simultaneously eliminate some of the pages of the Computer Programming book that is up for deletion, but that's fine if they aren't helpful. Figuring out what to do with the pages of that book will be a chore. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 17:28, 22 June 2009 (UTC)

:: I think a lot of them need to be merged into [[Programming Languages]], but I suggest you use {{tlx|mergeto}} and {{tlx|mergefrom}} to give time for discussion before moving this time in case anyone sees a problem with doing that. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 18:02, 22 June 2009 (UTC)

::: Most the pages of that book haven't had content (moves don't count) added to them in years from a spot-check. Would the above really be necessary? -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 18:17, 22 June 2009 (UTC)

::: I only see two pages to merge, though. [[Computer Programming/Imperative programming]] and [[Computer Programming/Aspect oriented programming]]. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 18:21, 22 June 2009 (UTC)

:::: If the book really haven't had any contributions in years then trying to initiate discussion isn't really necessary, but it can't hurt any either. I think [[Computer Programming/Functional programming]] and [[Computer Programming/Procedural programming]] can also go there, just would require a history merge. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 18:36, 22 June 2009 (UTC)
== BookCat ==

What would you think of the following changes to {{tlx|BookCat}}?

* When called from a template with no slash in its name (such as&amp;nbsp; {{nowrap|&lt;tt&gt;[[Template:Wikijunior:Languages]]&lt;/tt&gt;}}), the sort key would be &quot;&amp;nbsp;&quot; (same sort key as when called from the main page of a book).  This is what got me started thinking about changes to BookCat, when I saw how [[Template:Wikijunior:Languages]] was sorted in [[:Category:Wikijunior:Languages/Templates]].

* When called from a category whose name has a slash in it but is ''not'' of the form&amp;nbsp; {{nowrap|&lt;tt&gt;&lt;nowiki&gt;Category:{{FULLBOOKNAME}}/Templates&lt;/nowiki&gt;&lt;/tt&gt;}}, would put that category into the category named by removing the last part of the name (from the last slash on).  Thus,&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Book/Images&lt;/tt&gt;}}&amp;nbsp; would be put into&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Book&lt;/tt&gt;}}, while&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Book/Chapter/Section&lt;/tt&gt;}}&amp;nbsp; would be put into&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Book/Chapter&lt;/tt&gt;}}.
:: I considered adding a&amp;nbsp; {{nowrap|&lt;tt&gt;&lt;nowiki&gt;filing=deep&lt;/nowiki&gt;&lt;/tt&gt;}}&amp;nbsp; option, but wasn't sure whether it would be worth it.  Presumably it would change the behavior everywhere except in category space, where there might be a&amp;nbsp; {{nowrap|&lt;tt&gt;&lt;nowiki&gt;filing=flat&lt;/nowiki&gt;&lt;/tt&gt;}}&amp;nbsp; option.

* When called from a category with no slash in its name, would do nothing (hence, no harm).

I've set up a version of BookCat with these changes (and my attempt at appropriately modified documentation) at [[User:Pi zero/BookCat]], and tested all the cases I could think of off hand (I thought of thirty six cases, 6x3x2).  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 23:08, 23 June 2009 (UTC)

:I think those are great changes, like you made the template the way it always should have been. Your code's in {{tlx|BookCat}} now. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 23:18, 23 June 2009 (UTC)

== Categorizing Goodbook templates ==

Should the Goodbook templates that advertise featured books,
:{{fullurl:Special:PrefixIndex|prefix=Goodbook&amp;namespace=10}},
belong to the book categories of the books they advertise?  Or, for that matter, to their books' template categories?  I wouldn't have put them in the &lt;tt&gt;/Templates&lt;/tt&gt; categories, because they aren't book-specific &amp;mdash; they are used outside their books and not inside those books.  As templates that aren't book-specific, I wouldn't have put them in the book categories at all; but it looks like about ten out of eighty of them have been individually added to their book categories (e.g., [[Template:Goodbook/Ada Programming]]).

I've been crafting a surgical change to {{tl|Goodbook}} that would automatically add all of the Goodbook templates to {{nowrap|[[:Category:Wikibooks featured-book templates/Goodbook]]}}.  (Not without trepidation; beside the sensitivity of {{tl|Goodbook}} itself, I'm paranoid about my own absent-mindedness.)  The change could be modified to automatically add them to their book categories as well (or instead), ''if'' the Wikijunior ones are renamed from&amp;nbsp; {{nowrap|&lt;tt&gt;Template:Goodbook/Wikijunior My Book&lt;/tt&gt;}}&amp;nbsp; to&amp;nbsp; {{nowrap|&lt;tt&gt;Template:Goodbook/Wikijunior:My Book&lt;/tt&gt;}}.

As is, the change is right at the interface between the &lt;tt&gt;includeonly&lt;/tt&gt; and &lt;tt&gt;noinclude&lt;/tt&gt; blocks; it would replace
:&lt;tt&gt;&lt;nowiki&gt;&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Templates|{{SUBPAGENAME}}]]&lt;/nowiki&gt;&lt;/tt&gt;
with
:&lt;tt&gt;&lt;nowiki&gt;&lt;/includeonly&gt;{{#ifeq:&quot;{{FULLBOOKNAME}}&quot;|&quot;Template:Goodbook&quot;|[[Category:Wikibooks featured-book templates/Goodbook|{{CHAPTERNAME}} ]]}}&lt;noinclude&gt;&lt;/nowiki&gt;&lt;/tt&gt;
--[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 03:06, 24 June 2009 (UTC)
:Shouldn't that be &lt;tt&gt;&lt;nowiki&gt;&lt;/includeonly&gt;{{#ifeq:&quot;{{FULLBOOKNAME}}&quot;|&quot;Template:Goodbook&quot;| |[[Category:Wikibooks featured-book templates/Goodbook|{{CHAPTERNAME}} ]]}}&lt;noinclude&gt;&lt;/nowiki&gt;&lt;/tt&gt; (extra pipe to put category in false evaluation)? Otherwise I think not having them in the books' categories is fine. The featured book template on the books' main pages has a link to the goodbook template if someone wants to edit it. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 03:19, 24 June 2009 (UTC)

:: No, you want it in the true evaluation, so that it will apply just to those pages that transclude {{tl|Goodbook}} and, additionally, have names that start with &quot;&lt;tt&gt;Template:Goodbook&lt;/tt&gt;&quot;.  That's Goodbook itself and all its subpages.  Otherwise, it wouldn't categorize any of those pages, but it ''would'' put (for example) the [[Main Page]] into the /Goodbook category since {{tl|Goodbook}} does get transcluded there (which is why {{tl|Goodbook}} falls under the cascading protection of the Main Page).  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 03:37, 24 June 2009 (UTC)

::: I understand your logic, and also see why you couldn't put the code in the template yourself (cascading protection). I've added your code to the template. Since the majority are ''not'' put in the books' categories, I think that ''none'' of them should be put in the books' categories.  Looks like all the goodbook templates need null edits to show up in your category. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 03:46, 24 June 2009 (UTC)
== Wikijunior categories ==

Question (but at least it's a well-defined one this time).

When naming a book-specific template associated with a Wikijunior book, it would be messy to call it&amp;nbsp; {{nowrap|&lt;tt&gt;Template:Wikijunior:My Book/Blah&lt;/tt&gt;}}, because then you'd always have to include the&amp;nbsp; &lt;tt&gt;Template:&lt;/tt&gt;&amp;nbsp; prefix when calling it, i.e., {{nowrap|&lt;tt&gt;&lt;nowiki&gt;{{Template:Wikijunior:My Book/Blah}}&lt;/nowiki&gt;&lt;/tt&gt;}}&amp;nbsp; rather than&amp;nbsp;{{nowrap|&lt;tt&gt;&lt;nowiki&gt;{{Wikijunior:My Book/Blah}}&lt;/nowiki&gt;&lt;/tt&gt;}}&amp;nbsp; (because the latter looks in Wikijunior space instead of template space).

Should we, perhaps, use a slash in place of the internal colon, thus&amp;nbsp; {{nowrap|&lt;tt&gt;Template:Wikijunior/My Book/Blah&lt;/tt&gt;}}&amp;nbsp;?  This could be detected and compensated for by {{tl|BookCat}}.

If we do that, we might also want to apply the same transformation to the category names (more work for {{tl|BookCat}}).  That is, {{nowrap|&lt;tt&gt;Category:Wikijunior/My Book&lt;/tt&gt;}}&amp;nbsp; and&amp;nbsp; {{nowrap|&lt;tt&gt;Category:Wikijunior/My Book/Templates&lt;/tt&gt;}}.  That ''would'' be in the spirit of the [[Wikibooks:Naming policy]].  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 14:01, 21 June 2009 (UTC)

: To be clear: I'm actually of two minds about this, myself.  Maybe having to specify&amp;nbsp; &lt;tt&gt;Template:&lt;/tt&gt;&amp;nbsp; when calling a book-specific template isn't too high a price to pay for uniformity.  Maybe...  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 14:49, 21 June 2009 (UTC)

:: Take a look at {{tlx|wjt}} and see what you think. If you have &lt;tt&gt;Wikijunior:My Book&lt;/tt&gt; and want to use &lt;tt&gt;Template:Wikijunior:My Book&lt;/tt&gt;, place {{tlx|wjt}} on the page. For the same book, if you want to use &lt;tt&gt;Template:Wikijunior:My Book/Blah&lt;/tt&gt;, place {{tlx|wjt|Blah}} on the page. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 15:57, 21 June 2009 (UTC)

::: Try this:  rename it from&amp;nbsp; {{nowrap|&lt;tt&gt;Template:Wjt&lt;/tt&gt;}}&amp;nbsp; to&amp;nbsp; {{nowrap|&lt;tt&gt;Template:Wbt&lt;/tt&gt;}}&amp;nbsp; (or something), and in the markup, use&amp;nbsp; {{nowrap|&lt;tt&gt;&lt;nowiki&gt;Template:{{FULLBOOKNAME}}&lt;/nowiki&gt;&lt;/tt&gt;}}&amp;nbsp; instead of&amp;nbsp; {{nowrap|&lt;tt&gt;&lt;nowiki&gt;Template:Wikijunior:{{BOOKNAME}}&lt;/nowiki&gt;&lt;/tt&gt;}}.&amp;nbsp; Then it should work for mainspace books as well as Wikijunior books.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 16:42, 21 June 2009 (UTC)

:::: [[Image:Yes_check.svg|15px| ]] '''Done''' -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 17:23, 21 June 2009 (UTC)

:::: I've never cared for abbreviations since they can be hard to remember. Why not call it &lt;nowiki&gt;{{include}} or {{add}}&lt;/nowiki&gt;? --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 17:46, 21 June 2009 (UTC)

::::: You know, I know what you mean. But one might say &quot;Add what?&quot;, &quot;Include what?&quot;. How about a partner to {{tlx|BookCat}}?  I've named it {{tlx|BookTemplate}}. Too long? Just right? -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 19:34, 21 June 2009 (UTC)

:::::: For my part, &lt;tt&gt;BookTemplate&lt;/tt&gt;&amp;nbsp; is not too long, is nicely parallel to&amp;nbsp; &lt;tt&gt;BookCat&lt;/tt&gt;&amp;nbsp; (as you point out), and there's no obvious way to shorten it while keeping that style.  &lt;tt&gt;BookTemp&lt;/tt&gt;&amp;nbsp; would evoke&amp;nbsp; &lt;tt&gt;Temporary&lt;/tt&gt;&amp;nbsp; rather than&amp;nbsp; &lt;tt&gt;Template&lt;/tt&gt;.

:::::: Speaking of initialisms, am I alone in feeling that {{tl|LOC}} and {{tl|DDC}} are just gratuitous?  I mean, they're only used ''once per book!''&amp;nbsp;  Like it would kill us to write out&amp;nbsp; {{nowrap|&lt;tt&gt;&lt;nowiki&gt;{{Library of Congress|X}}&lt;/nowiki&gt;&lt;/tt&gt;}}&amp;nbsp; and&amp;nbsp; {{nowrap|&lt;tt&gt;&lt;nowiki&gt;{{Dewey Decimal|***}}&lt;/nowiki&gt;&lt;/tt&gt;}}&amp;nbsp; (or even add&amp;nbsp; &lt;tt&gt;classification&lt;/tt&gt;&amp;nbsp; to those), just once?  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 19:58, 21 June 2009 (UTC)

::::::: Personal I'd like to go with &lt;nowiki&gt;{{&lt;/nowiki&gt;&lt;span style=&quot;color:blue;&quot;&gt;catalog&lt;/span&gt;|X|100&lt;nowiki&gt;}}&lt;/nowiki&gt;. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 20:36, 21 June 2009 (UTC)

:::::::: &lt;nowiki&gt;{{&lt;/nowiki&gt;&lt;span style=&quot;color:blue;&quot;&gt;catalog&lt;/span&gt; | LOC=X | DDC=100 | Alpha=Y &lt;nowiki&gt;}}&lt;/nowiki&gt;&amp;nbsp; --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 20:46, 21 June 2009 (UTC)

BookTemplate should support passing parameters through to the book's template; I noticed this when, in field testing it on [[Wikijunior:Languages]], I encountered [[:Template:Wikijunior:Languages/Box]].  How about
:&lt;nowiki&gt;&lt;includeonly&gt;{{Template:{{FULLBOOKNAME}}{{#if: {{{1|}}} |/{{{1}}}}}|{{{2|}}}|{{{3|}}}|{{{4|}}}|{{{5|}}}}}&lt;/includeonly&gt;&lt;/nowiki&gt;
This works for passing parameters to the book's main template as well, via &lt;tt&gt;&lt;nowiki&gt;{{BookTemplate||...}}&lt;/nowiki&gt;&lt;/tt&gt;.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 13:20, 22 June 2009 (UTC)

: [[Image:Yes_check.svg|15px| ]] '''Done''' -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 13:34, 22 June 2009 (UTC)


Alas.  Looks like {{tl|BookTemplate}} needs to support a larger number of parameters; I'd suggest going all the way up to &lt;nowiki&gt;|{{17|}}&lt;/nowiki&gt;, to be safe.  I thought I was being cautious by providing for 4.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 14:59, 24 June 2009 (UTC)
: BookTemplate. Now with more parameters! -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 20:22, 24 June 2009 (UTC)
:: Excellent!  Thanks.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 20:34, 24 June 2009 (UTC)

== ROOTBOOKNAME ==

I've created a template {{tl|ROOTBOOKNAME}}.
* I suggest {{tl|BookTemplate}} should use ROOTBOOKNAME instead of FULLBOOKNAME (in both the documentation and the code).  This would allow BookTemplate to work right when viewing book templates that use it, and when using those book templates on talk pages, and when using it to call book templates from talk pages.
* It could also be used in documenting book and book-template categories, as in
::&lt;tt&gt;&lt;nowiki&gt;This category contains templates used in the [[{{ROOTBOOKNAME}}]] book.&lt;/nowiki&gt;&lt;/tt&gt;
* I'm not sure there isn't a better name than ROOTBOOKNAME, that I'm just not thinking of.
* I don't ''think'' there are any other cases that ROOTBOOKNAME should handle separately.
--[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 18:59, 25 June 2009 (UTC)

: Taken care of. I protected {{tlx|ROOTBOOKNAME}} at the same level as {{tlx|FULLBOOKNAME}} to prevent a security hole from opening. You think of nearly everything, so I doubt you've missed anything. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 19:08, 25 June 2009 (UTC)
== [[Adventist Youth Honors Answer Book/Nature/Seeds]] ==

This guy is persistent isn't (s)he?  My theory is that he's working on earning the honor and wants to print out &quot;his&quot; answers and turn them in to his instructor.  Dunno if that's the case or not, but it wouldn't be the first time. I left him a note.  --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 20:03, 25 June 2009 (UTC)

: Indeed. I felt like we were tag-teaming on that one. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 20:04, 25 June 2009 (UTC)

:: New target: [[Adventist Youth Honors Answer Book/Outreach/Family Life]]. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 20:05, 25 June 2009 (UTC)
:::I left a more stern message this time.  Seems to have calmed down a bit. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 20:24, 25 June 2009 (UTC)
== Limitations of BookTemplate ==

Although I do think {{tl|ROOTBOOKNAME}} is primordial enough that it's The Right Thing, this might not be true of {{tl|BookTemplate}}.  ''Maybe'' it isn't actually the Wrong Thing, but it may be only a tool for the majority of light applications, with a second, heavy-duty tool needed for special occasions.  In field-testing (on the seriously stressful case of False Friends of the Slavist), I'm now looking at a book-specific template with 171 unnamed parameters and 9 named parameters ({{tl|False Friends of the Slavist/MapConstructor}}).  That deserves some careful thought before acting.

Here's an idea I'm mulling over:  a higher-order template that generates as output the name of a book template, i.e., {{nowrap|&lt;tt&gt;&lt;nowiki&gt;&lt;includeonly&gt;Template:{{ROOTBOOKNAME}}&lt;/includeonly&gt;&lt;/nowiki&gt;&lt;/tt&gt;}}.  For example, if its name were&amp;nbsp; &lt;tt&gt;bt&lt;/tt&gt;, one would write&amp;nbsp; &lt;tt&gt;&lt;nowiki&gt;{{{{bt|MapConstructor}}|...}}&lt;/nowiki&gt;&lt;/tt&gt;.  Choosing a name for this device is something of a challenge; it should probably have a very short name (at worst, no longer than &quot;BookTemplate&quot;), and it may want to avoid having &quot;meta&quot; in its name lest that been confused with [[m:|Meta]].  I'm even half tempted by&amp;nbsp; &lt;tt&gt;bt&lt;/tt&gt;, despite my basic agreement with Darklama about initialisms.    --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 12:55, 26 June 2009 (UTC)

: Yes, that book you're dealing with is quite the challenge. I understand what your higher-order template would do, yet I don't see what its goal is. What would its advantage be over the code currently in {{tlx|BookTemplate}}? I wouldn't want to make things too complicated for the people who have to use these. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 13:00, 26 June 2009 (UTC)

:: Using {{tl|BookTemplate}}, the only parameters that will reach the target (in this case, {{nowrap|&lt;nowiki&gt;{{ROOTBOOKNAME}}/MapConstructor&lt;/nowiki&gt;}}) are those that are explicitly passed on by BookTemplate.  Right now that's nineteen unnamed parameters.  There's no point in just upping the number of unnamed parameters passed on, because there are still ''named'' parameters that don't get passed on, and the only way to pass them on would be to explicitly hardwire their names into the central facility {{tl|BookTemplate}}.

:: (BTW, I see I muffed the markup for my hypothetical higher-order template:  I used it as if it took a parameter for the chaptername of the book template, but the markup doesn't provide for that.)  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 15:34, 26 June 2009 (UTC)

: This is why its better to call/use templates directly. If your still bent on trying to make this work, &lt;nowiki&gt;{{{{BookTemplate}}/Foobar|blah|blah|what=blah}}&lt;/nowiki&gt; would avoid the limitations of having only a fixed number of parameters and not being able to use named parameters. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 13:03, 26 June 2009 (UTC)

:: (Lot's of unnecessary and possibly missing-the-point discussion of &quot;using templates directly&quot; deleted here... --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 15:39, 26 June 2009 (UTC))

I've created a template {{tl|BOOKTEMPLATE}}, that simply generates the main book-template name for the current book, i.e., {{nowrap|&lt;tt&gt;&lt;nowiki&gt;Template:{{ROOTBOOKNAME}}&lt;/nowiki&gt;&lt;/tt&gt;}}.  My notion is that an editor reading markup sees the all-caps and expects a device that generates part of a page name, because that's what all the other all-caps names do (pre-existing naming convention).  The notation for calling the main book template of a book would then be
: {{nowrap|&lt;tt&gt;&lt;nowiki&gt;{{{{BOOKTEMPLATE}}|one|two|what=something}}&lt;/nowiki&gt;&lt;/tt&gt;}}
and for calling a book template&amp;nbsp; &lt;tt&gt;/Foobar&lt;/tt&gt;,
: {{nowrap|&lt;tt&gt;&lt;nowiki&gt;{{{{BOOKTEMPLATE}}/Foobar|one|two|what=something}}&lt;/nowiki&gt;&lt;/tt&gt;}}
If this works out as well as I'm hoping, we can convert all of the existing {{tl|BookTemplate}} calls to use {{tl|BOOKTEMPLATE}} instead, and then delete {{tl|BookTemplate}}.  It's simple, one-stop shopping for editors using book templates.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 15:34, 26 June 2009 (UTC)

:: To get the book's template of its own name, &lt;nowiki&gt;{{{{BOOKTEMPLATE}}}}&lt;/nowiki&gt; is not working. I have to specify &lt;nowiki&gt;{{{{BOOKTEMPLATE}}|}}&lt;/nowiki&gt; for it to work. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 15:50, 26 June 2009 (UTC)

::: Ya that is the draw back to that approach. The mediawiki parser thinks there is a template parameter named either {BOOKTEMPLATE} or BOOKTEMPLATE with {}'s placed around the result. You can also use &lt;nowiki&gt;{{ {{BOOKTEMPLATEE}} }}&lt;/nowiki&gt; or &lt;nowiki&gt;{{msg:{{BOOKTEMPLATE}}}}&lt;/nowiki&gt;. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 16:10, 26 June 2009 (UTC)

:::: That slipped my mind when writing the docs for {{tl|BOOKTEMPLATE}}.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 16:22, 26 June 2009 (UTC)

: The only remaining references to {{tl|BookTemplate}} are from this talk page.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 21:45, 26 June 2009 (UTC)
== Another reason to noinclude BookCat ==

You asked a while back (over on my talk page) about removing the noincludes around {{tl|BookCat}}.  My answer has changed, a bit: I now recommend noincluding BookCat for pretty much every template that doesn't generate a complete table.  The reason is that, as I was gradually forced to remember by wrestling with [[Template:False Friends of the Slavist/MapLegend4]], category links have a tendency to prevent paragraph breaks (though I don't remember exactly how that works, if I ever really understood it).  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 00:06, 27 June 2009 (UTC)

: I think that's a bad idea. Using noinclude defeats the main reason why its usually included to begin with. To make it easy to categorize pages of a book without having to manually categorize each page separately. I think having templates with the only difference being the number of arguments passed are bad ideas too, so I went and fixed that. I think the MapConstructor template needs improved too, because all the images overlap each other based on the positioning, making any obscured images loaded a waste of bandwidth and slows down the time it takes to load pages. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 13:11, 27 June 2009 (UTC)

:: I did notice your technical fix for the problem with MapLegend.  Admitting such technical fixes on a case-by-case basis somewhat expands the range of templates that can include BookCat.  Recalling a key element from the earlier discussion, though, BookCat neessarily must be noincluded on templates that could be used inside links (which is most of the templates for Friends of the Slavist &amp;mdash; and also the /Navlist files used to specify book contents, as we were forcibly reminded when adding included category markup to Conlang/Navlist broke all the navbox links in the Conlang book).  Likewise, BookCat must be noincluded on templates that generate fragments of template names.  As a rule of thumb, I'd still noinclude BookCat on any template that generates a small text fragment without embedded markup.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 13:59, 27 June 2009 (UTC)</text>
      <sha1>mzg4j63pfwfc5vs7ybs16cjo68dq4yj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Embedded Control Systems Design/Images</title>
    <ns>14</ns>
    <id>199548</id>
    <revision>
      <id>1538406</id>
      <timestamp>2009-06-18T23:14:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Image category.</comment>
      <text xml:space="preserve">This category contains images used in the [[Embedded Control Systems Design]] book.

[[Category:Embedded Control Systems Design|Images]]</text>
      <sha1>orlo4o4gocrzymw3jriewmhlngpds79</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook talk:Ukrainian Borscht</title>
    <ns>103</ns>
    <id>199549</id>
    <revision>
      <id>1538426</id>
      <timestamp>2009-06-18T23:27:26Z</timestamp>
      <contributor>
        <ip>89.178.88.82</ip>
      </contributor>
      <comment>Created page with 'This is not the real borscht! Not a single Russian or Ukrainian will add BEANS to it!!! Could agree that the cabbage can be some local variation (not the stand point though) but ...'</comment>
      <text xml:space="preserve">This is not the real borscht! Not a single Russian or Ukrainian will add BEANS to it!!! Could agree that the cabbage can be some local variation (not the stand point though) but beans NEVER!</text>
      <sha1>299p4vozectgc7c0ej0x7xz8cd5zydn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Energy Efficiency/Refrigeration/Data Collection/Standard Refrigeration Data Collection Tools</title>
    <ns>0</ns>
    <id>199550</id>
    <redirect title="Energy Efficiency Reference/Refrigeration/Data Collection/Standard Refrigeration Data Collection Tools" />
    <revision>
      <id>1538436</id>
      <parentid>1538428</parentid>
      <timestamp>2009-06-18T23:34:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT [[Energy Efficiency Reference/Refrigeration/Data Collection/Standard Refrigeration Data Collection Tools]]</text>
      <sha1>9x5t68ulkor3cv8xzttcho8is5jl97t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Energy Efficiency/Refrigeration/Data Collection/Standard Refrigeration Data</title>
    <ns>0</ns>
    <id>199551</id>
    <redirect title="Energy Efficiency Reference/Refrigeration/Data Collection/Standard Refrigeration Data" />
    <revision>
      <id>1538432</id>
      <timestamp>2009-06-18T23:32:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Energy Efficiency/Refrigeration/Data Collection/Standard Refrigeration Data]] to [[Energy Efficiency Reference/Refrigeration/Data Collection/Standard Refrigeration Data]]: Moving into book linking to it. Former book transwikied to Wikiversity.</comment>
      <text xml:space="preserve">#REDIRECT [[Energy Efficiency Reference/Refrigeration/Data Collection/Standard Refrigeration Data]]</text>
      <sha1>liup0e63qqmnr0gwvty8fsjz81lafqr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Energy Efficiency Reference/Refrigeration/Data Collection/Data Collection/Standard Refrigeration Data Collection Tools</title>
    <ns>0</ns>
    <id>199552</id>
    <redirect title="Energy Efficiency Reference/Refrigeration/Data Collection/Standard Refrigeration Data Collection Tools" />
    <revision>
      <id>1538435</id>
      <timestamp>2009-06-18T23:33:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Energy Efficiency Reference/Refrigeration/Data Collection/Data Collection/Standard Refrigeration Data Collection Tools]] to [[Energy Efficiency Reference/Refrigeration/Data Collection/Standard Refrigeration Data Collection Tools]]: Had double chap</comment>
      <text xml:space="preserve">#REDIRECT [[Energy Efficiency Reference/Refrigeration/Data Collection/Standard Refrigeration Data Collection Tools]]</text>
      <sha1>9x5t68ulkor3cv8xzttcho8is5jl97t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Energy Efficiency/Refrigeration/Technology Primer/Common Terms</title>
    <ns>0</ns>
    <id>199553</id>
    <redirect title="Energy Efficiency Reference/Refrigeration/Technology Primer/Common Terms" />
    <revision>
      <id>1538443</id>
      <timestamp>2009-06-18T23:46:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Energy Efficiency/Refrigeration/Technology Primer/Common Terms]] to [[Energy Efficiency Reference/Refrigeration/Technology Primer/Common Terms]]: Moving into book linking to it. Former book transwikied to Wikiversity.</comment>
      <text xml:space="preserve">#REDIRECT [[Energy Efficiency Reference/Refrigeration/Technology Primer/Common Terms]]</text>
      <sha1>ovrrpx6z8yqndambwkftsmmdcwsahzz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Energy Efficiency/Refrigeration/Technology Primer//Equipment</title>
    <ns>0</ns>
    <id>199554</id>
    <redirect title="Energy Efficiency Reference/Refrigeration/Technology Primer/Equipment" />
    <revision>
      <id>1538447</id>
      <timestamp>2009-06-18T23:47:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Energy Efficiency/Refrigeration/Technology Primer//Equipment]] to [[Energy Efficiency Reference/Refrigeration/Technology Primer/Equipment]]: Moving into book linking to it. Former book transwikied to Wikiversity.</comment>
      <text xml:space="preserve">#REDIRECT [[Energy Efficiency Reference/Refrigeration/Technology Primer/Equipment]]</text>
      <sha1>9hreaomi32iaaufb2wvlu6zb9ts3w3l</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Energy Efficiency/Refrigeration/Technology Primer/Systems</title>
    <ns>0</ns>
    <id>199555</id>
    <redirect title="Energy Efficiency Reference/Refrigeration/Technology Primer/Systems" />
    <revision>
      <id>1538450</id>
      <timestamp>2009-06-18T23:47:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Energy Efficiency/Refrigeration/Technology Primer/Systems]] to [[Energy Efficiency Reference/Refrigeration/Technology Primer/Systems]]: Moving into book linking to it. Former book transwikied to Wikiversity.</comment>
      <text xml:space="preserve">#REDIRECT [[Energy Efficiency Reference/Refrigeration/Technology Primer/Systems]]</text>
      <sha1>psqd2yrn7hmxrpl2cwx4pnmjreceac0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Energy Efficiency Efficiency/Refrigeration/Power &amp; Energy</title>
    <ns>0</ns>
    <id>199556</id>
    <redirect title="Energy Efficiency Reference/Refrigeration/Power &amp; Energy" />
    <revision>
      <id>1538462</id>
      <timestamp>2009-06-19T00:03:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Energy Efficiency Efficiency/Refrigeration/Power &amp; Energy]] to [[Energy Efficiency Reference/Refrigeration/Power &amp; Energy]]: Merging edit histories.</comment>
      <text xml:space="preserve">#REDIRECT [[Energy Efficiency Reference/Refrigeration/Power &amp; Energy]]</text>
      <sha1>gdzgc7h0x2pi7rz33v9bovj1totslez</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Template:Navlist</title>
    <ns>14</ns>
    <id>199557</id>
    <revision>
      <id>1538484</id>
      <parentid>1538482</parentid>
      <timestamp>2009-06-19T00:36:12Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <minor />
      <comment>short description stands out better when left-justified</comment>
      <text xml:space="preserve">This category contains pages belonging to the Navlist family of templates, which is documented at '''[[Template:Navlist/Doc]]'''.

[[Category:Navigational templates|Navlist]]</text>
      <sha1>6arvegxpl9qxjtq36gwqp84ufls7411</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Hieracium pilosella</title>
    <ns>110</ns>
    <id>199560</id>
    <revision>
      <id>1876115</id>
      <parentid>1542225</parentid>
      <timestamp>2010-07-07T18:39:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Hieracium pilosella&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Mouse-ear Hawkweed
|binomial =Hieracium pilosella
|image1 =Hieracium pilosella a1.jpg
|caption1 =Flower
|image2=Hieracium pilosella 290807a.jpg
|caption2=Leaves, stem, and flower
|image3 =Muizeoor blad.jpg
|caption3=Note the hairy leaves.
|description =This is another plant easily confused with the [[../Taraxacum officinale|Dandelion]].  The easiest way to tell the difference is by looking at its leaves.  The edges do not have any lobes or indentations, and the surface of the leaf is covered with hair.  It does not grow as tall as [[../Hieracium pratense|Yellow Hawkweed]], and it has only one flower at the top of the stem.  In fact, the whole plant, with the exception of the flower parts, is covered in hairs, usually whitish, but sometimes reddish on the stem.  This is another plant that grows in waste places, such as along roadsides and railroad tracks.  It thrives in dry, infertile soil.
|facts = People once believed that any blade covered in this plant's juices would be able to cut through stone as easily as through wood.
}}</text>
      <sha1>tkngx625y3t8l417swx0ov3tdx1xwfv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Engineering Guesstimations</title>
    <ns>14</ns>
    <id>199561</id>
    <revision>
      <id>2123521</id>
      <parentid>1538584</parentid>
      <timestamp>2011-06-21T14:33:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">{{book category header}}

[[Category:general engineering]]</text>
      <sha1>33edokqjdakyr2yc10f488wytuhqd6q</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Hieracium aurantiaca</title>
    <ns>110</ns>
    <id>199562</id>
    <revision>
      <id>1876116</id>
      <parentid>1542224</parentid>
      <timestamp>2010-07-07T18:39:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Hieracium aurantiaca&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Orange Hawkweed
|binomial =Hieracium aurantiaca
|image1 =Hieracium aurantiacum Saarland 01.jpg
|caption1 =Single Flower
|image2=Hieracium aurantiacium.jpg
|caption2=Leaves, stems, and flower
|image3 =Hieracium aurantiacum Saarland 03.jpg
|caption3=Cluster of flowers
|description =This plant is very similar to [[../Hieracium pilosella|Mouse-ear Hawkweed]], except that the flower is ''bright'' orange, and it can form a cluster of several flowers on one stem.  Because of its bright orange color, Orange Hawkweed is sometimes called ''The Devil's Paintbrush''.  Orange Hawkweed is a low-growing plant, with a cluster of hairy leaves growing around the base of the stem, and one or more flowers blooming at the top.  
|facts = Orange Hawkweed is not native to North America, but was brought here to grow in flower beds.  It has since escaped from gardens, and now grows wild in many places.  In New Zealand and Tasmania, it grows so well that it crowds out native species, and those governments have banned it.
}}</text>
      <sha1>lvdip6mpbvn2liej9axhn8fyju80z4p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>English/CEF</title>
    <ns>0</ns>
    <id>199563</id>
    <redirect title="English for B2 Students/CEF" />
    <revision>
      <id>1538604</id>
      <timestamp>2009-06-19T02:45:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[English/CEF]] to [[English for B2 Students/CEF]]: Moving into only book linking to it. Root book page redirect to subject.</comment>
      <text xml:space="preserve">#REDIRECT [[English for B2 Students/CEF]]</text>
      <sha1>nn6zncwpfh7tjifnvgvbfgu0itzbdno</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>English/English in use/Parts of speech</title>
    <ns>0</ns>
    <id>199564</id>
    <redirect title="English in Use/Parts of Speech" />
    <revision>
      <id>1538611</id>
      <timestamp>2009-06-19T02:53:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[English/English in use/Parts of speech]] to [[English in Use/Parts of Speech]]: Moving into book other pages moved into.</comment>
      <text xml:space="preserve">#REDIRECT [[English in Use/Parts of Speech]]</text>
      <sha1>rzsq7nhfqpx3pre70xu7p54dp829axm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>English/English in use/Tenses and Forms</title>
    <ns>0</ns>
    <id>199565</id>
    <redirect title="English for B2 Students/Tenses and Forms" />
    <revision>
      <id>1538614</id>
      <timestamp>2009-06-19T02:56:06Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[English/English in use/Tenses and Forms]] to [[English for B2 Students/Tenses and Forms]]: Moving into only book linking to it.</comment>
      <text xml:space="preserve">#REDIRECT [[English for B2 Students/Tenses and Forms]]</text>
      <sha1>8sgtzcq83ryg56ljjgn35u6oo9td3xs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>English/English in use/Phrasal verbs</title>
    <ns>0</ns>
    <id>199566</id>
    <redirect title="English in Use/Phrasal Verbs" />
    <revision>
      <id>1538625</id>
      <timestamp>2009-06-19T03:01:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[English/English in use/Phrasal verbs]] to [[English in Use/Phrasal Verbs]]: Moving into book other subpages moved to.</comment>
      <text xml:space="preserve">#REDIRECT [[English in Use/Phrasal Verbs]]</text>
      <sha1>lnry1gn6xzn1wtxdmacu4jkik8awi0n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>English/English in use/Using verbs together</title>
    <ns>0</ns>
    <id>199567</id>
    <redirect title="English for B2 Students/Using Verbs Together" />
    <revision>
      <id>1538628</id>
      <timestamp>2009-06-19T03:04:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[English/English in use/Using verbs together]] to [[English for B2 Students/Using Verbs Together]]: Moving into only book linking to it.</comment>
      <text xml:space="preserve">#REDIRECT [[English for B2 Students/Using Verbs Together]]</text>
      <sha1>qvszd87ozgkapy1rkle2eni9q20a9bc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>English/English in use/Vocabulary</title>
    <ns>0</ns>
    <id>199568</id>
    <redirect title="English in Use/Vocabulary" />
    <revision>
      <id>1538635</id>
      <timestamp>2009-06-19T03:09:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[English/English in use/Vocabulary]] to [[English in Use/Vocabulary]]: Merging into book with other subpages.</comment>
      <text xml:space="preserve">#REDIRECT [[English in Use/Vocabulary]]</text>
      <sha1>oqd2d0o4vsc5x2o18tsyawtvak2nobi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:English/English in use/Vocabulary</title>
    <ns>1</ns>
    <id>199569</id>
    <redirect title="Talk:English in Use/Vocabulary" />
    <revision>
      <id>1538637</id>
      <timestamp>2009-06-19T03:09:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:English/English in use/Vocabulary]] to [[Talk:English in Use/Vocabulary]]: Merging into book with other subpages.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:English in Use/Vocabulary]]</text>
      <sha1>fuo6olakm831hc9bs2ncmkarjslv9mo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>English/Vocabulary Adjectives</title>
    <ns>0</ns>
    <id>199571</id>
    <redirect title="English in Use/Vocabulary/Adjectives" />
    <revision>
      <id>1538643</id>
      <timestamp>2009-06-19T03:12:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[English/Vocabulary Adjectives]] to [[English in Use/Vocabulary/Adjectives]]: Merging into book with other subpages.</comment>
      <text xml:space="preserve">#REDIRECT [[English in Use/Vocabulary/Adjectives]]</text>
      <sha1>09xx0tq8l7dp3wiy2ul9x27at718boz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Oxalis stricta</title>
    <ns>110</ns>
    <id>199583</id>
    <revision>
      <id>1876089</id>
      <parentid>1542228</parentid>
      <timestamp>2010-07-07T18:36:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Oxalis stricta&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Common Yellow Woodsorrel
|binomial =Oxalis stricta
|image1 =Oxalis stricta.JPG
|caption1 =Flower and leaves
|image2=Oxalis stricta flowers and foliage 001.JPG
|caption2=
|image3 =Oxalis_stricta_2085.JPG
|caption3=Showing folded-up leaves
|description =Common Yellow Woodsorrel is a plant commonly confused with clover.  It has pretty little yellow flowers with five petals.  The leaves grow in threes and are shaped like hearts.  When the plant is young, the stems stand up and hold the leaves and flowers high.  As the summer wears on though, the stems lay down and the plant creeps along on the ground.  In the daytime, the leaves open wide to catch the sun, but at night, the plant folds them up.  Do you put ''your'' things away at night?  Do you?
|facts = All parts of the Common Yellow Woodsorrel are edible and have a ''very'' tangy taste.  Just be careful, because too much of it will cause an upset stomach.  It is high in vitamin C.
}}</text>
      <sha1>4x0vmlo509raz8220hyhvq4ynouhs4u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>English / Tok Pisin dictionary</title>
    <ns>0</ns>
    <id>199584</id>
    <redirect title="Tok Pisin/Dictionary" />
    <revision>
      <id>1538686</id>
      <timestamp>2009-06-19T03:43:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[English / Tok Pisin dictionary]] to [[Tok Pisin/Dictionary]]: Merging into book linking to it.</comment>
      <text xml:space="preserve">#REDIRECT [[Tok Pisin/Dictionary]]</text>
      <sha1>m5whw48cssklts5l5endnk8m89wwb55</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:English / Tok Pisin dictionary</title>
    <ns>1</ns>
    <id>199585</id>
    <redirect title="Talk:Tok Pisin/Dictionary" />
    <revision>
      <id>1538688</id>
      <timestamp>2009-06-19T03:43:01Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:English / Tok Pisin dictionary]] to [[Talk:Tok Pisin/Dictionary]]: Merging into book linking to it.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:Tok Pisin/Dictionary]]</text>
      <sha1>apf9xlt48d0o54tfgirb11pjlryuh4x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Tok Pisin/traim (Verb)</title>
    <ns>0</ns>
    <id>199586</id>
    <redirect title="Tok Pisin/Verbs/traim" />
    <revision>
      <id>1538695</id>
      <timestamp>2009-06-19T03:47:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Tok Pisin/traim (Verb)]] to [[Tok Pisin/Verbs/traim]]: Matching hierarchy.</comment>
      <text xml:space="preserve">#REDIRECT [[Tok Pisin/Verbs/traim]]</text>
      <sha1>3uaaz1m6gc3v9i2edmqzpz1y8fpg6sn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Enjoy Tokyo/Images</title>
    <ns>14</ns>
    <id>199595</id>
    <revision>
      <id>2654918</id>
      <parentid>2649716</parentid>
      <timestamp>2014-05-14T17:29:14Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <comment>note these images should be moved to commons</comment>
      <text xml:space="preserve">{{Move to Commons}}

This category contains images that were used in the [[Enjoy Tokyo]] book.

[[Category:Tourism]]</text>
      <sha1>7mpnw3rkt7n5d4mr0c1gswu7otirg1t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Fractals/The Newton-Raphson fractal</title>
    <ns>0</ns>
    <id>199596</id>
    <revision>
      <id>2684444</id>
      <parentid>2684443</parentid>
      <timestamp>2014-07-24T20:01:18Z</timestamp>
      <contributor>
        <username>Adam majewski</username>
        <id>74163</id>
      </contributor>
      <minor />
      <comment>/* Links */ descr</comment>
      <text xml:space="preserve">The [[w:Newton_fractal|newton fractal]] is calculated by iterating the [[Fractals/Mathematics/Newton method|Newton-Raphson root finding method]]&lt;ref&gt;[http://www.jacobs-university.de/phd/files/1153304134.pdf Newton’s Method as a Dynamical System by Johannes Ruckert]&lt;/ref&gt;, and coloring the sample point in various ways based on various properties of how the point is attracted to the various 'roots' or 'solutions' to the method. For example how fast or at what angle the [[Fractals/Orbit|orbit]] is attracted.

==Newton Family of fractals==
[[File:ButterflyPhoenixDoubleNova wing dotdotdot uhuhhuhhh ovalOrifice.jpg|256px|right|thumb|An example showing the PhoenixDoubleNova Fractal, in a complex composite by Dan Wills]]

There has been much development using this method to develop fractal formulae in the [http://formulas.ultrafractal.com/ UltraFractal formula database], and in other fractal-rendering software. One notable family of newton style fractals is the '''[[w:Nova fractal|Nova fractal]] family''', with formulae that combine aspects of other well known fractals such as Mandelbrot, Phoenix and Halley's fractal - which is another fractal that is similar to the newton in that it implements a root finding method known as [[w:Halley's method|Halley's method]].

An entire family of fractal formulae have been derived this way and given names that reflect their parent formulae, for example:

* Nova Julia
* Nova Mandelbrot
* Phoenix Nova
* Halley Nova
* Phoenix Double Nova
* Phoenix Halley Nova

As the development of these fractal formula authors has been quite prolific, there are a great many variations and combinations.

==Links==
* [http://en.wikipedia.org/wiki/Newton_fractal Wikipedia on the Newton Fractal]
* [http://images.math.cnrs.fr/La-methode-de-Newton-et-son.html Newton method ]
* [http://images.math.cnrs.fr/La-methode-de-Newton-et-son,891.html 3D images of Newton fractals]
* [http://aaronegolden.com/julia.html Newton methon in WebGl] the Newton basin fractal for the polynomial &lt;math&gt;z\to (z^2 - 1)(z - \lambda)&lt;/math&gt; .  Clicking and dragging updates lambda and the resulting basins.

&lt;references/&gt;

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>l84xmre0ucnq6aj1m1lvwdmm03a4sxz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Fractals/Iterated function systems</title>
    <ns>0</ns>
    <id>199597</id>
    <revision>
      <id>2466224</id>
      <parentid>2434400</parentid>
      <timestamp>2012-12-20T21:58:19Z</timestamp>
      <contributor>
        <ip>188.220.70.97</ip>
      </contributor>
      <comment>/* Affine Transformations */ minor spelling and punctuation</comment>
      <text xml:space="preserve">Iterated Function Systems (or IFS) is the name given to a method for calculating fractals based on a number of contractive affine transformations.

==Researchers==

Michael Barnsley did a lot of work on this type of fractal, including naming it. 

Australian mathematician John Hutchinson (who called the system a &quot;Multiple Reduction Copy Machine&quot; or MRCM), also contributed to the field.

==The Basic Method==

There are quite a few variations on this method, but the basic idea is still the same.

# Define a number of '''contractive''' affine transformations in the unit square (these are also known as &quot;Hutchinson Operators&quot;).
# Insert points at random positions into the unit square (or another initializing region of R2)
# Make a random selection from the list of transformations, and apply it to the point.
# After some run-up number of iterations, begin drawing the points into an accumulation buffer.
# Continue inserting points until the desired coverage (or quality) is achieved.
# The accumulated values will usually need a log-transform to bring them into good viewing range.
# Sorting the positions of, and resampling the points into an image using a filter kernel can give a better resulting image but is a lot more costly in terms of memory and computation.

==Affine Transformations==
Affine transforms are a geometrical construct that comprises translation, rotation, scaling and shear in 2 or more dimensions. A 2-dimensional affine transform can be conveniently stored in a 3x3 matrix for the transformation of homogeneous 2D points. These transforms are applied by simply multiplying the point's position by the matrix.

==Related Fractals==

The [[../Flame fractals|flame fractal]] is quite similar to IFS but adding non-linear transformations, not just affine ones.

==Links==

* [http://en.wikipedia.org/wiki/Iterated_function_system Wikipedia page on IFS]]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>joa2h03mplgniw4gn7udhx8s4hsudle</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Fractals/Flame fractals</title>
    <ns>0</ns>
    <id>199598</id>
    <revision>
      <id>1539026</id>
      <parentid>1538889</parentid>
      <timestamp>2009-06-19T12:15:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">Flame fractals are a relative of [[IFS Fractals]], that extend the concept to include more complicated transformations.

==Author==
Flames were first invented by Scott Draves, he has also authored the [http://en.wikipedia.org/wiki/Seti_at_home SETI-at-home]-style flame fractal screensaver called [http://electricsheep.org/ 'Electric Sheep'].

==Apophysis==
A now open-source project to allow editing and rendering of flame fractals, with some interesting developments into 3d flame fractals with extended geometry such as surfaces.

==Links==
* [http://en.wikipedia.org/wiki/Fractal_flame Wikipedia on Flame Fractals]
* [http://community.sheepserver.net/ Electric Sheep community server]
* [http://www.apophysis.org/ Apophysis]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>mxijbk0fvz2ysjma4pqvfssvb7ykf5w</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>IFS Fractals</title>
    <ns>0</ns>
    <id>199599</id>
    <redirect title="Fractals/Iterated function systems" />
    <revision>
      <id>1539019</id>
      <parentid>1538829</parentid>
      <timestamp>2009-06-19T12:06:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT [[Fractals/Iterated function systems]]</text>
      <sha1>mtcb1wxe1m0jy41xjm12y4ybc4ia2on</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Fractals/L-Systems</title>
    <ns>0</ns>
    <id>199600</id>
    <revision>
      <id>1539020</id>
      <parentid>1538891</parentid>
      <timestamp>2009-06-19T12:06:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">==Links==
* [http://en.wikipedia.org/wiki/L-system Wikipedia article about L-Systems]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>hbxh7tjoi5isvrcw9tkblqto8gdmox9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Fractals/Midpoint displacement algorithm</title>
    <ns>0</ns>
    <id>199601</id>
    <revision>
      <id>1539021</id>
      <parentid>1538893</parentid>
      <timestamp>2009-06-19T12:07:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">==Links==

* [http://en.wikipedia.org/wiki/Midpoint_displacement_algorithm Wikipedia article about MDA]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>n7ffbq8dg72jo2xplvfmsjw72874doq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Fractals/Diamond-square algorithm</title>
    <ns>0</ns>
    <id>199602</id>
    <revision>
      <id>1539022</id>
      <parentid>1538895</parentid>
      <timestamp>2009-06-19T12:07:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">==Links==

* [http://en.wikipedia.org/wiki/Diamond-square_algorithm Wikipedia article about Diamond-square algorithm]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>tsef68q87s1pa8t9kaczl8u1ew6x1nq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Fractals/Real-world fractals</title>
    <ns>1</ns>
    <id>199603</id>
    <revision>
      <id>1538838</id>
      <timestamp>2009-06-19T05:34:38Z</timestamp>
      <contributor>
        <username>Danwills</username>
        <id>75561</id>
      </contributor>
      <comment>Created page with '==Need to Cite== need to add a citation for that mandelbrot quote ~~~~'</comment>
      <text xml:space="preserve">==Need to Cite==
need to add a citation for that mandelbrot quote [[User:Danwills|Danwills]] ([[User talk:Danwills|talk]]) 05:34, 19 June 2009 (UTC)</text>
      <sha1>k584m7d2k07zhozaq8vi446oxz6y2vi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Iterated function systems</title>
    <ns>0</ns>
    <id>199605</id>
    <redirect title="Fractals/Iterated function systems" />
    <revision>
      <id>1538888</id>
      <timestamp>2009-06-19T06:55:02Z</timestamp>
      <contributor>
        <username>Danwills</username>
        <id>75561</id>
      </contributor>
      <comment>moved [[Iterated function systems]] to [[Fractals/Iterated function systems]]</comment>
      <text xml:space="preserve">#REDIRECT [[Fractals/Iterated function systems]]</text>
      <sha1>mtcb1wxe1m0jy41xjm12y4ybc4ia2on</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Midpoint displacement algorithm</title>
    <ns>0</ns>
    <id>199608</id>
    <redirect title="Fractals/Midpoint displacement algorithm" />
    <revision>
      <id>1538894</id>
      <timestamp>2009-06-19T06:56:16Z</timestamp>
      <contributor>
        <username>Danwills</username>
        <id>75561</id>
      </contributor>
      <comment>moved [[Midpoint displacement algorithm]] to [[Fractals/Midpoint displacement algorithm]]</comment>
      <text xml:space="preserve">#REDIRECT [[Fractals/Midpoint displacement algorithm]]</text>
      <sha1>gmlnep15itmfssfxnyi44rae7aj059q</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Diamond-square algorithm</title>
    <ns>0</ns>
    <id>199609</id>
    <redirect title="Fractals/Diamond-square algorithm" />
    <revision>
      <id>1538896</id>
      <timestamp>2009-06-19T06:56:31Z</timestamp>
      <contributor>
        <username>Danwills</username>
        <id>75561</id>
      </contributor>
      <comment>moved [[Diamond-square algorithm]] to [[Fractals/Diamond-square algorithm]]</comment>
      <text xml:space="preserve">#REDIRECT [[Fractals/Diamond-square algorithm]]</text>
      <sha1>9lp6w2855e37bkuovrmjipw7ujyuv5o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Fractals/Quaternion Fractals</title>
    <ns>0</ns>
    <id>199610</id>
    <revision>
      <id>2217113</id>
      <parentid>2217111</parentid>
      <timestamp>2011-11-24T08:01:33Z</timestamp>
      <contributor>
        <username>Adam majewski</username>
        <id>74163</id>
      </contributor>
      <comment>dem</comment>
      <text xml:space="preserve">See the [[w:Quaternion|Wikipedia page about Quaternion numbers]]

Technique:
* [http://blog.hvidtfeldts.net/index.php/2011/06/distance-estimated-3d-fractals-part-i/ DEM]

Programs :
*[http://sourceforge.net/projects/mandelbulber/ mandelbulber]
*[http://syntopia.github.com/Fragmentarium Fragmentarium]
*[http://www.iquilezles.org/apps/shadertoy/ shadertoy]
*[http://frictionalgames.blogspot.com/2009/11/fractional-fun.html MathFuncRenderer ]


[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>87sgkxv8v4irc1negdo1awy3nhecc50</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Quaternion</title>
    <ns>0</ns>
    <id>199611</id>
    <redirect title="Fractals/Quaternion Fractals" />
    <revision>
      <id>1538901</id>
      <timestamp>2009-06-19T06:58:31Z</timestamp>
      <contributor>
        <username>Danwills</username>
        <id>75561</id>
      </contributor>
      <comment>moved [[Quaternion]] to [[Fractals/Quaternion Fractals]]</comment>
      <text xml:space="preserve">#REDIRECT [[Fractals/Quaternion Fractals]]</text>
      <sha1>5ob1cpwzq12i4kx6qkr5lx1z2ih8njg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>The Newton-Raphson fractal</title>
    <ns>0</ns>
    <id>199612</id>
    <redirect title="Fractals/The Newton-Raphson fractal" />
    <revision>
      <id>1538904</id>
      <timestamp>2009-06-19T06:59:05Z</timestamp>
      <contributor>
        <username>Danwills</username>
        <id>75561</id>
      </contributor>
      <comment>moved [[The Newton-Raphson fractal]] to [[Fractals/The Newton-Raphson fractal]]</comment>
      <text xml:space="preserve">#REDIRECT [[Fractals/The Newton-Raphson fractal]]</text>
      <sha1>77vci6cea9ee9mkxp677zhlp3sm0gt4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>The Riemann-Darboux Integral, Integrability criterion, and monotone/Lipschitz function</title>
    <ns>0</ns>
    <id>199614</id>
    <redirect title="Calculus/The Riemann-Darboux Integral, Integrability criterion, and monotone/Lipschitz function" />
    <revision>
      <id>1538912</id>
      <timestamp>2009-06-19T08:04:16Z</timestamp>
      <contributor>
        <username>Thenub314</username>
        <id>38087</id>
      </contributor>
      <comment>moved [[The Riemann-Darboux Integral, Integrability criterion, and monotone/Lipschitz function]] to [[Calculus/The Riemann-Darboux Integral, Integrability criterion, and monotone/Lipschitz function]]: I noticed this page said &quot;Last time...&quot;.  So investiga</comment>
      <text xml:space="preserve">#REDIRECT [[Calculus/The Riemann-Darboux Integral, Integrability criterion, and monotone/Lipschitz function]]</text>
      <sha1>nj0objo5x3k2b2f68qxgimbxyekyrny</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Understanding C++/Interaction</title>
    <ns>0</ns>
    <id>199615</id>
    <revision>
      <id>1973692</id>
      <parentid>1539027</parentid>
      <timestamp>2010-11-17T20:27:46Z</timestamp>
      <contributor>
        <ip>67.246.150.218</ip>
      </contributor>
      <text xml:space="preserve">&lt;source lang=&quot;cpp&quot;&gt;
#include &lt;iostream&gt;
using namespace std;

int main()
{
	cout &lt;&lt; &quot;hello&quot;;
	return 0;
}
&lt;/source&gt;

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>qn846qmb5hemk5hqg96z1l9sn2tagmj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:212.85.12.67</title>
    <ns>3</ns>
    <id>199618</id>
    <revision>
      <id>1539013</id>
      <timestamp>2009-06-19T11:57:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/212.85.12.67|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 11:57, 19 June 2009 (UTC)}}</text>
      <sha1>flfjrhvj41zcqj7bonhhocti40gavvp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Biological Machines/Sensory Systems/Visual System/Simulation of the Visual System</title>
    <ns>0</ns>
    <id>199619</id>
    <revision>
      <id>2093286</id>
      <parentid>2093283</parentid>
      <timestamp>2011-05-07T13:08:41Z</timestamp>
      <contributor>
        <ip>86.33.42.28</ip>
      </contributor>
      <comment>/* Activity of simple cells in the primary visual cortex (V1) */</comment>
      <text xml:space="preserve">In this section an overview in the simulation of processing done by the early levels of the visual system will be given. The implementation to reproduce the action of the visual system will thereby be done with [[MATLAB]] and its toolboxes. The processing done by the early visual system was discussed in the section before and can be put together with some of the functions they perform in the following schematic overview. A good description of the image processing can be found in (Cormack 2000).

{| border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;
 |+'''Schematic overview of the processing done by the early visual system'''
 |-
 ! style=&quot;background:#efefef;&quot; | Structure
 ! style=&quot;background:#efefef;&quot; | Operations
 ! style=&quot;background:#efefef;&quot; | 2D Fourier Plane
 |-
 | align=&quot;center&quot; width=&quot;180px&quot; | World
 | width=&quot;280px&quot; | &lt;math&gt;I(x,y,t,\lambda)&lt;/math&gt;
 | align=&quot;center&quot; width=&quot;150px&quot; | [[Image:2D_Fourier_Plane_01.jpg]]
 |-
 | align=&quot;center&quot; | Optics
 | Low-pass spatial filtering
 | rowspan=2 align=&quot;center&quot; | [[Image:2D_Fourier_Plane_02.jpg]]
 |-
 | align=&quot;center&quot; | Photoreceptor Array
 | Sampling, more low-pass filtering, temporal lowhandpass filtering, &lt;math&gt;\lambda&lt;/math&gt; filtering, gain control, response compression
 |-
 | align=&quot;center&quot; | LGN Cells
 | Spatiotemporal bandpass filtering, &lt;math&gt;\lambda&lt;/math&gt; filtering, multiple parallel representations
 | align=&quot;center&quot; | [[Image:2D_Fourier_Plane_03.jpg]]
 |-
 | rowspan=2 align=&quot;center&quot; | Primary Visual Cortical Neurons: Simple &amp; Complex
 | Simple cells: orientation, phase, motion, binocular disparity, &amp; &lt;math&gt;\lambda&lt;/math&gt; filtering
 | rowspan=2 align=&quot;center&quot; | [[Image:2D_Fourier_Plane_04.jpg]]
 |-
 | Complex cells: no phase filtering (contrast energy detection)
 |-
 | align=&quot;center&quot; colspan=&quot;3&quot; |
On the left, are some of the major structures to be discussed;
in the middle, are some of the major operations done at the associated structure;
in the right, are the 2-D Fourier representations of the world, retinal image, and sensitivities typical of a ganglion and cortical cell.
(From Handbook of Image and Video Processing, A. Bovik)
 |}

As we can see in the above overview different stages of the image processing have to be considered to simulate the response of the visual system to a stimulus.
The next section will therefore give a brief discussion in Image Processing. But first of all we will be concerned with the Simulation of Sensory Organ Components.

===Simulating Sensory Organ Components===

====Anatomical Parameters of the Eye====

The average eye has an anterior corneal radius of curvature of &lt;math&gt;r_C&lt;/math&gt; = 7.8 mm , and an aqueous refractive index of 1.336. The length of the eye is &lt;math&gt;L_E&lt;/math&gt; = 24.2 mm. The iris is approximately flat, and the edge of the iris (also called limbus) has a radius &lt;math&gt;r_L&lt;/math&gt; = 5.86 mm.

====Optics of the Eyeball====

The optics of the eyeball are characterized by its 2-D spatial impulse response function, the Point Spread Function ([[W:Point_spread_function|PSF]])

&lt;math&gt;
h(r) = 0.95\cdot \exp\left( -2.6\cdot |r|^{1.36} \right) + 0.05\cdot\exp\left( -2.4\cdot |r|^{1.74} \right) ,
&lt;/math&gt;

in which &lt;math&gt;r&lt;/math&gt; is the radial distance in minutes of arc from the center of the image.

=====Practical implementation=====
Obviously, the effect on a given digital image depends on the distance of that image from your eyes. As a simple place-holder, substitute this filter with a Gaussian filter with height 30, and with a standard deviation of 1.5.

In one dimension, a Gaussian is described by

&lt;math&gt;
g(x) = a \cdot \exp \left( -\frac{x^2}{2\sigma^2} \right) .
&lt;/math&gt;

====Activity of Ganglion Cells====

Ignoring the
*temporal response
*effect of wavelength (especially for the cones)
*opening of the iris
*sampling and distribution of photo receptors
*bleaching of the photo-pigment
we can approximate the response of ganglion cells with a '''Difference of Gaussians''' (DOG, Wikipedia [http://en.wikipedia.org/wiki/Difference_of_gaussians])

&lt;math&gt;
f(x;\sigma) = \frac{1}{\sigma_1\sqrt{2\pi}} \, \exp \left( -\frac{x^2}{2\sigma_1^2} \right)-\frac{1}{\sigma_2\sqrt{2\pi}} \, \exp \left( -\frac{x^2}{2\sigma_2^2} \right).
&lt;/math&gt;

The values of &lt;math&gt;\sigma_1&lt;/math&gt; and &lt;math&gt;\sigma_2&lt;/math&gt; have a ratio of approximately 1:1.6, but vary as a function of eccentricity. For midget cells (or P-cells), the Receptive Field Size (RFS) is approximately

&lt;math&gt;RFS \approx 2 \cdot \text{Eccentricity} ,&lt;/math&gt;

where the RFS is given in arcmin, and the Eccentricity in mm distance from the center of the fovea (Cormack 2000).

====Activity of simple cells in the primary visual cortex (V1)====

Again ignoring temporal properties, the activity of simple cells in the primary visual cortex (V1) can be modeled with the use of Gabor filters (Wikipedia [http://en.wikipedia.org/wiki/Gabor_filter]). A Gabor filter is a linear filter whose impulse response is defined by a harmonic function (sinusoid) multiplied by a Gaussian function. The Gaussian function causes the amplitude of the harmonic function to diminish away from the origin, but near the origin, the properties of the harmonic function dominate

:&lt;math&gt;g(x,y;\lambda,\theta,\psi,\sigma,\gamma)=\exp\left(-\frac{x'^2+\gamma^2y'^2}{2\sigma^2}\right)\cos\left(2\pi\frac{x'}{\lambda}+\psi\right) ,&lt;/math&gt;

where

:&lt;math&gt;x' = x \cos\theta + y \sin\theta\, ,&lt;/math&gt;

and

:&lt;math&gt;y' = -x \sin\theta + y \cos\theta\, .&lt;/math&gt;

In this equation, &lt;math&gt;\lambda&lt;/math&gt; represents the wavelength of the cosine factor, &lt;math&gt;\theta&lt;/math&gt; represents the orientation of the normal to the parallel stripes of a Gabor function (Wikipedia [http://en.wikipedia.org/wiki/Gabor_function]), &lt;math&gt;\psi&lt;/math&gt; is the phase offset, &lt;math&gt;\sigma&lt;/math&gt; is the sigma of the Gaussian envelope and &lt;math&gt;\gamma&lt;/math&gt; is the spatial aspect ratio, and specifies the ellipticity of the support of the Gabor function.

[[File:GaborFilter wParams.png|thumb|350px|Gabor function, with sigma = 1, theta = 1, lambda = 4, psi = 2, gamma = 1]]

This is an example implementation in [[MATLAB]]:
&lt;source lang=&quot;matlab&quot;&gt;
function gb = gabor_fn(sigma,theta,lambda,psi,gamma)

  sigma_x = sigma;
  sigma_y = sigma/gamma;

  % Bounding box
  nstds = 3;
  xmax = max(abs(nstds*sigma_x*cos(theta)),abs(nstds*sigma_y*sin(theta)));
  xmax = ceil(max(1,xmax));
  ymax = max(abs(nstds*sigma_x*sin(theta)),abs(nstds*sigma_y*cos(theta)));
  ymax = ceil(max(1,ymax));
  xmin = -xmax;
  ymin = -ymax;
  [x,y] = meshgrid(xmin:xmax,ymin:ymax);

  % Rotation
  x_theta = x*cos(theta) + y*sin(theta);
  y_theta = -x*sin(theta) + y*cos(theta);

  gb = exp(-.5*(x_theta.^2/sigma_x^2+y_theta.^2/sigma_y^2)).* cos(2*pi/lambda*x_theta+psi);

end
&lt;/source&gt;

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>7xc0j42c2tzcz72v63y91rpgyrmoyfw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Lamb and Okra Stew (Khoresht Bamiye)</title>
    <ns>102</ns>
    <id>199623</id>
    <revision>
      <id>2685518</id>
      <parentid>2685517</parentid>
      <timestamp>2014-07-29T00:19:15Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Austncorp moved page [[Cookbook:Khoresht Bamiye]] to [[Cookbook:Lamb and Okra Stew (Khoresht Bamiye)]]: Conformed to recipe naming conventions.</comment>
      <text xml:space="preserve">{{recipe}}

Makes 6 servings 

==Ingredients==
* Stewing lamb or beef, 500 grams 
* Okras, 750 grams 
* Potatoes, 500 grams (optional) 
* 3-4 onions 
* Fresh Lime juice, 2-3 spoons 
* Tomato paste, 3-4 spoons 
* Cooking oil 
* Salt 
* Black pepper 

==Procedure==
#Peel and thinly slice onions, then fry in oil until slightly golden. 
#Wash and cut meat into small pieces and fry in onions until color changes. 
#Add 3 glasses of hot water and bring to boil. Turn heat down and let boil slowly for about 45 minutes, adding more hot water during cooking if needed. 
#Wash okras and cut their stems only but do not cut the bases. 
#Add okras, salt, pepper and tomato paste to the meat and cook for another 10-15 minutes. Take care not to overcook the okras so that they do not become slippery. 
#Add lime juice and adjust seasoning. Cook for another 3-4 minutes. 

Khoresht Bamieh should be served with white rice. 

If desired, potatoes can also be added to Khoresht Bamieh. In that case, 500 grams of potatoes should be washed, peeled and cut into small pieces, and added in with 500 grams of okras (or slightly earlier; required cooking time depends somewhat on the size of the cut pieces).

[[Category:Lamb recipes]]
[[Category:Okra recipes]]
[[Category:Tomato recipes]]
[[Category:Stew recipes]]
[[Category:Iranian recipes]]</text>
      <sha1>45oavyx6g3j9aasvzmgwiynmjhlb3u9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Sensory Systems/Visual System/Image Processing</title>
    <ns>0</ns>
    <id>199628</id>
    <revision>
      <id>2265804</id>
      <parentid>2264325</parentid>
      <timestamp>2012-02-15T08:57:21Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <comment>speedy declined. History needs merging</comment>
      <text xml:space="preserve">{{mergeto|??|speedy deletion declined - this page has a history that needs merging somewhere...}}
==Image Processing==
One major technical tool to understand is the way a computer handles images. We have to know how we can edit images and what techniques we have to rearrange images.

===Image Representation===

====Grayscale====
For a computer an image is nothing more than a huge amount of little squares. These squares are called &quot;pixel&quot;. In a grayscale image, each of this pixel carries a number n, often it holds
&lt;math&gt;0\leq n \leq 255&lt;/math&gt;. 
This number n, represents the exactly color of this square in the image. This means, in a grayscale image we can use 256 different grayscales, where 255 means a white spot, and 0 means the square is black.
To be honest, we could even use more than 256 different levels of gray. In the mentioned way, every pixels uses exactly 1 byte (or 8 bit) of memory to be saved. (Due to the binary system of a computer it holds: 2&lt;sup&gt;8&lt;/sup&gt;=256)
If you think it is necessary to have more different gray scales in your image, this is not a problem. You just can use more memory to save the picture. But just remember, this could be a hard task for huge images. Further quite often you have the problem that your sensing device (e.g. your monitor) can not show more than this 256 different gray colors.

====Colour====
Representing a colourful image is only slightly more complicated than the grayscale picture. 
All you have to know is that the computer works with a additive colour mixture of the three main colors '''Red, Green''' and '''Blue'''. This are the so called RGB colours.

Also these images are saved by pixels. But now every pixel has to know 3 values between 0 and 256, for every Color 1 value. So know we have 256&lt;sup&gt;3&lt;/sup&gt;= 16,777,216 different colours which can be represented. Similar to the grayscale images also here holds, that no color means black, and having all color means white. That means, the colour (0,0,0) is black, whereas (0,0,255) means blue and (255,255,255) is white.

===Image Filtering===

====1D Filter====
In many technical applications, we find some primitive basis in which we easily can describe features. In 1 dimensional cases filters are not a big deal, therefore we can use this filters for changing images. The so called &quot;Savitzky- Golay Filter&quot; allows to smooth incoming signals. The filter was described in 1964 by Abraham Savitzky and Marcel J. E. Golay. It is a impulse-respond filter (IR).

For better understanding, lets look at a example. In 1d we usually deal with vectors. One such given vector, we call x and it holds: &lt;math&gt;\mathbf{x} = (x_1,x_2,\dots,x_n) \; with \; n \; \in \mathbb{N}&lt;/math&gt;.
Our purpose is to smooth that vector x. To do so all we need is another vector &lt;math&gt;\mathbf(w) = (w_1,w_2,\dots,w_m) \; with \; n&gt;m \; \in \mathbb{N}&lt;/math&gt;, this vector we call a weight vector.

With &lt;math&gt;y(k)=\displaystyle \sum_{i=1}^m w(i)x(k-m+i)&lt;/math&gt; we now have a smoothed vector y. This vector is smoother than the vector before, because we only save the average over a few entries in the vector. These means the newly found vectorentries, depends on some entries right left and right of the entry to smooth.
One major drawback of this approach is, the newly found vector y only has n-m entries instead of n as the original vector x.

Drawing this new vector would lead to the same function as before, just with less amplitude. So no data is lost, but we have less fluctuation.

====2D Filter====

Going from the 1d case to the 2d case is done by simply make out of vectors matrices. As already mentioned, a gray-level image is for a computer or for a softwaretool as MATLAB nothing more, than a huge matrix filled with natural numbers, often between 0 and 255.

The weight vector is now a weight-matrix. But still we use the filter by adding up different matrix-element-multiplications.
&lt;math&gt;y(n,m)=\displaystyle \sum_{i=1}^k \sum_{j=1}^l w_{ij}\times x(n-1+i,m-1+j)&lt;/math&gt;

===Dilation and Erosion===

For linear filters as seen before, it holds that they are [[W:Commutativity|commutativ]]. Cite from wikipedia: &quot;One says that x commutes with y under ∗ if:
:&lt;math&gt; x * y = y * x \,&lt;/math&gt;&quot;
In other words, it does not matter how many and in which sequence different linear filters you use. E.g. if a Savitzky-Golay filter is applied to some date, and then a second Savitzky-Golay filter for calculationg the first derivative, the result is the same if the sequence of filters is reversed.
It even holds, that there would have been '''one''' filter, which does the same as the '''two''' applied.

In contrast '''morphological operations''' on an image are non-linear operations and the final result depends on the sequence.
If we think of any image, it is defined by pixels with values x&lt;sub&gt;ij&lt;/sub&gt;. Further this image is assumed to be a black-and-white image, so we have 
:&lt;math&gt; x_{ij}= 0\;or\;1, \forall i,j &lt;/math&gt;
To define a morphological operation we have to set a '''structural element''' SE. As example, a 3x3-Matrix as a part of the image.

The definition of '''erosion''' E says:
:&lt;math&gt;E(M)=\left\{ \begin{align}
        &amp; 0,\; if \sum_{i,j=0}^3 (se)_{ij} &lt;9 \\
        &amp; 1,\; else 
       \end{align}
       \right. \; \; ,with\; (se)_{ij},M \in SE  
&lt;/math&gt;.
So in words, if '''any''' of the pixels in the structural element M has value 0, the erosion sets the value of M, a specific pixel in M, to zero. Otherwise E(M)=1

And for the '''dilation''' D it holds, if '''any''' value in SE is 1, the dilation of M, D(M), is set to 1.
:&lt;math&gt;D(M)=\left\{ \begin{align}
        &amp; 1,\; if \sum_{i,j=0}^3 (se)_{ij} &gt;=1 \\
        &amp; 0,\; else 
       \end{align}
       \right. \; \; ,with\; (se)_{ij},M \in SE  
&lt;/math&gt;.


====Compositions of Dilation and Erosion: Opening and Closing of Images====

There are two compositions of dilation and erosion. One called '''opening''' the other called '''closing'''.
It holds:
:&lt;math&gt;
   \begin{align}
     opening &amp; = &amp; dilation \circ erosion \\
     closing &amp; = &amp; erosion \circ dilation 
   \end{align}
&lt;/math&gt;

{{BookCat}}</text>
      <sha1>dil9t86utvbh7rp9lt7al3tg21yplft</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Requests for deletion/Psychiatric Rehabilitation and Recovery</title>
    <ns>4</ns>
    <id>199629</id>
    <revision>
      <id>1659813</id>
      <parentid>1539108</parentid>
      <timestamp>2009-11-18T03:50:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Wikibooks:Votes for deletion/Psychiatric Rehabilitation and Recovery]] to [[Wikibooks:Requests for deletion/Psychiatric Rehabilitation and Recovery]]: Per [[Wikibooks_talk:Votes_for_deletion#Page_rename_proposal]]</comment>
      <text xml:space="preserve">&lt;noinclude&gt;
==Psychiatric Rehabilitation and Recovery==
&lt;/noinclude&gt;

{{closed|Closed as [[File:Symbol delete vote.svg|15px]] '''Delete''' - Qualifies for speedy deletion due to author blanking and deletion of related book. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 13:13, 19 June 2009 (UTC)}}
[[Special:PrefixIndex/Psychiatric Rehabilitation and Recovery|This book]] has been blanked by the principle author, [[User:Recovery Psychology]]. [[User:Swift|Swift]] ([[User talk:Swift|talk]]) 04:31, 2 March 2009 (UTC)
*Do we know why? &amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 22:53, 17 March 2009 (UTC)
*: Not really. I guess the timing, relative to the [[A Textbook on Recovery Psychology]] saga could help shed some light on that. But right now, the weather is too good, and I should be outside... --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 03:42, 19 March 2009 (UTC)

&lt;del&gt;I asked regarding the deletion of [[A Textbook on Recovery Psychology]] if the content taken from [[Psychiatric Rehabilitation and Recovery]] could be rolled back since Psychiatric Rehabilitation is an already existing subject; the answer I got was not very clear.  The field of Psychiatric Rehabilitation (Psychosocial Rehabilitation) is actual a sub-category of social work or behavioral health or rehabilitation.  I felt it would fit in &quot;recovery psychology&quot; as much as the social work content (which is 90%...) of a psychology of developmental disability textbooks.  As a critic of textbooks; I find that the psychology part of such textbooks (psychology of developmental disability) or that 10% is not really psychology, but humanistic philosophy, history, politics and the statements which declare: what the word disability means.  The material in this text [[Psychiatric Rehabilitation and Recovery]] was absolutely boring and dull; but factual...It was the one thing I can assert I am credentialed in. (if you even care about expertise; If we were to discuss expertise)  It would be far more redeemable by the standards that [[A Textbook on Recovery Psychology]] was decided to be deleted on.--[[User:Recovery Psychology|recoverypsychologist]] ([[User talk:Recovery Psychology|talk]]) 07:14, 21 March 2009 (UTC)&lt;/del&gt;
&lt;ins&gt;Delete it...never mind--[[User:Recovery Psychology|recoverypsychologist]] ([[User talk:Recovery Psychology|talk]]) 01:54, 4 May 2009 (UTC)&lt;/ins&gt;

: Sorry, but I don't understand the bit above. Anyone able to interpret it? --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 19:52, 30 April 2009 (UTC)
:: I don't understand it fully either. To move things along though: This book seems to meet the criteria for speedy deletion, since blanking the page, leaving &quot;delete&quot; in the edit summary, and supporting the delete here qualifies as a request by the original author where there are no other contributors. Do you have any reasons why Wikibooks should not honor this request, since you brought it up here rather then speeding deleting it? --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 11:07, 1 June 2009 (UTC)
:::Yes, and given the decision on the other closely-related book by the same author... I'd have no major qualms about deleting this. &amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 17:26, 1 June 2009 (UTC)
{{end closed}}</text>
      <sha1>j0obbhmpwdh5mhy7hrzg7ht2leydk6h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:RueH</title>
    <ns>2</ns>
    <id>199630</id>
    <revision>
      <id>1539103</id>
      <timestamp>2009-06-19T13:22:51Z</timestamp>
      <contributor>
        <username>RueH</username>
        <id>244048</id>
      </contributor>
      <comment>Created page with ''''Hello!''' I'm Rue Hesterly. Please, leave me a message, if you are so inclined. Thank you.&lt;br /&gt; --~~~~'</comment>
      <text xml:space="preserve">'''Hello!''' I'm Rue Hesterly. Please, leave me a message, if you are so inclined. Thank you.&lt;br /&gt; --[[User:RueH|RueH]] ([[User talk:RueH|talk]]) 13:22, 19 June 2009 (UTC)</text>
      <sha1>50whem9ufvo2m67aniw0g1jx9vj8tym</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:RueH</title>
    <ns>3</ns>
    <id>199631</id>
    <revision>
      <id>1539105</id>
      <timestamp>2009-06-19T13:25:15Z</timestamp>
      <contributor>
        <username>RueH</username>
        <id>244048</id>
      </contributor>
      <comment>Created page with ''''Hello!''' I'm Rue Hesterly. Please, leave me a message, if you are so inclined. Thank you.&lt;br /&gt; --~~~~'</comment>
      <text xml:space="preserve">'''Hello!''' I'm Rue Hesterly. Please, leave me a message, if you are so inclined. Thank you.&lt;br /&gt; --[[User:RueH|RueH]] ([[User talk:RueH|talk]]) 13:25, 19 June 2009 (UTC)</text>
      <sha1>ozkanlrl4wm8j5d76qsf92b286lshtg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Tequilla Lime Hot Wings</title>
    <ns>102</ns>
    <id>199632</id>
    <revision>
      <id>2691691</id>
      <parentid>2646163</parentid>
      <timestamp>2014-08-15T23:04:06Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Southwestern cuisine|Southwestern U.S. cuisine]]

Tangy with some heat.

== Ingredients ==
* 36 wingettes
* Salt and black pepper
* 3/4 cup tequila
* 6 tbsp freshly squeezed lime juice
* 3 tbsp hot sauce
* Oil for deep frying

== Procedure ==
#Sprinkle wingettes with salt and black pepper.
#Heat oil to 350°.  Fry wings in batches 12 minutes. Drain on a rack.
#Combine remaining ingredients and bring to a boil over high heat until reduced by 1/3.
#Toss wings with mixture and serve warm.

[[Category:Southwestern recipes]]
[[Category:Chicken wing recipes]]
[[Category:Deep fried recipes]]
[[Category:Lime recipes]]
[[Category:Main course recipes]]
[[Category:Alcoholic beverage related recipes]]</text>
      <sha1>3p69cxewr1w6d98445hih615y3pc4hq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Backyard Barbecue Ribs</title>
    <ns>102</ns>
    <id>199634</id>
    <revision>
      <id>2679979</id>
      <parentid>2678668</parentid>
      <timestamp>2014-07-09T19:49:02Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added main course, metric cats and some metric units.</comment>
      <text xml:space="preserve">{{recipe}}

Cookbook recipe for '''Backyard Barbecue Ribs'''.

== Ingredients ==
:1 slab pork spareribs
:2 tbsp dark brown sugar
:3 tbsp smoked paprika
:1 tbsp salt
:2 tbsp cayenne pepper
:1 1/2 tbsp dried rosemary
:1 tbsp garlic powder
:1 cup tomato paste
:1/2 cup molasses
:2 tbsp Worcestershire sauce
:1/4 cup soy sauce
:2 tbsp cider vinegar
:Hickory chunks

== Directions ==

#Combine dry seasoning and rub on pork ribs. Refrigerate for at least 1 hour.
#Place hickory chunks in a 250°F (120C) smoker '''''or''''' a 250°F (120C) charcoal grill set for indirect heat.
#Combine remaining ingredients and bring to a boil over high heat until reduced by 3/4.
#Place ribs in smoker/grill and cook 5-6 hours.
#Brush ribs with tomato mixture and place on a high grill, turning and brushing often until well browned.
#Remove and let sit for 10 minutes; serve.

[[Category:Barbecue recipes|{{PAGENAME}}]]
[[Category:Pork recipes|{{PAGENAME}}]]
[[Category:Main course recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>3w8y82np3thinbhdvz656gqe9wcxicp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:North Carolina-Style BBQ Ribs</title>
    <ns>102</ns>
    <id>199635</id>
    <revision>
      <id>2688052</id>
      <parentid>1751235</parentid>
      <timestamp>2014-08-03T03:29:34Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

You want some tomato in your sauce, go over to the west side of N.C.

== Ingredients ==
* 1 slab pork spareribs
* 6 tbsp [[Cookbook:Rib Rub|Rib Rub]]
* 1 cup apple cider vinegar
* 1/3 cup honey
* 2 tbsp Worcestershire sauce

== Procedure ==
#Season ribs with Rib Rub and refrigerate for at least 1 hour.
#Combine remaining ingredients and place in a spray bottle.
#Place ribs in a 250° smoker '''''or''''' a charcoal grill set for indirect heat at 250°
#Cook for 5-6 hours, spraying often with vinegar mixture.
#Spray heavily with vinegar mixture and place on a high grill, turning and spraying constantly until well browned.
#Remove and let rest 15 minutes; serve.

== Notes ==
There will be extra vinegar mixture. You can use it for almost anything including beef briskets.

[[Category:Pork recipes]]
[[Category:Barbecue recipes]]
[[Category:Smoked recipes]]
[[Category:Vinegar recipes]]
[[Category:Barbecue sauce recipes]]</text>
      <sha1>lnok6c2kiksp6jnnxhj3j6abantd77b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Sensory Systems/Visual Implants</title>
    <ns>0</ns>
    <id>199637</id>
    <revision>
      <id>2393610</id>
      <parentid>2264094</parentid>
      <timestamp>2012-08-15T12:26:16Z</timestamp>
      <contributor>
        <username>Thomas.haslwanter</username>
        <id>89715</id>
      </contributor>
      <comment>Eliminated section on &quot;Retinal implants&quot;, as they are covered by a different page.</comment>
      <text xml:space="preserve">== Other Visual Implants ==
In addition to the stimulation of the retina, also other elements of the visual system can be stimulated

=== Stimulation of the Optic Nerve ===
With cuff-electrodes, typically with only a few segments.

''Advantages:''
* Little trauma to the eye.
''Challenges:''
* Not very specific.

=== Cortical Implants ===
[[Image:ImplantSawan.JPG‎|thumb|alt=Visual cortical implant designed by Mohamad Sawan|The Visual Cortical Implant ]][http://www.polymtl.ca/recherche/rc/en/professeurs/details.php?NoProf=108/ Dr. Mohamad Sawan], Professor and Researcher at [http://www.polystim.ca/ Polystim neurotechnologies Laboratory] at the Ecole Polytechnique de Montreal, has been working on a visual prosthesis to be implanted into the human cortex. The basic principle of Dr. Sawan’s technology consists in stimulating the visual cortex by implanting a silicium microchip on a network of electrodes made of biocompatible materials and in which each electrode injects a stimulating electrical current in order to provoke a series of luminous points to appear (an array of pixels) in the field of vision of the sightless person. This system is composed of two distinct parts: the implant and an external controller. The implant lodged in the visual cortex wirelessly receives dedicated data and energy from the external controller. This implantable part contains all the circuits necessary to generate the electrical stimuli and to oversee the changing microelectrode/biological tissue interface. On the other hand, the battery-operated outer control comprises a micro-camera which captures the image as well as a processor and a command generator which process the imaging data to select and translate the captured images and to generate and manage the electrical stimulation process and oversee the implant. The external controller and the implant exchange data in both directions by a powerful transcutaneous radio frequency (RF) link. The implant is powered the same way. (Wikipedia [http://en.wikipedia.org/wiki/Visual_prosthesis])

''Advantages:''
* Much larger area for stimulation: 2° radius of the central retinal visual field correspond to 1 mm&lt;sup&gt;2&lt;/sup&gt; on the retina, but to 2100 mm&lt;sup&gt;2&lt;/sup&gt; in the visual cortex.
''Challenges:''
* Implantation is more invasive.
* Parts of the visual field lie in a sulcus and are very hard to reach.
* Stimulation can trigger seizures.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>lo3icvrcv85y3aam4bs2xd01ps4ls3z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Zxcxiao</title>
    <ns>3</ns>
    <id>199639</id>
    <revision>
      <id>1539225</id>
      <timestamp>2009-06-19T15:46:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Notification regarding [[:H1N1 influenza infection in Latin American countries the rapid increase in influenza cases]]. using [[User:Mike.lifeguard/Twinkle Speedy documentation|TW]]</comment>
      <text xml:space="preserve">

==[[H1N1 influenza infection in Latin American countries the rapid increase in influenza cases]]==
{{mbox|type=notice|msg=
[[H1N1 influenza infection in Latin American countries the rapid increase in influenza cases|This page]] appears to have been created in error (due to a test, or some kind of [[Help:Editing|misplaced edit]]). It might be a [[Help:Stub|stub]], if so, please use [[{{TALKPAGENAME:H1N1 influenza infection in Latin American countries the rapid increase in influenza cases}}|the discussion page]] as to explain what this page is about. If it evolves into a [[WB:WIW|legitimate Wikibooks module]], you may remove the tag. If not fixed, explained, or improved, it will automatically be considered a candidate for [[Wikibooks:Deletion policy#Speedy deletions|speedy deletion]] in 7 days. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 15:46, 19 June 2009 (UTC)
}}</text>
      <sha1>04463em2sdj97gpllhjhft7vqrg8hl9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Rosemary Garlic Strip Steak</title>
    <ns>102</ns>
    <id>199645</id>
    <revision>
      <id>2689945</id>
      <parentid>1799210</parentid>
      <timestamp>2014-08-08T22:58:41Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

Perfect for Dad on Father's Day.

== Ingredients ==
* 2 strip steaks
* 2 sprigs rosemary
* 1 1/2 tsp minced garlic
* 2 Tbsp olive oil
* Salt and black pepper

== Procedure ==
#Rub steaks with garlic on both sides and coat with olive oil.
#Sprinkle steaks with salt and black pepper and place on the highest heat you can get with your grill. Place rosemary on top of each steak.
#Sear 2-3 minutes per side and move to medium grill temperature. Cook until internal temperature reaches desired &quot;doneness&quot;.
#Let rest 10 minutes; slice thinly across the grain on a bias and serve.

[[Category:Beef recipes]]
[[Category:Garlic recipes]]
[[Category:Rosemary recipes]]
[[Category:Grilled recipes]]
[[Category:Main course recipes]]</text>
      <sha1>fsc2w5ncoshf7g2qmo0ud2ypnytv7io</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Compiler construction/Dealing with errors</title>
    <ns>0</ns>
    <id>199646</id>
    <redirect title="Compiler Construction/Dealing with errors" />
    <revision>
      <id>1539311</id>
      <timestamp>2009-06-19T17:12:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Compiler construction/Dealing with errors]] to [[Compiler Construction/Dealing with errors]]: Edit history merge.</comment>
      <text xml:space="preserve">#REDIRECT [[Compiler Construction/Dealing with errors]]</text>
      <sha1>l7gzx0nf0ov2x18vf79joqigoc5f5fd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Dad's Favorite Grilled Ribeye</title>
    <ns>102</ns>
    <id>199647</id>
    <revision>
      <id>2681633</id>
      <parentid>2645746</parentid>
      <timestamp>2014-07-15T23:32:16Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added grilled and main course cats.</comment>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Cuisine of the United States|U.S. Cuisine]]

This is a steak Dad will love anytime.

== Ingredients ==
* 2 bone-in ribeye steaks (sometimes called a rib steak)
* 3 tbsp any mustard you like

'''Rub Ingredients'''
* 1/2 tsp each salt and black pepper
* 1/2 tsp-1 tsp cayenne pepper (depending on how spicy you like it)
* 2 tsp ground coriander
* 1 tbsp smoked paprika

== Procedure ==
#Combine all rub ingredients.
#Coat steaks with mustard and apply rub to steaks.
#Refrigerate for 30 minutes.
#Heat your grill as high as it will go.
#Place steaks on grill and cook 2-3 minutes per side.
#Move steaks to medium grill heat.
#Cook until desired &quot;doneness&quot;, turning frequently.
#Remove and let rest 10 minutes; slice thinly across the grain on a bias and serve.

[[Category:Beef recipes]]
[[Category:Barbecue recipes]]
[[Category:Grilled recipes]]
[[Category:Main course recipes]]</text>
      <sha1>bxvz5o15oab5i1cpsq5tnhmyfo0e83t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Pulled Pork Sandwiches</title>
    <ns>102</ns>
    <id>199648</id>
    <revision>
      <id>2689052</id>
      <parentid>1785555</parentid>
      <timestamp>2014-08-06T00:30:09Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added sandwich cat.</comment>
      <text xml:space="preserve">{{recipe}} [[Category:Pork recipes]] [[Category:Barbecue recipes]] [[Category:Smoked recipes]]

Please don't try to do this in the oven 'cause you'll just ruin it.

== Ingredients ==
* Hamburger buns for serving
* 1 6-8 lb. Boston pork butt, trimmed
* 12 ounces by weight pickling salt
* 3/4 cup honey
* 2 quarts water
* 2 tbsp paprika
* 2 tbsp black pepper
* 3 tbsp dehydrated lemon peel
* 2 tbsp cayenne pepper (more if you like)
* 1 1/2 tbsp dried rosemary
* 3 tbsp dark brown sugar
* Several pounds of apple wood
* Large bag of ice, if needed

== Procedure ==
#Combine water, salt, and honey in a 6-quart cooler. Add pork and refrigerate or place a large bag of ice on top for 8-12 hours.
#Remove pork from brine and pat dry with paper towels. Combine remaining seasonings and rub on pork.
#Light a few chunks of apple wood and place in the firebox of a smoker. Keep temperature in smoker to 210°
#Place in a smoker and cook for 8-12 hours, changing wood as needed. The meat should be tender at this point. IF NOT CONTINUE SMOKING!
#Let rest 1 hour, then shred with two forks. Serve on hamburger buns.

[[Category:Sandwich recipes]]</text>
      <sha1>5litbh57glpxxkvp0lsy50jkqm9vifw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Ethnomedicine</title>
    <ns>14</ns>
    <id>199649</id>
    <revision>
      <id>1539365</id>
      <timestamp>2009-06-19T18:11:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Anthropology]]
[[Category:Alternative medicine]]</text>
      <sha1>cvjsr8jlv69194zqvnoeq5hzku1lkeo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Ranunculus</title>
    <ns>110</ns>
    <id>199651</id>
    <revision>
      <id>1876084</id>
      <parentid>1542229</parentid>
      <timestamp>2010-07-07T18:35:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Ranunculus&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Buttercup
|binomial =Ranunculus
|image1 =Kruipende boterbloem bloem (Ranunculus repens).jpg
|caption1 =Flower
|image2=Ranunculus repens blatt.jpeg
|caption2=Leaf
|image3 =Ranunculus repens LC0036.jpg
|caption3=Whole plant
|description =Buttercups are a bright yellow flower with five petals.  The flowers usually grow at the top of a long stem.  The leaf shape depends on the species, but they usually have wavy edges that zig and zag deeply back and forth.
There are nearly a hundred species of Buttercups growing in the United States, and four hundred species world-wide.  All Buttercups are poisonous when eaten fresh by cattle, horses, and other livestock, but their acrid taste and the blistering of the mouth caused by their poison means they are usually left uneaten. 
|facts = In Pacific Northwest of the United States the buttercup is called &quot;Coyote’s eyes&quot;. In the the Nez Perce Indian legend, Coyote was tossing his eyes up in the air and catching them again when Eagle snatched them. Unable to see, Coyote made eyes from the buttercup.
}}</text>
      <sha1>crqo8v9samq2t35qem22y1i4e5769i4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Artificial Intelligence/How you can help</title>
    <ns>0</ns>
    <id>199652</id>
    <revision>
      <id>2701096</id>
      <parentid>1543767</parentid>
      <timestamp>2014-09-18T02:39:13Z</timestamp>
      <contributor>
        <username>Shchung</username>
        <id>1726940</id>
      </contributor>
      <text xml:space="preserve">This is the local manual of style ([[WB:LMOS]]) for the Artificial Intelligence book.


It would be good to decide on some editing policy beforehand. I propose at least the following guidelines:

* single-slash flat namespace for subpages. In other words, '''Artificial Intelligence/Introduction to Neural Networks'''
* Code fragments in pseudocode. We could set up an appendix with example code in C/Lisp/Prolog, but basic code fragments in the chapters should be pseudocode.

[[Category:Artificial Intelligence]]

'''Expression of Interest to Contribute in Artificial Intelligence WikiBooks'''

Dear All, 

I would like to express my interest to contribute in the content of the Artificial Intelligence WikiBooks. I would also like to welcome Prof Lim, Dr Wong, [[User:etkhor|etkhor]], [[User:JeanneCMH|JeanneCMH]] and thank you for agreeing to contribute into this AI Wikibooks. We will try our best in contributing our knowledge and editing skills in this open content and fulfill global access to educational materials. 

Thanks! [[User:Shchung|Shchung]] ([[User talk:Shchung|discuss]] • [[Special:Contributions/Shchung|contribs]]) 02:39, 18 September 2014 (UTC)</text>
      <sha1>h4a3gx5u6qop2htyhcw5giuedz1xcfa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:TE-Venn-1.png</title>
    <ns>6</ns>
    <id>199653</id>
    <revision>
      <id>1539416</id>
      <timestamp>2009-06-19T19:43:08Z</timestamp>
      <contributor>
        <username>DavidLevinson</username>
        <id>82769</id>
      </contributor>
      <comment>Venn diagram of transport economics, traditional</comment>
      <text xml:space="preserve">== Summary ==
Venn diagram of transport economics, traditional
== Licensing: ==
{{self|GFDL|cc-by-sa-3.0,2.5,2.0,1.0}}</text>
      <sha1>n0492j06uhbzyqgqctx50f7ja6jons8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:TE-Venn-2.png</title>
    <ns>6</ns>
    <id>199654</id>
    <revision>
      <id>1539419</id>
      <timestamp>2009-06-19T19:44:21Z</timestamp>
      <contributor>
        <username>DavidLevinson</username>
        <id>82769</id>
      </contributor>
      <comment>Venn diagram of transport economics, heterodox</comment>
      <text xml:space="preserve">== Summary ==
Venn diagram of transport economics, heterodox
== Licensing: ==
{{self|GFDL|cc-by-sa-3.0,2.5,2.0,1.0}}</text>
      <sha1>dkgi1gj4td6nxyv62emn2s0csty7h0y</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Pork Roast with Cayenne Apple Glaze</title>
    <ns>102</ns>
    <id>199655</id>
    <revision>
      <id>2692596</id>
      <parentid>2690873</parentid>
      <timestamp>2014-08-17T16:17:06Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Austncorp moved page [[Cookbook:Spicy Apple Glazed Pork Roast]] to [[Cookbook:Pork Roast with Cayenne Apple Glaze]]: This name will make it easier to find.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 2 boneless pork loin roasts
* 1/4 cup Dijon mustard
* 6 oz. apple cider
* 2 tbsp cider vinegar
* 2 tbsp brown sugar
* 2 tbsp Worcestershire sauce
* 1 tbsp cayenne pepper
* 1 tbsp salt
* 1 tbsp black pepper
* 1 tbsp smoked paprika

== Procedure ==
#Combine dry powders. Set aside.
#Smear mustard as needed on one end of each roast. Attach mustard ends of roasts together.
#Spread remaining mustard all over roasts. Apply dry powder mixture.
#Bake at 375° until internal temperature reaches 135°.
#Combine remaining ingredients and brush on pork.
#Bake at 375° until internal temp. reaches 145°. (Yes, it is safe)
#Let rest for 10 minutes; serve.

[[Category:Pork recipes]]
[[Category:Roasted recipes]]
[[Category:Main course recipes]]</text>
      <sha1>idbrho463e4hyya297k9t394smw22fi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Cheesy Mascarpone Cornbread Stuffing</title>
    <ns>102</ns>
    <id>199658</id>
    <revision>
      <id>2680539</id>
      <parentid>1702175</parentid>
      <timestamp>2014-07-11T21:51:38Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats. Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 2 1/2 cups cornbread, crumbled
* 3/4 cup mascarpone cheese, divided
* 2 cups heavy cream, beaten to soft peaks
* 1/2 tsp salt
* 1/2 tsp black pepper
* 1 tbsp sage, sliced thinly
* 4 egg yolks, beaten
* 1/4 cup butter, melted

== Procedure ==
#Combine all ingredients except for cream and 1/4 cup mascarpone cheese.
#Gently fold in cream.
#Bake in a 350°F (175C) oven 30-35 minutes.
#Spread remaining cheese on top and place under a preheated broiler until browned and bubbly.
#Cool 10 minutes; serve.

[[Category:Cornbread recipes]]
[[Category:Cheese recipes]]
[[Category:Stuffing recipes]]
[[Category:Baked recipes]]
[[Category:Side dish recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>0pkt8hnkeuxde8ietlbusvkopbj5dsv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Meatballs with Honey Lime Sauce</title>
    <ns>102</ns>
    <id>199659</id>
    <revision>
      <id>2692313</id>
      <parentid>2687660</parentid>
      <timestamp>2014-08-17T02:32:10Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Beef to Ground Beef cat, per the recipe.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
*1 pound ground beef
*1 tsp [[Cookbook:salt|salt]]
*1 tsp [[Cookbook:Pepper|black pepper]]
*1 tsp red pepper flake
*1/2 cup dried breadcrumbs
*1 tsp each dried [[Cookbook:Rosemary|rosemary]] and dried [[Cookbook:Thyme|thyme]]
*1 egg, beaten
*2 tbsp clarified butter
*1/4 cup chicken broth
*2 tbsp honey
*Juice of three limes

== Procedure ==
#Combine ingredients except for 1/4 cup dried breadcrumbs.
#Refrigerate for at least 1 hour.
#Shape into balls that are 1 oz. by weight.
#Melt butter in your largest saute pan over low heat.
#Dredge balls in remaining breadcrumbs.
#Heat butter to medium heat.
#Place balls in skillet, working in batches if needed, and cook until well browned and internal temperature reaches 160 degrees.
#Place in a 200° degree oven to keep warm.
#Deglaze pan with broth. Add other ingredients and bring to a boil until reduced by 1/4.
#Return meatballs to pan and toss to coat.
#Serve warm.

[[Category:Ground beef recipes]]
[[Category:Honey recipes]]
[[Category:Lime recipes]]
[[Category:Sauce recipes]]
[[Category:Pan fried recipes]]
[[Category:Main course recipes]]</text>
      <sha1>7qli7xca7odmh0idcroalp6tnznszm8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Honey Lime Pork Loin</title>
    <ns>102</ns>
    <id>199660</id>
    <revision>
      <id>2684775</id>
      <parentid>1735137</parentid>
      <timestamp>2014-07-26T00:12:43Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 boneless pork loin roast
* 1 tsp cayenne pepper
* 2 Tbsp brown sugar
* 1 tsp garlic powder
* 1 tsp salt
* 1 tsp black pepper
* 1 cup chicken broth
* 1/4 cup red wine
* 2 tbsp Worcestershire sauce
* 2 tbsp olive oil
* 2 tbsp honey
* Juice of one lime
* 2 tbsp AP flour
* 2 tbsp butter

== Procedure ==
#Heat oil in a large sauté pan over high heat. Add roast and cook until thoroughly browned on all sides.
#Remove from pan and keep warm. Add broth and deglaze pan, stirring to remove browned bits.
#Place roast in a greased roasting pan and rub with seasonings.
#Reduce chicken broth by 1/2.
#Combine chicken broth with wine and Worcestershire sauce and pour over pork.
#Insert a probe thermometer that can go into the oven in the roast and bake at 275°F (135C) until internal temperature reaches 145°F (63C). Keep warm.
#Place cooking liquid in the refrigerator until fat has solidified. Skim.
#Stir in honey and lime juice. Set aside.
#Melt butter over medium heat in a large sauce pan. Whisk in flour and cook, stirring constantly until light blonde color is achieved.
#Add cooking liquid mixture to the pan and bring to a boil until reduced by 1/3.
#Rewarm pork, if needed. Slice and serve with sauce.

[[Category:Pork recipes]]
[[Category:Honey recipes]]
[[Category:Lime recipes]]
[[Category:Roasted recipes]]
[[Category:Main course recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>gihqbov9rvcilj7v8pw7z2ged6av9kt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Chelidonium majus</title>
    <ns>110</ns>
    <id>199661</id>
    <revision>
      <id>1876133</id>
      <parentid>1542223</parentid>
      <timestamp>2010-07-07T18:41:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Chelidonium majus&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Celandine
|binomial =Chelidonium majus
|image1 =Flower October 2008-1.jpg
|caption1 =Flower and leaves
|image2=Chelidonium majus.001 - Serra de Enciña de Lastra.JPG
|caption2=Flower
|image3 =Chelidonium majus-1.jpg
|caption3=A colony of Celandine
|description =Celandine is a bushy plant with yellow flowers.  Each flower has four petals, each about a half inch long (making the whole flower about one inch across).  The leaves look a little bit like an oak leaf, with scalloped edges.  It makes a yellow sap that can stain the hands and clothes, so be careful if you handle it.  Sometimes the sap will cause a skin rash too.  The plant has many medicinal uses.
|facts = Europeans brought Celandine with them to North America so they could use it to treat warts.  It is still used for that in Russia today.  
}}</text>
      <sha1>ns9jb889zludf5iejs5h8r9kq42ij51</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Download</title>
    <ns>2</ns>
    <id>199662</id>
    <revision>
      <id>1539512</id>
      <timestamp>2009-06-20T00:27:38Z</timestamp>
      <contributor>
        <username>Download</username>
        <id>222559</id>
      </contributor>
      <comment>create</comment>
      <text xml:space="preserve">Hello, and welcome to my userpage.  I am mainly active on the English Wikipedia under the username [[:en:User:Download|download]].</text>
      <sha1>jqsdpay1gvpf6nh9ckrouhqptnvvl8y</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Hypericum perforatum</title>
    <ns>110</ns>
    <id>199663</id>
    <revision>
      <id>1876111</id>
      <parentid>1542227</parentid>
      <timestamp>2010-07-07T18:38:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Hypericum perforatum&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Saint John's Wort
|binomial =Hypericum perforatum
|image1 =Hypericum perforatum NRM.jpg
|caption1 =Flower
|image2 =Saint johns wart flowers.jpg
|caption2=Flower cluster
|image3=Hypericum-perforatum(Blatt).jpg
|caption3=See the little see-through dots on the leaves?
|description =Saint John's Wort is a plant that grows about three feet high.  It has yellow flowers with five petals, and lots and lots of stamens ('''stay'''-mins) which are like little threads coming out of the center of the flower.  The leaves are very interesting too, and can help you be absolutely sure that the plant really is Saint John's Wort.  Each leaf has several tiny see-through dots on it. If you pluck a leaf and hold it up to the light, you should be able to see them.  The dots around the edges sometimes turn black.  

The scientific name ''Hypericum'' means &quot;over picture&quot;, because people used to pick the plant and hang it ''over'' the ''picture'' of a saint to ward off evil.  The other part of its name, ''perfoliatum&quot; means ''leaf with holes'' (remember that the holes along the edge of a piece of paper are called ''perforations'', and leaves are also called ''foliage'').

Now days, people use Saint John's Wort to treat depression (deep sadness).  
|facts = People used to harvest Saint John's Wort on Saint John's Day, which is June 24.  ''Wort'' is a very old word that means ''plant''.
}}</text>
      <sha1>fo2nwh9kpuhx63ia3fe2cy5gt8k0ul2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Sauteed Mushrooms</title>
    <ns>102</ns>
    <id>199666</id>
    <revision>
      <id>2690130</id>
      <parentid>1805092</parentid>
      <timestamp>2014-08-09T15:26:39Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats. Adjusted text slightly.</comment>
      <text xml:space="preserve">{{recipe}}

Put this on your next steak. It's almost like a sauce.

== Ingredients ==
* 1 pound morel [[Cookbook:Mushroom|mushrooms]], thinly sliced
* Salt and black pepper
* 2 tsp minced [[Cookbook:Garlic|garlic]]
* 1/2 large [[Cookbook:Onion|onion]], diced
* 1 Tbsp extra virgin [[Cookbook:Olive Oil|olive oil]]

== Procedure ==
#Sprinkle mushrooms and onion with salt and black pepper.
#Heat oil in large saute pan over medium high heat.
#Add garlic and cook 30-45 seconds. Add remaining ingredients and cook for 7-10 more minutes.
#Remove from pan and drizzle with pan juices. Serve.

[[Category:Mushroom recipes]]
[[Category:Sauce recipes]]
[[Category:Pan fried recipes]]
[[Category:Side dish recipes]]
[[Category:Sautéed recipes]]</text>
      <sha1>idblpeqo9re7jzkj58u31vzebuh2miu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Entropa</title>
    <ns>3</ns>
    <id>199699</id>
    <revision>
      <id>1539652</id>
      <timestamp>2009-06-20T04:00:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Notification regarding [[:Exploration &amp; Explorers]]. using [[User:Mike.lifeguard/Twinkle Speedy documentation|TW]]</comment>
      <text xml:space="preserve">

==[[Exploration &amp; Explorers]]==
{{mbox|type=notice|msg=
[[Exploration &amp; Explorers|This page]] appears to have been created in error (due to a test, or some kind of [[Help:Editing|misplaced edit]]). It might be a [[Help:Stub|stub]], if so, please use [[{{TALKPAGENAME:Exploration &amp; Explorers}}|the discussion page]] as to explain what this page is about. If it evolves into a [[WB:WIW|legitimate Wikibooks module]], you may remove the tag. If not fixed, explained, or improved, it will automatically be considered a candidate for [[Wikibooks:Deletion policy#Speedy deletions|speedy deletion]] in 7 days. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 04:00, 20 June 2009 (UTC)
}}</text>
      <sha1>2pk69419dsnxqw2ssxkwavpv33ze9oi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:FHSST Physics/Images</title>
    <ns>14</ns>
    <id>199700</id>
    <revision>
      <id>1539662</id>
      <timestamp>2009-06-20T04:06:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Image category.</comment>
      <text xml:space="preserve">This category contains images that are part of the [[FHSST Physics]] book.

[[Category:FHSST Physics|Images]]</text>
      <sha1>j1ordfa0ifga5jv7fdhpk2iniflnb1x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:FHSST Physics/Templates</title>
    <ns>14</ns>
    <id>199702</id>
    <revision>
      <id>1540880</id>
      <parentid>1540425</parentid>
      <timestamp>2009-06-20T20:34:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed template.</comment>
      <text xml:space="preserve">This category contains templates used in the [[FHSST Physics]] book.

{{BookCat}}</text>
      <sha1>6ggefulgvmhs9cvuvnv6t3r0xs710l3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Bci2versty</title>
    <ns>2</ns>
    <id>199705</id>
    <revision>
      <id>1539746</id>
      <parentid>1539735</parentid>
      <timestamp>2009-06-20T07:01:15Z</timestamp>
      <contributor>
        <username>Bci2versty</username>
        <id>244432</id>
      </contributor>
      <text xml:space="preserve">
=Subpages=
User:Bci2versty/Books
User:Bci2versty


==Wikibooks of Bci2versty==
*[[Quantum Mechanics]]
*[[Quantum Mechanics/Heisenberg Uncertainty Principle]]
*[[Quantum Mechanics/X-Ray Diffraction Techniques]]
*[[Quantum field theory/QFT Schwinger-Dyson]]
*[[Quantum Mechanics/Quantum Chromodynamics]]
*[[Quantum theory]]
*[[Quantum logic]]
*[[Hamiltonian]]
*[[Operator algebra]]
*[[Quantum algebra]]</text>
      <sha1>bb4kpguwxppoba4b02byahlxcxdsb8f</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Bci2versty/Books</title>
    <ns>2</ns>
    <id>199706</id>
    <revision>
      <id>1541061</id>
      <parentid>1539737</parentid>
      <timestamp>2009-06-20T22:20:51Z</timestamp>
      <contributor>
        <username>Bci2versty</username>
        <id>244432</id>
      </contributor>
      <comment>/* Bci2versty Science Books */</comment>
      <text xml:space="preserve">==Bci2versty Science Books==
:[[Algebraic topology]]
:[[Category theory]]
*[[Non-Abelian category theory]] 
*[[Non-abelian algebraic topology]]
:[[Higher dimensional algebra]]
:[[Quantum field theory]]
:[[Quantum mechanics]]</text>
      <sha1>17pim1tcs5y23fgu97tggc0c74xu6zu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Quantum Field Theory</title>
    <ns>1</ns>
    <id>199707</id>
    <revision>
      <id>2029257</id>
      <parentid>1605957</parentid>
      <timestamp>2011-02-11T18:03:02Z</timestamp>
      <contributor>
        <username>Zpellis0</username>
        <id>429030</id>
      </contributor>
      <minor />
      <text xml:space="preserve">:The purpose of any book is to integrate information not to dissipate it into smaller bits-- into broken up book fragments in different places.[[User:Bci2versty|Bci2versty]] ([[User talk:Bci2versty|talk]]) 06:49, 20 June 2009 (UTC)Bci2versty[[User:Bci2versty|Bci2versty]] ([[User talk:Bci2versty|talk]]) 06:49, 20 June 2009 (UTC)

The entries as they exist today are little more than a list; isn't the purpose of these pages is to help those who are interested to learn? If so, then some explanation for such readers would be helpful.

Thanks [[User:Zpellis0|Zpellis0]] ([[User talk:Zpellis0|discuss]] • [[Special:Contributions/Zpellis0|contribs]]) 18:03, 11 February 2011 (UTC)Zpellis0</text>
      <sha1>8axzsrmz04vwsh1x729ar9o4eql2d9l</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Bci2versty/my talk</title>
    <ns>2</ns>
    <id>199708</id>
    <revision>
      <id>2361823</id>
      <parentid>1539748</parentid>
      <timestamp>2012-06-10T12:50:19Z</timestamp>
      <contributor>
        <username>Mabdul</username>
        <id>173174</id>
      </contributor>
      <minor />
      <comment>remove nonexistent template</comment>
      <text xml:space="preserve">==User Bci2versty:Talk==

Discussion Pages</text>
      <sha1>87kpsxv3olkjd43k3gtbessk6pxg8rd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Bci2versty/X-ray &amp; Neutron</title>
    <ns>2</ns>
    <id>199709</id>
    <revision>
      <id>1581799</id>
      <parentid>1539758</parentid>
      <timestamp>2009-07-28T13:59:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>/* Resources */ Fixed link</comment>
      <text xml:space="preserve">==X-ray and Neutron Diffraction Techniques==

==Resources==
*[[X-ray]]s
*[[X-ray scattering techniques]]
*[[Quantum Mechanics/X-Ray Diffraction Techniques]]
*[[X-ray diffraction]]
*[[X-ray crystallography]]
*[[Crystal]]
*[[Diffraction]]
*[[/Uniform theory of diffraction/]]
*[[Crystallography]]
*[[Paracrystalline]]
*[[Synchrotron]]
*[[X-ray microscope]]
*[[Imaging]]
*[[Compton scattering]]
*[[Nanotechnology]]
*[[Neutron]]s
*[[Neutron scattering]]
*[[Inelastic neutron scattering]]
*[[ISIS]]
*[[ISIS neutron source]]
*[[Sudbury Neutrino Observatory]]
*[[Ionization cooling|Muon scattering]]
*[[ATLAS experiment]]
*[[Neutron spin echo]]
*[[Deep inelastic scattering]]
*[[List of materials analysis methods]]
*[[List of neutrino experiments]]
*[[Timeline of microphysics]]
*[[Automatic calculation of particle interaction or decay ]]
*[[S-matrix]]</text>
      <sha1>eq422tjgezaa9yfqsqqn0vp99u3azxh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Thenub314/notestoself/</title>
    <ns>2</ns>
    <id>199714</id>
    <revision>
      <id>1539811</id>
      <timestamp>2009-06-20T11:13:04Z</timestamp>
      <contributor>
        <username>Thenub314</username>
        <id>38087</id>
      </contributor>
      <comment>Created page with 'I should figure out the deal with FHSST Physics and book naming conventions.'</comment>
      <text xml:space="preserve">I should figure out the deal with FHSST Physics and book naming conventions.</text>
      <sha1>ei6ij8m0m0xp0vongj38cw31anabrja</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Coronation chicken</title>
    <ns>102</ns>
    <id>199716</id>
    <redirect title="Cookbook:Coronation Chicken" />
    <revision>
      <id>1539822</id>
      <timestamp>2009-06-20T11:25:24Z</timestamp>
      <contributor>
        <ip>87.16.58.234</ip>
      </contributor>
      <comment>#REDIRECT [[Cookbook:Coronation Chicken]]</comment>
      <text xml:space="preserve">#REDIRECT [[Cookbook:Coronation Chicken]]</text>
      <sha1>tvxhy1xzf9jqmq7mg0v9fjyin2qgvf2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Non-Programmer's Tutorial for Python</title>
    <ns>0</ns>
    <id>199717</id>
    <redirect title="Non-Programmer&#039;s Tutorial for Python 2.6" />
    <revision>
      <id>1754631</id>
      <parentid>1539827</parentid>
      <timestamp>2010-04-11T19:57:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed double redirect</comment>
      <text xml:space="preserve">#REDIRECT [[Non-Programmer's Tutorial for Python 2.6]]</text>
      <sha1>cljeing39jgizzuwz6v2w4jvuxknc7y</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Non-Programmer's Tutorial for Python</title>
    <ns>1</ns>
    <id>199718</id>
    <redirect title="Talk:Non-Programmer&#039;s Tutorial for Python 2.6" />
    <revision>
      <id>1754630</id>
      <parentid>1539829</parentid>
      <timestamp>2010-04-11T19:57:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed double redirect</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:Non-Programmer's Tutorial for Python 2.6]]</text>
      <sha1>0bind8qj8tdsx7j7ph6guvs60hif2vi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>C Sharp Programming/The .NET Framework/Windows Forms/Controls</title>
    <ns>0</ns>
    <id>199761</id>
    <revision>
      <id>2156625</id>
      <parentid>2156624</parentid>
      <timestamp>2011-08-12T15:10:19Z</timestamp>
      <contributor>
        <username>Sae1962</username>
        <id>384871</id>
      </contributor>
      <minor />
      <comment>Added navigation bar</comment>
      <text xml:space="preserve">{{C sharp/Navigation}}
{{C sharp/Windows controls}}

A Windows application written in C# consists of ''control'' objects that are all derived from the &lt;code&gt;System.Windows.Forms.Control&lt;/code&gt; class.

{{stub}}</text>
      <sha1>aeg4095i998hti1aioc4usorornq3kn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>C Sharp Programming/The .NET Framework/Windows Forms/Control/Form</title>
    <ns>0</ns>
    <id>199762</id>
    <revision>
      <id>1540026</id>
      <parentid>1540022</parentid>
      <timestamp>2009-06-20T12:10:56Z</timestamp>
      <contributor>
        <username>Watcher</username>
        <id>244532</id>
      </contributor>
      <comment>windows controls template</comment>
      <text xml:space="preserve">The &lt;code&gt;System.Windows.Form&lt;/code&gt; class is the key graphical building block of Windows applications. It provides the visual frame that holds buttons, menus, icons, and title bars together.  Integrated development environments (IDEs) like Visual C# and SharpDevelop can help create graphical applications, but it is important to know how to do so manually:  

&lt;code&gt;
 {{C sharp/kw|using}} System.Windows.Forms;
 {{C sharp/kw|public}} {{C sharp/kw|class}} ExampleForm : Form    // inherits from System.Windows.Forms.Form
 {
    {{C sharp/kw|public}} {{C sharp/kw|static}} {{C sharp/kw|void}} Main()
    {
        ExampleForm wikibooksForm = new ExampleForm();
        wikibooksForm.Text = &quot;I Love Wikibooks&quot;;// specify title of the form
        wikibooksForm.Width = 400;              // width of the window in pixels
        wikibooksForm.Height = 300;             // height in pixels
        Application.Run(wikibooksForm);         // display the form
    }
 }
&lt;/code&gt;

The example above creates a simple Window with the text &quot;I Love Wikibooks&quot; in the title bar.  Custom form classes like the example above inherit from the &lt;code&gt;System.Windows.Forms.Form&lt;/code&gt; class.  Setting any of the properties &lt;code&gt;Text&lt;/code&gt;, &lt;code&gt;Width&lt;/code&gt;, and &lt;code&gt;Height&lt;/code&gt; is optional.  Your program will compile and run successfully if you comment these lines out, but they allow us to add extra control to our form.


{{C sharp/Windows controls}}</text>
      <sha1>1kpd40qusee5fkbios6jrw482ldgjh1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:C sharp/Windows controls</title>
    <ns>10</ns>
    <id>199763</id>
    <revision>
      <id>1618018</id>
      <parentid>1540029</parentid>
      <timestamp>2009-08-28T15:01:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">&lt;div style=&quot;text-align:center;width:90%;padding:0.5em; font-size:small;margin:0px auto;background:#efe;border:1px solid #bfb;clear:both&quot; class=&quot;noprint&quot;&gt;&lt;!--
--&gt;
'''[[C_Sharp_Programming/The_.NET_Framework/Windows_Forms/Controls|C# Windows Controls]]'''
&lt;br /&gt;
[[C_Sharp_Programming/The_.NET_Framework/Windows_Forms/Control/Control|Control class]] | [[C_Sharp_Programming/The_.NET_Framework/Windows_Forms/Control/Form|Form]] | 
[[C_Sharp_Programming/The_.NET_Framework/Windows_Forms/Control/Button|Button]] |
[[C_Sharp_Programming/The_.NET_Framework/Windows_Forms/Control/Label|Label]] |
[[C_Sharp_Programming/The_.NET_Framework/Windows_Forms/Control/TextBox|TextBox]] | 
[[C_Sharp_Programming/The_.NET_Framework/Windows_Forms/Control/RichTextBox|RichTextBox]]
[[C_Sharp_Programming/The_.NET_Framework/Windows_Forms/Control/ListBox|ListBox]] | 
[[C_Sharp_Programming/The_.NET_Framework/Windows_Forms/Control/ComboBox|ComboBox]] | 
[[C_Sharp_Programming/The_.NET_Framework/Windows_Forms/Control/TabControl|TabControl and TabPage]]
&lt;!--
--&gt;&lt;/div&gt;&lt;includeonly&gt;
{{displaytitle|title={{#ifeq:{{BOOKNAME}}|{{PAGENAME}}|C# Programming|C# Programming/{{FULLCHAPTERNAME}}}}}}{{subject|Object-oriented programming languages}}&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:C Sharp Programming/Templates|Windows controls]]&lt;/noinclude&gt;</text>
      <sha1>5jtrmmkiqq3arc636ppvp9zboybdb6n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Watcher</title>
    <ns>2</ns>
    <id>199764</id>
    <revision>
      <id>1540032</id>
      <timestamp>2009-06-20T12:25:09Z</timestamp>
      <contributor>
        <username>Watcher</username>
        <id>244532</id>
      </contributor>
      <comment>Created page with 'Welcome to my page.  I am now trying to build up the [[C_Sharp_Programming/The_.NET_Framework/Windows_Forms|Windows Forms]] section of the C# programming book. Generally, I love ...'</comment>
      <text xml:space="preserve">Welcome to my page.

I am now trying to build up the [[C_Sharp_Programming/The_.NET_Framework/Windows_Forms|Windows Forms]] section of the C# programming book. Generally, I love the topic of Windows programming and hope to contribute to writing some brilliant prose :) on the matter.

In the future I also hope to expand on the manuals for PHP and ASP.net, but unfortunately I know a lot less about them. BTW imho it's a pity that even for widely known programming environments the level of editor enthusiasm and consequently the amount of work done is a lot smaller than what is found in the mainstream Wikipedia. It sure would have helped if some of the sort of passion that went into documenting [[w:Atlas Shrugged]] and [[w:Star Trek]] could have also contributed to documenting popular programming frameworks :) [[User:Watcher|Watcher]] ([[User talk:Watcher|talk]]) 12:25, 20 June 2009 (UTC)</text>
      <sha1>snz69wf5ww6cqjtk34pkxbx40x3bpyq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Molasses-Glazed Pork Chops</title>
    <ns>102</ns>
    <id>199767</id>
    <revision>
      <id>2687828</id>
      <parentid>1745984</parentid>
      <timestamp>2014-08-02T13:06:32Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 4 thick cut pork rib chops
* 1 tsp salt
* 1 tsp black pepper
* 2 tsp dried rosemary
* 1/2 tsp ground ginger
* 6 ounces by weight of molasses
* 1 tsp garlic powder
* 3/4 tsp cayenne pepper
* 2 tbsp cider vinegar
* Juice of two limes

== Procedure ==
#Place pork chops in a large zip-top bag. Combine liquid ingredients and pour into bag. Refrigerate for at least 30 minutes.
#Take pork out of marinade. Combine dry seasonings and rub on pork. Heat your grill as high as it will go.
#Boil marinade ten minutes.
#Place pork on grill and cook 2 minutes, brushing with marinade before turning 90 degrees. Cook another 2 minutes, brushing.
#Flip and repeat. Remove from grill and let rest for 10 minutes. Serve with additional marinade.

[[Category:Pork recipes]]
[[Category:Molasses recipes]]
[[Category:Grilled recipes]]
[[Category:Main course recipes]]</text>
      <sha1>gll2deo2hlhzg6rwzpo5xdp8t9dmkey</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Barbecue Rub</title>
    <ns>102</ns>
    <id>199768</id>
    <revision>
      <id>2645126</id>
      <parentid>1694315</parentid>
      <timestamp>2014-05-03T01:37:15Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added categories and tags</comment>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Texas cuisine|Texas cuisine]]

== Ingredients ==
:1 cup [[Cookbook:Brown Sugar|brown sugar]]
:1/4 cup salt
:1/4 cup garlic powder
:1 cup [[Cookbook:Paprika|paprika]]
:1/4 cup chipotle powder
:3 tbsp [[Cookbook:Cayenne Pepper|cayenne pepper]]
:3 tbsp dried rosemary
:1/4 cup [[Cookbook:Chili Powder|chili powder]]
:1/4 cup dehydrated lemon peel
 
== Procedure ==
#Combine all ingredients in an airtight container.

[[Category:Spice Mix recipes]]
[[Category:Texas recipes]]</text>
      <sha1>lbfpcxfo1lt86kc9oazp8jmxlg9d5bh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Grilled Pork Loin</title>
    <ns>102</ns>
    <id>199769</id>
    <revision>
      <id>2684176</id>
      <parentid>1734748</parentid>
      <timestamp>2014-07-23T23:26:25Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats. Adjusted temp upward to minimum U.S. food safety standards.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 boneless pork loin roast
* 3 Tbsp [[Cookbook:Barbecue Rub|Barbecue Rub]]
* 2 Tbsp Dijon mustard
* 2 Tbsp cider vinegar

== Procedure ==
#Combine mustard and vinegar and rub all over pork.
#Coat pork evenly with Barbecue Rub.
#Grill on a preheated grill, turning often until internal temperature reaches 145°F (63C).
#Remove and let rest for 10 minutes. Serve.

[[Category:Pork recipes]]
[[Category:Mustard recipes]]
[[Category:Vinegar recipes]]
[[Category:Grilled recipes]]
[[Category:Main course recipes]]</text>
      <sha1>reobayjggzzqmp6rh4iyrhwt9hfa9dz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Cognac Beef Stew</title>
    <ns>102</ns>
    <id>199770</id>
    <revision>
      <id>2681352</id>
      <parentid>1708789</parentid>
      <timestamp>2014-07-15T00:06:53Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 2 pounds (1 kg) [[Cookbook:Beef|beef stew meat]], cut into 2 in. (5 cm) cubes
* [[Cookbook:Flour|All-purpose flour]], as needed
* 1 tbsp salt
* 1 tbsp [[Cookbook:Pepper|black pepper]]
* 1 tbsp smoked paprika
* 1/2 cup cognac
* 1 cup [[Cookbook:Tomato Paste|tomato paste]]
* 1/4 cup chicken broth
* 2 tbsp Worcestershire sauce
* 1/2 pound (225 g) redskin potatoes, quartered
* 1 onion, chopped
* 2 tbsp minced garlic
* 2 tbsp [[Cookbook:Olive Oil|olive oil]]
* 2 tbsp butter
* 1 cup [[Cookbook:Red Wine|red wine]]
* 8 sprigs thyme
* 3 [[Cookbook:Bay Leaf|bay leaves]]

== Procedure ==
#Dredge beef in flour. Heat oil in a 6-quart Dutch oven.
#Working in batches, add beef and thoroughly brown on all sides.
#Remove beef and add cognac. Bring to a boil and ignite. Deglaze pan by scraping the bottom.
#Once reduced by half, remove and pour over beef.
#Melt butter over medium heat and add onion. Cook 1-2 minutes before adding garlic. Sauté until pale gold color is achieved.
#Add everything else and place in a 250°F (120C) oven and bake 5 hours. Let rest 10 minutes and serve.

[[Category:Cognac recipes]]
[[Category:Beef recipes]]
[[Category:Stew recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>3u2ultfoi6zndzwrboa9qxy2f1wim59</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Beekeeping/Robbing Behavior</title>
    <ns>0</ns>
    <id>199771</id>
    <revision>
      <id>1543768</id>
      <parentid>1540076</parentid>
      <timestamp>2009-06-22T18:03:36Z</timestamp>
      <contributor>
        <username>Thenub314</username>
        <id>38087</id>
      </contributor>
      <comment>Categorizing</comment>
      <text xml:space="preserve">Most strains of bees are super-hard-working, but they are also sensible and will take their food from easier sources than they usually favour if it is up to standard. This includes some forms of human food and sometimes brings them into conflict with us. But, some bees take this &quot;alternative food source&quot; thing to extremes and even rob food, i.e. honey and pollen etc. from neighbouring hives. These hives will usually defend their stocks vigorously, but not always successfully. It has also been noted that the different species of honey bees differ greatly in their tendencies to rob and their ability to defend the hive.

[[Category:Beekeeping]]</text>
      <sha1>t3u74j6mlz7760z40d4kxgu5macz5t0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Cooking a Great Steak</title>
    <ns>102</ns>
    <id>199772</id>
    <revision>
      <id>2683014</id>
      <parentid>2681468</parentid>
      <timestamp>2014-07-21T00:33:20Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Distinguishing the various types of frying cats.</comment>
      <text xml:space="preserve">{{recipe}}
__NOTOC__
Here are tips for cooking a good steak.

== Cuts ==
The tenderest cuts come from the short loin and rib primal. Good steaks to start out with are strip steaks, top sirloins, T-bones, Porterhouses, and ribeyes. Tenderloin cuts are pretty tender, but if you overcook them they can be dry.

== Seasoning ==
Keep it simple. I like just salt and pepper, or a nice rub, but you can use anything that won't overpower the meat.

Rub the steak with a little olive oil and sprinkle on your seasoning.

== Cooking ==
Grilling, broiling, and pan roasting are classics, but feel free to use any dry heat method you want, such as sauteing. Also, at at least one point, you'll want to use enough heat to brown it. That makes all the difference.

== Slicing ==
Ever just sliced a steak as is and it turns out to be so tough you can't eat it? I admit that this has happened to me. But now I know how to keep this from happening. You know those lines on the meat? Slicing as thin as you can at a 45 degree angle will keep those short, which will mean tenderness. The only exceptions are tenderloin, which is so tender already, and cuts from the flank like skirt and flank which have a different grain structure.

== Marinating ==
Marinating can do a lot of things, but I'll tell you what it won't do. It won't ''tenderize''. Commercial tenderizers use enzymes like papain, not acids! Okay, we got that over with. Now, when you pick a steak for marination, pick a steak with high surface to mass ratio, like inside skirt. Try to balance your marinade with salt, acidity, spicy, herby (if that's a word), and flavor. You're probably thinking, &quot;What's the difference between a brine and a marinade?&quot; One of the differences is that most marinades contain acids and not the huge amounts of salt like in a brine.

I hope you learned a lot about good steak.

[[Category:Beef recipes]]
[[Category:Grilled recipes]]
[[Category:Broiled recipes]]
[[Category:Pan fried recipes]]
[[Category:Main course recipes]]</text>
      <sha1>iw8pbxgyxto3pazvj41m7h1w78pjetl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Country Roast Chicken Seasoning</title>
    <ns>102</ns>
    <id>199773</id>
    <revision>
      <id>2681549</id>
      <parentid>1714285</parentid>
      <timestamp>2014-07-15T19:35:01Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>/* Procedure */ added cat.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 cup paprika
* 1/4 cup salt
* 1/4 cup lemon pepper
* 1/4 cup dried rosemary
* 1/4 cup dried thyme
* 1/4 cup chipotle powder

== Procedure ==
#Combine all ingredients in an airtight container.

[[Category:Spice Mix recipes]]</text>
      <sha1>qrnrx89pid9lkddjvxc3zq6veclev1v</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Superliving</title>
    <ns>2</ns>
    <id>199774</id>
    <revision>
      <id>1540122</id>
      <timestamp>2009-06-20T15:17:34Z</timestamp>
      <contributor>
        <username>Superliving</username>
        <id>244600</id>
      </contributor>
      <comment>superliving i.e.- total stress management,holistic health</comment>
      <text xml:space="preserve">'''SUPERLIVING''' (TSM)is a victorious,dynamic and bllssful expedition to realize A grade happiness i.e. simultaneous individual and universal welfare i.e. freedom from B,C,D and E grades of peety &quot;pleasures and pains&quot;.</text>
      <sha1>op2m8seg4pv9qzlag7iv7rkq9958a8q</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Country Roast Chicken</title>
    <ns>102</ns>
    <id>199780</id>
    <revision>
      <id>2681548</id>
      <parentid>1714284</parentid>
      <timestamp>2014-07-15T19:27:47Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 3-lb broiler/fryer chicken, giblets removed
* 1/4 cup [[Cookbook:Country Roast Chicken Seasoning|Country Roast Chicken Seasoning]]
* 3 sprigs rosemary
* 8 sprigs thyme
* 1 large lemon, sliced thinly
* 1 large lemon, wedged
* 2 tbsp butter

== Procedure ==
#Loosen skin from chicken. Rub flesh with Seasoning.
#Place lemon slices in the bottom of a roasting pan and place chicken on top.
#Stuff cavity with thyme, rosemary, and lemon wedges.
#Place 1 tbsp butter under the skin of each breast.
#Insert an oven-safe probe thermometer into the breast but not touching butter.
#Bake in a 325° oven until breast internal temperature reaches 165° and thigh meat reaches 170°. Cover with foil and let rest 10 minutes; serve.

[[Category:Chicken recipes]]
[[Category:Lemon recipes]]
[[Category:Roasted recipes]]
[[Category:Main course recipes]]</text>
      <sha1>rpdoi2o158pxtsnqeij0wxua1rxgmeu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Units:Units</title>
    <ns>0</ns>
    <id>199781</id>
    <redirect title="FHSST Physics/Units" />
    <revision>
      <id>1540274</id>
      <timestamp>2009-06-20T15:58:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Units:Units]] to [[FHSST Physics/Units]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Units]]</text>
      <sha1>ll19ii59z4eb3enbh69uphwp8tjiwr9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Campfire Barbecue Chicken Wings</title>
    <ns>102</ns>
    <id>199783</id>
    <revision>
      <id>2693508</id>
      <parentid>2291442</parentid>
      <timestamp>2014-08-22T01:26:41Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no procedure.  Added appropriate procedure and cats.</comment>
      <text xml:space="preserve">{{recipe}}
__NOTOC__

== Ingredients ==
===Sauce===
* 1 [[Cookbook:Cup|cup]] [[Cookbook:Tomato|tomato]] [[Cookbook:Tomato_Paste|paste]]
* 1/4 cup [[Cookbook:Molasses|molasses]]
* 3 drops [[Cookbook:Liquid_Smoke|liquid smoke]]
* 2 [[Cookbook:Tablespoon|tbsp]] [[Cookbook:Vinegar#Cider_vinegar|cider vinegar]]
* 2 tbsp [[Cookbook:Wine|white wine]]
===Chicken Wings===
* 24 wingettes
* 1 tbsp [[Cookbook:Cayenne_Pepper|cayenne pepper]]
* 1 tbsp [[Cookbook:Salt|salt]]
* 1 tbsp [[Cookbook:Black_Pepper|black pepper]]

== Procedure ==
#Combine seasonings and toss with wings. Refrigerate.
#Combine sauce ingredients.  Heat in a microwave until warm and well mixed. Allow to cool.
#Brush wings on all sides with about 3/4 of the sauce (or just put 3/4 of the sauce in a ziplock with the wings) and refrigerate as long as possible.
#Grill until internal temperature reaches 165 degrees F.
#Remove to a plate and cover. Let rest 5 minutes before serving with the remaining 1/4 of the sauce.

[[Category:Inexpensive recipes]]
[[Category:Chicken wing recipes]]
[[Category:Grilled recipes]]
[[Category:Main course recipes]]</text>
      <sha1>4x6m38vgzr1s9zbdaieiomywvq3sptg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:218.186.10.240</title>
    <ns>3</ns>
    <id>199784</id>
    <revision>
      <id>1540315</id>
      <timestamp>2009-06-20T16:04:17Z</timestamp>
      <contributor>
        <username>Chazz</username>
        <id>32521</id>
      </contributor>
      <comment>petty vandalism</comment>
      <text xml:space="preserve">{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/218.186.10.240|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. }}[[User:Chazz|Chazz]] &lt;small&gt;([[User talk:Chazz|talk]])&lt;/small&gt; 16:04, 20 June 2009 (UTC)</text>
      <sha1>8n8ie7rw47vnlj5ze0cyyx357x0di3v</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Book-specific templates</title>
    <ns>14</ns>
    <id>199786</id>
    <revision>
      <id>2502398</id>
      <parentid>2013897</parentid>
      <timestamp>2013-03-16T10:08:21Z</timestamp>
      <contributor>
        <username>VolkovBot</username>
        <id>171303</id>
      </contributor>
      <minor />
      <comment>r2.7.2) (Robot: Removing [[fr:Catégorie:Modèles spécifiques à un livre]]</comment>
      <text xml:space="preserve">{{template category|type=book}}

{{CategoryTOC}}

[[Category:Templates]]

[[pt:Categoria:Predefinições de livros]]</text>
      <sha1>nqnv71xh0zdjf4b2ws07p2vv1vawoc5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Units:Introduction</title>
    <ns>0</ns>
    <id>199790</id>
    <redirect title="FHSST Physics/Units/Introduction" />
    <revision>
      <id>1540457</id>
      <timestamp>2009-06-20T17:09:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Units:Introduction]] to [[FHSST Physics/Units/Introduction]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Units/Introduction]]</text>
      <sha1>8qklceqpc36ad41y8na8clim1xz7mhs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Units:Introduction</title>
    <ns>1</ns>
    <id>199791</id>
    <redirect title="Talk:FHSST Physics/Units/Introduction" />
    <revision>
      <id>1540459</id>
      <timestamp>2009-06-20T17:09:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Units:Introduction]] to [[Talk:FHSST Physics/Units/Introduction]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Units/Introduction]]</text>
      <sha1>cdnypolpbkkost21hvk4fyvsq0ewh7e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Units:Unit Systems</title>
    <ns>0</ns>
    <id>199792</id>
    <redirect title="FHSST Physics/Units/Systems" />
    <revision>
      <id>1540503</id>
      <parentid>1540462</parentid>
      <timestamp>2009-06-20T17:46:40Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Units/Systems]]</text>
      <sha1>a4vkf1d0p589iz8cjv6ag67ucxex440</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Units:The Importance of Units</title>
    <ns>0</ns>
    <id>199793</id>
    <redirect title="FHSST Physics/Units/Importance" />
    <revision>
      <id>1540509</id>
      <parentid>1540465</parentid>
      <timestamp>2009-06-20T17:47:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Units/Importance]]</text>
      <sha1>ldxvkofg43lw66ldv1k178ib1mhm2e5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Mathematics</title>
    <ns>0</ns>
    <id>199800</id>
    <revision>
      <id>2619859</id>
      <parentid>2560482</parentid>
      <timestamp>2014-03-23T10:01:47Z</timestamp>
      <contributor>
        <ip>81.205.60.152</ip>
      </contributor>
      <comment>/* Matrix calculations */  Improved code readability.</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

== Basics == 

&lt;source lang=&quot;rsplus&quot;&gt;
?Arithmetic
?Special
&lt;/source&gt;

== Linear Algebra ==

=== Vectors ===

==== The inner product ====

The inner product is also called the ''dot product'' or the ''scalar product''. It is the sum of the item-by-item product.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; u &lt;- rep(3,3)
&gt; v &lt;- 1:3
&gt; u%*%v # the inner product
     [,1]
[1,]   18
&lt;/source&gt;

==== The outer product ====


The outer product is also called the ''cross product'' or the ''vector product''. It is a matrix resulting from the product of the elements of the two vectors.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; v &lt;- matrix(1:3,1,3)
&gt; u &lt;- matrix(1:3,3,1)
&gt; u%*%v
     [,1] [,2] [,3]
[1,]    1    2    3
[2,]    2    4    6
[3,]    3    6    9
&lt;/source&gt;

=== Matrix Algebra ===

If you want to create a new matrix, one way is to use the &lt;tt&gt;matrix()&lt;/tt&gt; function. You have to enter a vector of data, the number of rows and/or columns and finally you can specify if you want R to read your vector by row or by column (the default option) with &lt;tt&gt;byrow&lt;/tt&gt;. You can also combine vectors using &lt;tt&gt;cbind()&lt;/tt&gt; or &lt;tt&gt;rbind()&lt;/tt&gt;. The dimension of a matrix can be obtained using the &lt;tt&gt;dim()&lt;/tt&gt; function or alternatively &lt;tt&gt;nrow()&lt;/tt&gt; and &lt;tt&gt;ncol()&lt;/tt&gt;.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; matrix(data = NA, nrow = 5, ncol = 5, byrow = T)
&gt; matrix(data = 1:15, nrow = 5, ncol = 5, byrow = T)
&gt; v1 &lt;- 1:5
&gt; v2 &lt;- 5:1
&gt; cbind(v1,v2)
&gt; rbind(v1,v2)
&gt; dim(X)
&gt; nrow(X)
&gt; ncol(X)
&lt;/source&gt;

=== Some special matrix ===

The identity matrix has ones on the diagonal and zeros outside the diagonal. 
* &lt;tt&gt;eye()&lt;/tt&gt; ('''matlab''')
* &lt;tt&gt;diag(1,nrow=10,ncol=10)&lt;/tt&gt;
* &lt;tt&gt;diag(rep(1,10))&lt;/tt&gt;

J matrix is full of ones
* &lt;tt&gt;ones()&lt;/tt&gt; ('''matlab''')

A matrix full of zeros 
* &lt;tt&gt;zeros()&lt;/tt&gt; ('''matlab''')
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(matlab)
&gt; eye(3)
     [,1] [,2] [,3]
[1,]    1    0    0
[2,]    0    1    0
[3,]    0    0    1
&gt; ones(3)
     [,1] [,2] [,3]
[1,]    1    1    1
[2,]    1    1    1
[3,]    1    1    1
&gt; zeros(3) 
     [,1] [,2] [,3]
[1,]    0    0    0
[2,]    0    0    0
[3,]    0    0    0
&lt;/source&gt;

Diagonal matrix 

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; diag(3)

     [,1] [,2] [,3]
[1,]    1    0    0
[2,]    0    1    0
[3,]    0    0    1
&lt;/source&gt;

Upper triangular

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; round(upper.tri(matrix(1, n, n))) 

for n=3
     [,1] [,2] [,3]
[1,]    0    1    1
[2,]    0    0    1
[3,]    0    0    0

If you also need the diagonal of one's 

&gt; round(upper.tri(matrix(1, 3, 3), diag = TRUE))

      [,1] [,2] [,3]
[1,]    1    1    1
[2,]    0    1    1
[3,]    0    0    1

&lt;/source&gt;

Lower triangular

Same as upper triangular but using lower.tri instead


* create an Hilbert matrix using &lt;tt&gt;hilbert()&lt;/tt&gt; (fUtilities).

=== Matrix calculations ===


* compute a [[w:Matrix multiplication|matrix multiplication]] &lt;tt&gt;X%*%Y&lt;/tt&gt;.

&lt;source lang=&quot;rsplus&quot;&gt;

&gt; b &lt;- matrix(nrow = 2, ncol = 2, c(1, 2, 3, 4))
&gt; a &lt;- matrix(nrow = 2, ncol = 2, c(1, 0, 0, -1))
&gt; a
     [,1] [,2]
[1,]    1    0
[2,]    0   -1
&gt; b
     [,1] [,2]
[1,]    1    3
[2,]    2    4
&gt; a%*%b
     [,1] [,2]
[1,]    1    3
[2,]   -2   -4
&gt; b%*%a
     [,1] [,2]
[1,]    1   -3
[2,]    2   -4

&lt;/source&gt;

* compute the [http://en.wikipedia.org/wiki/Kronecker_product Kronecker] product using &lt;tt&gt;%x%&lt;/tt&gt; or &lt;tt&gt;kron()&lt;/tt&gt; ('''fUtilities''').

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; M &lt;- matrix(rep(2,4),nrow = 2) 
&gt; M
     [,1] [,2]
[1,]    2    2
[2,]    2    2
&gt; I &lt;- eye(2) 
&gt; I
     [,1] [,2]
[1,]    1    0
[2,]    0    1
&gt; I %x% M 
     [,1] [,2] [,3] [,4]
[1,]    2    2    0    0
[2,]    2    2    0    0
[3,]    0    0    2    2
[4,]    0    0    2    2
&gt; library(fUtilities)
&gt; kron(I,M)
     [,1] [,2] [,3] [,4]
[1,]    2    2    0    0
[2,]    2    2    0    0
[3,]    0    0    2    2
[4,]    0    0    2    2
&lt;/source&gt;

=== Matrix transposition ===

* Transpose the matrix
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; t(M)
     [,1] [,2] [,3]
[1,]    1    0    1
[2,]    0    1    2
[3,]    0    0    1
&lt;/source&gt;

=== The trace and determinant of a matrix ===

* compute the trace of a matrix using &lt;tt&gt;tr()&lt;/tt&gt; (fUtilities)
* returns the rank of a matrix using &lt;tt&gt;rk()&lt;/tt&gt; ('''fBasics:''')

=== Matrix inversion ===

* Invert a matrix using &lt;tt&gt;solve()&lt;/tt&gt; or &lt;tt&gt;inv()&lt;/tt&gt; ('''fUtilities'''). We can also compute the generalized inverse using &lt;tt&gt;ginv()&lt;/tt&gt; in the '''MASS''' package.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; M &lt;- cbind(c(1,0,1),c(0,1,2),c(0,0,1))
&gt; solve(M)
     [,1] [,2] [,3]
[1,]    1    0    0
[2,]    0    1    0
[3,]   -1   -2    1
&gt; solve(M)%*%M
     [,1] [,2] [,3]
[1,]    1    0    0
[2,]    0    1    0
[3,]    0    0    1
&lt;/source&gt;

===Solving a linear equation===

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; m=matrix(nrow=2,ncol=2,c(1,-.8,1,.2))
&gt; m
     [,1] [,2]
[1,]  1.0  1.0
[2,] -0.8  0.2
&gt; 
&gt; l=matrix(c(1.0+25.0/18,25.0/18.0))
&gt; l
         [,1]
[1,] 2.388889
[2,] 1.388889
&gt; 
&gt; k=solve(m,l)
&gt; k
           [,1]
[1,] -0.9111111
[2,]  3.3000000
&gt; 
&gt; m%*%k          #checking the answer
         [,1]
[1,] 2.388889
[2,] 1.388889
&gt; 
&lt;/source&gt;



=== Eigenvalue, eigenvector and eigenspace ===

* Eigenvalues and eigenvectors 

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; eigen(M)
$values
[1] 1 1 1

$vectors
     [,1]          [,2]          [,3]
[1,]    0  2.220446e-16  0.000000e+00
[2,]    0  0.000000e+00  1.110223e-16
[3,]    1 -1.000000e+00 -1.000000e+00
&lt;/source&gt;

=== Misc ===



* compute the norm of a matrix using &lt;tt&gt;norm()&lt;/tt&gt; (fUtilities).
* check if a matrix is positive definite &lt;tt&gt;isPositiveDefinite()&lt;/tt&gt; (fUtilities).
* make a matrix  positive definite &lt;tt&gt;makePositiveDefinite()&lt;/tt&gt; (fUtilities).

* computes row statistics and column statistics (fUtilities).
* extract the upper and the lower part of a matrix &lt;tt&gt;triang()&lt;/tt&gt; and &lt;tt&gt;Triang()&lt;/tt&gt; (fUtilities).
* See also the '''matrix''', '''matlab''', '''matrixcalc''', '''matrixStats''' packages.

== Analysis == 

=== Logarithm and Exponents ===

We have the power function &lt;tt&gt;10^3&lt;/tt&gt; or &lt;tt&gt; 10**3 &lt;/tt&gt;, the logarithm and the exponential &lt;tt&gt;log(2.71)&lt;/tt&gt;, &lt;tt&gt;log10(10)&lt;/tt&gt;,&lt;tt&gt;exp(1)&lt;/tt&gt;.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; 10^3 # exponent
[1] 1000
&gt; 10**3 # exponent
[1] 1000
&gt; exp(1) # exponential
[1] 2.718282
&gt; log(2.71) # natural logarithm
[1] 0.9969486
&gt; log10(1000) # base 10 logarithm
[1] 3
&gt; log(1000,base = 10) # base 10 logarithm
[1] 3
&lt;/source&gt;


=== Polynomial equations ===

To solve &lt;math&gt; a x^k + bx^{k-1} +\cdots+ n=0&lt;/math&gt;, where &lt;math&gt;a,b,\dots,n&lt;/math&gt; are given numbers, use the command

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; polyroot(c(n,...,b,a))
&lt;/source&gt;

So, for example, to calculate the roots of the equation &lt;math&gt; 2x^2 - 5x - 3 = 0&lt;/math&gt; one would do as follows:

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; polyroot(c(-3,-5,2))
 [1] -0.5+0i  3.0-0i
&lt;/source&gt;

and the solution can be read to be &lt;math&gt;x_1 = -0.5 \land x_2 = 3&lt;/math&gt;.

See also '''polynom''' and '''multipol''' packages

=== Derivatives ===

==== Symbolic calculations ====

R can give the derivative of an ''expression''. You need to convert your function as an expression using the &lt;tt&gt;expression()&lt;/tt&gt; function. Otherwise you get an error message.

Here are some examples : 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; D(expression(x^n),&quot;x&quot;)
x^(n - 1) * n
&gt; D(expression(exp(a*x)),&quot;x&quot;)
exp(a * x) * a
&gt; D(expression(1/x),&quot;x&quot;)
-(1/x^2)
&gt; D(expression(x^3),&quot;x&quot;)
3 * x^2
&gt; D(expression(pnorm(x)),&quot;x&quot;)
dnorm(x)
&gt; D(expression(dnorm(x)),&quot;x&quot;)
-(x * dnorm(x))
&lt;/source&gt;

==== Numerical approximation ====

* '''numDeriv''' package

=== Integration ===  

R can perform one dimensional integration. For example we can integrate over the density of the normal distribution between &lt;math&gt;-\infty&lt;/math&gt; and &lt;math&gt;+\infty&lt;/math&gt;

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; integrate(dnorm,-Inf,Inf)
1 with absolute error &lt; 9.4e-05
&gt; integrate(dnorm,-1.96,1.96)
0.9500042 with absolute error &lt; 1.0e-11
&gt; integrate(dnorm,-1.64,1.64)
0.8989948 with absolute error &lt; 6.8e-14
# we can also store the result in an object
&gt; ci90 &lt;- integrate(dnorm,-1.64,1.64)
&gt; ci90$value
[1] 0.8989948
&gt; integrate(dnorm,-1.64,1.64)$value
[1] 0.8989948
&lt;/source&gt;

see the adapt package for multivariate integration.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(adapt)
&gt; ?adapt
&gt; ir2pi &lt;- 1/sqrt(2*pi)
&gt; fred &lt;- function(z) { ir2pi^length(z) * exp(-0.5 * sum(z * z))}
&gt; 
&gt; adapt(2, lo = c(-5,-5), up = c(5,5), functn = fred)
       value       relerr       minpts       lenwrk        ifail 
    1.039222 0.0007911264          231           73            0 
&gt; adapt(2, lo = c(-5,-5), up = c(5,5), functn = fred, eps = 1e-4)
       value       relerr       minpts       lenwrk        ifail 
    1.000237 1.653498e-05          655          143            0 
&gt; adapt(2, lo = c(-5,-5), up = c(5,5), functn = fred, eps = 1e-6)
      value      relerr      minpts      lenwrk       ifail 
   1.000039 3.22439e-07        1719         283           0 
&lt;/source&gt;

* See also &lt;tt&gt;integrate.gh()&lt;/tt&gt; in the '''ecoreg''' package.

== Probability ==

* The number of combination of length k within n numbers : &lt;math&gt;C_n^k&lt;/math&gt;
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; choose(100, 5)
[1] 75287520
&lt;/source&gt;

* Union and intersection
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; union(1:10, 5:7)
[1]  1  2  3  4  5  6  7  8  9 10
&gt; intersect(1:10, 5:7)
[1] 5 6 7
&lt;/source&gt;

== Arithmetics ==

=== The factorial function ===

&lt;tt&gt;factorial&lt;/tt&gt; returns the factorial of an integer. This can also be computed using the &lt;tt&gt;prod()&lt;/tt&gt; (product) applied to the vector of integers between 1 and the number of interest. 

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; factorial(3)
[1] 6
&gt; prod(1:3)
[1] 6
&lt;/source&gt;

Note that by convention &lt;math&gt;0!=1&lt;/math&gt;. &lt;tt&gt;factorial()&lt;/tt&gt; returns 1 in 0. This is not the case with the &lt;tt&gt;prod()&lt;/tt&gt; functions.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; factorial(0)
[1] 1
&gt; prod(0)
[1] 0
&lt;/source&gt;

Factorial numbers can be very large and cannot be computed for high values. 

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; factorial(170)
[1] 7.257416e+306
&gt; factorial(171)
[1] Inf
Message d'avis :
In factorial(171) : value out of range in 'gammafn'
&lt;/source&gt;

=== The modulo function and euclidian division ===

* Modulo and integer division (i.e. euclidean division)
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; 5%%2
[1] 1
&gt;5%/%2
[1] 2
&lt;/source&gt;

Note that for some unknown reason, there is a problem with non integer numbers and euclidian divisions.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; .5%/%.1 # we get 4 instead of 5
[1] 4
&gt; .5%%.1 # we get .1 instead of 0
[1] 0.1
&lt;/source&gt;

== Geometry ==

* &lt;tt&gt;pi&lt;/tt&gt; the constant
* &lt;tt&gt;cos()&lt;/tt&gt;, &lt;tt&gt;sin()&lt;/tt&gt;, &lt;tt&gt;tan()&lt;/tt&gt; the trigonometric functions.

== Symbolic calculus ==

'''rSymPy''' ([http://code.google.com/p/rsympy/ rsympy]) provides '''sympy''' ([http://code.google.com/p/sympy/ link]) functions in R. 

If you want to do more symbolic calculus, see Maxima&lt;ref&gt;Maxima is open source http://maxima.sourceforge.net/&lt;/ref&gt;, SAGE&lt;ref&gt;SAGE is an open source package which includes R and Maxima : http://www.sagemath.org/&lt;/ref&gt;, Mathematica&lt;ref&gt;Mathematica is not open source http://www.wolfram.com/products/mathematica/index.html&lt;/ref&gt;

== See also ==

The following command gives help on special mathematical functions related to the beta and gamma functions.
 ?Special

== References ==

{{reflist|2}}

[[de:GNU R: Rechnen mit R]]
[[pt:R (linguagem de programação)/Matemática]]</text>
      <sha1>maz13n03860tv3msyzoegvjl96ks8oo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Directing Technology/Appendices</title>
    <ns>0</ns>
    <id>199803</id>
    <revision>
      <id>2157445</id>
      <parentid>2065159</parentid>
      <timestamp>2011-08-15T16:41:35Z</timestamp>
      <contributor>
        <username>Common Good</username>
        <id>94271</id>
      </contributor>
      <minor />
      <comment>/* About the Technology */ File:XO-Beta1-mikemcgregor-2.jpg</comment>
      <text xml:space="preserve">{{Directing Technology/Contents}}
==Australia==
==Birmingham, Alabama==
==Ethiopia==
==Henrico==
==Maine==
==New York City==
==Portugal==
==San Diego==
==South Carolina==

===Introduction===
South Carolina is not a stranger to using technology or experimenting with laptops in the classroom.  In 1997 South Carolina provided 300 middle school students in Beauford County with laptop computers for use in the classroom.  The equipment and software was provided by Microsoft and Toshiba.  In January 1998 an article about their experience was published in ''Learning and Leading with Technology''.  Although the article does not report specific statistical results it appears as though the laptops were received very enthusiastically by teachers and students.  The focus on their usage appears to have been in expediting the writing process from the brainstorming stages to the final product.  It is also interesting to note that the role of the teacher seemed to change in the classrooms participating in the program.  The author reports &quot;''Teachers' roles in technology-rich classrooms can be flexible and interactive - and change constantly.  Teachers may start out acting solely as instructors, giving students the required information for their assignments.  But then they most quickly switch to other roles, such as facilitators, passive managers and active managers''&quot;&lt;ref name=&quot;LLT&quot;&gt;Gottfried, J., &amp; McFeely, M.G. (1997-1998, December/January) Learning all over the place. Learning and Leading With Technology, 25, 6-17.&lt;/ref&gt;.

Fast forward a decade.  In 2007, a five million dollar state-funded program provided ninth-grade students at six high schools with laptops.  The goals of the program included improving student achievement and training students for a competitive workplace in which most jobs require working with technology&lt;ref name=&quot;sc&quot;&gt;South Carolina Pilots iAm Laptop Program (2007). Retrieved June 20, 2009, from http://www.k12blueprint.com/k12/blueprint/story_south_carolina_pilots_iam_laptop_program.php&lt;/ref&gt;.  In addition South Carolina hoped that test scores, grades and graduation rates would improve as well.  The students in the program kept their laptops throughout their high school years&lt;ref name=&quot;techReport&quot;&gt;
South Carolina K-12 Technology Initiative 2008 Progress Report (2008).  Retrieved June 20, 2009 from http://www.sck12techinit.org/documents/2008AnnualReportFORWEB.pdf&lt;/ref&gt;.

In South Carolina's 2008 K-12 Technology Initiative progress report they explain that currently two classes have received laptops as part of this pilot but additional funding is needed to continue the program.  They describe the use of an independent company hired to evaluate this initiative.  The evaluation will look at grades, teacher’s use of technology and district costs for technology and professional services&lt;ref name=&quot;techReport&quot;&gt;
South Carolina K-12 Technology Initiative 2008 Progress Report (2008).  Retrieved June 20, 2009 from http://www.sck12techinit.org/documents/2008AnnualReportFORWEB.pdf&lt;/ref&gt;.

The 2008 report also shows that South Carolina's progress in providing computer access to students has steadily dropped from 1999 to 2006&lt;ref name=&quot;techReport&quot;&gt;
South Carolina K-12 Technology Initiative 2008 Progress Report (2008).  Retrieved June 20, 2009 from http://www.sck12techinit.org/documents/2008AnnualReportFORWEB.pdf&lt;/ref&gt;.  However, in 2008 a new initiative was undertaken.  South Carolina launched a “one laptop per child pilot” distributing 500 XO Learning Laptops to elementary school students.  From there, the laptop program has grown to distributing 2,300 laptops in fourteen schools across the state&lt;ref name=&quot;oneLaptop&quot;&gt;One XO Learning Laptop Per South Carolinian School Child (5/7/2009). Retrieved June 20, 2009 from http://www.olpcnews.com/countries/usa/olpc_south_carolina_school_child.html&lt;/ref&gt;.

In the Spring of 2009 they secured a $500,000 donation from Blue Cross &amp; Blue Shield .  They plan to order five thousand more laptops over the Fall of 2009 and possibly up to 50,000 laptops by the Spring of 2012&lt;ref name=&quot;oneLaptop&quot;&gt;One XO Learning Laptop Per South Carolinian School Child (5/7/2009). Retrieved June 20, 2009 from http://www.olpcnews.com/countries/usa/olpc_south_carolina_school_child.html&lt;/ref&gt; although it is not reported  where further funding will come from for the project expansion.

===2008 Initiative - Project Background===
The XO laptop program got off the ground in South Carolina when a Charleston technology entrepreneur was inspired by the laptops he saw during a 2005 United Nations World Summit on Information Society hosted in Tunisia.  In 2007 the State of South Carolina teamed up with a local non-profit organization (The Palmetto Project) to begin their initial pilot.  Just two short years later, Blue Cross &amp; Blue Shield joined their partnership with their half million dollar donation.  Blue Cross &amp; Blue Shield is hoping that this donation will help to better train the next generation of the South Carolina workforce to have a strong knowledge of technology&lt;ref name=&quot;bcbs&quot;&gt;
One Laptop per Child/SC Receives $500,000 from BlueCross BlueShield of South Carolina (4/23/2009). Retrieved June 20, 2009 from http://www.southcarolinablues.com/bcbs/bcbs_redo.nsf/ASC/abou_Nws_CrrntPrssRlss_177?OpenDocument&amp;Start=1&amp;Count=1000&amp;Expand=2&amp;1=1&lt;/ref&gt;.

===About the Technology===

[[File:XO-Beta1-mikemcgregor-2.jpg|200px|thumbnail]]
The &quot;XO Laptops&quot; were developed by One Laptop per Child which is a non-profit organization.  Their goal in developing this spill-proof and drop-proof laptop was to get technology into the hands of children all over the world.  This equipment allows children to connect to modern education and to each other&lt;ref name=&quot;laptopsc&quot;&gt;One Laptop per Child/SC pilot project gives personal computers to state’s youngest students (5/12/2008) Retrieved June 20, 2009 from http://laptopsc.org/?p=17&lt;/ref&gt;.

===Early Results===
Despite the fact that the laptop program is in a very early stage, South Carolina has begun to track results which look very positive.  After the initial pilot of 500 XO laptops distributed to Marion School District Seven they were used by students in the classroom and at home during the 2008-2009 school year.  During this time the teaching staff was given support by a district level technology coach and a technology coordinator.  At the end of the 2008-2009 school year the students took South Carolina's Technology Proficiency Test&lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.  A staff member of the South Carolina Department of Education took the time to provide some of their successes and surprises as they analyzed their evaluation results from the initial pilot.  The following results were submitted via email correspondence.

===Successes===
*'''Student Enthusiasm'''
**&quot;Teachers reported that 86% of students exhibited enthusiasm at the thought of and when actually using the XO Laptop&lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.&quot;
*'''Increased Usage'''
**&quot;In school year 2007-2008 teachers reported they had from three to 10 computers in the classroom.  In school year 2008-2009 every student in the classroom had a laptop.  During the school year 2008-2009 student use of computers was estimated by teachers to be 50% more than the previous year &lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.&quot;
*'''Academic Achievement'''
**&quot;Based on teacher professional opinion, 75% saw some to a substantial gain in academic achievement that can be contributed to the use of the XO&lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.&quot;
*'''Social Interaction'''
**&quot;Based on teacher professional opinion, 68% saw some to a substantial gain in student social interaction in the classroom that can be contributed to the use of the XO&lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.&quot;


In addition, teachers saw improvements in motivation and test results show substantial gains in student technology skills&lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.

===Surprises===
When asked about the practices in the pilot which failed to produce the expected results, the South Carolina staff member indicated that while the laptops were used for science, social studies, math and music they were largely used for research.  South Carolina plans to brainstorm and develop other ways to use the XO laptops in the classroom&lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.

===Conclusion===
Early success, community support and corporate participation are excellent early indicators that the South Carolina one-to-one laptop program will be a program to watch and learn from!

==References==
&lt;references/&gt;</text>
      <sha1>tuozcyljwqn9k2wjg047eer0hoym9hn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Units:How to Change Units</title>
    <ns>0</ns>
    <id>199806</id>
    <redirect title="FHSST Physics/Units/How to Change" />
    <revision>
      <id>1540516</id>
      <timestamp>2009-06-20T17:49:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Units:How to Change Units]] to [[FHSST Physics/Units/How to Change]]: Subpage notation; less redundancy.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Units/How to Change]]</text>
      <sha1>hudo4es7lns65ior3wf6jne77jiqq3z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Units:How Units Can Help You</title>
    <ns>0</ns>
    <id>199807</id>
    <redirect title="FHSST Physics/Units/How Units Can Help You" />
    <revision>
      <id>1540519</id>
      <timestamp>2009-06-20T17:50:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Units:How Units Can Help You]] to [[FHSST Physics/Units/How Units Can Help You]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Units/How Units Can Help You]]</text>
      <sha1>6tfpmszjinba2s5ii8y643kxb3rdac2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Units:Temperature</title>
    <ns>0</ns>
    <id>199808</id>
    <redirect title="FHSST Physics/Units/Temperature" />
    <revision>
      <id>1540525</id>
      <timestamp>2009-06-20T17:51:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Units:Temperature]] to [[FHSST Physics/Units/Temperature]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Units/Temperature]]</text>
      <sha1>5nywzvn396q0yarwl80gzahu3toexqg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Units:Scientific Notation, Significant Figures and Rounding</title>
    <ns>0</ns>
    <id>199809</id>
    <redirect title="FHSST Physics/Units/Scientific Notation, Significant Figures, and Rounding" />
    <revision>
      <id>1540529</id>
      <timestamp>2009-06-20T17:52:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Units:Scientific Notation, Significant Figures and Rounding]] to [[FHSST Physics/Units/Scientific Notation, Significant Figures, and Rounding]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Units/Scientific Notation, Significant Figures, and Rounding]]</text>
      <sha1>p102ew6x8amq5b0pk1w09y851go8ofv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Units:Scientific Notation, Significant Figures and Rounding</title>
    <ns>1</ns>
    <id>199810</id>
    <redirect title="Talk:FHSST Physics/Units/Scientific Notation, Significant Figures, and Rounding" />
    <revision>
      <id>1540531</id>
      <timestamp>2009-06-20T17:52:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Units:Scientific Notation, Significant Figures and Rounding]] to [[Talk:FHSST Physics/Units/Scientific Notation, Significant Figures, and Rounding]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Units/Scientific Notation, Significant Figures, and Rounding]]</text>
      <sha1>a28ngfhr943s43jrj7ovqzq3k9chdnc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Units:Conclusion</title>
    <ns>0</ns>
    <id>199811</id>
    <redirect title="FHSST Physics/Units/Conclusion" />
    <revision>
      <id>1540535</id>
      <timestamp>2009-06-20T17:53:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Units:Conclusion]] to [[FHSST Physics/Units/Conclusion]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Units/Conclusion]]</text>
      <sha1>db7chdpjgf48s7i1r78w0sfqifmnwcu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Waves:Two Types of Waves</title>
    <ns>0</ns>
    <id>199815</id>
    <redirect title="FHSST Physics/Waves/Types" />
    <revision>
      <id>1540786</id>
      <timestamp>2009-06-20T19:41:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Waves:Two Types of Waves]] to [[FHSST Physics/Waves/Types]]: Subpage notation and better name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Waves/Types]]</text>
      <sha1>738cxeuyvna5j0fk6t3hr0z3jt0c3yd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Spicy Apple Glazed Ribs</title>
    <ns>102</ns>
    <id>199816</id>
    <revision>
      <id>2690874</id>
      <parentid>1844582</parentid>
      <timestamp>2014-08-12T22:36:24Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added pork, barbecue, and main course cats</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 slab pork spareribs
* 1/4 cup [[Cookbook:Barbecue Rub|Barbecue Rub]]
* 1 cup apple cider
* 2 tbsp cider vinegar
* 2 tbsp Worcestershire sauce
* 2 tbsp honey
* 2 tbsp soy sauce

== Procedure ==
#Season pork with Rub and refrigerate for at least 1 hour.
#Combine wet ingredients and bring to a boil over high heat 5-10 minutes. Set aside.
#Place ribs in a 250° smoker '''''or''''' a 250° charcoal grill set for indirect heat and cook 5-6 hours or until meat falls off the bone.
#Brush generously with cider mixture and place on a medium high grill, turning and brushing with cider mixture until well browned.
#Remove and let rest 10 minutes. Serve with remaining cider mixture.

[[Category:Pork recipes]]
[[Category:Barbecue recipes]]
[[Category:Main course recipes]]</text>
      <sha1>rmhhd4pj4mc463fv6eua9ef4celso70</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Waves:Properties of Waves</title>
    <ns>0</ns>
    <id>199817</id>
    <redirect title="FHSST Physics/Waves/Properties" />
    <revision>
      <id>1540791</id>
      <timestamp>2009-06-20T19:42:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Waves:Properties of Waves]] to [[FHSST Physics/Waves/Properties]]: Subpage notation and less redundancy.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Waves/Properties]]</text>
      <sha1>5fm7gsb1axbsq8mlum5tahw36oa2gio</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Waves:Practical Applications Sound</title>
    <ns>0</ns>
    <id>199818</id>
    <redirect title="FHSST Physics/Waves/Sound Applications" />
    <revision>
      <id>1540795</id>
      <timestamp>2009-06-20T19:44:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Waves:Practical Applications Sound]] to [[FHSST Physics/Waves/Sound Applications]]: Subpage notation and better name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Waves/Sound Applications]]</text>
      <sha1>szvgqg0q7nxydwl05n1luq4d0rqxwtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Waves:Practical Applications Electromagnetic</title>
    <ns>0</ns>
    <id>199819</id>
    <redirect title="FHSST Physics/Waves/Electromagnetic Applications" />
    <revision>
      <id>1540800</id>
      <timestamp>2009-06-20T19:46:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Waves:Practical Applications Electromagnetic]] to [[FHSST Physics/Waves/Electromagnetic Applications]]: Subpage notation and better name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Waves/Electromagnetic Applications]]</text>
      <sha1>d1by7lh8b08u4ah2nlhmmimcq28z9j6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Waves:Practical Applications Electromagnetic</title>
    <ns>1</ns>
    <id>199820</id>
    <redirect title="Talk:FHSST Physics/Waves/Electromagnetic Applications" />
    <revision>
      <id>1540802</id>
      <timestamp>2009-06-20T19:46:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Waves:Practical Applications Electromagnetic]] to [[Talk:FHSST Physics/Waves/Electromagnetic Applications]]: Subpage notation and better name.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Waves/Electromagnetic Applications]]</text>
      <sha1>eo0rhd0tmj4qlg5g9u71wodl0nh1oxj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Waves:Important Equations and Quantities</title>
    <ns>0</ns>
    <id>199821</id>
    <redirect title="FHSST Physics/Waves/Equations and Quantities" />
    <revision>
      <id>1540806</id>
      <timestamp>2009-06-20T19:47:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Waves:Important Equations and Quantities]] to [[FHSST Physics/Waves/Equations and Quantities]]: Subpage notation and better name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Waves/Equations and Quantities]]</text>
      <sha1>jfowyibaut7no4hmt0uozwcxadvq4a0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Vectors:Vectors</title>
    <ns>0</ns>
    <id>199823</id>
    <redirect title="FHSST Physics/Vectors" />
    <revision>
      <id>1540820</id>
      <timestamp>2009-06-20T19:54:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Vectors:Vectors]] to [[FHSST Physics/Vectors]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Vectors]]</text>
      <sha1>4pzf1arl1yetbkchetywj7d2zq8mrxd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Vectors:PGCE Comments</title>
    <ns>0</ns>
    <id>199824</id>
    <redirect title="FHSST Physics/Vectors/PGCE Comments" />
    <revision>
      <id>1540827</id>
      <timestamp>2009-06-20T19:58:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Vectors:PGCE Comments]] to [[FHSST Physics/Vectors/PGCE Comments]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Vectors/PGCE Comments]]</text>
      <sha1>sygbhmqxq7xsdo2akjxj1361ih71yxl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Vectors:PGCE Comments</title>
    <ns>1</ns>
    <id>199825</id>
    <redirect title="Talk:FHSST Physics/Vectors/PGCE Comments" />
    <revision>
      <id>1540829</id>
      <timestamp>2009-06-20T19:58:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Vectors:PGCE Comments]] to [[Talk:FHSST Physics/Vectors/PGCE Comments]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Vectors/PGCE Comments]]</text>
      <sha1>8xljnf3k0eisex1bm9gyzyqcu7uh7ng</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:96.252.126.104</title>
    <ns>3</ns>
    <id>199826</id>
    <revision>
      <id>1540831</id>
      <timestamp>2009-06-20T19:59:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/96.252.126.104|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 19:59, 20 June 2009 (UTC)}}</text>
      <sha1>9bd56i5povzftb5ic5fqzgztoeywbct</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Vectors:TO DO LIST</title>
    <ns>0</ns>
    <id>199827</id>
    <redirect title="FHSST Physics/Vectors/TO DO LIST" />
    <revision>
      <id>1540835</id>
      <timestamp>2009-06-20T20:00:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Vectors:TO DO LIST]] to [[FHSST Physics/Vectors/TO DO LIST]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Vectors/TO DO LIST]]</text>
      <sha1>p7rrcrm78v6brokum006si4m6xl6u4d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Vectors:Introduction</title>
    <ns>0</ns>
    <id>199828</id>
    <redirect title="FHSST Physics/Vectors/Introduction" />
    <revision>
      <id>1540841</id>
      <timestamp>2009-06-20T20:02:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Vectors:Introduction]] to [[FHSST Physics/Vectors/Introduction]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Vectors/Introduction]]</text>
      <sha1>ek85ymjizl0flbn49ob4pracczw29ol</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Vectors:Some Examples of Vectors</title>
    <ns>0</ns>
    <id>199830</id>
    <redirect title="FHSST Physics/Vectors/Examples" />
    <revision>
      <id>1540852</id>
      <timestamp>2009-06-20T20:10:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Vectors:Some Examples of Vectors]] to [[FHSST Physics/Vectors/Examples]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Vectors/Examples]]</text>
      <sha1>8mxxts9nrvfzm7ttct28j40jjehoey2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Carpaccio II</title>
    <ns>102</ns>
    <id>199831</id>
    <revision>
      <id>2692272</id>
      <parentid>2681334</parentid>
      <timestamp>2014-08-17T01:06:20Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Austncorp moved page [[Cookbook:Classic Italian Carpaccio]] to [[Cookbook:Carpaccio II]]: Better name</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 center cut beef tenderloin roast
* Salt and black pepper
* Extra virgin olive oil for serving
* Lemon wedges for serving
* Shaved Parmiggiano-Reggiano cheese
* Basil chiffonade for serving

== Procedure ==
#Cover tightly with plastic wrap then freeze the meat for up to two hours to help slicing (no more than that or else it'll be mushy).
#Slice thinly and remove plastic wrap.
#Place five slices in a rough circle and put 1 in the center. Lift to a lightly water-spritzed sheet of plastic wrap. Spritz another sheet with water and place on top. Place a pie pan on top and lightly pound with a food can.
#Remove and sprinkle with kosher salt and black pepper. Serve with extra-virgin olive oil, lemon wedges, shaved Parmiggiano-Reggiano cheese, and basil chiffonade.

[[Category:Beef recipes]]
[[Category:Raw recipes]]
[[Category:Italian recipes]]</text>
      <sha1>m4xfxyeyca4c8nf033ljwg58vjm20w5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Waves:Waves and Wavelike Motion</title>
    <ns>0</ns>
    <id>199832</id>
    <redirect title="FHSST Physics/Waves" />
    <revision>
      <id>1540894</id>
      <timestamp>2009-06-20T20:46:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Waves:Waves and Wavelike Motion]] to [[FHSST Physics/Waves]]: Edit history merge.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Waves]]</text>
      <sha1>avbavvazurr4uo4hwweqzn567ead1fn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Vectors:Mathematical Properties of Vectors</title>
    <ns>0</ns>
    <id>199833</id>
    <redirect title="FHSST Physics/Vectors/Mathematical Properties" />
    <revision>
      <id>1540902</id>
      <timestamp>2009-06-20T20:55:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Vectors:Mathematical Properties of Vectors]] to [[FHSST Physics/Vectors/Mathematical Properties]]: Subpage notation and removed redundancy.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Vectors/Mathematical Properties]]</text>
      <sha1>2jqu6aj90745hwrzmi8n0su83yj5sms</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Vectors:Techniques of Vector Addition</title>
    <ns>0</ns>
    <id>199834</id>
    <redirect title="FHSST Physics/Vectors/Addition" />
    <revision>
      <id>1540910</id>
      <timestamp>2009-06-20T20:57:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Vectors:Techniques of Vector Addition]] to [[FHSST Physics/Vectors/Addition]]: Subpage notation and shortened link.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Vectors/Addition]]</text>
      <sha1>g5szmeutm2gmrco3yvhpjdxv7y0nf75</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Vectors:Components of Vectors</title>
    <ns>0</ns>
    <id>199835</id>
    <redirect title="FHSST Physics/Vectors/Components" />
    <revision>
      <id>1540913</id>
      <timestamp>2009-06-20T20:59:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Vectors:Components of Vectors]] to [[FHSST Physics/Vectors/Components]]: Subpage notation and less redundancy.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Vectors/Components]]</text>
      <sha1>s8dbwbozdwdwkyq90ufoujfv0t8ismd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Vectors:Do I really need to learn about vectors?</title>
    <ns>0</ns>
    <id>199836</id>
    <redirect title="FHSST Physics/Vectors/Importance" />
    <revision>
      <id>1540917</id>
      <timestamp>2009-06-20T21:00:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Vectors:Do I really need to learn about vectors?]] to [[FHSST Physics/Vectors/Importance]]: Subpage notation and shortened name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Vectors/Importance]]</text>
      <sha1>e3qq421mi9hjnu8or1tsdxy1ovvukr3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Vectors:Summary</title>
    <ns>0</ns>
    <id>199837</id>
    <redirect title="FHSST Physics/Vectors/Summary" />
    <revision>
      <id>1540921</id>
      <timestamp>2009-06-20T21:01:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Vectors:Summary]] to [[FHSST Physics/Vectors/Summary]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Vectors/Summary]]</text>
      <sha1>atidth126ko1runk5gubs977y9mq4iy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Introduction to Sociology/Politics</title>
    <ns>0</ns>
    <id>199838</id>
    <revision>
      <id>2688647</id>
      <parentid>2688646</parentid>
      <timestamp>2014-08-04T22:52:24Z</timestamp>
      <contributor>
        <username>Rcragun</username>
        <id>41177</id>
      </contributor>
      <comment>/* USA */</comment>
      <text xml:space="preserve">==What is Politics?==
Politics is the process by which groups of people make decisions. The term is generally applied to behaviour within [[w:civil governments|civil governments]], but politics has been observed in all human group interactions, including corporate, academic, and religious institutions. It consists of social relations involving authority or power, the regulation of political units, and the methods and tactics used to formulate and apply social policy.

==Power, Authority, and Violence==

[[File:Official portrait of Barack Obama.jpg|right|thumb|150 px| Barack Obama, President of the United States, derives his authority from a rational-legal system of laws outlined in a formal document, the Constitution of the United States of America.]]

===Power===
Political power is a type of power held by a group in a society which allows that group to administrate the distribution of public resources, including labour, and wealth. Political powers are not limited to heads of states, however the extent to which a person or group such as an insurgency, terrorist group, or multinational corporation possesses such power relates to the amount of societal influence they can wield, formally or informally.  Power, then, is often defined as the ability to influence the behavior of others with or without resistance.

[[File:King Abdullah bin Abdul al-Saud Jan2007.jpg|right|thumb|150 px| King Abdullah bin Abdul al-Saud, King of Saudi Arabia, derived his authority from tradition.]]

===Authority===
In government, authority is often used interchangeably with the term &quot;power&quot;. However, their meanings differ. Authority refers to a claim of legitimacy, the justification and right to exercise power. For example, while a mob has the power to punish a criminal, for example by lynching, people who believe in the rule of law consider that only a court of law has the authority to order capital punishment.

[[File:Joseph Smith, Jr. portrait owned by Joseph Smith III.jpg|right|thumb|150 px| Joseph Smith, Jr., founder of Mormonism, derived his authority from his charisma.]]

Max Weber identified and distinguished three types of legitimate authority.
*The first type discussed by Weber is '''Rational-legal''' authority. It is that form of authority which depends for its legitimacy on formal rules and established laws of the state, which are usually written down and are often very complex. The power of the rational legal authority is mentioned in a document like a constitution or articles of incorporation. Modern societies depend on legal-rational authority. Government officials, like the [[w:President of the United States|President of the United States]] are good examples of this form of authority.
*The second type of authority is '''Traditional''' authority, which derives from long-established customs, habits and social structures. When power passes from one generation to another, then it is known as traditional authority. The right of hereditary [[w:monarchy|monarchs]] to rule like the [[w:King_of_Saudi_Arabia|King of Saudi Arabia]] is an example. 
*The third form of authority is '''Charismatic''' authority. Here, the [[w:charisma|charisma]] of the individual or the leader plays an important role. Charismatic authority is that authority which is derived from a gift of grace, the power of one's personality, or when the leader claims that his authority is derived from a &quot;higher power&quot; (e.g. God) that is superior to both the validity of traditional and rational-legal authority. Followers accept this and are willing to follow this higher or inspired authority in the place of the authority that they have hitherto been following. Clear examples of charismatic leaders are often seen in the founders of religious groups.  [[w:Joseph Smith, Jr.|Joseph Smith Jr.]], the founder of [[w:The Church of Jesus Christ of Latter-day Saints|The Church of Jesus Christ of Latter-day Saints (LDS or Mormons)]] was considered charismatic. Another person who used his charisma to gather followers, ultimately for rather nefarious purposes, was [[w:Jeffrey Lundgren|Jeffrey Lundgren]].

===Violence===
In most modern nation-states, the government has authority, which gives it power. Intriguingly, the fact that the government has authority gives it the right to use power to force citizens to do what the government deems appropriate.  In other words, the government has the right, based on its authority, to force people to behave in certain ways.  Refusal to follow the dictates of the government can result in the government using violence to coerce individuals into compliance.

At the same time, the fact that the government of a country has the right to use violence, theoretically a near-exclusive right (others can use violence only when officially sanctioned, such as when one purchases a hunting license or if one belongs to a government sanctioned fighting league like the [[w:Ultimate Fighting Championship|UFC]]), reinforces the government's claim to authority.  Thus, you have something of a paradox: Do governments have authority if they do not have the right to use violence?  And, do governments derive their authority from their right to use violence?  Another way to think about this quirk of politics is to ask yourself: Would you follow the law if there were no repercussions to your behavior.  While you may for other reasons (e.g., a Hobbesian [[w:Social_contract|social contract]]), ultimately it is the threat of the legitimate use of violence that makes government authority compelling.

==Types of Governments==
In addition to there existing various legitimate means of holding power, there are a variety of forms of government.

===Monarchy===

[[File:Elizabeth II greets NASA GSFC employees, May 8, 2007 edit.jpg|thumb|150 px|right|Queen Elizabeth II is the monarch of the United Kingdom.]]

A [[w:Monarchy|monarchy]] is a form of government in which supreme power is absolutely or nominally lodged with an individual, who is the head of state, often for life or until abdication. The person who heads a monarchy is called a monarch. It was a common form of government in the world during the ancient and [[w:medieval|medieval]] times. There is no clear definition of monarchy. Holding unlimited political power in the state is not the defining characteristic, as many constitutional monarchies such as the [[w:United Kingdom|United Kingdom]] and [[w:Thailand|Thailand]] are considered monarchies yet their monarchs have limited political power. Hereditary rule is often a common characteristic, but elective monarchies are also considered monarchies (e.g., [[w:The Pope|The Pope]]) and some states have hereditary rulers, but are considered republics (e.g., the [[w:Dutch Republic|Dutch Republic]]). Currently, 44 nations in the world have monarchs as heads of state, 16 of which are [[w:Commonwealth|Commonwealth]] realms that recognise the monarch of the United Kingdom as their head of state.

===Democracy===
[[w:Democracy|Democracy]] is a form of government in which the right to govern or sovereignty is held by the majority of citizens within a country or a state.  In political theory, democracy describes a small number of related forms of government and also a political philosophy. Even though there is no universally accepted definition of 'democracy', there are two principles that any definition of democracy includes. The first principle is that all members of the society (citizens) have equal access to power and the second that all members (citizens) enjoy universally recognized freedoms and liberties.&lt;ref name=&quot;Dahl2003&quot;&gt;R. Alan Dahl, I. Shapiro, J. A. Cheibub, The Democracy Sourcebook, MIT Press 2003, ISBN 0262541475&lt;/ref&gt;

There are several varieties of democracy, some of which provide better representation and more freedoms for their citizens than others.&lt;ref name=&quot;Gaus2004&quot;&gt;G. F. Gaus, C. Kukathas, Handbook of Political Theory, SAGE, 2004, p. 143-145, ISBN 0761967877&lt;/ref&gt; However, if any democracy is not carefully legislated to avoid an uneven distribution of political power with balances, such as the separation of powers, then a branch of the system of rule could accumulate power and become harmful to the democracy itself. The &quot;majority rule&quot; is often described as a characteristic feature of democracy, but without responsible government it is possible for the rights of a minority to be abused by the &quot;tyranny of the majority&quot;. An essential process in representative democracies are competitive elections, that are fair both substantively and procedurally. Furthermore, freedom of political expression, freedom of speech and freedom of the press are essential so that citizens are informed and able to vote in their personal interests.

===Totalitarianism===
Totalitarianism (or totalitarian rule) is a political system that strives to regulate nearly every aspect of public and private life. Totalitarian regimes or movements maintain themselves in political power by means of an official all-embracing ideology and propaganda disseminated through the state-controlled mass media, a single party that controls the state, personality cults, control over the economy, regulation and restriction of free discussion and criticism, the use of mass surveillance, and widespread use of state terrorism.

===Oligarchy===
An [[w:Oligarchy|oligarchy]] is a form of government in which power effectively rests with a small elite segment of society distinguished by royalty, wealth, family, military or religious hegemony. Such states are often controlled by politically powerful families whose children are heavily conditioned and mentored to be heirs of the power of the oligarchy. Oligarchies have been tyrannical throughout history, being completely reliant on public servitude to exist. 

[[Image:Communist States.svg|thumb|right|300px|A map showing the current Communist states. They are China, Cuba, North Korea, Laos, and Vietnam.]]

[[Image:Communist countries.PNG|300px|thumb|right|Map of countries that declared themselves or were declared to be socialist states under the Marxist-Leninist or Maoist definition at some point in their history. The map uses present-day borders. Note that not all of these countries were Marxist-Leninist or Maoist at the same time.]]

===Communist State===
A Communist state is a state with a form of government characterized by single-party rule of a Communist party and a professed allegiance to an ideology of [[w:Communism|communism]] as the guiding principle of the state. Communist states may have several legal political parties, but the Communist party is usually granted a special or dominant role in government, often by statute or under the constitution. Consequently, the institutions of the state and of the Communist party become intimately entwined, such as in the development of parallel institutions.

While almost all claim lineage to Marxist thought, there are many varieties of Communist states, with indigenous adaptions. For Marxist-Leninists, the state and the Communist Party claim to act in accordance with the wishes of the industrial working class; for Maoists, the state and party claim to act in accordance to the peasantry. Under Deng Xiaoping, the People's Republic of China proclaimed a policy of &quot;socialism with Chinese characteristics.&quot; In most Communist states, governments assert that they represent the democratic dictatorship of the proletariat.

===Theocracy===
[[w:Theocracy|Theocracy]] is a form of government in which a god or deity is recognized as the state's supreme civil ruler, or in a broader sense, a form of government in which a state is governed by immediate divine guidance or by officials who are regarded as divinely guided. Theocratic governments enact theonomic laws. Theocracy should be distinguished from other secular forms of government that have a state religion, or are merely influenced by theological or moral concepts, and monarchies held &quot;By the Grace of God&quot;. Theocratic tendencies have been found in several religious traditions including Judaism, Islam, Confucianism, Hinduism, and among Christianity: Catholicism, Eastern Orthodoxy, Protestantism, and Mormonism. Historical examples of Christian theocracies are the Byzantine Empire (A.D. 330-1453) and the Carolingian Empire (A.D. 800-888).

===Types of Government Thought Question===
While there are many more [[w:Forms_of_government|types of government]], based on what you've just read, do you think there is a type that is better than the others?  If so, why do you think that?

==Political Parties==
A political party is a political organization that seeks to attain and maintain political power within government, usually by participating in electoral campaigns. Parties often espouse an expressed ideology or vision bolstered by a written platform with specific goals, forming a coalition among disparate interests.

===USA===
The United States Constitution is silent on the subject of political organizations, mainly because most of the founding fathers disliked them.  Yet, major and minor political parties and groups soon arose - primarily through the efforts of these same founding fathers. In partisan elections, candidates are nominated by a political party or seek public office as an independent. Each state has significant discretion in deciding how candidates are nominated, and thus eligible to appear on the election ballot.  Typically, major party candidates are formally chosen in a party primary or convention, whereas minor party representatives and Independents are required to complete a petitioning process.

[[Image:Political Party Affiliations in the US - 2014.png|thumb|400px|right|Registered [[w:Democratic Party (United States)|Democrats]], [[w:Republican Party (United States)|Republicans]] and [[w:Independent (politics)|independent]]s as a percentage of the electorate.]]

[[File:|thumb|This pie chart depicts the party affiliations of Americans as of July 2014.]]
The complete [[w:list of political parties in the United States|list of political parties in the United States]] is vast. However, there are two main parties in presidential contention:
*[[w:Democratic Party (United States)|Democratic Party]] 
*[[w:Republican Party (United States)|Republican Party]] 

Each of these two parties shares a degree of national attention by attaining the mathematical possibility of its nominee becoming President of the United States - i.e., having ballot access - for its presidential candidate in states whose collective total is at least half of the [[w:U.S. Electoral College|Electoral College votes]].

American political parties are more loosely organized than those in other countries. The two major parties, in particular, have no formal organization at the national level that controls membership, activities, or policy positions, though some state affiliates do. Thus, for an American to say that he or she is a member of the Democratic or Republican party, is quite different from a Briton's stating that he or she is a member of the [[w:Labour party|Labour party]]. In the United States, one can often become a &quot;member&quot; of a party, merely by stating that fact. In some U.S. states, a voter can register as a member of one or another party and/or vote in the primary election for one or another party, but such participation does not restrict one's choices in any way; nor does it give a person any particular rights or obligations with respect to the party, other than possibly allowing that person to vote in that party's primary elections (elections that determine who the candidate of the party will be). A person may choose to attend meetings of one local party committee one day and another party committee the next day. The sole factor that brings one &quot;closer to the action&quot; is the quantity and quality of participation in party activities or financial donations to the party and the ability to persuade others in attendance to give one responsibility.

Party identification becomes somewhat formalized when a person runs for partisan office. In most states, this means declaring oneself a candidate for the nomination of a particular party and intent to enter that party's primary election for an office. A party committee may choose to endorse one or another of those who is seeking the nomination, but in the end the choice is up to those who choose to vote in the primary, and it is often difficult to tell who is going to do the voting.

The result is that American political parties have weak central organizations and little central ideology, except by consensus. A party really cannot prevent a person who disagrees with the majority of positions of the party or actively works against the party's aims from claiming party membership, so long as the voters who choose to vote in the primary elections elect that person. Once in office, an elected official may change parties simply by declaring such intent.

At the federal level, each of the two major parties has a national committee (See, [[w:Democratic National Committee|Democratic National Committee]], [[w:Republican National Committee|Republican National Committee]]) that acts as the hub for much of the fund-raising and campaign activities, particularly in presidential campaigns. The exact composition of these committees is different for each party, but they are made up primarily of representatives from state parties, affiliated organizations, and other individuals important to the party. However, the national committees do not have the power to direct the activities of individual members of the party.

The map below shows the results of the [[w:United States presidential election, 2012|2012 Presidential Election]] in the United States, illustrating the strength of the two major parties varies by geographic region in the U.S., with Republicans stronger in the South, Midwest, and some Mountain states while Democrats are stronger along the coasts.

[[File:ElectoralCollege2012.svg|center|600px|thumb|The Electoral College results of the 2012 Presidential Election in the U.S.]]

===Sweden===
Sweden has a [[w:List of political parties in Sweden|multi-party system]], with numerous parties in which no one party often has a chance of gaining power alone, and parties must work with each other to form coalition governments.  A multi-party system is a system in which three or more political parties have the capacity to gain control of government separately or in coalition.

Unlike a single-party system (or a non-partisan democracy), it encourages the general constituency to form multiple distinct, officially recognized groups, generally called political parties. Each party competes for votes from the enfranchised constituents (those allowed to vote). A multi-party system is essential for representative democracies, because it prevents the leadership of a single party from setting policy without challenge.

If the government includes an elected Congress or Parliament the parties may share power according to Proportional Representation or the First-past-the-post system. In Proportional Representation, each party wins a number of seats proportional to the number of votes it receives. In first-past-the-post, the electorate is divided into a number of districts, each of which selects one person to fill one seat by a plurality of the vote. First-past-the-post is not conducive to a proliferation of parties, and naturally gravitates toward a two-party system, in which only two parties have a real chance of electing their candidates to office. This gravitation is known as [[w:Duverger's_law|Duverger's law]]. Proportional Representation, on the other hand, does not have this tendency, and allows multiple major parties to arise.

[[File:Piratpartiet.svg|thumb|right|150px| The symbol of the Pirate Party.]]

This difference is not without implications. A two-party system requires voters to align themselves in large blocs, sometimes so large that they cannot agree on any overarching principles. Along this line of thought, some theories argue that this allows centrists to gain control. On the other hand, if there are multiple major parties, each with less than a majority of the vote, the parties are forced to work together to form working governments. This also promotes a form of centrism.

The United States is an example of where there may be a multi-party system but that only two parties have ever formed government. Germany, India, France, and Israel are examples of nations that have used a multi-party system effectively in their democracies (though in each case there are two parties larger than all others, even though most of the time no party has a parliamentary majority by itself). In these nations, multiple political parties have often formed coalitions for the purpose of developing power blocs for governing.

The multi-party system of proportional representation has allowed a small third party, [[w:Pirate Party|The Pirate Party]], to come to prominence in Sweden, something that would be very unlikely in the United States.  The Pirate Party strives to reform laws regarding copyright and patents. The agenda also includes support for a strengthening of the right to privacy, both on the Internet and in everyday life, and the transparency of state administration. The Party has intentionally chosen to be block independent on the traditional left-right scale to pursue their political agenda with all mainstream parties. The Pirate Party is the third largest party in Sweden in terms of membership. Its sudden popularity has given rise to parties with the same name and similar goals in Europe and worldwide.

==Voting Patterns and Inequality==
In any political system where voting is allowed, some people are more likely to vote than others (see this Wikipedia article on [[w:Voter turnout|Voter turnout]] for more information on this).  Additionally, some people are more likely to have access to political power than are others.  It is in teasing out the stratification of political participation and political power that the sociological imagination is particularly useful.

===Politics and Gender===
While women are generally as likely to vote (or even more likely to vote; see figure below) in developed countries, women are underrepresented in political positions.  Women make up a very small percentage of elected officials, both at local and national levels.  In the U.S., for instance, in the 109th Congress (2005-2007) there were only 14 female Senators (out of 100) and 70 Congressional Representatives (out of 435).  This is illustrated in the graph below:

[[File:Percentages of Representatives and Senators who were Female - 1975-2011.png|thumb|center|800px|This figure depicts the percentage of representatives and senators in the US federal government who were female from 1975-2011.]]

In 2010 things had improved slightly; 17.2% of the House and 17% of the Senate were women, though a substantial imbalance remained between the two political parties.&lt;ref name=&quot;Roberts2010&quot;&gt;Roberts, Sam. 2010. “Congress and Country: Behold the Differences.” The New York Times, February 10 http://www.nytimes.com/2010/02/10/us/politics/10congress.html (Accessed February 10, 2010).&lt;/ref&gt;

One of the factors that predicts how people vote is attitudes toward gender equality.&lt;ref name=&quot;McVeigh2007&quot;&gt;McVeigh, Rory, and Juliana M. Sobolewski. 2007. “Red Counties, Blue Counties, and Occupational Segregation by Sex and Race.” American Journal of Sociology 113:446-506.&lt;/ref&gt; U.S. counties with sex segregated occupations are 11% more likely to vote Republican than counties that have mixed-sex occupations.  McVeigh and Sobolewski (2007) argue that the white males in sex segregated counties are more likely to vote for conservative candidates because they feel their occupational security is threatened by women and racial minorities.

===Politics and Age===
Young people are much less likely to vote than are older people and are less likely to be politicians.&lt;ref name=&quot;Roberts2010&quot;/&gt;  This is illustrated for young people in the U.S. in the graph below: 

[[File:Voter Turnout by Age 2012 US Presidential Election.png|center|thumb|800px|Young people are much less likely to vote than are older people.]]

The lower voting rates of young people in the U.S. help explain why things like Medicare and Social Security in the U.S. are facing looming crises - the elderly will retain many of the benefits of these programs and are unwilling to allow them to be changed even though young people will be the ones to suffer the consequences of these crises.  Older people are also more organized, through organizations like the [[w:AARP|AARP]] and are more likely to vote as a block on issues that affect them directly.  As a result, older individuals in the U.S. have more power than younger people.

===Politics and Race===
Generally, racial and ethnic minorities are less likely to vote in elections and are also underrepresented in political positions, but these numbers are often influenced by ongoing attempts throughout American history to make voting harder (and at times impossible) for racial minorities.  The graph below illustrates the disparate voting rates between racial/ethnic groups in the U.S. in the 2008 Presidential Election:

[[File:Voter Turnout by Race-Ethnicity 2012 US Presidential Election.png|thumb|800px|center|Racial and ethnic minorities are generally less likely to vote than the majority population.  In the U.S., this means whites are more likely to vote than are blacks, Asians, and Hispanics.]]

Racial and ethnic minorities are also less likely to hold political positions.  If blacks were represented in proportion to their numbers in the U.S., there should be 12 Senators and 52 Members of the House.  In 2009 there was 1 black Senator ([[w:Roland Burris|Roland Burris]]) and 39 Members of the House.  In 2010 the number in the House increased slightly to 41 (7.8%), but remained at just 1% of the Senate.&lt;ref name=&quot;Roberts2010&quot;/&gt;

===Politics and Class===
Another way that political power is stratified is through income and education.  Wealthier and more educated people are more likely to vote, and voting times and locations in the United States generally favor middle-class and above occupational and educational schedules (see figures to the right).  Additionally, wealthier and more educated people are more likely to hold political positions.  A good illustration of this is the 2004 Presidential Election in the U.S.  The candidates, [[w:John Kerry|John Kerry]], and [[w:George W. Bush|George W. Bush]] are both [[w:Yale University|Yale University]] alumni.  John Kerry is a lawyer and George W. Bush has an [[w:MBA|MBA]] from Harvard.  Both are white, worth millions of dollars, and come from families that have been involved in politics.

[[File:Voter Turnout by Education 2012 US Presidential Election.png|center|thumb|800px]]

==Politics and Ideology==
Recent research in the US suggests that there has been a growing bifurcation in political ideology.  There is an increasing gap between individuals who espouse [[w:Conservatism|conservative ideology]] and those who advocate a more [[w:Progressivism|progressive ideology]].  This gap is the largest seen in at least the last twenty years.&lt;ref name=&quot;Pew2014&quot;&gt;Pew Research Center. 2014. Political Polarization in the American Public: How Increasing Ideological Uniformity and Partisan Antipathy Affect Politics, Compromise and Everyday Life. Washington, DC: Pew Research Center. Retrieved (http://www.people-press.org/files/2014/06/6-12-2014-Political-Polarization-Release.pdf).&lt;/ref&gt;  One consequence of this bifurcation of ideology, combined with population shifts through migration, is population segregation based on ideology.  Another consequence is a shift in trust.  People in the US have begun to trust information they receive from immediate family members, churches, close friends, and local newspapers more than they trust information coming from politicians, national news media, the internet, and co-workers.&lt;ref name=&quot;Smith2013&quot;&gt;Smith, Jordan W. 2013. “Information Networks in Amenity Transition Communities: A Comparative Case Study.” Human Ecology 41(6):885–903.&lt;/ref&gt;  A number of social networks and large corporations, whether or not they are aware of this research, appear to be taking advantage of this shift in trust by utilizing members of someone's social network to target advertising toward that individual.&lt;ref name=&quot;Sengupta2012&quot;&gt;Sengupta, Somini. 2012. “So Much for Sharing His ‘Like.’” The New York Times, May 31. Retrieved June 20, 2014 (http://www.nytimes.com/2012/06/01/technology/so-much-for-sharing-his-like.html).&lt;/ref&gt;

This bifurcation of political views in the US, when combined with election outcome expectations - which are heavily influenced by media - can lead to complications for democratic governments.  Recent research suggests that individuals who believed their presidential candidate was going to win - largely because of a high consumption of biased media - reported greater distrust in government and democracy when their candidate did not win.  In contrast, those who did not think their candidate was going to win did not exhibit the same decline in trust of democracy and government.&lt;ref name=&quot;Hollander2014&quot;&gt;Hollander, Barry A. 2014. “The Surprised Loser The Role of Electoral Expectations and News Media Exposure in Satisfaction with Democracy.” Journalism &amp; Mass Communication Quarterly 1077699014543380.&lt;/ref&gt;  The growth of news media - particularly cable television channels - that cater to specific biases is, indirectly at least, eroding confidence in democracy.

==References==
{{reflist}}

{{chapter navigation|Health and Medicine|Collective Behavior}}

{{BookCat}}</text>
      <sha1>iokfwxc9xyvqbyq4fyrcl26vgihoe6e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Turkish cuisine</title>
    <ns>102</ns>
    <id>199839</id>
    <redirect title="Cookbook:Cuisine of Turkey" />
    <revision>
      <id>1540938</id>
      <timestamp>2009-06-20T21:15:45Z</timestamp>
      <contributor>
        <ip>94.194.59.85</ip>
      </contributor>
      <comment>Redirected page to [[Cookbook:Cuisine of Turkey]]</comment>
      <text xml:space="preserve">#REDIRECT [[Cookbook:Cuisine of Turkey]]</text>
      <sha1>tedf7ykslcv54n2ux5x7xk7p1k4nc5m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Forces:Forces</title>
    <ns>0</ns>
    <id>199840</id>
    <redirect title="FHSST Physics/Forces" />
    <revision>
      <id>1540942</id>
      <timestamp>2009-06-20T21:18:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Forces:Forces]] to [[FHSST Physics/Forces]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Forces]]</text>
      <sha1>9nhwch73l014qs6tpjscuh7a2jx6n9e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics Forces</title>
    <ns>10</ns>
    <id>199841</id>
    <redirect title="Template:FHSST Physics/Forces" />
    <revision>
      <id>1540944</id>
      <timestamp>2009-06-20T21:21:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics Forces]] to [[Template:FHSST Physics/Forces]]: Naming convention.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Forces]]</text>
      <sha1>g6dkmxihqgmf4bwwdrct4o9eerrv31a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Melangeau</title>
    <ns>3</ns>
    <id>199842</id>
    <revision>
      <id>1541358</id>
      <parentid>1540952</parentid>
      <timestamp>2009-06-21T02:55:27Z</timestamp>
      <contributor>
        <username>Melangeau</username>
        <id>195305</id>
      </contributor>
      <comment>/* Cookbook:Black Iron Dude Marinade */</comment>
      <text xml:space="preserve">&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Melangeau!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 21:27, 20 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;


==[[Cookbook:Black Iron Dude Marinade]]==
This could be a copyright violation if you are copying the recipe entirely from the source at the bottom of the page. If is your blog, you should note that so we can be made aware. Thanks. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 21:27, 20 June 2009 (UTC)
Looked for &amp;copy; on the blog; didn't see any.  Removed anyway; thanks for the notification.</text>
      <sha1>7feuporgwvr89cgbvjtf2zbuyputivd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Forces:TO DO LIST</title>
    <ns>0</ns>
    <id>199843</id>
    <redirect title="FHSST Physics/Forces/TO DO LIST" />
    <revision>
      <id>1540955</id>
      <timestamp>2009-06-20T21:28:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Forces:TO DO LIST]] to [[FHSST Physics/Forces/TO DO LIST]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Forces/TO DO LIST]]</text>
      <sha1>4lq1x6tg39mvwcb2g4qvpomuo28w3ol</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Forces:What is a force</title>
    <ns>0</ns>
    <id>199844</id>
    <redirect title="FHSST Physics/Forces/Definition" />
    <revision>
      <id>1540958</id>
      <timestamp>2009-06-20T21:30:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Forces:What is a force]] to [[FHSST Physics/Forces/Definition]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Forces/Definition]]</text>
      <sha1>889mp0ihc4ts8ivm30e69oa55t3mgsu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Forces:What is a force</title>
    <ns>1</ns>
    <id>199845</id>
    <redirect title="Talk:FHSST Physics/Forces/Definition" />
    <revision>
      <id>1540960</id>
      <timestamp>2009-06-20T21:30:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Forces:What is a force]] to [[Talk:FHSST Physics/Forces/Definition]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Forces/Definition]]</text>
      <sha1>6zhyr6ohu815iw3fog5vzhgkr4xapid</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Forces:Force diagrams</title>
    <ns>0</ns>
    <id>199848</id>
    <redirect title="FHSST Physics/Forces/Diagrams" />
    <revision>
      <id>1540974</id>
      <timestamp>2009-06-20T21:38:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Forces:Force diagrams]] to [[FHSST Physics/Forces/Diagrams]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Forces/Diagrams]]</text>
      <sha1>jnmjewsbtu7g403cucgopwjz7kp7jdt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Forces:Force diagrams</title>
    <ns>1</ns>
    <id>199849</id>
    <redirect title="Talk:FHSST Physics/Forces/Diagrams" />
    <revision>
      <id>1540976</id>
      <timestamp>2009-06-20T21:38:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Forces:Force diagrams]] to [[Talk:FHSST Physics/Forces/Diagrams]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Forces/Diagrams]]</text>
      <sha1>8z052oj90tjzxv4b6rsj345l2f5dgd1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Forces:Equilibrium of Forces</title>
    <ns>0</ns>
    <id>199850</id>
    <redirect title="FHSST Physics/Forces/Equilibrium of Forces" />
    <revision>
      <id>1540980</id>
      <timestamp>2009-06-20T21:39:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Forces:Equilibrium of Forces]] to [[FHSST Physics/Forces/Equilibrium of Forces]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Forces/Equilibrium of Forces]]</text>
      <sha1>8hwp8ur0ndwuqmnyjsrs70rvqlmux9t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Pan Seared Scallops with Cayenne Chocolate Sauce</title>
    <ns>102</ns>
    <id>199851</id>
    <revision>
      <id>2688231</id>
      <parentid>1754455</parentid>
      <timestamp>2014-08-03T15:33:30Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">
{{recipe}}

== Ingredients ==
* 1 pound sea scallops
* Salt and black pepper
* 1 Tbsp butter
* 2 ounces bittersweet chocolate, melted
* 1 Tbsp cayenne pepper (adjust to your liking)
* Parsley for garnish

== Procedure ==
#Sprinkle scallops with salt and black pepper.
#Melt butter in a large stainless steel skillet over medium heat. Place scallops in and cook 2 minutes per side. Remove and put on a platter.
#Whisk together chocolate and cayenne pepper. Drizzle on individual plates, place scallops on top, garnish with fresh parsley, and serve.

[[Category:Scallop recipes]]
[[Category:Chile recipes]]
[[Category:Chocolate recipes]]
[[Category:Sauce recipes]]
[[Category:Pan fried recipes]]
[[Category:Main course recipes]]</text>
      <sha1>ilw5rkw1nqbke0mx8xxgtj30841w9b8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Forces:Newton's Laws of Motion</title>
    <ns>0</ns>
    <id>199852</id>
    <redirect title="FHSST Physics/Forces/Newton&#039;s Laws of Motion" />
    <revision>
      <id>1540985</id>
      <timestamp>2009-06-20T21:41:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Forces:Newton's Laws of Motion]] to [[FHSST Physics/Forces/Newton's Laws of Motion]]: Putting newer page over abandoned one.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Forces/Newton's Laws of Motion]]</text>
      <sha1>ahf51qqunc6xu6bdtg6rxkyoitygyzh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Forces:Examples of Forces Studied Later</title>
    <ns>0</ns>
    <id>199853</id>
    <redirect title="FHSST Physics/Forces/Examples" />
    <revision>
      <id>1540993</id>
      <timestamp>2009-06-20T21:44:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Forces:Examples of Forces Studied Later]] to [[FHSST Physics/Forces/Examples]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Forces/Examples]]</text>
      <sha1>e2bn76ni495jk7zo2zb2phfqmwo5a9o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Forces:Summary of Important Quantities, Equations and Concepts</title>
    <ns>0</ns>
    <id>199854</id>
    <redirect title="FHSST Physics/Forces/Summary" />
    <revision>
      <id>1540997</id>
      <timestamp>2009-06-20T21:45:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Forces:Summary of Important Quantities, Equations and Concepts]] to [[FHSST Physics/Forces/Summary]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Forces/Summary]]</text>
      <sha1>ltauuwoiadpompizek91z4gjghmfkpu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Roasted Redskin Potatoes</title>
    <ns>102</ns>
    <id>199857</id>
    <revision>
      <id>2689855</id>
      <parentid>1798045</parentid>
      <timestamp>2014-08-08T13:13:17Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 1/2 pounds redskin potatoes, halved
* 3 Tbsp olive oil
* 3 bay leaves
* 2 tsp dried rosemary
* 2 tsp dried thyme
* 1 tsp salt
* 1 tsp black pepper
* 1 Tbsp minced garlic

== Procedure ==
#Put potatoes and bay leaves in a large Dutch oven. Put enough water to cover and bring to a rolling boil. Cook for 15 minutes or until tender.
#Drain and shock. Drain again and discard bay leaves. Pat dry with paper towels.
#Whisk together oil and remaining ingredients. Add potatoes and toss to coat.
#Bake in a 425° oven 10 minutes or until lightly to deeply brown. Serve.

[[Category:Potato recipes]]
[[Category:Boiled recipes]]
[[Category:Roasted recipes]]
[[Category:Side dish recipes]]</text>
      <sha1>21x10ed440z1v07amvrhjfvgdfqbka1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Work Energy:Work and Energy</title>
    <ns>0</ns>
    <id>199858</id>
    <redirect title="FHSST Physics/Work and Energy" />
    <revision>
      <id>1541015</id>
      <timestamp>2009-06-20T21:57:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Work Energy:Work and Energy]] to [[FHSST Physics/Work and Energy]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Work and Energy]]</text>
      <sha1>j81j54z70y3d0pk7vwehsrym8qy4fhk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics WrkEng</title>
    <ns>10</ns>
    <id>199859</id>
    <redirect title="Template:FHSST Physics/Work and Energy" />
    <revision>
      <id>1541017</id>
      <timestamp>2009-06-20T21:57:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics WrkEng]] to [[Template:FHSST Physics/Work and Energy]]: Naming convention.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Work and Energy]]</text>
      <sha1>2qqjcd67ub3s6tdhuom8izhjurvq8lq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Work Energy:What are Work and Energy</title>
    <ns>0</ns>
    <id>199860</id>
    <redirect title="FHSST Physics/Work and Energy/Definition" />
    <revision>
      <id>1541021</id>
      <timestamp>2009-06-20T22:00:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Work Energy:What are Work and Energy]] to [[FHSST Physics/Work and Energy/Definition]]: Subpage notation and better name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Work and Energy/Definition]]</text>
      <sha1>bggjn0fdjzgqxe3eaiq38mybbnbm5e7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Work Energy:Work</title>
    <ns>0</ns>
    <id>199862</id>
    <redirect title="FHSST Physics/Work and Energy/Work" />
    <revision>
      <id>1541026</id>
      <timestamp>2009-06-20T22:03:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Work Energy:Work]] to [[FHSST Physics/Work and Energy/Work]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Work and Energy/Work]]</text>
      <sha1>c67oq4shpke27lf6itmsgg8i85htlhs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Work Energy:Work</title>
    <ns>1</ns>
    <id>199863</id>
    <redirect title="Talk:FHSST Physics/Work and Energy/Work" />
    <revision>
      <id>1541028</id>
      <timestamp>2009-06-20T22:03:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Work Energy:Work]] to [[Talk:FHSST Physics/Work and Energy/Work]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Work and Energy/Work]]</text>
      <sha1>40au8kta0ykcuw8rrle4n3wu4n7g8bf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Work Energy:Energy</title>
    <ns>0</ns>
    <id>199864</id>
    <redirect title="FHSST Physics/Work and Energy/Energy" />
    <revision>
      <id>1541032</id>
      <timestamp>2009-06-20T22:05:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Work Energy:Energy]] to [[FHSST Physics/Work and Energy/Energy]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Work and Energy/Energy]]</text>
      <sha1>shqm8ct03z52yeeijt8d029u0pusnfr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Work Energy:Energy</title>
    <ns>1</ns>
    <id>199865</id>
    <redirect title="Talk:FHSST Physics/Work and Energy/Energy" />
    <revision>
      <id>1541034</id>
      <timestamp>2009-06-20T22:05:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Work Energy:Energy]] to [[Talk:FHSST Physics/Work and Energy/Energy]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Work and Energy/Energy]]</text>
      <sha1>5h5kvkvwhy37om1jxilet9h064a08z8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Work Energy:Mechanical Energy and Energy Conservation</title>
    <ns>0</ns>
    <id>199866</id>
    <redirect title="FHSST Physics/Work and Energy/Mechanical Energy and Energy Conservation" />
    <revision>
      <id>1541038</id>
      <timestamp>2009-06-20T22:06:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Work Energy:Mechanical Energy and Energy Conservation]] to [[FHSST Physics/Work and Energy/Mechanical Energy and Energy Conservation]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Work and Energy/Mechanical Energy and Energy Conservation]]</text>
      <sha1>5e3rh6nnv6h78kxhnj4tqtefd3gm7tr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Work Energy:Summary of Important Quantities, Equations and Concepts</title>
    <ns>0</ns>
    <id>199867</id>
    <redirect title="FHSST Physics/Work and Energy/Summary" />
    <revision>
      <id>1541041</id>
      <timestamp>2009-06-20T22:07:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Work Energy:Summary of Important Quantities, Equations and Concepts]] to [[FHSST Physics/Work and Energy/Summary]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Work and Energy/Summary]]</text>
      <sha1>0ss4jsbo8fb6rfq968pmwk1h6effvbn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Work Energy:Essay One</title>
    <ns>0</ns>
    <id>199868</id>
    <redirect title="FHSST Physics/Work and Energy/Sources" />
    <revision>
      <id>1541045</id>
      <timestamp>2009-06-20T22:09:40Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Work Energy:Essay One]] to [[FHSST Physics/Work and Energy/Sources]]: Subpage notation and better name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Work and Energy/Sources]]</text>
      <sha1>m79u63sxrooxv11jlvvjxyyk2yu9x9z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Work Energy:Essay One</title>
    <ns>1</ns>
    <id>199869</id>
    <redirect title="Talk:FHSST Physics/Work and Energy/Sources" />
    <revision>
      <id>1541047</id>
      <timestamp>2009-06-20T22:09:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Work Energy:Essay One]] to [[Talk:FHSST Physics/Work and Energy/Sources]]: Subpage notation and better name.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Work and Energy/Sources]]</text>
      <sha1>9hb08sk9l5j0ufme6uivypb5k63zlmd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Maple Cumin Glazed Grilled Bananas</title>
    <ns>102</ns>
    <id>199870</id>
    <revision>
      <id>1742703</id>
      <parentid>1541050</parentid>
      <timestamp>2010-03-24T21:37:05Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 4 bananas, peeled and halved lengthwise
* 1/2 cup maple syrup
* 2 tbsp dark rum
* 1/2 tsp ground cumin

== Procedure ==
#Spray bananas and cold grill grate with nonstick cooking spray.
#Place a large saucepan over high heat and add rum. Ignite. Once flames have died remove from heat and whisk in remaining ingredients.
#Place bananas cut side down on the preheated grill and brush with rum mixture. Cook for 2 minutes, then flip and brush grilled side with more rum mixture. Cook other side until well browned. Flip and cook just until browned. Remove and serve.</text>
      <sha1>cyrff4tk4p628aulbs2luqiee1nc5l0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Collisions Explosions:Collisions and Explosions</title>
    <ns>0</ns>
    <id>199871</id>
    <redirect title="FHSST Physics/Collisions and Explosions" />
    <revision>
      <id>1541054</id>
      <timestamp>2009-06-20T22:15:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Collisions Explosions:Collisions and Explosions]] to [[FHSST Physics/Collisions and Explosions]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Collisions and Explosions]]</text>
      <sha1>685001y7fs8x6rzttcp0352ee09626g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics Coll</title>
    <ns>10</ns>
    <id>199872</id>
    <redirect title="Template:FHSST Physics/Collisions and Explosions" />
    <revision>
      <id>1541056</id>
      <timestamp>2009-06-20T22:15:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics Coll]] to [[Template:FHSST Physics/Collisions and Explosions]]: Naming convention.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Collisions and Explosions]]</text>
      <sha1>1f3ysd7aoig4ltnff0ekcmont1wxl1s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Collisions Explosions:Explosions</title>
    <ns>0</ns>
    <id>199876</id>
    <redirect title="FHSST Physics/Collisions and Explosions/Explosions" />
    <revision>
      <id>1541068</id>
      <timestamp>2009-06-20T22:24:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Collisions Explosions:Explosions]] to [[FHSST Physics/Collisions and Explosions/Explosions]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Collisions and Explosions/Explosions]]</text>
      <sha1>k0ni2tjqw9gqzk7a9qu0u065qw6bjjr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Collisions Explosions:Energy and Heat</title>
    <ns>0</ns>
    <id>199877</id>
    <redirect title="FHSST Physics/Collisions and Explosions/Energy and Heat" />
    <revision>
      <id>1541071</id>
      <timestamp>2009-06-20T22:25:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Collisions Explosions:Energy and Heat]] to [[FHSST Physics/Collisions and Explosions/Energy and Heat]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Collisions and Explosions/Energy and Heat]]</text>
      <sha1>qx1tptbq238v92xpaixidkc8e51ln77</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Collisions Explosions:Important Equations and Quantities</title>
    <ns>0</ns>
    <id>199878</id>
    <redirect title="FHSST Physics/Collisions and Explosions/Summary" />
    <revision>
      <id>1541075</id>
      <timestamp>2009-06-20T22:28:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Collisions Explosions:Important Equations and Quantities]] to [[FHSST Physics/Collisions and Explosions/Summary]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Collisions and Explosions/Summary]]</text>
      <sha1>t6i69h7quw69cu7azj52m0okr86qugt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Menu Ideas</title>
    <ns>102</ns>
    <id>199879</id>
    <revision>
      <id>1745258</id>
      <parentid>1541094</parentid>
      <timestamp>2010-03-27T23:47:29Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

Here's some menu ideas for some events.

== Guests coming over for fancy dinner ==

Appetizer: [[cookbook:Pan Seared Scallops with Cayenne Chocolate Sauce|Pan Seared Scallops with Cayenne Chocolate sauce]]

Entree: [[cookbook:Grilled Filet Mignon with a Cognac Reduction|Grilled Filet Mignon with a Cognac Reduction]]

Sides: [[cookbook:Roasted Redskin Potatoes|Roasted Redskin Potatoes]]

Drink: VSOP Grade Cognac

Dessert: [[cookbook:Tiramisu|Tiramisu]]

== 4th of July Barbecue ==

Appetizer: [[cookbook:Campfire Barbecue Chicken Wings|Campfire Barbecue Chicken Wings]]

Entrees: [[cookbook:Chipotle BBQ Ribs|Chipotle BBQ Ribs]] and [[cookbook:Backyard BBQ Chicken|Backyard BBQ Chicken]] with [[cookbook:Chipotle BBQ Sauce|Chipotle BBQ Sauce]] on the side.

Dessert: [[cookbook:Ginger-Glazed Grilled Peaches|Ginger-Glazed Grilled Peaches]]

== Neighborhood Barbecue ==

Appetizer: [[Cookbook:Cola BBQ Chicken|Cola BBQ Chicken]]

Entree: [[cookbook:Spicy Apple Glazed Pork Roast|Spicy Apple Glazed Pork Roast]]</text>
      <sha1>ji6u60ki17h79uwk843d3grggl5p6tv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Ronald Malík</title>
    <ns>3</ns>
    <id>199880</id>
    <revision>
      <id>1502386</id>
      <parentid>1502380</parentid>
      <timestamp>2009-05-18T13:03:32Z</timestamp>
      <contributor>
        <username>Ronald Malík</username>
        <id>176898</id>
      </contributor>
      <comment>/* Casts */ komus</comment>
      <text xml:space="preserve">== Installing ==
Installation of user scripts is done in 3 easy steps: locate your personal userscripts page, add the script to it, and bypass your cache.  Each step is detailed below.

=== Log-in and locate your personal userscripts page ===
First, make sure you are logged in.  Only logged-in users can install scripts by modifying a personal userscripts page.  This page can be located as follows:
* If you use default Monobook skin, this special link &quot;[[Special:Mypage/monobook.js|your monobook.js]]&quot; points to this page. 
* If you set some other skin in your [[Special:Preferences|Preferences]], see [[Wikipedia:Skin]] for corresponding subpage name. 
*: Note that many scripts are designed with Monobook skin in mind. Such scripts should also work in Chick, Simple and Myskin, and are less likely to work in Classic, Nostalgia and Cologne Blue. If you use Modern skin, try enabling a special &quot;compatibility&quot; gadget in your preferences.

=== Add the script to your personal userscripts page ===
One way to install a script is to simply copy the whole script code into your monobook.js. You will thereafter have your own copy of the script, which will not be updated automatically; you must do it yourself. 

Importing is a preferred and most popular way to install a userscript. It makes your monobook.js more readable and automatically keeps you up to date with script updates and fixes.

This is done by adding &lt;code&gt;importScript('full_page_name')&lt;/code&gt; to your [[monobook.js]].

For example, to install [[Wikipedia:WikiProject User scripts/Scripts/Watchlist since|Watchlist since]] script, you add the following line to your monobook.js:
&lt;source lang=javascript&gt;
importScript('Wikipedia:WikiProject User scripts/Scripts/Watchlist since');
&lt;/source&gt;

=== Bypass your cache ===
As a final step, you need to [[Wikipedia:bypass your cache|bypass your cache]] after installation.

To express your thank to the developer, you may want to add a [[WP:USERBOX|userbox]] to your personal page.  Feel free to use the predefined &lt;nowiki&gt;{{&lt;/nowiki&gt;[[Template:Userscripts|Userscripts]]&lt;nowiki&gt;}}&lt;/nowiki&gt; userbox.  

=== Gadgets ===
Some userscripts are made into [[Wikipedia:Gadget|gadgets]], you can install them simply by selecting a checkbox in your [[Special:Preferences|Preferences]].

=== Some notes ===
Not all scripts are subpages of WikiProject User scripts; many scripts are stored in the userspace of the user who maintains them; check the destination of the links in the list below to see where a script is stored, and use that location as the argument to the importScript function.

Note that importing requires the script to have its own page which is entirely valid [[Javascript]] (all explanatory text is /* inside comments */), as most scripts do. If you import a file which is not valid Javascript, nothing serious is likely to happen, but your Javascript, and any Javascript you have below that, will not work. If your browser is set to inform you about Javascript errors, you will see these errors; otherwise you will see nothing except that the scripts you have tried to add do not work.

Last note: if you see &quot;&amp;dontcountme=s&quot; in a userscript URL then this part can be removed. It is [http://en.wikipedia.org/w/index.php?title=Wikipedia:Village_pump_%28technical%29&amp;oldid=128295924#dontcountme.3Ds.3F no longer needed].

==Casts==
* [[Jencarlos Canela]] .... Ángel Salvador - ''main hero''
* [[Gaby Espino]] .... Manuela Davila - ''main heroine''
* Miguel Varoni .... Martín Acero - ''villain, father of Ángel'                                                                     * [[Ronald Malík ]] ....  Zevata - Bojkovice, a.s.                                                                                  * [[Karla Monroig]].... Virginia Dávila                                                                                                       * Roberto Mateos .... León Beltrán
* Leonardo Daniel
* Jeannette Lehr
* Jorge Luis Pila .... Jimmy Cardona 
* Carlos Humberto Camacho 
* Esperanza Rendón
* Mildred Quiroz
* Mimi Lazo
* Angelie Moncayo
* Michelle Vargas
* Alexa Kuve
* Raúl Arrieta
* Juan Jiménez
* Cristian Carabias
* Roxana Peña
* Carlos Ferro
* Juan David Ferrer
* Ezequiel Montalt
* Aneudy Lara
* Alex Fumero</text>
      <sha1>sdll8t62h8yfq24vqxdsgrnzbbt5l6a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics Newt</title>
    <ns>10</ns>
    <id>199882</id>
    <redirect title="Template:FHSST Physics/Newtonian Gravitation" />
    <revision>
      <id>1541089</id>
      <timestamp>2009-06-20T22:35:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics Newt]] to [[Template:FHSST Physics/Newtonian Gravitation]]: Naming convention.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Newtonian Gravitation]]</text>
      <sha1>1zcxnw6af5v8lmmsb6t1xfkumr1v1gt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Newtonian Gravitation:Properties</title>
    <ns>0</ns>
    <id>199883</id>
    <redirect title="FHSST Physics/Newtonian Gravitation/Properties" />
    <revision>
      <id>1541097</id>
      <timestamp>2009-06-20T22:42:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Newtonian Gravitation:Properties]] to [[FHSST Physics/Newtonian Gravitation/Properties]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Newtonian Gravitation/Properties]]</text>
      <sha1>ejxx3whwmq34q211hzmutzjcepenqug</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Newtonian Gravitation:Mass and Weight</title>
    <ns>0</ns>
    <id>199884</id>
    <redirect title="FHSST Physics/Newtonian Gravitation/Mass and Weight" />
    <revision>
      <id>1541100</id>
      <timestamp>2009-06-20T22:43:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Newtonian Gravitation:Mass and Weight]] to [[FHSST Physics/Newtonian Gravitation/Mass and Weight]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Newtonian Gravitation/Mass and Weight]]</text>
      <sha1>8comr5sf6wj82ejb0tz8t6fvy3x765d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Newtonian Gravitation:Comparative problems</title>
    <ns>0</ns>
    <id>199887</id>
    <redirect title="FHSST Physics/Newtonian Gravitation/Comparative Problems" />
    <revision>
      <id>1541108</id>
      <timestamp>2009-06-20T22:45:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Newtonian Gravitation:Comparative problems]] to [[FHSST Physics/Newtonian Gravitation/Comparative Problems]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Newtonian Gravitation/Comparative Problems]]</text>
      <sha1>oa28qsism4xfpao1cgrelpzc0s1riwt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Newtonian Gravitation:Falling bodies</title>
    <ns>0</ns>
    <id>199888</id>
    <redirect title="FHSST Physics/Newtonian Gravitation/Falling Bodies" />
    <revision>
      <id>1541111</id>
      <timestamp>2009-06-20T22:46:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Newtonian Gravitation:Falling bodies]] to [[FHSST Physics/Newtonian Gravitation/Falling Bodies]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Newtonian Gravitation/Falling Bodies]]</text>
      <sha1>k3asxv1o15ol7f4mp1nvqaelisj2vq1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Newtonian Gravitation:Terminal velocity</title>
    <ns>0</ns>
    <id>199889</id>
    <redirect title="FHSST Physics/Newtonian Gravitation/Terminal Velocity" />
    <revision>
      <id>1541114</id>
      <timestamp>2009-06-20T22:47:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Newtonian Gravitation:Terminal velocity]] to [[FHSST Physics/Newtonian Gravitation/Terminal Velocity]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Newtonian Gravitation/Terminal Velocity]]</text>
      <sha1>beft1x29sximwm56axn0xsid5q99jdi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Newtonian Gravitation:Drag force</title>
    <ns>0</ns>
    <id>199890</id>
    <redirect title="FHSST Physics/Newtonian Gravitation/Drag Force" />
    <revision>
      <id>1541120</id>
      <parentid>1541117</parentid>
      <timestamp>2009-06-20T22:48:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Newtonian Gravitation/Drag Force]]</text>
      <sha1>r6hkwstdcggpfujthjzgxosfc0twb1u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Newtonian Gravitation:Important Equations and Quantities</title>
    <ns>0</ns>
    <id>199892</id>
    <redirect title="FHSST Physics/Newtonian Gravitation/Summary" />
    <revision>
      <id>1541123</id>
      <timestamp>2009-06-20T22:49:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Newtonian Gravitation:Important Equations and Quantities]] to [[FHSST Physics/Newtonian Gravitation/Summary]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Newtonian Gravitation/Summary]]</text>
      <sha1>agonps7x9jmjxfend8006eg52hmma7m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Pressure:Pressure</title>
    <ns>0</ns>
    <id>199893</id>
    <redirect title="FHSST Physics/Pressure" />
    <revision>
      <id>1541130</id>
      <timestamp>2009-06-20T22:59:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Pressure:Pressure]] to [[FHSST Physics/Pressure]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Pressure]]</text>
      <sha1>63tdlhsvegzic2jjm1hew5va8fbp7u4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics Press</title>
    <ns>10</ns>
    <id>199894</id>
    <redirect title="Template:FHSST Physics/Pressure" />
    <revision>
      <id>1541132</id>
      <timestamp>2009-06-20T23:00:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics Press]] to [[Template:FHSST Physics/Pressure]]: Naming convention.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Pressure]]</text>
      <sha1>rs38v3b5ddzey0q4z5b92a9c830ixao</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:SunCreator/Archive 2</title>
    <ns>3</ns>
    <id>199895</id>
    <revision>
      <id>1541133</id>
      <timestamp>2009-06-20T23:06:57Z</timestamp>
      <contributor>
        <username>SunCreator</username>
        <id>71605</id>
      </contributor>
      <comment>Create page</comment>
      <text xml:space="preserve">{{ArchivePage|../}}

{{Userpage}}
{|
 | __TOC__
 |}
==Re: Opening theory in chess/ECO_index==
I just finished section &quot;A&quot; of the ECO index. I did not realize how many lines there were in the Dutch Defence.

[[User:Anonymouse|Anonymouse--nerd and proud of it]] ([[User talk:Anonymouse|talk]]) 23:22, 25 June 2008 (UTC)
==Hello==
I just popped up here after seeing who edited my half-done book on chess strategy, and just thought I might like to tell you that I'll be around every once in a while to work on [[Wikibooks:Chess|the project]].
== re: Hello ==

hi ChessCreator,
Thanks for your welcome! Actually, I've been involved with this book since 2005 but repeatedly gave up out of frustration at apparently being the only one here, so I'm extremely glad to see some new names on board. As you'll see from the main discussion page, it was me that turned Opening Theory in Chess into a stand-alone book. My contributions so far have been mostly in the Ruy, also the first few moves of the Frankenstein-Dracula and the intro page. My plan now is to bring the Sveshnikov up to scratch. 

Maybe I'll also make a general survey of the book that tells us which main lines are here already and which urgently need adding. [[User:Chi Sigma|Chi Sigma]] ([[User talk:Chi Sigma|talk]]) 17:02, 17 February 2008 (UTC)
: Excellent news to learn of your desire to contribute. I've been gradually upgrading a number of things and only recently finally got all page put into the [[Opening theory in chess]] category. So now you(or anyone else interested) can watch for new edits by clinking [http://en.wikibooks.org/wiki/Special:Recentchangeslinked/Category:Opening_theory_in_chess here].
:There are some of my thoughts, questions and idea on the [http://en.wikibooks.org/wiki/Talk:Opening_theory_in_chess/Organization organisation] page. It would be good if we could converse there about how we go forward from here. [[User:ChessCreator|ChessCreator]] ([[User talk:ChessCreator|talk]]) 18:00, 17 February 2008 (UTC)

== [[Wikibooks:Votes for deletion#Pashto]] ==

Please sign your name like this: &lt;nowiki&gt;~~~~&lt;/nowiki&gt; on discussion pages like the VfD page. Thanks! [[User:Laleena|Laleena]] ([[User talk:Laleena|talk]]) 13:30, 7 March 2008 (UTC)

== {{tlx|Chesscreator/Invite1}} ==

This template should be subst'ed. Instead of {{tlx|Chesscreator/Invite1}}, use {{tlxs|Chesscreator/Invite1}}. I will go back and change this. The difference is that the message on people's talk pages won't change when the template is edited, and its easier on the servers. Keep up the good work and good luck getting that project off the ground! &amp;nbsp;'''&amp;ndash;&amp;nbsp;[[User:Mike.lifeguard|&lt;font color=&quot;Indigo&quot;&gt;Mike.lifeguard&lt;/font&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;font color=&quot;Indigo&quot;&gt;talk&lt;/font&gt;]]&lt;/sup&gt; 21:17, 2 April 2008 (UTC)
:Wow, I really like your idea for a WikiProject-sort of thing. I think I'll create one for History. Very cool idea. [[User:Neoptolemus|'''Νεοπτόλεμος''']] ( [[User talk:Neoptolemus|talk]] &amp;#124; [[Special:Emailuser/Neoptolemus|email]] &amp;#124; [[Special:Contributions/Neoptolemus|contribs]] ) 17:14, 8 April 2008 (UTC)

== [[English Defence]] ==

This currently redirects to a page which doesn't exist; would you fix that? I don't know where it should point. &amp;nbsp;'''&amp;ndash;&amp;nbsp;[[User:Mike.lifeguard|&lt;font color=&quot;Indigo&quot;&gt;Mike.lifeguard&lt;/font&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User 
talk:Mike.lifeguard|&lt;font color=&quot;Indigo&quot;&gt;talk&lt;/font&gt;]]&lt;/sup&gt; 12:58, 3 April 2008 (UTC)

:I think it would go to either [[Opening theory in chess/1. c4|English Opening]] or [[Opening theory in chess/1. e4/1...c5/2. Nf3/2...d6/3. d4/3...cxd4/4. Nxd4/4...Nf6/5. Nc3/5...a6/6. Be3|English Attack]]. To the best of my knowledge there is no such opening as the English Defence (de Firmian, MCO-15) 

:[[User:Anonymouse|Anonymouse--nerd and proud of it]] ([[User talk:Anonymouse|talk]]) 01:28, 29 May 2008 (UTC)
== Redirects ==

Hey CC, I deleted those redirects, could you see if there's anything I've messed up? Also, let me know and I'll be glad to delete/fix any more stuff if you need admin help. [[User:Neoptolemus|'''Νεοπτόλεμος''']] ( [[User talk:Neoptolemus|talk]] &amp;#124; [[Special:Emailuser/Neoptolemus|email]] &amp;#124; [[Special:Contributions/Neoptolemus|contribs]] ) 01:48, 4 April 2008 (UTC)

== WikiProject ==

I don't want to be overly discouraging, but [[Wikibooks:Wikiprojects#Is_it_worth_the_effort.3F|it might not be worth it]]. Just something to think about if you haven't already. &amp;nbsp;'''&amp;ndash;&amp;nbsp;[[User:Mike.lifeguard|&lt;font color=&quot;Indigo&quot;&gt;Mike.lifeguard&lt;/font&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;font color=&quot;Indigo&quot;&gt;talk&lt;/font&gt;]]&lt;/sup&gt; 01:36, 9 April 2008 (UTC)
:Sorry, why did you move it back? It doesn't matter terribly, but the edit history is now in the wrong spot, and it is inconsistent with the other WikiProjects... &amp;nbsp;'''&amp;ndash;&amp;nbsp;[[User:Mike.lifeguard|&lt;font color=&quot;Indigo&quot;&gt;Mike.lifeguard&lt;/font&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;font color=&quot;Indigo&quot;&gt;talk&lt;/font&gt;]]&lt;/sup&gt; 23:55, 9 April 2008 (UTC)

== Re:Bot Help ==

Actually, the number of pages is 533 :). I've got the page list loaded up, let me set up the bot and I'll get it running. Just for clarification, you want it to say

 &lt;nowiki&gt;==Theory table==&lt;/nowiki&gt;

with no spaces between the &quot;==&quot; and the text, an uncapitalized second-word? Ie, my bot is going to print out exactly that text that you see above, is that correct? --'''Whiteknight'''&amp;nbsp;([[User:Whiteknight|Page]])&amp;nbsp;([[User talk:Whiteknight|Talk]]) 14:53, 14 April 2008 (UTC)
:Yes, that is correct. Looks like you've bot has started. Thank You! [[User:ChessCreator|ChessCreator]] ([[User talk:ChessCreator|talk]]) 15:23, 14 April 2008 (UTC)
::Started and finished. I did some random checking, and everything looks right. Let me know if you find any problems. --'''Whiteknight'''&amp;nbsp;([[User:Whiteknight|Page]])&amp;nbsp;([[User talk:Whiteknight|Talk]]) 17:25, 14 April 2008 (UTC)
:::Yes, all looks done. Thank you. [[User:ChessCreator|ChessCreator]] ([[User talk:ChessCreator|talk]]) 18:02, 14 April 2008 (UTC)

== Re:Queen's Indian Defense ==

I saw it written that way somewhere, I should have copied down my source and left a proper reference. I can't, for the life of me, find that page again. 

I was trying to look up an opening, or more specifically a response to an opening. An opponent of mine played 1. d4, Nf6 2. c4, e6 3. a3?. This move, apparently, is such a bumble that i can't find it listed anywhere. While trying to look it up in the chess book, i saw the page in question and thought the choice of name for that was a little odd. I may be mistaken, I'm certainly no grand master! --'''Whiteknight'''&amp;nbsp;([[User:Whiteknight|Page]])&amp;nbsp;([[User talk:Whiteknight|Talk]]) 22:52, 2 May 2008 (UTC)

== [[List of chess topics]]‎ ==

The list of chess topics page looks like to me like an article that would be written on Wikipedia. On Wikibooks this isn't really appropriately because its not a book. This should really be either an appendix inside one of the chess books or moved to [[Subject:Chess]] and cleaned up to list only the book titles and perhaps link to the related categories for each book for a complete listing of pages for each book. Subject pages sort of function as lists for a specific topic and should in my opinion also function as the Wikipedia equivalents of disambigious pages for books rather than articles, as Wikiproject pages for books rather than articles, and as Portals for books on a subject. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 13:50, 10 May 2008 (UTC)

== Re:Bot Help ==

I'm not able to use my bot right now, but I should be able to make all those changes by monday night. Also, my bot is not currently able to move pages, although that is functionality that I've been meaning to implement for a long while now. Maybe next week I can start writing up a mass-move bot to help with this kind of task. 

Keeping the [[Chess]] and [[Opening theory in chess]] book separate is probably a good thing. Imagine trying to merge together the ECO and Nimzowitsch's &quot;My System&quot;. One discusses openings, the other discusses gameplay. We don't need to force mergers about books that are about a single subject but which are distinct. Of course, if you believe that they are better merged together, that's fine too. 

I'll set up and run my bot on monday evening, possibly tuesday morning. I'll also see what I can come up with for page moves, in case you still want to go through with that change. --'''Whiteknight'''&amp;nbsp;([[User:Whiteknight|Page]])&amp;nbsp;([[User talk:Whiteknight|Talk]]) 14:08, 17 May 2008 (UTC)

== Can you double check my work? ==

Its my first time doing a ton of work using templates, and I started at http://en.wikibooks.org/wiki/Opening_theory_in_chess/1._e4/1...c5/2._Nf3/2...Nc6/3._d4/3...cxd4/4._Nxd4/4...Nf6/5._Nc3/5...d6/6._Bg5 and added two pages (the top move of the top variation) [[User:Sentriclecub|Sentriclecub]] ([[User talk:Sentriclecub|talk]]) 20:49, 10 September 2008 (UTC)

== Ahoy ==

If you're still around, I've posted something on the front page's discussion page that I hope will get folks thinking. [[User:Chi Sigma|Chi Sigma]] ([[User talk:Chi Sigma|talk]]) 23:42, 22 September 2008 (UTC)

{{ArchivePage|../}}</text>
      <sha1>asd4uqw4dbis3f450h5kaewicq6faok</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:173.77.154.188</title>
    <ns>3</ns>
    <id>199896</id>
    <revision>
      <id>1541138</id>
      <timestamp>2009-06-20T23:12:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/173.77.154.188|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 23:12, 20 June 2009 (UTC)}}</text>
      <sha1>ltv7mhtkv6pnp1fmagy4ug9pud0qp6e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Kansas City Barbecue Sauce</title>
    <ns>102</ns>
    <id>199897</id>
    <revision>
      <id>2685482</id>
      <parentid>2307938</parentid>
      <timestamp>2014-07-28T22:43:40Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 4 cups ketchup
* 3/4 cup molasses
* 1/4 cup Worcestershire sauce
* 1/4 cup soy sauce
* 1/4 cup cider vinegar
* 2 tbsp cayenne pepper

== Procedure ==
#Combine all ingredients in a large saucepan and bring to a boil over high heat. Cook, stirring often for 15 minutes. Keep refrigerated in a nonreactive container for up to 2 months.

[[Category:Barbecue sauce recipes]]
[[Category:Tomato recipes]]
[[Category:Molasses recipes]]
[[Category:Boiled recipes]]</text>
      <sha1>bcwnsxsbqbo66wc60fl1ogm8e0s46qk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Pressure:Important Equations and Quantities</title>
    <ns>0</ns>
    <id>199898</id>
    <redirect title="FHSST Physics/Pressure/Summary" />
    <revision>
      <id>1541145</id>
      <timestamp>2009-06-20T23:32:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Pressure:Important Equations and Quantities]] to [[FHSST Physics/Pressure/Summary]]: Subpage notation and shortened title.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Pressure/Summary]]</text>
      <sha1>if88u8b9jpt01fpjk706vfomsz63hj6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Heat Matter:Heat and Properties of Matter</title>
    <ns>0</ns>
    <id>199899</id>
    <redirect title="FHSST Physics/Heat and Properties of Matter" />
    <revision>
      <id>1541149</id>
      <timestamp>2009-06-20T23:36:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Heat Matter:Heat and Properties of Matter]] to [[FHSST Physics/Heat and Properties of Matter]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Heat and Properties of Matter]]</text>
      <sha1>l0dzxjkcllmdrg8l7o8hzfwzglvdmyx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics HeatMatter</title>
    <ns>10</ns>
    <id>199900</id>
    <redirect title="Template:FHSST Physics/Heat and Properties of Matter" />
    <revision>
      <id>1541151</id>
      <timestamp>2009-06-20T23:36:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics HeatMatter]] to [[Template:FHSST Physics/Heat and Properties of Matter]]: Naming convention.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Heat and Properties of Matter]]</text>
      <sha1>fb5fprircv00z17tu22rmiiljyxe0v0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Heat Matter:Phases of matter</title>
    <ns>0</ns>
    <id>199901</id>
    <redirect title="FHSST Physics/Heat and Properties of Matter/Phases of Matter" />
    <revision>
      <id>1541156</id>
      <timestamp>2009-06-20T23:44:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Heat Matter:Phases of matter]] to [[FHSST Physics/Heat and Properties of Matter/Phases of Matter]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Heat and Properties of Matter/Phases of Matter]]</text>
      <sha1>afaxmzvulbd5e75uhazqh4aozp31s0b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Heat Matter:Deformation of solids</title>
    <ns>0</ns>
    <id>199902</id>
    <redirect title="FHSST Physics/Heat and Properties of Matter/Deformation of Solids" />
    <revision>
      <id>1541160</id>
      <timestamp>2009-06-20T23:45:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Heat Matter:Deformation of solids]] to [[FHSST Physics/Heat and Properties of Matter/Deformation of Solids]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Heat and Properties of Matter/Deformation of Solids]]</text>
      <sha1>jmz2jig3sm0tdzkijjkkx56jp7orndt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Heat Matter:Ideal gasses</title>
    <ns>0</ns>
    <id>199903</id>
    <redirect title="FHSST Physics/Heat and Properties of Matter/Ideal Gasses" />
    <revision>
      <id>1541163</id>
      <timestamp>2009-06-20T23:46:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Heat Matter:Ideal gasses]] to [[FHSST Physics/Heat and Properties of Matter/Ideal Gasses]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Heat and Properties of Matter/Ideal Gasses]]</text>
      <sha1>7t4ih1f8yavnf6c4cjsb4xkkulggdlx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Heat Matter:Temperature</title>
    <ns>0</ns>
    <id>199904</id>
    <redirect title="FHSST Physics/Heat and Properties of Matter/Temperature" />
    <revision>
      <id>1541167</id>
      <timestamp>2009-06-20T23:47:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Heat Matter:Temperature]] to [[FHSST Physics/Heat and Properties of Matter/Temperature]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Heat and Properties of Matter/Temperature]]</text>
      <sha1>qjoa4vnlkewn4nv8p65y3yvrx2u5tbb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Navlist/BookCat</title>
    <ns>10</ns>
    <id>199906</id>
    <revision>
      <id>2603712</id>
      <parentid>2603711</parentid>
      <timestamp>2014-01-24T16:12:27Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>don't automatically self-categorize</comment>
      <text xml:space="preserve">&lt;includeonly&gt;{{#ifeq:{{FULLBOOKNAME}}|Template:Navlist|{{#ifeq:{{{local|}}}|no||[[Category:{{FULLBOOKNAME}}{{#if:{{{local|}}}|/{{{local}}}}}|{{SUBPAGENAME}}]]}}|{{BookCat}}}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>mpdbe9x3cf120d6n6j0isrvgwef77o1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Graeme E. Smith/CC-By-SA-3.0</title>
    <ns>2</ns>
    <id>199909</id>
    <revision>
      <id>1541202</id>
      <parentid>1541199</parentid>
      <timestamp>2009-06-21T00:55:54Z</timestamp>
      <contributor>
        <username>Graeme E. Smith</username>
        <id>169570</id>
      </contributor>
      <minor />
      <comment>clear up last formatting stuff.</comment>
      <text xml:space="preserve">Creatiiv Commons
Attribution-ShareAlike 3.0 Unported

&lt;p&gt;CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE LEGAL SERVICES. DISTRIBUTION OF THIS LICENSE DOES NOT CREATE AN ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS INFORMATION ON AN &quot;AS-IS&quot; BASIS. CREATIVE COMMONS MAKES NO WARRANTIES REGARDING THE INFORMATION PROVIDED, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM ITS USE. &lt;/p&gt;

License

THE WORK (AS DEFINED BELOW) IS PROVIDED UNDER THE TERMS OF THIS CREATIVE COMMONS PUBLIC LICENSE (&quot;CCPL&quot; OR &quot;LICENSE&quot;). THE WORK IS PROTECTED BY COPYRIGHT AND/OR OTHER APPLICABLE LAW. ANY USE OF THE WORK OTHER THAN AS AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.

BY EXERCISING ANY RIGHTS TO THE WORK PROVIDED HERE, YOU ACCEPT AND AGREE TO BE BOUND BY THE TERMS OF THIS LICENSE. TO THE EXTENT THIS LICENSE MAY BE CONSIDERED TO BE A CONTRACT, THE LICENSOR GRANTS YOU THE RIGHTS CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH TERMS AND CONDITIONS.

1. Definitions

&lt;p&gt;{{indent|4}}1. &quot;Adaptation&quot; means a work based upon the Work, or upon the Work and other pre-existing works, such as a translation, adaptation, derivative work, arrangement of music or other alterations of a literary or artistic work, or phonogram or performance and includes cinematographic adaptations or any other form in which the Work may be recast, transformed, or adapted including in any form recognizably derived from the original, except that a work that constitutes a Collection will not be considered an Adaptation for the purpose of this License. For the avoidance of doubt, where the Work is a musical work, performance or phonogram, the synchronization of the Work in timed-relation with a moving image (&quot;synching&quot;) will be considered an Adaptation for the purpose of this License.&lt;/p&gt;
&lt;p&gt;{{indent|4}}2. &quot;Collection&quot; means a collection of literary or artistic works, such as encyclopedias and anthologies, or performances, phonograms or broadcasts, or other works or subject matter other than works listed in Section 1(f) below, which, by reason of the selection and arrangement of their contents, constitute intellectual creations, in which the Work is included in its entirety in unmodified form along with one or more other contributions, each constituting separate and independent works in themselves, which together are assembled into a collective whole. A work that constitutes a Collection will not be considered an Adaptation (as defined below) for the purposes of this License.&lt;/p&gt;
&lt;p&gt;{{indent|4}}3. &quot;Creative Commons Compatible License&quot; means a license that is listed at http://creativecommons.org/compatiblelicenses that has been approved by Creative Commons as being essentially equivalent to this License, including, at a minimum, because that license: (i) contains terms that have the same purpose, meaning and effect as the License Elements of this License; and, (ii) explicitly permits the relicensing of adaptations of works made available under that license under this License or a Creative Commons jurisdiction license with the same License Elements as this License.&lt;/p&gt;
&lt;p&gt;{{indent|4}}4. &quot;Distribute&quot; means to make available to the public the original and copies of the Work or Adaptation, as appropriate, through sale or other transfer of ownership.&lt;/p&gt;
&lt;p&gt;{{indent|4}}5. &quot;License Elements&quot; means the following high-level license attributes as selected by Licensor and indicated in the title of this License: Attribution, ShareAlike.&lt;/p&gt;
&lt;p&gt;{{indent|4}}6. &quot;Licensor&quot; means the individual, individuals, entity or entities that offer(s) the Work under the terms of this License.&lt;/p&gt;
&lt;p&gt;{{indent|4}}7. &quot;Original Author&quot; means, in the case of a literary or artistic work, the individual, individuals, entity or entities who created the Work or if no individual or entity can be identified, the publisher; and in addition (i) in the case of a performance the actors, singers, musicians, dancers, and other persons who act, sing, deliver, declaim, play in, interpret or otherwise perform literary or artistic works or expressions of folklore; (ii) in the case of a phonogram the producer being the person or legal entity who first fixes the sounds of a performance or other sounds; and, (iii) in the case of broadcasts, the organization that transmits the broadcast.&lt;/p&gt;
&lt;p&gt;{{indent|4}}8. &quot;Work&quot; means the literary and/or artistic work offered under the terms of this License including without limitation any production in the literary, scientific and artistic domain, whatever may be the mode or form of its expression including digital form, such as a book, pamphlet and other writing; a lecture, address, sermon or other work of the same nature; a dramatic or dramatico-musical work; a choreographic work or entertainment in dumb show; a musical composition with or without words; a cinematographic work to which are assimilated works expressed by a process analogous to cinematography; a work of drawing, painting, architecture, sculpture, engraving or lithography; a photographic work to which are assimilated works expressed by a process analogous to photography; a work of applied art; an illustration, map, plan, sketch or three-dimensional work relative to geography, topography, architecture or science; a performance; a broadcast; a phonogram; a compilation of data to the extent it is protected as a copyrightable work; or a work performed by a variety or circus performer to the extent it is not otherwise considered a literary or artistic work.&lt;/p&gt;
&lt;p&gt;{{indent|4}}9. &quot;You&quot; means an individual or entity exercising rights under this License who has not previously violated the terms of this License with respect to the Work, or who has received express permission from the Licensor to exercise rights under this License despite a previous violation.&lt;/p&gt;
&lt;p&gt;{{indent|3}}10. &quot;Publicly Perform&quot; means to perform public recitations of the Work and to communicate to the public those public recitations, by any means or process, including by wire or wireless means or public digital performances; to make available to the public Works in such a way that members of the public may access these Works from a place and at a place individually chosen by them; to perform the Work to the public by any means or process and the communication to the public of the performances of the Work, including by public digital performance; to broadcast and rebroadcast the Work by any means including signs, sounds or images.&lt;/p&gt;
&lt;p&gt;{{indent|3}}11. &quot;Reproduce&quot; means to make copies of the Work by any means including without limitation by sound or visual recordings and the right of fixation and reproducing fixations of the Work, including storage of a protected performance or phonogram in digital form or other electronic medium.&lt;/p&gt;

&lt;p&gt;2. Fair Dealing Rights. Nothing in this License is intended to reduce, limit, or restrict any uses free from copyright or rights arising from limitations or exceptions that are provided for in connection with the copyright protection under copyright law or other applicable laws.&lt;/p&gt;

&lt;p&gt;3. License Grant. Subject to the terms and conditions of this License, Licensor hereby grants You a worldwide, royalty-free, non-exclusive, perpetual (for the duration of the applicable copyright) license to exercise the rights in the Work as stated below:&lt;/p&gt;

&lt;p&gt;{{indent|4}}1. to Reproduce the Work, to incorporate the Work into one or more Collections, and to Reproduce the Work as incorporated in the Collections;&lt;/p&gt;
&lt;p&gt;{{indent|4}}2. to create and Reproduce Adaptations provided that any such Adaptation, including any translation in any medium, takes reasonable steps to clearly label, demarcate or otherwise identify that changes were made to the original Work. For example, a translation could be marked &quot;The original work was translated from English to Spanish,&quot; or a modification could indicate &quot;The original work has been modified.&quot;;&lt;/p&gt;
&lt;p&gt;{{indent|4}}3. to Distribute and Publicly Perform the Work including as incorporated in Collections; and,&lt;/p&gt;
&lt;p&gt;{{indent|4}}4. to Distribute and Publicly Perform Adaptations.&lt;/p&gt;
&lt;p&gt;{{indent|3}}5. For the avoidance of doubt:&lt;/p&gt;
&lt;p&gt;{{indent|8}}1. Non-waivable Compulsory License Schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme cannot be waived, the Licensor reserves the exclusive right to collect such royalties for any exercise by You of the rights granted under this License;&lt;/p&gt;
&lt;p&gt;{{indent|8}}2. Waivable Compulsory License Schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme can be waived, the Licensor waives the exclusive right to collect such royalties for any exercise by You of the rights granted under this License; and,&lt;/p&gt;
&lt;p&gt;{{indent|8}}3. Voluntary License Schemes. The Licensor waives the right to collect royalties, whether individually or, in the event that the Licensor is a member of a collecting society that administers voluntary licensing schemes, via that society, from any exercise by You of the rights granted under this License.&lt;/p&gt;

The above rights may be exercised in all media and formats whether now known or hereafter devised. The above rights include the right to make such modifications as are technically necessary to exercise the rights in other media and formats. Subject to Section 8(f), all rights not expressly granted by Licensor are hereby reserved.

&lt;p&gt;4. Restrictions. The license granted in Section 3 above is expressly made subject to and limited by the following restrictions:&lt;/p&gt;

&lt;p&gt;{{indent|4}}1. You may Distribute or Publicly Perform the Work only under the terms of this License. You must include a copy of, or the Uniform Resource Identifier (URI) for, this License with every copy of the Work You Distribute or Publicly Perform. You may not offer or impose any terms on the Work that restrict the terms of this License or the ability of the recipient of the Work to exercise the rights granted to that recipient under the terms of the License. You may not sublicense the Work. You must keep intact all notices that refer to this License and to the disclaimer of warranties with every copy of the Work You Distribute or Publicly Perform. When You Distribute or Publicly Perform the Work, You may not impose any effective technological measures on the Work that restrict the ability of a recipient of the Work from You to exercise the rights granted to that recipient under the terms of the License. This Section 4(a) applies to the Work as incorporated in a Collection, but this does not require the Collection apart from the Work itself to be made subject to the terms of this License. If You create a Collection, upon notice from any Licensor You must, to the extent practicable, remove from the Collection any credit as required by Section 4(c), as requested. If You create an Adaptation, upon notice from any Licensor You must, to the extent practicable, remove from the Adaptation any credit as required by Section 4(c), as requested.&lt;/p&gt;
&lt;p&gt;{{indent|4}}2. You may Distribute or Publicly Perform an Adaptation only under the terms of: (i) this License; (ii) a later version of this License with the same License Elements as this License; (iii) a Creative Commons jurisdiction license (either this or a later license version) that contains the same License Elements as this License (e.g., Attribution-ShareAlike 3.0 US)); (iv) a Creative Commons Compatible License. If you license the Adaptation under one of the licenses mentioned in (iv), you must comply with the terms of that license. If you license the Adaptation under the terms of any of the licenses mentioned in (i), (ii) or (iii) (the &quot;Applicable License&quot;), you must comply with the terms of the Applicable License generally and the following provisions: (I) You must include a copy of, or the URI for, the Applicable License with every copy of each Adaptation You Distribute or Publicly Perform; (II) You may not offer or impose any terms on the Adaptation that restrict the terms of the Applicable License or the ability of the recipient of the Adaptation to exercise the rights granted to that recipient under the terms of the Applicable License; (III) You must keep intact all notices that refer to the Applicable License and to the disclaimer of warranties with every copy of the Work as included in the Adaptation You Distribute or Publicly Perform; (IV) when You Distribute or Publicly Perform the Adaptation, You may not impose any effective technological measures on the Adaptation that restrict the ability of a recipient of the Adaptation from You to exercise the rights granted to that recipient under the terms of the Applicable License. This Section 4(b) applies to the Adaptation as incorporated in a Collection, but this does not require the Collection apart from the Adaptation itself to be made subject to the terms of the Applicable License.&lt;/p&gt;
&lt;p&gt;{{indent|4}}3. If You Distribute, or Publicly Perform the Work or any Adaptations or Collections, You must, unless a request has been made pursuant to Section 4(a), keep intact all copyright notices for the Work and provide, reasonable to the medium or means You are utilizing: (i) the name of the Original Author (or pseudonym, if applicable) if supplied, and/or if the Original Author and/or Licensor designate another party or parties (e.g., a sponsor institute, publishing entity, journal) for attribution (&quot;Attribution Parties&quot;) in Licensor's copyright notice, terms of service or by other reasonable means, the name of such party or parties; (ii) the title of the Work if supplied; (iii) to the extent reasonably practicable, the URI, if any, that Licensor specifies to be associated with the Work, unless such URI does not refer to the copyright notice or licensing information for the Work; and (iv) , consistent with Ssection 3(b), in the case of an Adaptation, a credit identifying the use of the Work in the Adaptation (e.g., &quot;French translation of the Work by Original Author,&quot; or &quot;Screenplay based on original Work by Original Author&quot;). The credit required by this Section 4(c) may be implemented in any reasonable manner; provided, however, that in the case of a Adaptation or Collection, at a minimum such credit will appear, if a credit for all contributing authors of the Adaptation or Collection appears, then as part of these credits and in a manner at least as prominent as the credits for the other contributing authors. For the avoidance of doubt, You may only use the credit required by this Section for the purpose of attribution in the manner set out above and, by exercising Your rights under this License, You may not implicitly or explicitly assert or imply any connection with, sponsorship or endorsement by the Original Author, Licensor and/or Attribution Parties, as appropriate, of You or Your use of the Work, without the separate, express prior written permission of the Original Author, Licensor and/or Attribution Parties.&lt;/p&gt;
&lt;p&gt;{{indent|4}}4. Except as otherwise agreed in writing by the Licensor or as may be otherwise permitted by applicable law, if You Reproduce, Distribute or Publicly Perform the Work either by itself or as part of any Adaptations or Collections, You must not distort, mutilate, modify or take other derogatory action in relation to the Work which would be prejudicial to the Original Author's honor or reputation. Licensor agrees that in those jurisdictions (e.g. Japan), in which any exercise of the right granted in Section 3(b) of this License (the right to make Adaptations) would be deemed to be a distortion, mutilation, modification or other derogatory action prejudicial to the Original Author's honor and reputation, the Licensor will waive or not assert, as appropriate, this Section, to the fullest extent permitted by the applicable national law, to enable You to reasonably exercise Your right under Section 3(b) of this License (right to make Adaptations) but not otherwise.&lt;/p&gt;

&lt;p&gt;5. Representations, Warranties and Disclaimer&lt;/p&gt;

&lt;p&gt;UNLESS OTHERWISE MUTUALLY AGREED TO BY THE PARTIES IN WRITING, LICENSOR OFFERS THE WORK AS-IS AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE WORK, EXPRESS, IMPLIED, STATUTORY OR OTHERWISE, INCLUDING, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTIBILITY, FITNESS FOR A PARTICULAR PURPOSE, NONINFRINGEMENT, OR THE ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OF ABSENCE OF ERRORS, WHETHER OR NOT DISCOVERABLE. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO SUCH EXCLUSION MAY NOT APPLY TO YOU.&lt;/p&gt;

&lt;p&gt;6. Limitation on Liability. EXCEPT TO THE EXTENT REQUIRED BY APPLICABLE LAW, IN NO EVENT WILL LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR EXEMPLARY DAMAGES ARISING OUT OF THIS LICENSE OR THE USE OF THE WORK, EVEN IF LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.&lt;/p&gt;

&lt;p&gt;7. Termination&lt;/p&gt;

&lt;p&gt;{{indent|4}}1. This License and the rights granted hereunder will terminate automatically upon any breach by You of the terms of this License. Individuals or entities who have received Adaptations or Collections from You under this License, however, will not have their licenses terminated provided such individuals or entities remain in full compliance with those licenses. Sections 1, 2, 5, 6, 7, and 8 will survive any termination of this License.&lt;/p&gt;
&lt;p&gt;{{indent|4}}2. Subject to the above terms and conditions, the license granted here is perpetual (for the duration of the applicable copyright in the Work). Notwithstanding the above, Licensor reserves the right to release the Work under different license terms or to stop distributing the Work at any time; provided, however that any such election will not serve to withdraw this License (or any other license that has been, or is required to be, granted under the terms of this License), and this License will continue in full force and effect unless terminated as stated above.&lt;/p&gt;

&lt;p&gt;8. Miscellaneous&lt;/p&gt;

&lt;p&gt;{{indent|4}}1. Each time You Distribute or Publicly Perform the Work or a Collection, the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License.&lt;/p&gt;
&lt;p&gt;{{indent|4}}2. Each time You Distribute or Publicly Perform an Adaptation, Licensor offers to the recipient a license to the original Work on the same terms and conditions as the license granted to You under this License.&lt;/p&gt;
&lt;p&gt;{{indent|4}}3. If any provision of this License is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this License, and without further action by the parties to this agreement, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable.&lt;/p&gt;
&lt;p&gt;{{indent|4}}4. No term or provision of this License shall be deemed waived and no breach consented to unless such waiver or consent shall be in writing and signed by the party to be charged with such waiver or consent.&lt;/p&gt;
&lt;p&gt;{{indent|4}}5. This License constitutes the entire agreement between the parties with respect to the Work licensed here. There are no understandings, agreements or representations with respect to the Work not specified here. Licensor shall not be bound by any additional provisions that may appear in any communication from You. This License may not be modified without the mutual written agreement of the Licensor and You.&lt;/p&gt;
&lt;p&gt;{{indent|4}}6. The rights granted under, and the subject matter referenced, in this License were drafted utilizing the terminology of the Berne Convention for the Protection of Literary and Artistic Works (as amended on September 28, 1979), the Rome Convention of 1961, the WIPO Copyright Treaty of 1996, the WIPO Performances and Phonograms Treaty of 1996 and the Universal Copyright Convention (as revised on July 24, 1971). These rights and subject matter take effect in the relevant jurisdiction in which the License terms are sought to be enforced according to the corresponding provisions of the implementation of those treaty provisions in the applicable national law. If the standard suite of rights granted under applicable copyright law includes additional rights not granted under this License, such additional rights are deemed to be included in the License; this License is not intended to restrict the license of any rights under applicable law.&lt;/p&gt;

&lt;p&gt;{{indent|4}}Creative Commons Notice&lt;/p&gt;

&lt;p&gt;{{indent|4}}Creative Commons is not a party to this License, and makes no warranty whatsoever in connection with the Work. Creative Commons will not be liable to You or any party on any legal theory for any damages whatsoever, including without limitation any general, special, incidental or consequential damages arising in connection to this license. Notwithstanding the foregoing two (2) sentences, if Creative Commons has expressly identified itself as the Licensor hereunder, it shall have all rights and obligations of Licensor.&lt;/p&gt;

&lt;p&gt;{{indent|4}}Except for the limited purpose of indicating to the public that the Work is licensed under the CCPL, Creative Commons does not authorize the use by either party of the trademark &quot;Creative Commons&quot; or any related trademark or logo of Creative Commons without the prior written consent of Creative Commons. Any permitted use will be in compliance with Creative Commons' then-current trademark usage guidelines, as may be published on its website or otherwise made available upon request from time to time. For the avoidance of doubt, this trademark restriction does not form part of the License.&lt;/p&gt;

&lt;p&gt;{{indent|4}}Creative Commons may be contacted at http://creativecommons.org/.&lt;/p&gt;</text>
      <sha1>azjzzb386qaai81l4j4jmyl7od9f6mq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Graeme E. Smith/GFDL</title>
    <ns>2</ns>
    <id>199913</id>
    <revision>
      <id>1541214</id>
      <parentid>1541209</parentid>
      <timestamp>2009-06-21T01:16:39Z</timestamp>
      <contributor>
        <username>Graeme E. Smith</username>
        <id>169570</id>
      </contributor>
      <minor />
      <comment>reformat alphabetic lines</comment>
      <text xml:space="preserve">GNU Free Documentation License

Version 1.3, 3 November 2008

Copyright © 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;

Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.
0. PREAMBLE

The purpose of this License is to make a manual, textbook, or other functional and useful document &quot;free&quot; in the sense of freedom: to assure everyone the effective freedom to copy and redistribute it, with or without modifying it, either commercially or noncommercially. Secondarily, this License preserves for the author and publisher a way to get credit for their work, while not being considered responsible for modifications made by others.

This License is a kind of &quot;copyleft&quot;, which means that derivative works of the document must themselves be free in the same sense. It complements the GNU General Public License, which is a copyleft license designed for free software.

We have designed this License in order to use it for manuals for free software, because free software needs free documentation: a free program should come with manuals providing the same freedoms that the software does. But this License is not limited to software manuals; it can be used for any textual work, regardless of subject matter or whether it is published as a printed book. We recommend this License principally for works whose purpose is instruction or reference.
1. APPLICABILITY AND DEFINITIONS

This License applies to any manual or other work, in any medium, that contains a notice placed by the copyright holder saying it can be distributed under the terms of this License. Such a notice grants a world-wide, royalty-free license, unlimited in duration, to use that work under the conditions stated herein. The &quot;Document&quot;, below, refers to any such manual or work. Any member of the public is a licensee, and is addressed as &quot;you&quot;. You accept the license if you copy, modify or distribute the work in a way requiring permission under copyright law.

A &quot;Modified Version&quot; of the Document means any work containing the Document or a portion of it, either copied verbatim, or with modifications and/or translated into another language.

A &quot;Secondary Section&quot; is a named appendix or a front-matter section of the Document that deals exclusively with the relationship of the publishers or authors of the Document to the Document's overall subject (or to related matters) and contains nothing that could fall directly within that overall subject. (Thus, if the Document is in part a textbook of mathematics, a Secondary Section may not explain any mathematics.) The relationship could be a matter of historical connection with the subject or with related matters, or of legal, commercial, philosophical, ethical or political position regarding them.

The &quot;Invariant Sections&quot; are certain Secondary Sections whose titles are designated, as being those of Invariant Sections, in the notice that says that the Document is released under this License. If a section does not fit the above definition of Secondary then it is not allowed to be designated as Invariant. The Document may contain zero Invariant Sections. If the Document does not identify any Invariant Sections then there are none.

The &quot;Cover Texts&quot; are certain short passages of text that are listed, as Front-Cover Texts or Back-Cover Texts, in the notice that says that the Document is released under this License. A Front-Cover Text may be at most 5 words, and a Back-Cover Text may be at most 25 words.

A &quot;Transparent&quot; copy of the Document means a machine-readable copy, represented in a format whose specification is available to the general public, that is suitable for revising the document straightforwardly with generic text editors or (for images composed of pixels) generic paint programs or (for drawings) some widely available drawing editor, and that is suitable for input to text formatters or for automatic translation to a variety of formats suitable for input to text formatters. A copy made in an otherwise Transparent file format whose markup, or absence of markup, has been arranged to thwart or discourage subsequent modification by readers is not Transparent. An image format is not Transparent if used for any substantial amount of text. A copy that is not &quot;Transparent&quot; is called &quot;Opaque&quot;.

Examples of suitable formats for Transparent copies include plain ASCII without markup, Texinfo input format, LaTeX input format, SGML or XML using a publicly available DTD, and standard-conforming simple HTML, PostScript or PDF designed for human modification. Examples of transparent image formats include PNG, XCF and JPG. Opaque formats include proprietary formats that can be read and edited only by proprietary word processors, SGML or XML for which the DTD and/or processing tools are not generally available, and the machine-generated HTML, PostScript or PDF produced by some word processors for output purposes only.

The &quot;Title Page&quot; means, for a printed book, the title page itself, plus such following pages as are needed to hold, legibly, the material this License requires to appear in the title page. For works in formats which do not have any title page as such, &quot;Title Page&quot; means the text near the most prominent appearance of the work's title, preceding the beginning of the body of the text.

The &quot;publisher&quot; means any person or entity that distributes copies of the Document to the public.

A section &quot;Entitled XYZ&quot; means a named subunit of the Document whose title either is precisely XYZ or contains XYZ in parentheses following text that translates XYZ in another language. (Here XYZ stands for a specific section name mentioned below, such as &quot;Acknowledgements&quot;, &quot;Dedications&quot;, &quot;Endorsements&quot;, or &quot;History&quot;.) To &quot;Preserve the Title&quot; of such a section when you modify the Document means that it remains a section &quot;Entitled XYZ&quot; according to this definition.

The Document may include Warranty Disclaimers next to the notice which states that this License applies to the Document. These Warranty Disclaimers are considered to be included by reference in this License, but only as regards disclaiming warranties: any other implication that these Warranty Disclaimers may have is void and has no effect on the meaning of this License.
2. VERBATIM COPYING

You may copy and distribute the Document in any medium, either commercially or noncommercially, provided that this License, the copyright notices, and the license notice saying this License applies to the Document are reproduced in all copies, and that you add no other conditions whatsoever to those of this License. You may not use technical measures to obstruct or control the reading or further copying of the copies you make or distribute. However, you may accept compensation in exchange for copies. If you distribute a large enough number of copies you must also follow the conditions in section 3.

You may also lend copies, under the same conditions stated above, and you may publicly display copies.
3. COPYING IN QUANTITY

If you publish printed copies (or copies in media that commonly have printed covers) of the Document, numbering more than 100, and the Document's license notice requires Cover Texts, you must enclose the copies in covers that carry, clearly and legibly, all these Cover Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on the back cover. Both covers must also clearly and legibly identify you as the publisher of these copies. The front cover must present the full title with all words of the title equally prominent and visible. You may add other material on the covers in addition. Copying with changes limited to the covers, as long as they preserve the title of the Document and satisfy these conditions, can be treated as verbatim copying in other respects.

If the required texts for either cover are too voluminous to fit legibly, you should put the first ones listed (as many as fit reasonably) on the actual cover, and continue the rest onto adjacent pages.

If you publish or distribute Opaque copies of the Document numbering more than 100, you must either include a machine-readable Transparent copy along with each Opaque copy, or state in or with each Opaque copy a computer-network location from which the general network-using public has access to download using public-standard network protocols a complete Transparent copy of the Document, free of added material. If you use the latter option, you must take reasonably prudent steps, when you begin distribution of Opaque copies in quantity, to ensure that this Transparent copy will remain thus accessible at the stated location until at least one year after the last time you distribute an Opaque copy (directly or through your agents or retailers) of that edition to the public.

It is requested, but not required, that you contact the authors of the Document well before redistributing any large number of copies, to give them a chance to provide you with an updated version of the Document.
4. MODIFICATIONS

You may copy and distribute a Modified Version of the Document under the conditions of sections 2 and 3 above, provided that you release the Modified Version under precisely this License, with the Modified Version filling the role of the Document, thus licensing distribution and modification of the Modified Version to whoever possesses a copy of it. In addition, you must do these things in the Modified Version:

&lt;p&gt;{{indent|4}}* A. Use in the Title Page (and on the covers, if any) a title distinct from that of the Document, and from those of previous versions (which should, if there were any, be listed in the History section of the Document). You may use the same title as a previous version if the original publisher of that version gives permission.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* B. List on the Title Page, as authors, one or more persons or entities responsible for authorship of the modifications in the Modified Version, together with at least five of the principal authors of the Document (all of its principal authors, if it has fewer than five), unless they release you from this requirement.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* C. State on the Title page the name of the publisher of the Modified Version, as the publisher.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* D. Preserve all the copyright notices of the Document.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* E. Add an appropriate copyright notice for your modifications adjacent to the other copyright notices.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* F. Include, immediately after the copyright notices, a license notice giving the public permission to use the Modified Version under the terms of this License, in the form shown in the Addendum below.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* G. Preserve in that license notice the full lists of Invariant Sections and required Cover Texts given in the Document's license notice.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* H. Include an unaltered copy of this License.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* I. Preserve the section Entitled &quot;History&quot;, Preserve its Title, and add to it an item stating at least the title, year, new authors, and publisher of the Modified Version as given on the Title Page. If there is no section Entitled &quot;History&quot; in the Document, create one stating the title, year, authors, and publisher of the Document as given on its Title Page, then add an item describing the Modified Version as stated in the previous sentence.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* J. Preserve the network location, if any, given in the Document for public access to a Transparent copy of the Document, and likewise the network locations given in the Document for previous versions it was based on. These may be placed in the &quot;History&quot; section. You may omit a network location for a work that was published at least four years before the Document itself, or if the original publisher of the version it refers to gives permission.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* K. For any section Entitled &quot;Acknowledgements&quot; or &quot;Dedications&quot;, Preserve the Title of the section, and preserve in the section all the substance and tone of each of the contributor acknowledgements and/or dedications given therein.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* L. Preserve all the Invariant Sections of the Document, unaltered in their text and in their titles. Section numbers or the equivalent are not considered part of the section titles.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* M. Delete any section Entitled &quot;Endorsements&quot;. Such a section may not be included in the Modified Version.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* N. Do not retitle any existing section to be Entitled &quot;Endorsements&quot; or to conflict in title with any Invariant Section.&lt;/p&gt;
&lt;p&gt;{{indent|4}}* O. Preserve any Warranty Disclaimers.&lt;/p&gt;

If the Modified Version includes new front-matter sections or appendices that qualify as Secondary Sections and contain no material copied from the Document, you may at your option designate some or all of these sections as invariant. To do this, add their titles to the list of Invariant Sections in the Modified Version's license notice. These titles must be distinct from any other section titles.

You may add a section Entitled &quot;Endorsements&quot;, provided it contains nothing but endorsements of your Modified Version by various parties—for example, statements of peer review or that the text has been approved by an organization as the authoritative definition of a standard.

You may add a passage of up to five words as a Front-Cover Text, and a passage of up to 25 words as a Back-Cover Text, to the end of the list of Cover Texts in the Modified Version. Only one passage of Front-Cover Text and one of Back-Cover Text may be added by (or through arrangements made by) any one entity. If the Document already includes a cover text for the same cover, previously added by you or by arrangement made by the same entity you are acting on behalf of, you may not add another; but you may replace the old one, on explicit permission from the previous publisher that added the old one.

The author(s) and publisher(s) of the Document do not by this License give permission to use their names for publicity for or to assert or imply endorsement of any Modified Version.
5. COMBINING DOCUMENTS

You may combine the Document with other documents released under this License, under the terms defined in section 4 above for modified versions, provided that you include in the combination all of the Invariant Sections of all of the original documents, unmodified, and list them all as Invariant Sections of your combined work in its license notice, and that you preserve all their Warranty Disclaimers.

The combined work need only contain one copy of this License, and multiple identical Invariant Sections may be replaced with a single copy. If there are multiple Invariant Sections with the same name but different contents, make the title of each such section unique by adding at the end of it, in parentheses, the name of the original author or publisher of that section if known, or else a unique number. Make the same adjustment to the section titles in the list of Invariant Sections in the license notice of the combined work.

In the combination, you must combine any sections Entitled &quot;History&quot; in the various original documents, forming one section Entitled &quot;History&quot;; likewise combine any sections Entitled &quot;Acknowledgements&quot;, and any sections Entitled &quot;Dedications&quot;. You must delete all sections Entitled &quot;Endorsements&quot;.
6. COLLECTIONS OF DOCUMENTS

You may make a collection consisting of the Document and other documents released under this License, and replace the individual copies of this License in the various documents with a single copy that is included in the collection, provided that you follow the rules of this License for verbatim copying of each of the documents in all other respects.

You may extract a single document from such a collection, and distribute it individually under this License, provided you insert a copy of this License into the extracted document, and follow this License in all other respects regarding verbatim copying of that document.
7. AGGREGATION WITH INDEPENDENT WORKS

A compilation of the Document or its derivatives with other separate and independent documents or works, in or on a volume of a storage or distribution medium, is called an &quot;aggregate&quot; if the copyright resulting from the compilation is not used to limit the legal rights of the compilation's users beyond what the individual works permit. When the Document is included in an aggregate, this License does not apply to the other works in the aggregate which are not themselves derivative works of the Document.

If the Cover Text requirement of section 3 is applicable to these copies of the Document, then if the Document is less than one half of the entire aggregate, the Document's Cover Texts may be placed on covers that bracket the Document within the aggregate, or the electronic equivalent of covers if the Document is in electronic form. Otherwise they must appear on printed covers that bracket the whole aggregate.
8. TRANSLATION

Translation is considered a kind of modification, so you may distribute translations of the Document under the terms of section 4. Replacing Invariant Sections with translations requires special permission from their copyright holders, but you may include translations of some or all Invariant Sections in addition to the original versions of these Invariant Sections. You may include a translation of this License, and all the license notices in the Document, and any Warranty Disclaimers, provided that you also include the original English version of this License and the original versions of those notices and disclaimers. In case of a disagreement between the translation and the original version of this License or a notice or disclaimer, the original version will prevail.

If a section in the Document is Entitled &quot;Acknowledgements&quot;, &quot;Dedications&quot;, or &quot;History&quot;, the requirement (section 4) to Preserve its Title (section 1) will typically require changing the actual title.
9. TERMINATION

You may not copy, modify, sublicense, or distribute the Document except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, or distribute it is void, and will automatically terminate your rights under this License.

However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.

Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.

Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, receipt of a copy of some or all of the same material does not give you any rights to use it.
10. FUTURE REVISIONS OF THIS LICENSE

The Free Software Foundation may publish new, revised versions of the GNU Free Documentation License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. See http://www.gnu.org/copyleft/.

Each version of the License is given a distinguishing version number. If the Document specifies that a particular numbered version of this License &quot;or any later version&quot; applies to it, you have the option of following the terms and conditions either of that specified version or of any later version that has been published (not as a draft) by the Free Software Foundation. If the Document does not specify a version number of this License, you may choose any version ever published (not as a draft) by the Free Software Foundation. If the Document specifies that a proxy can decide which future versions of this License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Document.
11. RELICENSING

&quot;Massive Multiauthor Collaboration Site&quot; (or &quot;MMC Site&quot;) means any World Wide Web server that publishes copyrightable works and also provides prominent facilities for anybody to edit those works. A public wiki that anybody can edit is an example of such a server. A &quot;Massive Multiauthor Collaboration&quot; (or &quot;MMC&quot;) contained in the site means any set of copyrightable works thus published on the MMC site.

&quot;CC-BY-SA&quot; means the Creative Commons Attribution-Share Alike 3.0 license published by Creative Commons Corporation, a not-for-profit corporation with a principal place of business in San Francisco, California, as well as future copyleft versions of that license published by that same organization.

&quot;Incorporate&quot; means to publish or republish a Document, in whole or in part, as part of another Document.

An MMC is &quot;eligible for relicensing&quot; if it is licensed under this License, and if all works that were first published under this License somewhere other than this MMC, and subsequently incorporated in whole or in part into the MMC, (1) had no cover texts or invariant sections, and (2) were thus incorporated prior to November 1, 2008.

The operator of an MMC Site may republish an MMC contained in the site under CC-BY-SA on the same site at any time before August 1, 2009, provided the MMC is eligible for relicensing.
ADDENDUM: How to use this License for your documents

To use this License in a document you have written, include a copy of the License in the document and put the following copyright and license notices just after the title page:

    Copyright (C)  YEAR  YOUR NAME.
    Permission is granted to copy, distribute and/or modify this document
    under the terms of the GNU Free Documentation License, Version 1.3
    or any later version published by the Free Software Foundation;
    with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
    A copy of the license is included in the section entitled &quot;GNU
    Free Documentation License&quot;.

If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts, replace the &quot;with … Texts.&quot; line with this:

    with the Invariant Sections being LIST THEIR TITLES, with the
    Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.

If you have Invariant Sections without Cover Texts, or some other combination of the three, merge those two alternatives to suit the situation.

If your document contains nontrivial examples of program code, we recommend releasing these examples in parallel under your choice of free software license, such as the GNU General Public License, to permit their use in free software.</text>
      <sha1>ktirg9flbilhf8ir4co5gqr47an9lsu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Smoky Chipotle Hot Sauce</title>
    <ns>102</ns>
    <id>199914</id>
    <revision>
      <id>2690607</id>
      <parentid>1838980</parentid>
      <timestamp>2014-08-12T00:07:39Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1/4 cup chipotle puree
* 1/2 cup tomato paste
* 3 tbsp malt vinegar
* 1/2 tsp salt

== Procedure ==
#Combine all ingredients and store in a nonreactive container at room temperature for up to 2 months.

[[Category:Chile recipes]]
[[Category:Sauce recipes]]
[[Category:Tomato recipes]]</text>
      <sha1>cdtdpi6x7lj21yhxhm2rf00af6wu5ro</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Heat Matter:Thermal Properties of Materials</title>
    <ns>0</ns>
    <id>199915</id>
    <redirect title="FHSST Physics/Heat and Properties of Matter/Thermal Properties" />
    <revision>
      <id>1541234</id>
      <timestamp>2009-06-21T01:55:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Heat Matter:Thermal Properties of Materials]] to [[FHSST Physics/Heat and Properties of Matter/Thermal Properties]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Heat and Properties of Matter/Thermal Properties]]</text>
      <sha1>1vh1d386wyhrw2mqdegq1b7d2b9i5t3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Heat Matter:Important Equations and Quantities</title>
    <ns>0</ns>
    <id>199916</id>
    <redirect title="FHSST Physics/Heat and Properties of Matter/Summary" />
    <revision>
      <id>1541237</id>
      <timestamp>2009-06-21T01:56:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Heat Matter:Important Equations and Quantities]] to [[FHSST Physics/Heat and Properties of Matter/Summary]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Heat and Properties of Matter/Summary]]</text>
      <sha1>sr7praqjxl195t27ytddfbc7t2wlsy2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Smoky Chipotle Glazed Hot Wings</title>
    <ns>102</ns>
    <id>199917</id>
    <revision>
      <id>2690606</id>
      <parentid>1838981</parentid>
      <timestamp>2014-08-12T00:06:47Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 24 wingettes
* 2 tsp soy sauce
* 6 tbsp [[Cookbook:Smoky Chipotle Hot Sauce|Smoky Chipotle Hot Sauce]]
* 6 tbsp butter, melted
* 3 cloves garlic, minced
* Oil for deep frying

== Procedure ==
#Heat oil to 350°. Fry wings in batches 12 minutes. Drain on a rack.
#Combine remaining ingredients, add wings, and toss to coat. Serve.

[[Category:Chicken wing recipes]]
[[Category:Deep fried recipes]]
[[Category:Main course recipes]]</text>
      <sha1>9cpfbn8wyfi1mw0bzjvmevpn2jwi880</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electrostatics:Electrostatics</title>
    <ns>0</ns>
    <id>199918</id>
    <redirect title="FHSST Physics/Electrostatics" />
    <revision>
      <id>1541245</id>
      <timestamp>2009-06-21T02:06:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electrostatics:Electrostatics]] to [[FHSST Physics/Electrostatics]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electrostatics]]</text>
      <sha1>0l3v5dbcfbnfvnow0a70zsdufny6h0s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics ElectroSt</title>
    <ns>10</ns>
    <id>199919</id>
    <redirect title="Template:FHSST Physics/Electrostatics" />
    <revision>
      <id>1541247</id>
      <timestamp>2009-06-21T02:07:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics ElectroSt]] to [[Template:FHSST Physics/Electrostatics]]: Naming convention.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Electrostatics]]</text>
      <sha1>75cr4yiwm9aimyhfdmarzoqstyfi9rz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Graeme E. Smith/Collections/Model Series/Datamining/Copyright Page</title>
    <ns>2</ns>
    <id>199920</id>
    <revision>
      <id>1545508</id>
      <parentid>1545501</parentid>
      <timestamp>2009-06-23T15:19:21Z</timestamp>
      <contributor>
        <username>Graeme E. Smith</username>
        <id>169570</id>
      </contributor>
      <minor />
      <comment>try again</comment>
      <text xml:space="preserve">&lt;div style=&quot;height:24pt&quot;&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:center;font-size:120%;font-weight:bold;&quot;&gt; Copyright © 2009, Graeme E. Smith&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;Permission is granted to copy, distribute and/or modify this docuemnt&lt;/P&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;under the terms of the GNU Free Document License version 1.3&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;or any later version published by the Free Software Foundation&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;with no invariant sections no front cover texts and no back cover texts&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;A copy of the license is included in the section entitled &quot;GFDL&quot;.&lt;/p&gt;
&lt;div style=&quot;height:24pt&quot;&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;-OR-&lt;/p&gt;
&lt;div style=&quot;height:24pt&quot;&gt;&lt;/div&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;Permission is granted to share and make derivative works&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;under the Creative Commons Attribution Share-Alike Unported version 3.0&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;license, provided you properly attribute it, and distribute it under a license&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;compatible with this one. A copy of the license is included in the section&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt; entitled &quot;CC-By-SA-3.0&quot;.&lt;/p&gt;&lt;br&gt;&lt;br&gt;

{{indent|8}}ISBN :

&lt;div style=&quot;height:24pt&quot;&gt;&lt;/div&gt;
{{indent|8}}Library Codes:

&lt;div style=&quot;height:24pt&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;height:24pt&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;height:24pt&quot;&gt;&lt;/div&gt;

{{indent|8}}Printed in 

&lt;div style=&quot;height:24pt&quot;&gt;&lt;/div&gt;

{{indent|8}}xxx xx x 0 1 2 3 4 5 6 7 8 9</text>
      <sha1>ozm4nky3flrkvlx3e85s13eegt25g8m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electrostatics:What is Electrostatics</title>
    <ns>0</ns>
    <id>199921</id>
    <redirect title="FHSST Physics/Electrostatics/Definition" />
    <revision>
      <id>1541252</id>
      <timestamp>2009-06-21T02:10:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electrostatics:What is Electrostatics]] to [[FHSST Physics/Electrostatics/Definition]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electrostatics/Definition]]</text>
      <sha1>l8im7r8kw5mpt56tt5n2rqkml29eias</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electrostatics:Electrostatic Force</title>
    <ns>0</ns>
    <id>199924</id>
    <redirect title="FHSST Physics/Electrostatics/Electrostatic Force" />
    <revision>
      <id>1541265</id>
      <timestamp>2009-06-21T02:16:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electrostatics:Electrostatic Force]] to [[FHSST Physics/Electrostatics/Electrostatic Force]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electrostatics/Electrostatic Force]]</text>
      <sha1>d1ns21kzgajp5koljhz81jwl9bc9f90</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Electrostatics:Electrostatic Force</title>
    <ns>1</ns>
    <id>199925</id>
    <redirect title="Talk:FHSST Physics/Electrostatics/Electrostatic Force" />
    <revision>
      <id>1541267</id>
      <timestamp>2009-06-21T02:16:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Electrostatics:Electrostatic Force]] to [[Talk:FHSST Physics/Electrostatics/Electrostatic Force]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Electrostatics/Electrostatic Force]]</text>
      <sha1>pfm8zekmx6qev7jqsc06r0qu44ryuui</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electrostatics:Electric Fields</title>
    <ns>0</ns>
    <id>199926</id>
    <redirect title="FHSST Physics/Electrostatics/Electric Fields" />
    <revision>
      <id>1541271</id>
      <timestamp>2009-06-21T02:16:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electrostatics:Electric Fields]] to [[FHSST Physics/Electrostatics/Electric Fields]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electrostatics/Electric Fields]]</text>
      <sha1>ksv25fb0mmq3kmbakvcxdz3tw2fa6d7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electrostatics:Electrical Potential</title>
    <ns>0</ns>
    <id>199927</id>
    <redirect title="FHSST Physics/Electrostatics/Electrical Potential" />
    <revision>
      <id>1541275</id>
      <timestamp>2009-06-21T02:17:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electrostatics:Electrical Potential]] to [[FHSST Physics/Electrostatics/Electrical Potential]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electrostatics/Electrical Potential]]</text>
      <sha1>4jo1i5uebjjt1b095tplbri1zmhedh2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electrostatics:Important Equations and Quantities</title>
    <ns>0</ns>
    <id>199928</id>
    <redirect title="FHSST Physics/Electrostatics/Summary" />
    <revision>
      <id>1541278</id>
      <timestamp>2009-06-21T02:18:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electrostatics:Important Equations and Quantities]] to [[FHSST Physics/Electrostatics/Summary]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electrostatics/Summary]]</text>
      <sha1>na8wmeg1kawzjwbux6t9u8elmblub89</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:222.127.223.75</title>
    <ns>3</ns>
    <id>199929</id>
    <revision>
      <id>1541282</id>
      <timestamp>2009-06-21T02:20:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/222.127.223.75|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 02:20, 21 June 2009 (UTC)}}</text>
      <sha1>szn2fdiqajb4k514n8er8f9taqzbxkq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:Electricity</title>
    <ns>0</ns>
    <id>199930</id>
    <redirect title="FHSST Physics/Electricity" />
    <revision>
      <id>1541285</id>
      <timestamp>2009-06-21T02:22:49Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:Electricity]] to [[FHSST Physics/Electricity]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity]]</text>
      <sha1>9etoh3x6on70kh814rxkiaiqqpcnnrk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics Electricity</title>
    <ns>10</ns>
    <id>199931</id>
    <redirect title="Template:FHSST Physics/Electricity" />
    <revision>
      <id>1541287</id>
      <timestamp>2009-06-21T02:23:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics Electricity]] to [[Template:FHSST Physics/Electricity]]: Naming convention.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Electricity]]</text>
      <sha1>stam5hbajdf27jh99f773mxs6zp4j9w</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:Flow of Charge</title>
    <ns>0</ns>
    <id>199932</id>
    <redirect title="FHSST Physics/Electricity/Flow of Charge" />
    <revision>
      <id>1541293</id>
      <timestamp>2009-06-21T02:26:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:Flow of Charge]] to [[FHSST Physics/Electricity/Flow of Charge]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/Flow of Charge]]</text>
      <sha1>a8k2yjfq9rey9cijbmgx2sus11jllih</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:Circuits</title>
    <ns>0</ns>
    <id>199933</id>
    <redirect title="FHSST Physics/Electricity/Circuits" />
    <revision>
      <id>1541297</id>
      <timestamp>2009-06-21T02:26:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:Circuits]] to [[FHSST Physics/Electricity/Circuits]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/Circuits]]</text>
      <sha1>sxo5m0byju3q70rblumkymo3nzrqyh2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:Voltage and current</title>
    <ns>0</ns>
    <id>199934</id>
    <redirect title="FHSST Physics/Electricity/Voltage and Current" />
    <revision>
      <id>1541301</id>
      <timestamp>2009-06-21T02:27:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:Voltage and current]] to [[FHSST Physics/Electricity/Voltage and Current]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/Voltage and Current]]</text>
      <sha1>j66vqldfkacbhzi1wf5gg5qn9yea633</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:Resistance</title>
    <ns>0</ns>
    <id>199935</id>
    <redirect title="FHSST Physics/Electricity/Resistance" />
    <revision>
      <id>1541304</id>
      <timestamp>2009-06-21T02:28:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:Resistance]] to [[FHSST Physics/Electricity/Resistance]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/Resistance]]</text>
      <sha1>be5vw67zv10oypnmmtspibjid4epprk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:How voltage, current, and resistance relate</title>
    <ns>0</ns>
    <id>199937</id>
    <redirect title="FHSST Physics/Electricity/How Voltage, Current, and Resistance Relate" />
    <revision>
      <id>1541310</id>
      <timestamp>2009-06-21T02:30:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:How voltage, current, and resistance relate]] to [[FHSST Physics/Electricity/How Voltage, Current, and Resistance Relate]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/How Voltage, Current, and Resistance Relate]]</text>
      <sha1>jc0dm5vdu0lar72w7g99a0x25xkber8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:An analogy for Ohm's Law</title>
    <ns>0</ns>
    <id>199938</id>
    <redirect title="FHSST Physics/Electricity/Ohm&#039;s Law Analogy" />
    <revision>
      <id>1541313</id>
      <timestamp>2009-06-21T02:31:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:An analogy for Ohm's Law]] to [[FHSST Physics/Electricity/Ohm's Law Analogy]]: Subpage notation and better name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/Ohm's Law Analogy]]</text>
      <sha1>a6z6mdv57s7vrmx95jqmlhfr40m2wl2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:Calculating electric power</title>
    <ns>0</ns>
    <id>199940</id>
    <redirect title="FHSST Physics/Electricity/Calculating Electric Power" />
    <revision>
      <id>1541318</id>
      <timestamp>2009-06-21T02:33:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:Calculating electric power]] to [[FHSST Physics/Electricity/Calculating Electric Power]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/Calculating Electric Power]]</text>
      <sha1>r25xg45srk0fcxp59bm05p11wvkpzh5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Electricity:Calculating electric power</title>
    <ns>1</ns>
    <id>199941</id>
    <redirect title="Talk:FHSST Physics/Electricity/Calculating Electric Power" />
    <revision>
      <id>1541320</id>
      <timestamp>2009-06-21T02:33:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Electricity:Calculating electric power]] to [[Talk:FHSST Physics/Electricity/Calculating Electric Power]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Electricity/Calculating Electric Power]]</text>
      <sha1>c35lgeiypzt0qxc7578i0vtx126uljt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:Resistors</title>
    <ns>0</ns>
    <id>199942</id>
    <redirect title="FHSST Physics/Electricity/Resistors" />
    <revision>
      <id>1541323</id>
      <timestamp>2009-06-21T02:33:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:Resistors]] to [[FHSST Physics/Electricity/Resistors]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/Resistors]]</text>
      <sha1>31scqkbhhnlrhc4e6di08ngoa3ee0g4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Whiskey Barbecue Sauce</title>
    <ns>102</ns>
    <id>199943</id>
    <revision>
      <id>2692046</id>
      <parentid>1744447</parentid>
      <timestamp>2014-08-16T19:04:30Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 2 cups whiskey
* 1 cup ketchup
* 1/4 cup Worcestershire sauce
* 1/4 cup soy sauce
* 1/4 cup cider vinegar
* 1/4 cup chicken broth

== Procedure ==
#Combine all ingredients in a large saucepan. Bring to a boil over high heat and cook, stirring, 10 minutes.
#Refrigerate in a nonreactive container for up to 2 months.

[[Category:Barbecue sauce recipes]]
[[Category:Alcoholic beverage related recipes]]
[[Category:Boiled recipes]]
[[Category:Refrigerated recipes]]</text>
      <sha1>7k90rsrzuna30j8yj20gvlbzxojv2ur</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Southern Barbecue Ribs</title>
    <ns>102</ns>
    <id>199946</id>
    <revision>
      <id>2690623</id>
      <parentid>1842659</parentid>
      <timestamp>2014-08-12T00:52:50Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 2 slabs St. Louis style/cut pork spareribs
* 6 tbsp [[Cookbook:Barbecue Rub|Barbecue Rub]]
* 1 cup [[Cookbook:Kansas City Barbecue Sauce|Kansas City Barbecue Sauce]]
* Apple wood chunks

== Procedure ==
#Season ribs with Rub. Refrigerate for at least 1 hour.
#Place chunks into the firebox of a 250° smoker '''''or''''' the coal area of a 250° charcoal grill set for indirect heat.
#Place ribs into food box or on top of the grate of the charcoal grill, cover, and cook, basting with sauce often for 5-6 hours.
#Brush sauce generously on top and bottom of ribs then place on a medium high grill, continually brushing with sauce until well browned, then flip and repeat 1 more time. Place remaining sauce into a squirt bottle. Meanwhile, remove ribs and let rest for 10 minutes. Serve with sauce in a squirt bottle.

[[Category:Pork recipes]]
[[Category:Grilled recipes]]
[[Category:Barbecue recipes]]
[[Category:Main course recipes]]</text>
      <sha1>jhcu92g6qg06q0e1b64f4espsf7gv8r</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:Polarity of voltage drops</title>
    <ns>0</ns>
    <id>199947</id>
    <redirect title="FHSST Physics/Electricity/Polarity of Voltage Drops" />
    <revision>
      <id>1541347</id>
      <timestamp>2009-06-21T02:49:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:Polarity of voltage drops]] to [[FHSST Physics/Electricity/Polarity of Voltage Drops]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/Polarity of Voltage Drops]]</text>
      <sha1>s16d9tp9fx8gdnq0by0suewdva9gl5i</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:What are series and parallel circuits</title>
    <ns>0</ns>
    <id>199948</id>
    <redirect title="FHSST Physics/Electricity/Series and Parallel" />
    <revision>
      <id>1541350</id>
      <timestamp>2009-06-21T02:52:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:What are series and parallel circuits]] to [[FHSST Physics/Electricity/Series and Parallel]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/Series and Parallel]]</text>
      <sha1>gxyro6jn5x8fbbh8nw36ce9p5bwzx82</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:Simple series circuits</title>
    <ns>0</ns>
    <id>199949</id>
    <redirect title="FHSST Physics/Electricity/Simple Series Circuits" />
    <revision>
      <id>1541353</id>
      <timestamp>2009-06-21T02:53:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:Simple series circuits]] to [[FHSST Physics/Electricity/Simple Series Circuits]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/Simple Series Circuits]]</text>
      <sha1>i8zxsi7mc64h58cm2a0lqy00tsqf5fu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Electricity:Simple series circuits</title>
    <ns>1</ns>
    <id>199950</id>
    <redirect title="Talk:FHSST Physics/Electricity/Simple Series Circuits" />
    <revision>
      <id>1541355</id>
      <timestamp>2009-06-21T02:53:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Electricity:Simple series circuits]] to [[Talk:FHSST Physics/Electricity/Simple Series Circuits]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Electricity/Simple Series Circuits]]</text>
      <sha1>gv9wreznfjd1nvhkk1bpkg02vxlv9md</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:Power calculations</title>
    <ns>0</ns>
    <id>199952</id>
    <redirect title="FHSST Physics/Electricity/Power Calculations" />
    <revision>
      <id>1541365</id>
      <timestamp>2009-06-21T03:00:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:Power calculations]] to [[FHSST Physics/Electricity/Power Calculations]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/Power Calculations]]</text>
      <sha1>bnc3jvu679zdqk5hyo6b3p1aixddunl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:Conductor size</title>
    <ns>0</ns>
    <id>199954</id>
    <redirect title="FHSST Physics/Electricity/Conductor Size" />
    <revision>
      <id>1541371</id>
      <timestamp>2009-06-21T03:02:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:Conductor size]] to [[FHSST Physics/Electricity/Conductor Size]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/Conductor Size]]</text>
      <sha1>7bta1tz1mokj04fmvdzv0hhohwg4bjm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Asian Barbecue Ribs</title>
    <ns>102</ns>
    <id>199956</id>
    <revision>
      <id>2679831</id>
      <parentid>2678492</parentid>
      <timestamp>2014-07-09T02:40:09Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Adjusted categories slightly.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
:2 slabs St. Louis style/cut pork spareribs
:6 tbsp [[Cookbook:Barbecue Rub|Barbecue Rub]]
:1/4 cup soy sauce
:1/4 cup hoisin sauce
:1/2 cup sake
:3 tbsp honey
:1 tbsp mirin
:Dry hickory chunks

== Directions ==
#Peel off thin membrane on each rib. Season ribs with Rub and refrigerate for at least 1 hour.
#Place chunks in the firebox of a 250°F (120°C) smoker.
#Combine remaining ingredients in a large sauce pan over high heat and bring to a boil. Cook, stirring occasionally, for 5 minutes or until slightly thickened. Set aside.
#Place ribs in smoker and cook for 5-6 hours, brushing with soy mixture often.
#Brush meat sides generously with soy mixture and place under a preheated broiler until deeply browned. '''Watch carefully or it will burn!'''
# Slice into 1-rib portions and serve.

[[Category:Asian recipes]]
[[Category:Pork recipes]]
[[Category:Smoked recipes]]
[[Category:Main course recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>la20cu2sbywctmsubh01vu77gv2e0h4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electricity:Important Equations and Quantities</title>
    <ns>0</ns>
    <id>199957</id>
    <redirect title="FHSST Physics/Electricity/Summary" />
    <revision>
      <id>1541378</id>
      <timestamp>2009-06-21T03:04:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electricity:Important Equations and Quantities]] to [[FHSST Physics/Electricity/Summary]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electricity/Summary]]</text>
      <sha1>5f7sj2aoo0wk86jy3fqc4b05vnlfi1p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Tequilla Lime Strip Steak</title>
    <ns>102</ns>
    <id>199958</id>
    <revision>
      <id>2691692</id>
      <parentid>1884178</parentid>
      <timestamp>2014-08-15T23:06:35Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.  Adjusted text.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
*2 thick cut strip steaks
*3 Tbsp [[Cookbook:Steak Rub|Steak Rub]]
*1/3 cup tequila
*Juice of two limes
*1/2 cup extra-virgin olive oil
*1 tsp salt (do not leave this out!)
*1/2 cup soaked mesquite chips

== Procedure ==
#Combine liquid ingredients and salt in a gallon zip-top freezer bag. Add steaks and squeeze as much air out as possible. Refrigerate for at least 2 hours.
#Remove steaks from marinade and discard extra. Place Rub in a pie pan and add steaks, pressing lightly to help adhesion on both sides.
#Spray cold grill grate with nonstick cooking spray. Set up for direct and indirect heat and add some soaked mesquite chips to the coals.
#Place steaks on hottest part of grill and cook for 2-3 minutes per side. Move to the cooler part of the grill and cook, turning once, until internal temperature reaches 10° cooler than your preferred doneness. Remove and let rest for 7 minutes. Slice thinly across the grain on a bias and serve.

[[Category:Beef recipes]]
[[Category:Alcoholic beverage related recipes]]
[[Category:Grilled recipes]]
[[Category:Lime recipes]]
[[Category:Main course recipes]]</text>
      <sha1>qti0w0aearnn6muxknr342cskh958o9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics ElecMag</title>
    <ns>10</ns>
    <id>199960</id>
    <redirect title="Template:FHSST Physics/Magnets and Electromagnetism" />
    <revision>
      <id>1541388</id>
      <timestamp>2009-06-21T03:31:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics ElecMag]] to [[Template:FHSST Physics/Magnets and Electromagnetism]]: Naming convention.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Magnets and Electromagnetism]]</text>
      <sha1>3z1fhppf5xs3qjwagc24tumh8pw0x0h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electromagnetism:Permanent magnets</title>
    <ns>0</ns>
    <id>199961</id>
    <redirect title="FHSST Physics/Magnets and Electromagnetism/Permanent Magnets" />
    <revision>
      <id>1541392</id>
      <timestamp>2009-06-21T03:33:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electromagnetism:Permanent magnets]] to [[FHSST Physics/Magnets and Electromagnetism/Permanent Magnets]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Magnets and Electromagnetism/Permanent Magnets]]</text>
      <sha1>8piwwmodhppxikj3m0gydca61il75ks</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electromagnetism:Electromagnetism</title>
    <ns>0</ns>
    <id>199962</id>
    <redirect title="FHSST Physics/Magnets and Electromagnetism/Electromagnetism" />
    <revision>
      <id>1541395</id>
      <timestamp>2009-06-21T03:34:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electromagnetism:Electromagnetism]] to [[FHSST Physics/Magnets and Electromagnetism/Electromagnetism]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Magnets and Electromagnetism/Electromagnetism]]</text>
      <sha1>4xehg65s3g2o67nfypusfa9xhkqf9eb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electromagnetism:Magnetic units of measurement</title>
    <ns>0</ns>
    <id>199963</id>
    <redirect title="FHSST Physics/Magnets and Electromagnetism/Magnetic Units of Measurement" />
    <revision>
      <id>1541398</id>
      <timestamp>2009-06-21T03:35:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electromagnetism:Magnetic units of measurement]] to [[FHSST Physics/Magnets and Electromagnetism/Magnetic Units of Measurement]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Magnets and Electromagnetism/Magnetic Units of Measurement]]</text>
      <sha1>o2uzs13kmiap8hrdcqmmku7irkhwk9a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electromagnetism:AC</title>
    <ns>0</ns>
    <id>199965</id>
    <redirect title="FHSST Physics/Magnets and Electromagnetism/Alternating Current" />
    <revision>
      <id>1541411</id>
      <parentid>1541404</parentid>
      <timestamp>2009-06-21T03:37:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Magnets and Electromagnetism/Alternating Current]]</text>
      <sha1>izig5gn3cwq8psx7fo3b22uzlc9u5ql</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Electromagnetism:AC</title>
    <ns>1</ns>
    <id>199966</id>
    <redirect title="Talk:FHSST Physics/Magnets and Electromagnetism/Alternating Current" />
    <revision>
      <id>1541412</id>
      <parentid>1541406</parentid>
      <timestamp>2009-06-21T03:38:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Magnets and Electromagnetism/Alternating Current]]</text>
      <sha1>dxj3xgt319l5lue7br4trpb2278i22b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electromagnetism:Measurements of AC magnitude</title>
    <ns>0</ns>
    <id>199969</id>
    <redirect title="FHSST Physics/Magnets and Electromagnetism/Measurements of AC Magnitude" />
    <revision>
      <id>1541415</id>
      <timestamp>2009-06-21T03:39:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electromagnetism:Measurements of AC magnitude]] to [[FHSST Physics/Magnets and Electromagnetism/Measurements of AC Magnitude]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Magnets and Electromagnetism/Measurements of AC Magnitude]]</text>
      <sha1>ighrqyh0hv81nd1db7m6yubrhm9qku0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electronics:Electronics</title>
    <ns>0</ns>
    <id>199970</id>
    <redirect title="FHSST Physics/Electronics" />
    <revision>
      <id>1541433</id>
      <timestamp>2009-06-21T04:17:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electronics:Electronics]] to [[FHSST Physics/Electronics]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electronics]]</text>
      <sha1>9zghq9zco69lcy1niwnrgbp8t4gt2j7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics ElecTr</title>
    <ns>10</ns>
    <id>199971</id>
    <redirect title="Template:FHSST Physics/Electronics" />
    <revision>
      <id>1541435</id>
      <timestamp>2009-06-21T04:17:49Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics ElecTr]] to [[Template:FHSST Physics/Electronics]]: Naming convention.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Electronics]]</text>
      <sha1>evzzrylxu05luvcm22nb7qyuma5yztw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electronics:filters and signal tuning</title>
    <ns>0</ns>
    <id>199973</id>
    <redirect title="FHSST Physics/Electronics/Filters and Signal Tuning" />
    <revision>
      <id>1541443</id>
      <timestamp>2009-06-21T04:23:17Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electronics:filters and signal tuning]] to [[FHSST Physics/Electronics/Filters and Signal Tuning]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electronics/Filters and Signal Tuning]]</text>
      <sha1>o2b48d20rhfkrcvb7sqlgle7f2cn8hw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electronics:active circuit elements</title>
    <ns>0</ns>
    <id>199974</id>
    <redirect title="FHSST Physics/Electronics/Active Circuit Elements" />
    <revision>
      <id>1541446</id>
      <timestamp>2009-06-21T04:24:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electronics:active circuit elements]] to [[FHSST Physics/Electronics/Active Circuit Elements]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electronics/Active Circuit Elements]]</text>
      <sha1>kq9zrvudmwihkb1zjlls9go683ngkzs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Electronics:principles of digital electronics - logical gates</title>
    <ns>0</ns>
    <id>199975</id>
    <redirect title="FHSST Physics/Electronics/Logical Gates" />
    <revision>
      <id>1541450</id>
      <timestamp>2009-06-21T04:25:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Electronics:principles of digital electronics - logical gates]] to [[FHSST Physics/Electronics/Logical Gates]]: Subpage notation and shortened link name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Electronics/Logical Gates]]</text>
      <sha1>k1p9b9g09rfmrs07juvy4e7ggis88ka</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics Atom</title>
    <ns>10</ns>
    <id>199978</id>
    <redirect title="Template:FHSST Physics/Atom" />
    <revision>
      <id>1541463</id>
      <timestamp>2009-06-21T04:34:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics Atom]] to [[Template:FHSST Physics/Atom]]: Naming convention.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Atom]]</text>
      <sha1>app68lvytnw4pum8uq6xx0ws2e1cb2n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Atom:Models of the Atom</title>
    <ns>0</ns>
    <id>199979</id>
    <redirect title="FHSST Physics/Atom/Models" />
    <revision>
      <id>1541466</id>
      <timestamp>2009-06-21T04:35:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Atom:Models of the Atom]] to [[FHSST Physics/Atom/Models]]: Subpage notation and less redundancy.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atom/Models]]</text>
      <sha1>498roc31q2ztjo1z1itxkmpsqsvqj44</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Atom:Bohr orbits</title>
    <ns>0</ns>
    <id>199985</id>
    <redirect title="FHSST Physics/Atom/Bohr Orbits" />
    <revision>
      <id>1541485</id>
      <timestamp>2009-06-21T04:43:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Atom:Bohr orbits]] to [[FHSST Physics/Atom/Bohr Orbits]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atom/Bohr Orbits]]</text>
      <sha1>2g5k1tzj31gcd444az4be4clmr5rj23</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Modern Physics:Modern Physics</title>
    <ns>0</ns>
    <id>199993</id>
    <redirect title="FHSST Physics/Modern Physics" />
    <revision>
      <id>1541514</id>
      <timestamp>2009-06-21T04:54:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Modern Physics:Modern Physics]] to [[FHSST Physics/Modern Physics]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Modern Physics]]</text>
      <sha1>hd4n43gxe2ryg860ib685vaypnunjwj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics ModPhy</title>
    <ns>10</ns>
    <id>199994</id>
    <redirect title="Template:FHSST Physics/Modern Physics" />
    <revision>
      <id>1541516</id>
      <timestamp>2009-06-21T04:55:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics ModPhy]] to [[Template:FHSST Physics/Modern Physics]]: Naming convention.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Modern Physics]]</text>
      <sha1>dk5xg4gnp7m3ww7zsctlgv13o6j3i08</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Modern Physics:Introduction to the idea of a quantum</title>
    <ns>0</ns>
    <id>199995</id>
    <redirect title="FHSST Physics/Modern Physics/Quantum Introduction" />
    <revision>
      <id>1541520</id>
      <timestamp>2009-06-21T04:58:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Modern Physics:Introduction to the idea of a quantum]] to [[FHSST Physics/Modern Physics/Quantum Introduction]]: Subpage notation and shortened link</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Modern Physics/Quantum Introduction]]</text>
      <sha1>mtcyb8vpvnj14jgmi6s5qin72jdnvyp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Modern Physics:Introduction to the idea of a quantum</title>
    <ns>1</ns>
    <id>199996</id>
    <redirect title="Talk:FHSST Physics/Modern Physics/Quantum Introduction" />
    <revision>
      <id>1541522</id>
      <timestamp>2009-06-21T04:58:01Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Modern Physics:Introduction to the idea of a quantum]] to [[Talk:FHSST Physics/Modern Physics/Quantum Introduction]]: Subpage notation and shortened link</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Modern Physics/Quantum Introduction]]</text>
      <sha1>gn4ehi79edubx9yqw3wud5em50qwuj6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Modern Physics:The wave-particle duality</title>
    <ns>0</ns>
    <id>199997</id>
    <redirect title="FHSST Physics/Modern Physics/Wave-particle Duality" />
    <revision>
      <id>1541525</id>
      <timestamp>2009-06-21T04:58:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Modern Physics:The wave-particle duality]] to [[FHSST Physics/Modern Physics/Wave-particle Duality]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Modern Physics/Wave-particle Duality]]</text>
      <sha1>1qoeki564n5y6xresv025uodcrgkmv3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Modern Physics:The wave-particle duality</title>
    <ns>1</ns>
    <id>199998</id>
    <redirect title="Talk:FHSST Physics/Modern Physics/Wave-particle Duality" />
    <revision>
      <id>1541527</id>
      <timestamp>2009-06-21T04:58:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Modern Physics:The wave-particle duality]] to [[Talk:FHSST Physics/Modern Physics/Wave-particle Duality]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Modern Physics/Wave-particle Duality]]</text>
      <sha1>8isisxh1ockg7ubrusiruy28jjb0f4e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics atomic nucleus:Inside atomic nucleus</title>
    <ns>0</ns>
    <id>199999</id>
    <redirect title="FHSST Physics/Atomic Nucleus" />
    <revision>
      <id>1541534</id>
      <timestamp>2009-06-21T05:01:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics atomic nucleus:Inside atomic nucleus]] to [[FHSST Physics/Atomic Nucleus]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atomic Nucleus]]</text>
      <sha1>a2k60m0l8azswt1xp6s3xl9i2zi82rc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics AtomNucl</title>
    <ns>10</ns>
    <id>200000</id>
    <redirect title="Template:FHSST Physics/Atomic Nucleus" />
    <revision>
      <id>1541536</id>
      <timestamp>2009-06-21T05:02:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics AtomNucl]] to [[Template:FHSST Physics/Atomic Nucleus]]: Naming convention.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Atomic Nucleus]]</text>
      <sha1>d4vsu4fgit1anh7l3jg6o7n4c7osdh2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics atomic nucleus:What the atom is made of</title>
    <ns>0</ns>
    <id>200001</id>
    <redirect title="FHSST Physics/Atomic Nucleus/Composition" />
    <revision>
      <id>1541542</id>
      <timestamp>2009-06-21T05:05:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics atomic nucleus:What the atom is made of]] to [[FHSST Physics/Atomic Nucleus/Composition]]: Subpage notation and better name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atomic Nucleus/Composition]]</text>
      <sha1>cnw35xa3u79z4685w9hrjpdrt5hudrx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics atomic nucleus:What the atom is made of</title>
    <ns>1</ns>
    <id>200002</id>
    <redirect title="Talk:FHSST Physics/Atomic Nucleus/Composition" />
    <revision>
      <id>1541544</id>
      <timestamp>2009-06-21T05:05:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics atomic nucleus:What the atom is made of]] to [[Talk:FHSST Physics/Atomic Nucleus/Composition]]: Subpage notation and better name.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Atomic Nucleus/Composition]]</text>
      <sha1>3t7w185a4ni2iow4q8035hn8r0xu521</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics atomic nucleus:Nucleus</title>
    <ns>0</ns>
    <id>200003</id>
    <redirect title="FHSST Physics/Atomic Nucleus/Nucleus" />
    <revision>
      <id>1541547</id>
      <timestamp>2009-06-21T05:08:01Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics atomic nucleus:Nucleus]] to [[FHSST Physics/Atomic Nucleus/Nucleus]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atomic Nucleus/Nucleus]]</text>
      <sha1>rfn7qe3sl3ie4ww74pt84yobekf650h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics atomic nucleus:Nuclear force</title>
    <ns>0</ns>
    <id>200004</id>
    <redirect title="FHSST Physics/Atomic Nucleus/Nuclear Force" />
    <revision>
      <id>1541551</id>
      <timestamp>2009-06-21T05:08:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics atomic nucleus:Nuclear force]] to [[FHSST Physics/Atomic Nucleus/Nuclear Force]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atomic Nucleus/Nuclear Force]]</text>
      <sha1>mxzh3mq3jrqtr3ij0y3jqukm6xlsng9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics atomic nucleus:Binding energy and nuclear masses</title>
    <ns>0</ns>
    <id>200005</id>
    <redirect title="FHSST Physics/Atomic Nucleus/Binding Energy and Nuclear Masses" />
    <revision>
      <id>1541554</id>
      <timestamp>2009-06-21T05:10:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics atomic nucleus:Binding energy and nuclear masses]] to [[FHSST Physics/Atomic Nucleus/Binding Energy and Nuclear Masses]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atomic Nucleus/Binding Energy and Nuclear Masses]]</text>
      <sha1>df704k004tf5tjb1bnsz13w8eixisvt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Change of isotope composition of natural uranium</title>
    <ns>0</ns>
    <id>200007</id>
    <redirect title="Nuclear Physics/Change of isotope composition of natural uranium" />
    <revision>
      <id>1541560</id>
      <timestamp>2009-06-21T05:12:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Change of isotope composition of natural uranium]] to [[Nuclear Physics/Change of isotope composition of natural uranium]]: Merging into book.</comment>
      <text xml:space="preserve">#REDIRECT [[Nuclear Physics/Change of isotope composition of natural uranium]]</text>
      <sha1>bh37kzp8715v47wxl5bmmq2rf3ro4he</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics atomic nucleus:Nuclear reactions</title>
    <ns>0</ns>
    <id>200009</id>
    <redirect title="FHSST Physics/Atomic Nucleus/Nuclear Reactions" />
    <revision>
      <id>1541575</id>
      <timestamp>2009-06-21T05:17:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics atomic nucleus:Nuclear reactions]] to [[FHSST Physics/Atomic Nucleus/Nuclear Reactions]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atomic Nucleus/Nuclear Reactions]]</text>
      <sha1>cowejlptfieo16b2djsao0ak83w9e4a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics atomic nucleus:Detectors</title>
    <ns>0</ns>
    <id>200010</id>
    <redirect title="FHSST Physics/Atomic Nucleus/Detectors" />
    <revision>
      <id>1541578</id>
      <timestamp>2009-06-21T05:18:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics atomic nucleus:Detectors]] to [[FHSST Physics/Atomic Nucleus/Detectors]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atomic Nucleus/Detectors]]</text>
      <sha1>0ua58owszdd6lcxk5naxqn1cxpftsne</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics atomic nucleus:Nuclear Fusion</title>
    <ns>0</ns>
    <id>200014</id>
    <redirect title="FHSST Physics/Atomic Nucleus/Nuclear Fusion" />
    <revision>
      <id>1541590</id>
      <timestamp>2009-06-21T05:22:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics atomic nucleus:Nuclear Fusion]] to [[FHSST Physics/Atomic Nucleus/Nuclear Fusion]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atomic Nucleus/Nuclear Fusion]]</text>
      <sha1>llhq19t7fkjvyctob3hrpdktue8ewqv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics atomic nucleus:Elementary particles</title>
    <ns>0</ns>
    <id>200015</id>
    <redirect title="FHSST Physics/Atomic Nucleus/Elementary Particles" />
    <revision>
      <id>1541593</id>
      <timestamp>2009-06-21T05:24:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics atomic nucleus:Elementary particles]] to [[FHSST Physics/Atomic Nucleus/Elementary Particles]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atomic Nucleus/Elementary Particles]]</text>
      <sha1>p6gdnztsx7qm76ft5nogby3lvsmxyou</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Requests for deletion/Eeke</title>
    <ns>4</ns>
    <id>200016</id>
    <revision>
      <id>1659535</id>
      <parentid>1560377</parentid>
      <timestamp>2009-11-18T03:50:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Wikibooks:Votes for deletion/Eeke]] to [[Wikibooks:Requests for deletion/Eeke]]: Per [[Wikibooks_talk:Votes_for_deletion#Page_rename_proposal]]</comment>
      <text xml:space="preserve">
{{closed|Closed as [[File:Symbol delete vote.svg|15px]] '''Delete''' - Works of Fiction and Original Research are beyond the scope of Wikibooks. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 05:24, 21 June 2009 (UTC)}}
Original research.  More suitable for http://conlang.wikia.com/, however, the author keeps removing speedy deletion notices and the suggestion to transwiki to another page. Nomination also includes [[Extra Pulvis Letters]] and [[Extra Näräävi Letters]] [[User:Sigma 7|Sigma 7]] ([[User talk:Sigma 7|talk]]) 19:50, 13 June 2009 (UTC)
:[[File:Symbol redirect vote.svg|15px]] '''Transwiki''' - move to Wikiversity.  --[[User:Panic2k4|Panic]] ([[User talk:Panic2k4|talk]]) 06:16, 15 June 2009 (UTC)
: [[Image:Symbol comment vote.svg|15px]] '''Comment''' - This work certainly qualifies for a speedy.  I tagged it with a &lt;nowiki&gt;{{query}}&lt;/nowiki&gt; which was deleted.  Then I tagged it with &lt;nowiki&gt;{{Impending Doom}}&lt;/nowiki&gt;.  Also deleted.  Someone else tagged it with a suggestion that it be moved.  Also deleted.  Since this guy wasn't willing to listen, I deleted the page.  That got his attention (though not in a good way as one might imagine).  Even though the author then began levelling threats and has since been blocked (by another admin), I thought it would be decent to undelete to allow him a second chance to move the data elsewhere.  I am willing to let that stand for a day or two, but not much longer.  Unless the consensus here is different. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 11:29, 15 June 2009 (UTC)
:: I imagine that if it was transwikied, the author might still be offended and want to continue to work on it at Wikibooks. I agree that it doesn't belong here. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 12:58, 15 June 2009 (UTC)
: [[File:Symbol comment vote.svg|15px]] '''Comment''' The work doesn't belong here because it appears to be unestablished conlang with no defined grammar and vocabulary that can be verified. That along with &quot;Eeke is a group of constructed languages created by me&quot; is what makes it appear to be original research. If that is not the case, then some references to some reliable sources would help. Also this work could be interpreted as self-promotion, if the conlang(s) does actually exist, but is not well known yet. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 13:26, 15 June 2009 (UTC)
: [[Image:Symbol delete vote.svg|15px]] '''Delete''' Certainly does not belong here... we are not designed to be a home for vanity pages. This is one person's set of constructed languages, and has no utility outside his own world. While I would normally agree with Sigma 7 and Panic that this should be transwikied, I am unsure whether there is enough here to merit that. [[User:Chazz|Chazz]] &lt;small&gt;([[User talk:Chazz|talk]])&lt;/small&gt; 22:43, 17 June 2009 (UTC)
: [[Image:Symbol delete vote.svg|15px]] '''Delete''' Self-constructed, not a book.--[[User:Xania|ЗAНИA]] [[Image:Flag_of_Italy.svg|15px]][[User talk:Xania|&lt;sup&gt;talk&lt;/sup&gt;]] 15:11, 20 June 2009 (UTC)
: [[File:Symbol delete vote.svg|15px]] '''Delete'''.  Given there was no more activity from the author, it's safe to delete.  Since it appears he managed to write a sentence and its translation, it's unlikely that he lost too much data (and anything he did &quot;lose&quot; can be reconstructed in a school day.) --[[User:Sigma 7|Sigma 7]] ([[User talk:Sigma 7|talk]]) 16:19, 20 June 2009 (UTC)
{{end closed}}</text>
      <sha1>e0rna15fj4gm88bpmhwzuraqydi8589</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics atomic nucleus elementary:beta decay</title>
    <ns>0</ns>
    <id>200017</id>
    <redirect title="FHSST Physics/Atomic Nucleus/Beta Decay" />
    <revision>
      <id>1541599</id>
      <timestamp>2009-06-21T05:27:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics atomic nucleus elementary:beta decay]] to [[FHSST Physics/Atomic Nucleus/Beta Decay]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atomic Nucleus/Beta Decay]]</text>
      <sha1>g6eyhqq840u4t2qkbuwwo0znfm7l559</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics atomic nucleus elementary:Quarks and leptons</title>
    <ns>0</ns>
    <id>200019</id>
    <redirect title="FHSST Physics/Atomic Nucleus/Quarks and Leptons" />
    <revision>
      <id>1541605</id>
      <timestamp>2009-06-21T05:29:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics atomic nucleus elementary:Quarks and leptons]] to [[FHSST Physics/Atomic Nucleus/Quarks and Leptons]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atomic Nucleus/Quarks and Leptons]]</text>
      <sha1>ltzqm605mecfz7ijjkshb0w0abi4i5b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics atomic nucleus elementary:Quarks and leptons</title>
    <ns>1</ns>
    <id>200020</id>
    <redirect title="Talk:FHSST Physics/Atomic Nucleus/Quarks and Leptons" />
    <revision>
      <id>1541607</id>
      <timestamp>2009-06-21T05:29:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics atomic nucleus elementary:Quarks and leptons]] to [[Talk:FHSST Physics/Atomic Nucleus/Quarks and Leptons]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Atomic Nucleus/Quarks and Leptons]]</text>
      <sha1>rdiik7ad6ott8q3sj0uiyhiikewbgn2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics atomic nucleus elementary:Forces of nature</title>
    <ns>0</ns>
    <id>200021</id>
    <redirect title="FHSST Physics/Atomic Nucleus/Forces of Nature" />
    <revision>
      <id>1541610</id>
      <timestamp>2009-06-21T05:30:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics atomic nucleus elementary:Forces of nature]] to [[FHSST Physics/Atomic Nucleus/Forces of Nature]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atomic Nucleus/Forces of Nature]]</text>
      <sha1>5f6cxn0c1f451fb8fr2a0p1a9b3yphs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics atomic nucleus:Origin of the universe</title>
    <ns>0</ns>
    <id>200022</id>
    <redirect title="FHSST Physics/Atomic Nucleus/Origin of the Universe" />
    <revision>
      <id>1541613</id>
      <timestamp>2009-06-21T05:31:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics atomic nucleus:Origin of the universe]] to [[FHSST Physics/Atomic Nucleus/Origin of the Universe]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Atomic Nucleus/Origin of the Universe]]</text>
      <sha1>1tfb2rvagitzzp4owyuwqzp9u01tmm6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Jeremyarnold</title>
    <ns>3</ns>
    <id>200023</id>
    <revision>
      <id>1541691</id>
      <timestamp>2009-06-21T07:54:40Z</timestamp>
      <contributor>
        <username>Jeremyarnold</username>
        <id>244884</id>
      </contributor>
      <comment>welcome</comment>
      <text xml:space="preserve">{{Welcome|Jeremyarnold|}}</text>
      <sha1>jatcnrwhpro49znn9b8uys3kynidssb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Media Centers Based on Wyplayer</title>
    <ns>0</ns>
    <id>200024</id>
    <revision>
      <id>1938694</id>
      <parentid>1858177</parentid>
      <timestamp>2010-09-23T15:41:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>status=0%</comment>
      <text xml:space="preserve">{| border=&quot;1&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;
|+'''Translations'''
|-
! style=&quot;background:#efefef;&quot; | English
! style=&quot;background:#efefef;&quot; | [[:es:Discos multimedia basados en Wyplayer|Español]]
! style=&quot;background:#efefef;&quot; | [[:fr:Disque dur multimédia Wyplayer|Français]]
! style=&quot;background:#efefef;&quot; | [[:it:Media Centers basati sul Wyplayer|Italiano]]
|-
|
#[[/General information|General information]]
#[[/Hardware|Hardware]]
#[[/Firmware|Firmware]]
#[[/Interesting links|Interesting links]]
|
#[[:es:Discos multimedia basados en Wyplayer/Información general|Información general]]
#[[:es:Discos multimedia basados en Wyplayer/Hardware|Hardware]]
#[[:es:Discos multimedia basados en Wyplayer/Firmware|Firmware]]
#[[:es:Discos multimedia basados en Wyplayer/Enlaces de interés|Enlaces de interés]]
|
#[[:fr:Disque dur multimédia Wyplayer/Informations générales|Informations générales]]
#[[:fr:Disque dur multimédia Wyplayer/Hardware|Hardware]]
#[[:fr:Disque dur multimédia Wyplayer/Firmware|Firmware ]] 
#[[:fr:Disque dur multimédia Wyplayer/Liens d'intérêt|Liens d'intérêt]]
|
#[[:it:Media Centers basati sul Wyplayer/Informazioni generali|Informazioni generali]]
#[[:it:Media Centers basati sul Wyplayer/Hardware|Hardware]]
#[[:it:Media Centers basati sul Wyplayer/Firmware|Firmware ]] 
#[[:it:Media Centers basati sul Wyplayer/Link interessanti|Link interessanti]]
|}

{{Subjects|Multimedia software}}
{{Alphabetical|M}}
{{status|0%}}

[[es:Discos multimedia basados en Wyplayer]]
[[fr:Disque dur multimédia Wyplayer]]
[[it:Media Centers basati sul Wyplayer]]</text>
      <sha1>5nridseceo1uyxncg21748qas75p2ke</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Gnepets</title>
    <ns>2</ns>
    <id>200027</id>
    <revision>
      <id>1541808</id>
      <timestamp>2009-06-21T13:31:22Z</timestamp>
      <contributor>
        <username>Gnepets</username>
        <id>236642</id>
      </contributor>
      <comment>Created page with '[[User:Gnepets/chap1 | chapter 1 - test]]'</comment>
      <text xml:space="preserve">[[User:Gnepets/chap1 | chapter 1 - test]]</text>
      <sha1>olloh1tr5pvw2sro9ng0f7ah5ewthaj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:ACPA</title>
    <ns>2</ns>
    <id>200029</id>
    <revision>
      <id>1541818</id>
      <timestamp>2009-06-21T13:57:34Z</timestamp>
      <contributor>
        <username>ACPA</username>
        <id>245002</id>
      </contributor>
      <comment>Created page with 'ACPA Association of Certified Project Accountants  -------------------------------------------------------------------------------- Accounting for Change  [[Welcome to the Associ...'</comment>
      <text xml:space="preserve">ACPA Association of Certified Project Accountants 
--------------------------------------------------------------------------------
Accounting for Change

[[Welcome to the Association of Certified Project Accountants.
&amp; Certified Corporate Executive Accountants]] [http://www.ACPAGlobal.com]
We are the First and Only Accountancy body in the world devoted to the Recognition, Education, Examination, and Furtherance of Project Accountants and Corporate Executive Accountants. 

Benefits of becoming a Certified Project Accountant or Certified Corporate Executive Accountant. 
There are a wealth of benefits in becoming a Certified Project Accountant or Certified Corporate Executive Accountant, such as:

Being recognised as a highly qualified and skilled Professional Accountant 
Being positioned to gain the maximum financial rewards that You deserve 
Gaining the respect and admiration of your peers, family and friends 
Securing the financial future of You and Your Family 
Guaranteeing Your foot in the door leading to success and independence 
Global recognition that You have achieved the most prestigious qualification dedicated to Project Accountancy or Corporate Executive Accountancy</text>
      <sha1>8n5gaiuzlnxv1bf9nhqkjnkfnk9l4am</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Gnepets/chap1</title>
    <ns>2</ns>
    <id>200030</id>
    <revision>
      <id>1541825</id>
      <timestamp>2009-06-21T14:20:18Z</timestamp>
      <contributor>
        <username>Gnepets</username>
        <id>236642</id>
      </contributor>
      <comment>outline for the first chapter</comment>
      <text xml:space="preserve">In this chapter we will look at some very simple GTK+ examples. Theory will be at the bottom of this chapter, it should be much easier to digest once you have written some code.

== An empty window ==
In this example we create a single window, set its title and size and connect an event that allows the application to close.

&lt;source lang=&quot;c&quot;&gt;
#include &lt;gtk/gtk.h&gt;

int
main (int   argc,
      char *argv[])
{
  GtkWidget *window;

  /* Initialise GTK+ and  */
  gtk_init (&amp;argc, &amp;argv);

  /* create a new window, set values */
  window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (window), &quot;Hello World&quot;);
  gtk_widget_set_size_request (window, 200, 200);
  /* connect the windows &quot;destroy&quot; event */
  g_signal_connect (G_OBJECT (window), &quot;destroy&quot;,
                    G_CALLBACK (gtk_main_quit), NULL);  

  /* set the window as visible */
  gtk_widget_show (window);

  /* run the GTK+ main loop */
  gtk_main ();
  return 0;
}
&lt;/source&gt;

Congratulations, you have created your first GTK+ window. You may not completely understand the code you have written yet, thats allright eventually you will. GTK+ is object oriented, as C is not designed as an object oriented language you must explicitly upcast and downcast objects, this will occur most often with the paramater passed to a function. You first cast window from a GtkWidget to a GtkWindow when you wrote GTK_WINDOW (window).

&lt;source lang=&quot;c&quot;&gt;
gtk_init (&amp;argc, &amp;argv);
&lt;/source&gt;
This call initialise GTK+ and hands to it a list of command line arguments the program recieved when initialising.

&lt;source lang=&quot;c&quot;&gt;
window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
&lt;/source&gt;
This line creates a new GtkWindow down cast as a GtkWidget
: '''GTK_WINDOW_TOPLEVEL''' A gtk window that registers itself to the window manager as a window.

&lt;source lang=&quot;c&quot;&gt;
gtk_window_set_title (GTK_WINDOW (window), &quot;Hello World&quot;);
&lt;/source&gt;
this function sets the title of a GtkWindow.
: '''GTK_WINDOW (window)''' the main window, cast from a GtkWidget to a GtkWindow
: '''&quot;Hello World&quot;''' the new title of the window

&lt;source lang=&quot;c&quot;&gt;
gtk_widget_set_size_request (window, 200, 200);
&lt;/source&gt;
we are setting the windows '''size request''', as the name suggests a size request does not guarantee you will get a specific size, you will learn more about this later.
:'''window''' a GtkWidget
:'''200''' width
:'''200''' height

&lt;source lang=&quot;c&quot;&gt;
g_signal_connect (G_OBJECT (window), &quot;destroy&quot;,
                  G_CALLBACK (gtk_main_quit), NULL); 
&lt;/source&gt;
we are connecting a callback (function) to be called when the &quot;destroy&quot; event is emitted from window.
: '''G_OBJECT (window)''' window cast as a G_OBJECT
: '''&quot;destroy&quot;''' the signal that is being connected to
: '''G_CALLBACK (gtk_main_quit)''' the function that is called when the signal is sent
: '''NULL''' an empty gpointer, for data that could be passed to the function

&lt;source lang=&quot;c&quot;&gt;
gtk_widget_show (window);
&lt;/source&gt;
show the widget window, all widgets must be shown including all parent widgets.
: '''window''' the widget that is being made visible

&lt;source lang=&quot;c&quot;&gt;
gtk_main ();
&lt;/source&gt;
we rest in GTKs main loop until gtk_main_quit () is called; we have connected gtk_main_quit () to the windows &quot;destroy&quot; event.

== Window with a button ==
TODO

== Theory ==
TODO</text>
      <sha1>nea6ckm4gp7w8mm1odhsw7j5c5visj5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet</title>
    <ns>0</ns>
    <id>200031</id>
    <revision>
      <id>2370959</id>
      <parentid>1967066</parentid>
      <timestamp>2012-06-29T21:30:58Z</timestamp>
      <contributor>
        <username>Recent Runes</username>
        <id>66908</id>
      </contributor>
      <comment>/* Table of Contents */ correct link to moved page</comment>
      <text xml:space="preserve">{{center|Welcome to Mathematics Worksheet Page on Wikibooks!}}

The mathematics worksheet is a set of problems designed to allow practicing material that you have just learned.  Each section in the worksheet will contain a brief description identifying the work to be done (although not necessarily how to do it), and a set of approximately 30 math problems to aid with your study. 

==Table of Contents==

{{stages}}

# [[/Addition and Subtraction of Integers/|Addition and Subtraction of Integers]] {{stage|100%|Aug 02, 2009}}
# [[/Multiplication and Division of Integers/|Multiplication and Division of Integers]] {{stage|100%|Aug 12, 2009}}
# [[/Order of operations/|Order of operations]] {{stage|100%|Jun 26, 2009}}
# [[/Converting/|Converting]] {{stage|00%|Jun 21, 2009}}
# [[/Addition and Subtraction of Decimal Numbers/|Addition and Subtraction of Decimal Numbers]] {{stage|100%|Jul 05, 2009}}
# [[/Multiplication and Division of Decimal Numbers/|Multiplication and Division of Decimal Numbers]] {{stage|100%|Jul 09, 2009}}
# [[/Greatest Common Factors/|Greatest Commons Factors]] {{stage|100%|Jul 05, 2009}}
# [[/Lowest Common Multiples/|Lowest Common Multiples]] {{stage|100%|Jun 24, 2009}}
# [[/Ratio and Proportion/|Ratio and Proportion]] {{stage|00%|Jun 21, 2009}}
# [[/Algebra/|Algebra]] {{stage|25%|Jul 25, 2009}}
# [[/Social Arithmetic/|Social Arithmetic]] {{stage|00%|Jun 21, 2009}}
# [[/Area and Perimeter of 2D Shapes/|Area and Perimeter of 2D Shapes]] {{stage|25%|Jul 18, 2009}}
# [[/Volume and Surface Area of 3D Shapes/|Volume and Surface Area of 3D Shapes]] {{stage|100%|Jul 04, 2009}}
# [[/Linear Equation One Variable/|Linear Equation One Variable]] {{stage|100%|Jun 26, 2009}}
# [[/Inequalities with One Variable/|Inequalities with One Variable]] {{stage|00%|Jun 21, 2009}}
# [[/Sets/|Sets]] {{stage|00%|Jun 21, 2009}}
# [[/Venn diagram/|Venn diagram]] {{stage|00%|Jun 21, 2009}}
# [[/Line and angles/|Line and angles]] {{stage|00%|Jun 21, 2009}}
# [[/Equations of Straight Line/|Equations of Straight Line]] {{stage|100%|Jul 02, 2009}}
# [[/Relation and function/|Relation and function]] {{stage|00%|Jun 21, 2009}}
# [[/Linear Equation Two Variable/|Linear Equation Two Variable]] {{stage|00%|Jun 21, 2009}}
# [[/Pythagorean Theorem/|Pythagorean Theorem]] {{stage|00%|Jun 21, 2009}}
# [[/Circle/|Circle]] {{stage|25%|Jul 02, 2009}}

{{Subjects|Mathematical collections}}
{{Alphabetical|M}}
{{status|25%}}

[[id:Soal-Soal Matematika]]</text>
      <sha1>04ej20it8kvpb3nmw9vyruzxyybdilm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Ginger Peach Glazed BBQ Ribs</title>
    <ns>102</ns>
    <id>200032</id>
    <revision>
      <id>2683446</id>
      <parentid>1733634</parentid>
      <timestamp>2014-07-22T00:22:25Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 2 slabs St. Louis style/cut pork spareribs
* 6 tbsp [[Cookbook:Barbecue Rub|Barbecue Rub]]
* 2 tbsp minced ginger
* 1 cup peach preserves
* 2 tbsp Worcestershire sauce
* 2 tbsp cider vinegar
* Dry applewood chunks

== Procedure ==
#Season ribs with Rub. Refrigerate for at least 1 hour.
#Place applewood in the firebox of a 250° smoker '''''or''''' the coal area of a 250° charcoal grill set for indirect heat.
#Combine remaining ingredients and bring to a boil over high heat until reduced by 1/3. Cover tightly and set aside.
#Place ribs in smoker/on top of grill grate and cook, brushing often with preserve mixture, for 5-6 hours.
#Brush ribs generously with preserve mixture and place on a medium high grill and cook, repeatedly brushing side facing you, until well browned. Repeat one more time.
#Remove and let rest 10 minutes; slice into 1-rib portions and serve.

[[Category:Ginger recipes]]
[[Category:Peach recipes]]
[[Category:Pork recipes]]
[[Category:Barbecue recipes]]
[[Category:Main course recipes]]</text>
      <sha1>pe8swlfj64e1v3ocu5vfn3xtna4xu85</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Order of operations</title>
    <ns>0</ns>
    <id>200033</id>
    <revision>
      <id>1710224</id>
      <parentid>1618710</parentid>
      <timestamp>2010-02-01T18:09:55Z</timestamp>
      <contributor>
        <ip>205.208.75.179</ip>
      </contributor>
      <text xml:space="preserve">{{stages}}

This worksheet will help practice with order of operations. As a reminder, the following rules apply:
# Do the equations in parentheses/brackets first. If the question has nested brackets like [] and {}, do the equations in inner bracket first. Inner equations symbolized as ().
# Do multiplication and division before addition and subtraction.
# Do the equation in order from left to right.

There are two worksheets, based on whole numbers or fractions:
# [[/Whole Numbers/|Whole Numbers]] {{stage|100%|Jun 24, 2009}}
# [[/Fractions/|Fractions]] {{stage|100%|Jun 26, 2009}}

{{BookCat}}</text>
      <sha1>mr7smacxub3bwd2sw98na3n2ul2dnmv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Media centers based on Wyplayer</title>
    <ns>0</ns>
    <id>200037</id>
    <redirect title="Media Centers Based on Wyplayer" />
    <revision>
      <id>1541853</id>
      <timestamp>2009-06-21T16:00:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Media centers based on Wyplayer]] to [[Media Centers Based on Wyplayer]]: Title casing.</comment>
      <text xml:space="preserve">#REDIRECT [[Media Centers Based on Wyplayer]]</text>
      <sha1>axfxyk4t4a5u5z2agtfucn7ivix2h6t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Mathematics Worksheet</title>
    <ns>14</ns>
    <id>200038</id>
    <revision>
      <id>1967068</id>
      <parentid>1541857</parentid>
      <timestamp>2010-11-05T19:43:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>more specific category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Mathematical collections]]</text>
      <sha1>94g0v86lo0120you6ca9e91shicpcpk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Chop Rub</title>
    <ns>102</ns>
    <id>200039</id>
    <revision>
      <id>2681277</id>
      <parentid>2681276</parentid>
      <timestamp>2014-07-14T19:37:19Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>/* Procedure */ corrected cat spelling</comment>
      <text xml:space="preserve">{{recipe}}

This rub is great on steak, pork, and chicken.

== Ingredients ==
* 1 cup smoked paprika
* 1/2 cup salt
* 1 cup dark brown sugar
* 3/4 cup dehydrated lemon peel
* 1/2 cup black pepper
* 1/4 cup dried rosemary
* 1/3 cup granulated garlic
* 1/2 cup chipotle powder
* 2 tsp hickory smoke powder (if you can't find this, use 2 drops liquid smoke in the dish.)

== Procedure ==
#Combine all ingredients and store in a cool, dark place in an airtight container.

[[Category:Spice Mix recipes]]
[[Category:Paprika recipes]]</text>
      <sha1>7q461tcddb3bs8xd9ukqia9z79pemgw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Apple Crusted Ham</title>
    <ns>102</ns>
    <id>200040</id>
    <revision>
      <id>2679811</id>
      <parentid>2678179</parentid>
      <timestamp>2014-07-09T02:07:15Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Adjusted categories slightly.</comment>
      <text xml:space="preserve">{{recipe}}
__NOTOC__
== Ingredients ==
*1 bone-in cooked city ham, skin removed
*1/2 cup dried apples, minced finely
*1/2 cup [[Cookbook:Chop Rub|Chop Rub]]
*3/4 cup cola

== Procedure ==
#Place ham in a large roasting pan large side down.
#Bake at 250° for 1 hour.
#Take ham out from oven and brush generously with cola. Pat on Rub and then pat on apples. Bake in same 250° oven for 1 1/2 hours.
#Remove and let rest 10 minutes. Slice thinly and serve.

[[Category:Ham recipes]]
[[Category:Apple recipes]]
[[Category:Baked recipes]]
[[Category:Main course recipes]]</text>
      <sha1>0tsg8sjmhuwygsgkfl4l0f4ux4l4r03</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Download/Signature</title>
    <ns>2</ns>
    <id>200044</id>
    <revision>
      <id>1541888</id>
      <timestamp>2009-06-21T17:29:15Z</timestamp>
      <contributor>
        <username>Download</username>
        <id>222559</id>
      </contributor>
      <comment>create</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{lowercase}}&lt;/noinclude&gt;&lt;font face=&quot;Papyrus&quot;&gt;'''&lt;font color=#9966CC&gt;-&lt;/font&gt;[[User:Download|&lt;font color=#7B68EE&gt;down&lt;/font&gt;]][[User talk:Download|&lt;font color=#9966CC&gt;load&lt;/font&gt;]] &lt;font color=#7B68EE&gt;׀&lt;/font&gt; [[:en:User:Download/Guestbook|&lt;font color=#8A2BE2&gt;sign!&lt;/font&gt;]]'''&lt;/font&gt;</text>
      <sha1>c887vivkge72ewjcm0non4ikuvnl14c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>BlitzMax/Modules/Miscellaneous/Banks</title>
    <ns>0</ns>
    <id>200045</id>
    <revision>
      <id>2063457</id>
      <parentid>1705430</parentid>
      <timestamp>2011-03-04T17:56:44Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: successfull → successful using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">A bank object encapsulates a block of memory you can use to store arbitrary data.

Banks are useful for storing data that is of no fixed type - for example, the contents
of a binary file.

To create a bank, use the [[BlitzMax/Modules/Miscellaneous/Banks#CreateBank|CreateBank]] command.

To write data to a bank, use one of 'Poke' style commands, such as [[BlitzMax/Modules/Miscellaneous/Banks#PokeByte|PokeByte]].

To read data from a bank, use one of the 'Peek' style commands, such as [[BlitzMax/Modules/Miscellaneous/Banks#PeekByte|PeekByte]].

In addition, banks can be loaded or saved using [[BlitzMax/Modules/Miscellaneous/Banks#LoadBank|LoadBank]] or [[BlitzMax/Modules/Miscellaneous/Banks#SaveBank|SaveBank]].

=Types=

==TBank==
''Memory bank''

{{hiddenh4|Methods}}
* Buf
* Lock
* Unlock
* Size
* Capacity
* Resize
* Read
* Write
* PeekByte
* PokeByte
* PeekShort
* PokeShort
* PeekInt
* PokeInt
* PeekLong
* PokeLong
* PeekFloat
* PokeFloat
* PeekDouble
* PokeDouble
* Save

{{hiddenh4|Functions}}
* Load
* Create
* CreateStatic

==TBank: Methods==
{{hiddenh3|Buf}}
''Method Buf:Byte Ptr()''

'''Description''': Get a bank's memory pointer

'''Returns''': A byte pointer to the memory block controlled by the bank

'''Information''':
Please use ''Lock'' and ''Unlock'' instead of this method.

{{hiddenh3|Lock}}
''Method Lock:Byte Ptr()''

'''Description''': Lock a bank's memory block

'''Returns''': A byte pointer to the memory block controlled by the bank

'''Information''':
While locked, a bank cannot be resized.

After you have finished with a bank's memory block, you must use ''Unlock''
to return it to the bank.

{{hiddenh3|Unlock}}
''Method Unlock()''

'''Description''': Unlock a bank's memory pointer

'''Information''':
After you have finished with a bank's memory block, you must use ''Unlock''
to return it to the bank.

{{hiddenh3|Size}}
''Method Size()''

'''Description''': Get a bank's size

'''Returns''': The size, in bytes, of the memory block controlled by the bank

{{hiddenh3|Capacity}}
''Method Capacity()''

'''Description''': Get capacity of bank

'''Returns''': The capacity, in bytes, of the bank's internal memory buffer

{{hiddenh3|Resize}}
''Method Resize( size )''

'''Description''': Resize a bank

{{hiddenh3|Read}}
''Method Read( stream:TStream,offset,count )''

'''Description''': Read bytes from a stream into a bank

{{hiddenh3|Write}}
''Method Write( stream:TStream,offset,count )''

'''Description''': Write bytes in a bank to a stream

{{hiddenh3|PeekByte}}
''Method PeekByte( offset )''

'''Description''': Peek a byte from a bank

'''Returns''': The byte value at the specified byte offset within the bank

{{hiddenh3|PokeByte}}
''Method PokeByte( offset,value )''

'''Description''': Poke a byte into a bank

{{hiddenh3|PeekShort}}
''Method PeekShort( offset )''

'''Description''': Peek a short from a bank

'''Returns''': The short value at the specified byte offset within the bank

{{hiddenh3|PokeShort}}
''Method PokeShort( offset,value )''

'''Description''': Poke a short into a bank

{{hiddenh3|PeekInt}}
''Method PeekInt( offset )''

'''Description''': Peek an int from a bank

'''Returns''': The int value at the specified byte offset within the bank

{{hiddenh3|PokeInt}}
''Method PokeInt( offset,value )''

'''Description''': Poke an int into a bank

{{hiddenh3|PeekLong}}
''Method PeekLong:Long( offset )''

'''Description''': Peek a long from a bank

'''Returns''': The long value at the specified byte offset within the bank

{{hiddenh3|PokeLong}}
''Method PokeLong( offset,value:Long )''

'''Description''': Poke a long value into a bank

{{hiddenh3|PeekFloat}}
''Method PeekFloat#( offset )''

'''Description''': Peek a float from a bank

'''Returns''': The float value at the specified byte offset within the bank

{{hiddenh3|PokeFloat}}
''Method PokeFloat( offset,value# )''

'''Description''': Poke a float value into a bank

{{hiddenh3|PeekDouble}}
''Method PeekDouble!( offset )''

'''Description''': Peek a double from a bank

'''Returns''': The double value at the specified byte offset within the bank

{{hiddenh3|PokeDouble}}
''Method PokeDouble( offset,value! )''

'''Description''': Poke a double value into a bank

{{hiddenh3|Save}}
''Method Save( url:Object )''

'''Description''': Save a bank to a stream

'''Information''':
Return True if successful, otherwise False.

==TBank: Functions==
{{hiddenh3|Load}}
''Function Load:TBank( url:Object )''

'''Description''': Load a bank from a stream

'''Returns''': A new TBank object

'''Information''':
Returns a new TBank object if successful, otherwise Null.

{{hiddenh3|Create}}
''Function Create:TBank( size )''

'''Description''': Create a bank

'''Returns''': A new TBank object with an initial size of '''size'''

{{hiddenh3|CreateStatic}}
''Function CreateStatic:TBank( buf:Byte Ptr,size )''

'''Description''': Create a bank from an existing block of memory

=Functions=

==CreateBank==
''Function CreateBank:TBank( size=0 )''

'''Description''': Create a bank

'''Returns''': A bank object with an initial size of '''size''' bytes

'''Information''':
[[BlitzMax/Modules/Miscellaneous/Banks#CreateBank|CreateBank]] creates a Bank allocating a specified amount of memory that
can be used for storage of binary data using the various Poke and
Peek commands.

'''Comment''':
Banks are blocks of memory assigned to a TBank, they are assigned like this.

&lt;pre&gt;
Global MyVar:TBank = CreateBank( SizeInBytes )
&lt;/pre&gt;

This will create a bank of SizeInBytes and store the pointer to it in MyVar.

Banks are brilliant for conversion work converting between types and compression techniques, for example.
&lt;pre&gt;
Function LongToStr:String( Value:Long )
	Local TempBank:TBank = CreateBank( 8 ) ' On eight bytes for the long (ints are 4 bytes)
	Local TempString:String = &quot;&quot;
	
	PokeLong( TempBank,0,Value ) ' Poke Value into TempBank at offset 0, the first byte for the eight bytes of the long value
	For Li:Int = 0 To 7
		TempString :+ Chr( PeekByte( TempBank,Li ) ) ' Read the bytes from the bank
	Next
	Return TempString
End Function
&lt;/pre&gt;

This simple function converts a long int to an eight byte representation of it. This is good for networking systems, etc. so instead of sending 640000000000 it would send just eight bytes. There are other uses for banks, their uses are seemingly endless.

==CreateStaticBank==
''Function CreateStaticBank:TBank( buf:Byte Ptr,size )''

'''Description''': Create a bank with existing data

'''Returns''': A bank object that references an existing block of memory

'''Information''':
The memory referenced by a static bank is not released when the bank is deleted.
A static bank cannot be resized.

==LoadBank==
''Function LoadBank:TBank( url:Object )''

'''Description''': Load a bank

'''Returns''': A bank containing the binary contents of '''url''', or null if '''url''' could not be opened

'''Information''':
[[BlitzMax/Modules/Miscellaneous/Banks#LoadBank|LoadBank]] reads the entire contents of a binary file from a specified '''url''' into a newly
created bank with a size matching that of the file.

==SaveBank==
''Function SaveBank( bank:TBank,url:Object )''

'''Description''': Save a bank

'''Returns''': True if successful.

'''Information''':
[[BlitzMax/Modules/Miscellaneous/Banks#SaveBank|SaveBank]] writes it's entire contents to a '''url'''. If the '''url''' is a file path a new
file is created.

==BankBuf==
''Function BankBuf:Byte Ptr( bank:TBank )''

'''Description''': Get bank's memory buffer

'''Returns''': A byte pointer to the bank's internal memory buffer

'''Information''':
Please use [[BlitzMax/Modules/Miscellaneous/Banks#LockBank|LockBank]] and [[BlitzMax/Modules/Miscellaneous/Banks#UnlockBank|UnlockBank]] instead of this method.

==LockBank==
''Function LockBank:Byte Ptr( bank:TBank )''

'''Description''': Lock a bank's memory block

'''Returns''': A byte pointer to the memory block controlled by the bank.

'''Information''':
While locked, a bank cannot be resized.

After you have finished with a bank's memory block, you must use [[BlitzMax/Modules/Miscellaneous/Banks#UnlockBank|UnlockBank]]
to return it to the bank.

==UnlockBank==
''Function UnlockBank( bank:TBank )''

'''Description''': Unlock a bank's memory block

'''Information''':
After you have finished with a bank's memory block, you must use [[BlitzMax/Modules/Miscellaneous/Banks#UnlockBank|UnlockBank]]
to return it to the bank.

==BankSize==
''Function BankSize( bank:TBank )''

'''Description''': Get size of bank

'''Returns''': The size, in bytes, of the bank's internal memory buffer

==BankCapacity==
''Function BankCapacity( bank:TBank )''

'''Description''': Get capacity of bank

'''Returns''': The capacity, in bytes, of the bank's internal memory buffer

'''Information''':
The capacity of a bank is the size limit before a bank must allocate
more memory due to a resize. Bank capacity may be increased due to a call
to [[BlitzMax/Modules/Miscellaneous/Banks#ResizeBank|ResizeBank]] by either 50% or the requested amount, whichever is greater.
Capacity never decreases.

==ResizeBank==
''Function ResizeBank( bank:TBank,size )''

'''Description''': Resize a bank

'''Information''':
[[BlitzMax/Modules/Miscellaneous/Banks#ResizeBank|ResizeBank]] modifies the size limit of a bank. This may cause memory to be
allocated if the requested size is greater than the bank's current capacity,
see [[BlitzMax/Modules/Miscellaneous/Banks#BankCapacity|BankCapacity]] for more information.

==CopyBank==
''Function CopyBank( src_bank:TBank,src_offset,dst_bank:TBank,dst_offset,count )''

'''Description''': Copy bank contents

'''Information''':
[[BlitzMax/Modules/Miscellaneous/Banks#CopyBank|CopyBank]] copies '''count''' bytes from '''src_offset''' in '''src_bank''' to '''dst_offset'''
in '''dst_bank'''.

==PeekByte==
''Function PeekByte( bank:TBank,offset )''

'''Description''': Peek a byte from a bank

'''Returns''': The byte value at the specified byte offset within the bank

'''Information''':
A byte is an unsigned 8 bit value with a range of 0..255.

==PokeByte==
''Function PokeByte( bank:TBank,offset,value )''

'''Description''': Poke a byte into a bank

==PeekShort==
''Function PeekShort( bank:TBank,offset )''

'''Description''': Peek a short from a bank

'''Returns''': The short value at the specified byte offset within the bank

'''Information''':
A short is an unsigned 16 bit (2 bytes) value with a range of 0..65535.

==PokeShort==
''Function PokeShort( bank:TBank,offset,value )''

'''Description''': Poke a short into a bank

'''Information''':
An short is an unsigned 16 bit value that requires 2 bytes of storage.

==PeekInt==
''Function PeekInt( bank:TBank,offset )''

'''Description''': Peek an int from a bank

'''Returns''': The int value at the specified byte offset within the bank

'''Information''':
An int is a signed 32 bit value (4 bytes).

==PokeInt==
''Function PokeInt( bank:TBank,offset,value )''

'''Description''': Poke an int into a bank

'''Information''':
An int is a signed 32 bit value that requires 4 bytes of storage.

==PeekLong==
''Function PeekLong:Long( bank:TBank,offset )''

'''Description''': Peek a long integer from a bank

'''Returns''': The long integer value at the specified byte offset within the bank

'''Information''':
A long is a 64 bit integer that requires 8 bytes of memory.

==PokeLong==
''Function PokeLong( bank:TBank,offset,value:Long )''

'''Description''': Poke a long integer int into a bank

'''Information''':
A long is a 64 bit integer that requires 8 bytes of storage.

==PeekFloat==
''Function PeekFloat#( bank:TBank,offset )''

'''Description''': Peek a float from a bank

'''Returns''': The float value at the specified byte offset within the bank

'''Information''':
A float requires 4 bytes of storage

==PokeFloat==
''Function PokeFloat( bank:TBank,offset,value# )''

'''Description''': Poke a float into a bank

'''Information''':
A float requires 4 bytes of storage

==PeekDouble==
''Function PeekDouble!( bank:TBank,offset )''

'''Description''': Peek a double from a bank

'''Returns''': The double value at the specified byte offset within the bank

'''Information''':
A double requires 8 bytes of storage

==PokeDouble==
''Function PokeDouble( bank:TBank,offset,value! )''

'''Description''': Poke a double into a bank

'''Information''':
A double requires 8 bytes of storage

==ReadBank==
''Function ReadBank( bank:TBank,stream:TStream,offset,count )''

'''Description''': Read bytes from a Stream to a Bank

'''Returns''': The number of bytes successfully read from the Stream

==WriteBank==
''Function WriteBank( bank:TBank,stream:TStream,offset,count )''

'''Description''': Write bytes from a Bank to a Stream

'''Returns''': The number of bytes successfully written to the Stream

{{BookCat}}</text>
      <sha1>bpvwihenyrnc5z4zc269n5sms36gk46</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Grilled Pork Chops</title>
    <ns>102</ns>
    <id>200047</id>
    <revision>
      <id>2122673</id>
      <parentid>1734771</parentid>
      <timestamp>2011-06-20T15:30:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>{{recipe}}</comment>
      <text xml:space="preserve">{{recipe}}
== Ingredients ==
* 4 thick cut pork rib chops
* 1 cup salt
* 3/4 cup honey
* 2 cups apple cider vinegar, heated
* 2 pounds ice
* 2 tablespoons black peppercorns, cracked
* 1 1/2 tablespoons cayenne pepper
* 4 sprigs fresh rosemary, finely chopped
* 10 sprigs fresh thyme, finely chopped
* 1 tablespoon smoked paprika
* 1 tablespoon ancho chili powder
* 2 tablespoons minced garlic

== Procedure ==
#Combine honey, salt, vinegar, herbs, cayenne pepper, and minced garlic in a plastic zip-top bag. Add ice and shake the bag until ice is mostly melted and mixture has cooled down.
#Insert pork chops and refrigerate for 1-2 hours.
#Combine remaining ingredients. Take pork out of mixture and pat dry with paper towels. Discard remaining mixture.
#Rub spice mixture on both sides of each pork chop.
#Quickly lube a high grill with a flame-resistant towel soaked in oil and tied with twine.*
#Grill pork chops, covered, 2 minutes. Twist 90 degrees and cook for another 2 minutes. Flip and repeat one more time.
#Move to a plate and let rest, uncovered, for 5 minutes. Serve warm.
 
== Warnings ==

**Don't use so much oil that it bursts into flames and you end up in the burn ward.</text>
      <sha1>50gx9eby325l5a0pdn6jgtvdu49ofxq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Creating Screencasts</title>
    <ns>0</ns>
    <id>200052</id>
    <revision>
      <id>2012578</id>
      <parentid>2012493</parentid>
      <timestamp>2011-01-06T15:28:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>link added makes no sense in context</comment>
      <text xml:space="preserve">'''Screencasting''' (or screen recording) is the process of recording a video of a computer's screen. Typically, this is usually done for tutorials, or to demonstrate an application's features.

Here, we will cover how to set up the required software, prepare and record your screencast, and distribute the video.

==Table of Contents==
*[[/Preparation/]]
*[[/Software/]]
*[[/Technical issues/]]
*[[/Distribution/]]

{{alphabetical|C}}
{{Subjects|Film and animation}}
{{status|0%}}</text>
      <sha1>3fej0ivgk9rb16uxf5tsyw1lljibcyn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Barbecue Tips</title>
    <ns>102</ns>
    <id>200053</id>
    <revision>
      <id>2306066</id>
      <parentid>1785556</parentid>
      <timestamp>2012-04-13T23:27:29Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{technique}}

If your grill or smoker has retreated from your use, this is the guide to get you started again.

== Meats and Cuts ==

If you're either cooking low and slow, or hot and fast, you'll want to pick a cut that's got a good amount of marbling. Good chicken cuts include:
Whole leg quarters, thighs, drumsticks, wings, and whole butterflied chickens. Breasts can be dry and flavorless. Nice beef cuts: Tender steaks, flank, inside skirt, and briskets. Pork isn't that lucky though. See, before the fitness craze came, pigs were fat. In fact, the average pig had more fat than 50 chicken leg quarters. I actually got to taste that meat before it was gone. But, people crazy about fitness turned from pigs to poultry. Undaunted, pig breeders made the once juicy hog dry. Anyways, cuts that have the right stuff include Boston butts, ribs, and chops.

== Cooking ==

The type of barbecue cooking that you choose for a cut matters almost as much as the cut you pick. Cuts that like a long cook time in the smoker are Boston butts, ribs, beef brisket, chicken thighs and legs, wings, and whole chickens. Try to do a long smoke time with things like filet mignons, and you'll get something extremely mushy, like cat food. Cuts that like it hot and fast are: Pork chops, chicken breasts, steaks like ribeyes and strips, ahi tuna, fish, and shrimp.

'''Some recipes that use a smoker:'''

[[Cookbook:Pulled Pork Sandwiches|Pulled Pork]]

[[Cookbook:Memphis-Style BBQ Ribs|Memphis-Style BBQ Ribs]]

[[Cookbook:North Carolina-Style BBQ Ribs|North Carolina-Style BBQ Ribs]]

== Woods ==

Think all smoking woods are the same? Wrong! Each wood has its own flavor and character. However, if you use softwoods like cedar, pine, and spruce, you'll get toxic tars, resins, and creosote, which can kill! That's why you'll want to use hardwoods. I have a chart concerning flavor of smoke.
:Alder: Classic European smoking wood, doesn't overtake, complements meats with mild flavor and seafood such as trout.
:Applewood: Adds a cider-like flavor to meats and fish. Nicely complements items with honey, or meats such as chicken, pork, and lamb.
:Cherry: Fruity, tad bitter smoke that complements pork.
:Hickory: Classic American wood. Adds a sharp, woodsy flavor. Complements pork, chicken, seafood, and shrimp.
:Maple: Sweet maple syrup flavor. Complements almost everything.
:Mesquite: Gives a spicy Southwestern flair to beef. However, mesquite can overtake mild flavored meats like pork and chicken.
:Peachwood: Sweet fruity flavor. Complements pork, chicken, salmon, trout, and shrimp.

I hope we've inspired you to take your grill or smoker out of the shadows and fire it up.

== Notes ==

Like the way that last line was written? I borrowed that from Good Eats.</text>
      <sha1>7dzqed22b1l51mnk8ak1v1ze5j5ypyo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Spice Rub</title>
    <ns>102</ns>
    <id>200054</id>
    <revision>
      <id>2687223</id>
      <parentid>1844581</parentid>
      <timestamp>2014-07-31T23:03:15Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>16549</id>
      </contributor>
      <minor />
      <comment>Koavf moved page [[Cookbook:Spice rub]] to [[Cookbook:Spice Rub]]</comment>
      <text xml:space="preserve">{{recipe}}

A spice rub is a mixture of salt, herbs, and spices. A spice rub can be as simple as a large amount of pepper, like in Steak au' Poirve, or as complex as 100 spices. (and yes, that many spices do exist) My formula for a good spice rub is a base, such as paprika, and then add on from there. However, beware commercial spice mixtures. Many of them are salt-based because: 1. Salt fills volume. 2. Salt is cheap. 3. Salt fills in for spices they can't get.

In order to make a successful rub, you need to balance flavors. I like to build my rubs in bulk because spices last close to forever and also I won't have to make another batch every 2 days because trust me, when you find a good rub, you will use it often. Also, if you're making a rub for one certain item, you'll want to pick flavors that work well with what you're making it for. Pork likes brown sugar, rosemary, and chipotles. Chicken pretty much likes the same things as pork and things like lemon, lime, orange, cayenne pepper, and dry mustard powder. Beef likes all of these. Also, paprika seems to work with just about everything.

Here is a recipe for an all-purpose rub.

==Ingredients==
* 1 cup paprika
* 1/4 cup salt
* 1/4 cup black pepper
* 1/2 cup chipotle powder
* 1/2 cup brown sugar
* 3/4 cup dehydrated lemon peel
* 1/4 cup dried rosemary
* 2 tbsp cayenne pepper

==Procedure==
#Combine all ingredients in an airtight container. Stored in a cool, dark place this will last until your family tree ends. And everybody else's.

[[Category:Spice Mix recipes]]</text>
      <sha1>tuoyurxbow93oqiz2jgbxyao7j7c4qn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Bone</title>
    <ns>102</ns>
    <id>200055</id>
    <revision>
      <id>1697715</id>
      <parentid>1541960</parentid>
      <timestamp>2010-01-16T16:49:30Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <text xml:space="preserve">{{Technique}}
{{Wikipedia|Boning}}

In the culinary language, to bone means to remove all bones from inside an item.</text>
      <sha1>mtbnvv7thnkii7o3gjbjbkcit9wuhs0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Iwatchaltonbrown</title>
    <ns>2</ns>
    <id>200056</id>
    <revision>
      <id>1600247</id>
      <parentid>1576993</parentid>
      <timestamp>2009-08-04T13:07:13Z</timestamp>
      <contributor>
        <username>Iwatchaltonbrown</username>
        <id>243605</id>
      </contributor>
      <text xml:space="preserve">Hi. I'm usually on the cookbook, adding stuff, but I can also be found at Wikipedia, as Altonbrownisawesome. As you can see, I'm an avid Alton Brown fan. For those of you that believe all those guys that say acids in marinades supposedly tenderize meats, that's false. Tenderizers use enzymes like papain, not acids. Peace I know Alton Brown's address! 
                                                                                    {{User CVU2-en}}</text>
      <sha1>ne9mhqdsemheifkaww8o3oav98t3qzd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Food Safety Guide/Introduction</title>
    <ns>0</ns>
    <id>200057</id>
    <revision>
      <id>1541985</id>
      <parentid>1541983</parentid>
      <timestamp>2009-06-21T22:35:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Added page to book's category</comment>
      <text xml:space="preserve">I made this book because I felt that a lot of people don't know basic food safety and there are a large amount of illnesses caused by contaminated food registered by the CDC in America.

In Chapter One, I wrote about how to be careful not to cross-contaminate by poor storage and unwashed tools.

In Chapter Two, I wrote about cooking meats to an appropriate temperature before consumption.

In Chapter Three, I wrote about how to properly store items meant for consumption.

In Chapter Four, I wrote about common food safety myths.

I hope you learn a lot from this book.

{{BookCat}}</text>
      <sha1>ibsgqetmxvx7bcxibo6ccgg1o7hxl6y</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Food Safety Guide</title>
    <ns>0</ns>
    <id>200058</id>
    <revision>
      <id>2715974</id>
      <parentid>1924937</parentid>
      <timestamp>2014-10-21T12:14:11Z</timestamp>
      <contributor>
        <ip>46.240.67.74</ip>
      </contributor>
      <comment>/* Table of Contents */</comment>
      <text xml:space="preserve">This is a book for people who want to know about proper food safety and handling conditions.

==Table of Contents==

:[[/'''Introduction'''/]]
#[[/HACCP/]]
#[[/Personal Hygiene/]]
#[[/GMP/]]
#[[/Cross-Contamination/]]
#[[/Cooking Through/]]

{{Alphabetical|F}}
{{Subjects|Foodservice}}
{{status|0%}}</text>
      <sha1>2ny6mylf873m7br5psu23m3jp27zmql</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Food Safety Guide:Table of Contents</title>
    <ns>0</ns>
    <id>200059</id>
    <redirect title="Food Safety Guide" />
    <revision>
      <id>1541982</id>
      <timestamp>2009-06-21T22:35:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Food Safety Guide:Table of Contents]] to [[Food Safety Guide]]: This is the root book page.</comment>
      <text xml:space="preserve">#REDIRECT [[Food Safety Guide]]</text>
      <sha1>skuntdr5glcteiyma60utor2gbfq8mw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Food Safety Guide:Introduction</title>
    <ns>0</ns>
    <id>200060</id>
    <redirect title="Food Safety Guide/Introduction" />
    <revision>
      <id>1541984</id>
      <timestamp>2009-06-21T22:35:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Food Safety Guide:Introduction]] to [[Food Safety Guide/Introduction]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Food Safety Guide/Introduction]]</text>
      <sha1>a9xr098t0cvtyojrfvl3ir7f46t4y0z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Food Safety Guide</title>
    <ns>14</ns>
    <id>200061</id>
    <revision>
      <id>1623742</id>
      <parentid>1541987</parentid>
      <timestamp>2009-09-03T17:53:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]].

[[Category:Foodservice]]</text>
      <sha1>sxxhjmsv7jc2ri6jkg5fismt4fseoso</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior School Time</title>
    <ns>14</ns>
    <id>200065</id>
    <revision>
      <id>1758810</id>
      <parentid>1542036</parentid>
      <timestamp>2010-04-17T15:06:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>description</comment>
      <text xml:space="preserve">{{center|This category contains [[Wikijunior]] books on '''school-related topics'''.}}
{{CategoryTOC}}

[[Category:Wikijunior| School Time]]</text>
      <sha1>fq60w6fffwgoqf3c0sovoejz5f93uwg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Truthtable4</title>
    <ns>10</ns>
    <id>200071</id>
    <revision>
      <id>1575477</id>
      <parentid>1542095</parentid>
      <timestamp>2009-07-21T03:04:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">{| class=&quot;wikitable&quot; style={{#switch:{{{align}}}
  | left = &quot;text-align:center&quot; align=left
  | right = &quot;text-align:center; align=right
  | center = &quot;text-align:center; margin: 1em auto 1em auto&quot;
  | centre = &quot;text-align:center; margin: 1em auto 1em auto&quot;
  | &quot;text-align:center; margin: 1em auto 1em auto&quot;
}}
  |-
  !width=40| {{{1}}} !!width=40| {{{2}}} !!width=40| {{{3}}} !!width=40| {{{4}}}
  | rowspan=17|
  !width=40| {{{5}}}
  |-
  | 0 || 0 || 0 || 0 || {{{6}}}
  |-
  | 0 || 0 || 0 || 1 || {{{7}}}
  |-
  | 0 || 0 || 1 || 0 || {{{8}}}
  |-
  | 0 || 0 || 1 || 1 || {{{9}}}
  |-
  | 0 || 1 || 0 || 0 || {{{10}}}
  |-
  | 0 || 1 || 0 || 1 || {{{11}}}
  |-
  | 0 || 1 || 1 || 0 || {{{12}}}
  |-
  | 0 || 1 || 1 || 1 || {{{13}}}
  |-
  | 1 || 0 || 0 || 0 || {{{14}}}
  |-
  | 1 || 0 || 0 || 1 || {{{15}}}
  |-
  | 1 || 0 || 1 || 0 || {{{16}}}
  |-
  | 1 || 0 || 1 || 1 || {{{17}}}
  |-
  | 1 || 1 || 0 || 0 || {{{18}}}
  |-
  | 1 || 1 || 0 || 1 || {{{19}}}
  |-
  | 1 || 1 || 1 || 0 || {{{20}}}
  |-
  | 1 || 1 || 1 || 1 || {{{21}}}
  |}&lt;noinclude&gt;[[Category:Digital Circuits/Templates|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>fdgg4z949dxxiq8lu3c9iui7f759hgi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Introduction to Mathematics</title>
    <ns>14</ns>
    <id>200073</id>
    <revision>
      <id>1542082</id>
      <timestamp>2009-06-22T00:49:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior School Time|Introduction to Mathematics]]]]</text>
      <sha1>9x0qycib79doidp3usyrhzq4480xwg1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Practical Electronics/IC/4002</title>
    <ns>0</ns>
    <id>200075</id>
    <revision>
      <id>1542104</id>
      <parentid>1542101</parentid>
      <timestamp>2009-06-22T00:57:27Z</timestamp>
      <contributor>
        <username>Inductiveload</username>
        <id>30522</id>
      </contributor>
      <minor />
      <comment>typos</comment>
      <text xml:space="preserve">{{Logic_IC
|number = 4002
|logic_type = Combinatorial
|func_family = Logic
|description = Dual 4-Input NOR Gate
|pins = 14
}}

The 4002 is a member of the [[Practical_Electronics/IC/4000 Series|4000 Series]] [[Practical_Electronics/CMOS|CMOS]] range, and contains two independent [[Practical_Electronics/Logic#NOR|NOR gates]], each with four inputs. The pinout diagram, given on the right, is the standard four-input CMOS logic gate IC layout:

:*Pin 7 is the ground supply (GND)
:*Pin 14 is the positive supply (V&lt;sub&gt;DD&lt;/sub&gt;)
:*Pins 2-5 and 9-12 are gate inputs for the two gates
:*Pin 1 and 13 are gate outputs
:*Pin 6 and 8 are not connected

The truth table for one of the two gates is shown below. For more infomation about the NOR gate in general, see this [[Practical Electronics/Logic#NOR|module]].

{{center|'''Truth Table for a Single Gate'''}}
{{Truthtable4
|A|B|C|D|Q|1|0|0|0 |0|0|0|0 |0|0|0|0 |0|0|0|0}}

This chip is widely available, and usually comes in a [[Practical_Electronics/IC/DIL|DIL]]-14 or [[Practical_Electronics/IC/SOIC|SOIC]]-14 package.

This chip is different in pinout to the TTL [[Practical_Electronics/IC/7425|7425]], but can fulfill its function if the wiring is modified.</text>
      <sha1>ho9zazo11lbp5rm8kt6t8vs7jwxgzpm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Water Safety</title>
    <ns>14</ns>
    <id>200076</id>
    <revision>
      <id>1542130</id>
      <timestamp>2009-06-22T01:07:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior|Water Safety]]</text>
      <sha1>jmxmxtmyk94sieh7o0ljimghuy1pn0g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Small Numbers</title>
    <ns>14</ns>
    <id>200077</id>
    <revision>
      <id>2347293</id>
      <parentid>1542141</parentid>
      <timestamp>2012-05-15T17:49:53Z</timestamp>
      <contributor>
        <username>Chaojoker</username>
        <id>216884</id>
      </contributor>
      <minor />
      <comment>+hy</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior pre-reader books|Small Numbers]]

[[hy:Կատեգորիա:Վիքիփոքրիկ:Հաշվել մինչև 10]]</text>
      <sha1>hg8umhlonl7k9td1kl8569abk44uzqp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Numbers from 1 to 20</title>
    <ns>14</ns>
    <id>200078</id>
    <revision>
      <id>1542148</id>
      <timestamp>2009-06-22T01:15:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior pre-reader books|Numbers from 1 to 20]]</text>
      <sha1>7jxthl36saq2c6x2zik6m3dz9aytjk7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Learning JavaScript</title>
    <ns>0</ns>
    <id>200079</id>
    <redirect title="JavaScript" />
    <revision>
      <id>1542149</id>
      <timestamp>2009-06-22T01:16:09Z</timestamp>
      <contributor>
        <username>Download</username>
        <id>222559</id>
      </contributor>
      <comment>create redir</comment>
      <text xml:space="preserve">#REDIRECT [[JavaScript]]</text>
      <sha1>2mmz8ctzycyp9tc7svz5zxhgw4rahi5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Food Alphabet</title>
    <ns>14</ns>
    <id>200080</id>
    <revision>
      <id>1542156</id>
      <timestamp>2009-06-22T01:22:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior pre-reader books|Food Alphabet]]</text>
      <sha1>p86maihiyx53z67n2xlt6uxivrvzdy1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Download</title>
    <ns>3</ns>
    <id>200081</id>
    <revision>
      <id>1542385</id>
      <parentid>1542266</parentid>
      <timestamp>2009-06-22T02:30:08Z</timestamp>
      <contributor>
        <username>Download</username>
        <id>222559</id>
      </contributor>
      <comment>re</comment>
      <text xml:space="preserve">&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Download!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 02:13, 22 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;

:Thanks.  :) &lt;font face=&quot;Papyrus&quot;&gt;'''&lt;font color=#9966CC&gt;-&lt;/font&gt;[[User:Download|&lt;font color=#7B68EE&gt;down&lt;/font&gt;]][[User talk:Download|&lt;font color=#9966CC&gt;load&lt;/font&gt;]] &lt;font color=#7B68EE&gt;׀&lt;/font&gt; [[:en:User:Download/Guestbook|&lt;font color=#8A2BE2&gt;sign!&lt;/font&gt;]]'''&lt;/font&gt; 02:30, 22 June 2009 (UTC)</text>
      <sha1>el56eb3uxp8m7vdzg6mk4eae5h2f3w5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Flower Alphabet</title>
    <ns>14</ns>
    <id>200082</id>
    <revision>
      <id>1542165</id>
      <timestamp>2009-06-22T01:29:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior pre-reader books|Flower Alphabet]]</text>
      <sha1>83xkuott9hnzcaz1mh7ordko6gh0rik</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Colors</title>
    <ns>14</ns>
    <id>200083</id>
    <revision>
      <id>1542171</id>
      <timestamp>2009-06-22T01:35:49Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior pre-reader books|Colors]]</text>
      <sha1>cw88dm3fdff857eau3y33mfi1ogd7mw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Animal Alphabet</title>
    <ns>14</ns>
    <id>200087</id>
    <revision>
      <id>1542184</id>
      <timestamp>2009-06-22T01:39:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior pre-reader books|Animal Alphabet]]</text>
      <sha1>cmjaoj22ntrsp7mvupsgwtxcji3gv4w</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Alphabet</title>
    <ns>14</ns>
    <id>200088</id>
    <revision>
      <id>2347218</id>
      <parentid>1542190</parentid>
      <timestamp>2012-05-15T16:37:43Z</timestamp>
      <contributor>
        <username>Chaojoker</username>
        <id>216884</id>
      </contributor>
      <minor />
      <comment>+hy</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior pre-reader books|Alphabet]]

[[hy:Կատեգորիա:Վիքիփոքրիկ:Այբուբեն]]</text>
      <sha1>1dp9hg7v5ng1ac8ps0v8z2lwwq4luyt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Practical Electronics/IC/4017</title>
    <ns>0</ns>
    <id>200090</id>
    <revision>
      <id>1542199</id>
      <timestamp>2009-06-22T01:45:42Z</timestamp>
      <contributor>
        <username>Inductiveload</username>
        <id>30522</id>
      </contributor>
      <comment>Created page with '{{Logic_IC |number = 4017 |logic_type = Sequential |func_family = Counter |description = 5-Stage Johnson Decade Counter |pins = 16 }}  ==Datasheets==  *[http://www.nxp.com/pip/HE...'</comment>
      <text xml:space="preserve">{{Logic_IC
|number = 4017
|logic_type = Sequential
|func_family = Counter
|description = 5-Stage Johnson Decade Counter
|pins = 16
}}

==Datasheets==

*[http://www.nxp.com/pip/HEF4017B_4.html NXP Datasheet]</text>
      <sha1>4xe51hcjhgr8ot9oohrwlk7cc3q1i65</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Summer Flowers of Northern New England</title>
    <ns>14</ns>
    <id>200091</id>
    <revision>
      <id>1542208</id>
      <timestamp>2009-06-22T01:50:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior The Natural World|Summer Flowers of Northern New England]]</text>
      <sha1>fblh0el0elmbzy1auzvm1jmqtgt5vyo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Human Body</title>
    <ns>14</ns>
    <id>200092</id>
    <revision>
      <id>1542233</id>
      <timestamp>2009-06-22T02:00:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior The Natural World|Human Body]]</text>
      <sha1>4yq1tbe99suotx27h9qjcz7osh9nkuh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Mascarpone Glazed Strawberries</title>
    <ns>102</ns>
    <id>200093</id>
    <revision>
      <id>1745251</id>
      <parentid>1542234</parentid>
      <timestamp>2010-03-27T23:36:56Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 pound fresh strawberries, hulled and sliced
* 1 cup mascarpone cheese
* 3 tbsp coffee liqueur
* 3 tbsp dark rum
* 1/4 cup heavy cream
* Pinch of salt
* 3/4 cup sugar
* 2 tbsp butter

== Procedure ==
#Melt butter in your largest stainless steel sauté pan over medium heat. Add strawberries and cook until deeply browned. Remove and keep warm.
#Deglaze pan with rum and ignite. Stir to dissolve browned bits. Add remaining ingredients and bring to a boil until reduced by 1/3. Add strawberries, reduce heat to low, and cook 1/2 hour. Remove pan from heat and serve.</text>
      <sha1>0zffbv708yltlv54i4qpdzoghl83uum</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Dinosaurs</title>
    <ns>14</ns>
    <id>200094</id>
    <revision>
      <id>1542279</id>
      <timestamp>2009-06-22T02:24:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior The Natural World|Dinosaurs]]</text>
      <sha1>8t97wmn3frzfhijw82vlqwka5aw6j4b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Ohms law</title>
    <ns>2</ns>
    <id>200098</id>
    <revision>
      <id>1542840</id>
      <timestamp>2009-06-22T02:34:12Z</timestamp>
      <contributor>
        <username>Ohms law</username>
        <id>43335</id>
      </contributor>
      <comment>Created page with '{{softredirect|en:User:Ohms_law}}'</comment>
      <text xml:space="preserve">{{softredirect|en:User:Ohms_law}}</text>
      <sha1>fjeqpd62m28geqjxrwp9tm8gtsttmgv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Bugs</title>
    <ns>14</ns>
    <id>200099</id>
    <revision>
      <id>1542851</id>
      <timestamp>2009-06-22T02:38:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior The Natural World|Bugs]]</text>
      <sha1>rw4efrplpn3hhr03pg4ef70x707j6fh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:99.137.228.218</title>
    <ns>3</ns>
    <id>200100</id>
    <revision>
      <id>1542879</id>
      <timestamp>2009-06-22T02:44:32Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>{{subst:test|--~~~~}}</comment>
      <text xml:space="preserve">{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/99.137.228.218|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 02:44, 22 June 2009 (UTC)}}</text>
      <sha1>bfco57lgw31lpjg0g47q3xc6xw2vhej</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Big Cats</title>
    <ns>14</ns>
    <id>200101</id>
    <revision>
      <id>1542912</id>
      <timestamp>2009-06-22T02:56:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior The Natural World|Big Cats]]</text>
      <sha1>lazh2vh5pimbhxdlaxbr1nupus3y440</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Big Book of Fun Science Experiments</title>
    <ns>14</ns>
    <id>200103</id>
    <revision>
      <id>1543031</id>
      <timestamp>2009-06-22T03:31:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]].

[[Category:Wikijunior Discovery and Innovation|Big Book of Fun Science Experiments]]</text>
      <sha1>gpaadb36dnfjk252fknvmtuvuvzl7q3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Information Security in Education/Contents</title>
    <ns>10</ns>
    <id>200104</id>
    <revision>
      <id>1933027</id>
      <parentid>1775642</parentid>
      <timestamp>2010-09-15T13:08:17Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed link</comment>
      <text xml:space="preserve">&lt;div class=&quot;noprint&quot;&gt;
{| width=&quot;100%&quot; cellspacing=&quot;0&quot; class=&quot;top&quot; align=&quot;center&quot;
|style=&quot;background-color: #efffef; border: 1px solid #bafaba; padding: 0px; font-size: small; text-align: center;&quot; valign=top|
&lt;font size=&quot;+1&quot;&gt;[[Information Security in Education]]&lt;/font&gt;
----
{{navbar|Information Security in Education/Contents|nodiv=1}}

[[Information Security in Education|Contents/Introduction]] ·· 
[[Information Security in Education/School Hacking|School Hacking]] ·· 
[[Information Security in Education/Legal Issues|Legal Issues]] ·· 
[[Information Security in Education/Security Awareness|Security Awareness]] ·· 
[[Information Security in Education/Administrator Awareness|Administrator Awareness]] ·· 
[[Information Security in Education/Cryptography|Cryptography]] ·· 
[[Information Security in Education/Security Regulations|Security Regulations]] ·· 
[[Information Security in Education/Authentication|Password Security]] ·· 
[[Information Security in Education/Professional Development|Professional Development]] ·· 
[[Information Security in Education/Network Defenses|Network Defenses]] ·· 
[[Information Security in Education/Security Policies for Mobile Devices|Mobile Devices]] ·· 
[[Information Security in Education/Malicious Software|Malicious Software]]·· 
[[Information Security in Education/Case Studies|Case Studies]]
|}&lt;/div&gt;&lt;includeonly&gt;{{BookCat}}&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Information Security in Education| ]]&lt;/noinclude&gt;</text>
      <sha1>h03r3cc037dsd1mv6mt7xpoag97eu85</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Famous Inventors</title>
    <ns>14</ns>
    <id>200106</id>
    <revision>
      <id>1543064</id>
      <timestamp>2009-06-22T03:41:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior Discovery and Innovation|Famous Inventors]]</text>
      <sha1>axcgzpzqducds87f9lqfd2km2afvkfh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Vanilla Fudge</title>
    <ns>102</ns>
    <id>200110</id>
    <revision>
      <id>1744604</id>
      <parentid>1739264</parentid>
      <timestamp>2010-03-26T23:58:53Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Confections|Confections]] | [[Cookbook:Fudge|Fudge]]

The delicious treat from heaven made easy for you to make at home.

== Ingredients ==
*3 cups of [[Cookbook:White sugar|white sugar]]
*½ a cup of corn syrup
*1 ¼ of a [[Cookbook:Condensed milk|condensed milk]]
*¼ of a pound of [[Cookbook:Butter|butter]]
*1 teaspoon of [[Cookbook:Vanilla|vanilla]] extract

== Procedure ==
#Place grease proof paper onto a deep tray
#Combine the white sugar, syrup, condensed milk and butter together in the saucepan
#Cook on a medium level of heat on the stove  and bring to boil, stir it constantly (so it doesn’t burn) and cook for five minutes after it reaches boiling point
#Remove the fudge from the heat and beat in the vanilla extract
#Pour the fudge onto the tray and leave to cool
#Once cooled down and has set cut it up 
#Enjoy!

{{Wikipedia|Fudge}}

[[Category:Fudge recipes]]
[[Category:Vanilla recipes]]</text>
      <sha1>luy75l0lbr01uycjym0qpxv7blgp5bu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Banana Split II</title>
    <ns>102</ns>
    <id>200111</id>
    <revision>
      <id>2711174</id>
      <parentid>2711173</parentid>
      <timestamp>2014-10-07T21:27:45Z</timestamp>
      <contributor>
        <ip>198.237.49.209</ip>
      </contributor>
      <comment>/* Procedure */</comment>
      <text xml:space="preserve">{{recipe}}

Banana, ice-cream, whipped cream, ice-cream topping, sprinkles and a cherry on top, how much better can this get? 

== Ingredients ==
*a banana 
*ice-cream (of your choice)
*ice-cream topping (of your choice)
*hundreds and thousands of sprinkles 
*whipped cream 
*maraschino cherries

== Procedure ==
#Peel the banana and cut it in half (length wise) and place it in the serving bowl.
#Place three full scoops of ice-cream in-between the two pieces of banana.
#Cover the whole thing with a generous serving of whipped cream.
#Cover that with a generous serve of ice-cream topping of your choice.
#Sprinkle some hundreds and thousands of sprinkles over the top of all of that. 
#Place a maraschino cherry on top.

[[Category:Banana recipes]]
[[Category:Ice cream recipes]]
[[Category:Dessert recipes]]</text>
      <sha1>mefkeoy1hj1ddkty25sb95z22g3qjrz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Sweet Omelette</title>
    <ns>102</ns>
    <id>200115</id>
    <revision>
      <id>2691382</id>
      <parentid>2687261</parentid>
      <timestamp>2014-08-14T22:50:58Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Cuisine of the United Kingdom|Cuisine of the United Kingdom]] | [[Cookbook:Omelet Recipes|Omelet Recipes]]

Eggs eaten in sweet style.

== Ingredients ==
*2 [[Cookbook:Egg|eggs]]
*[[Cookbook:Jam|Jam]] of choice
*[[Cookbook:Powdered Sugar|Icing sugar]] or [[Cookbook:Castor Sugar|castor sugar]]

== Procedure ==
#Preheat the oven to 180 degrees 
#Crack the eggs and separate the egg yolk from the egg whites, place the egg whites into the bowl and beat the egg whites with the whisk until soft and fluffy
#Add the egg yolk and fold them in gently
#Pour into the fry pan and cook slowly on the stove until the bottom is golden brown
#Place the frying pan into the oven after taking it off the stove, leave it in until it is golden brown on the top
#Pull out of the oven and serve onto the plate 
#Pour and spread the jam gently over the omelette 
#Sift some icing sugar over the top of it 
#Enjoy

[[Category:Egg recipes|{{PAGENAME}}]]
[[Category:Omelette recipes|{{PAGENAME}}]]
[[Category:Breakfast recipes]]
[[Category:Pan fried recipes]]
[[Category:Jam and Jelly recipes]]</text>
      <sha1>mejqyibckq79i23bqa2h1r2atkiw3tk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Vanilla Fudge II</title>
    <ns>102</ns>
    <id>200117</id>
    <revision>
      <id>2692560</id>
      <parentid>2682063</parentid>
      <timestamp>2014-08-17T15:37:47Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Austncorp moved page [[Cookbook:Fancy Vanilla Fudge]] to [[Cookbook:Vanilla Fudge II]]: This name will make it easier to find.</comment>
      <text xml:space="preserve">{{recipe}}

If you think vanilla fudge is good, wait until you try the fancy vanilla fudge.

== Ingredients ==
*2 ½ cups of sugar
*½ a cup of butter
*5 oz. Can of evaporated milk
*2 cups of marshmallow crème
*8 oz. White chocolate candy bar
*¾ cup of chopped pecan nuts
*1 teaspoon of vanilla extract

== Procedure ==
#Line the baking tray with foil (extending it larger than the tray) and grease it up with some butter
#In the saucepan combine the sugar, milk and butter
#Cook on the stove on a medium level and constantly stir and bring to boil
#Boil for 5 minutes after reaching the boiling point and stir the mixture constantly (so it doesn’t burn)
#Remove it from the heat
#Add the marshmallow crème, white chocolate, pecans and the vanilla extract
#Stir the mixture until smooth
#Pour into the tray
#Leave to cool to room temperature 
#Then refrigerate till firm and the cut it up
#Enjoy!

[[Category:Confection recipes]]
[[Category:Fudge recipes]]</text>
      <sha1>fkpr1vumsjvopx28fw5o7xq31r6jaz3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Order of operations/Whole Numbers</title>
    <ns>0</ns>
    <id>200119</id>
    <revision>
      <id>1710227</id>
      <parentid>1710225</parentid>
      <timestamp>2010-02-01T18:14:15Z</timestamp>
      <contributor>
        <ip>205.208.75.179</ip>
      </contributor>
      <text xml:space="preserve">Do a following questions. Use a rules from [[Mathematics Worksheet/Order of operations/Rules]].

# &lt;math&gt;\!(64 + 74) \times\! 253 = \cdots&lt;/math&gt;
# &lt;math&gt;\!840 \div\! (49 - 34) = \cdots&lt;/math&gt;
# &lt;math&gt;\!(582 + 1,726) \times\! (1,728 - 729) = \cdots&lt;/math&gt;
# &lt;math&gt;\!1,275 \times\! 38 + \!9,720 \div\! 12 = \cdots&lt;/math&gt;
# &lt;math&gt;\!73,281+\!82,381-\!56,271=\cdots&lt;/math&gt;
# &lt;math&gt;\!5,628+\!762\times\!82-\!8,128=\cdots&lt;/math&gt;
# &lt;math&gt;\![(37+64)\times\!82]\times\!(5,324-3,375)=\cdots&lt;/math&gt;
# &lt;math&gt;\!45+\![(97-27\times\!2)]=\cdots&lt;/math&gt;
# &lt;math&gt;\!7,654\times\!65-\!(10,827+1,273)=\cdots&lt;/math&gt;
# &lt;math&gt;\!17,271+\!56,791\div\!21+\!6,281=\cdots&lt;/math&gt;
# &lt;math&gt;\![432\times\!(43+34)]\times\!64=\cdots&lt;/math&gt;
# &lt;math&gt;\!564-\![52\times\!(43-24)]+\![134+156\times\!74]=\cdots&lt;/math&gt;
# &lt;math&gt;\!3,437+\!6,382\div\!2=\cdots&lt;/math&gt;
# &lt;math&gt;\![(364+632)\times\!(321+246)]-\![(546-322)\times\!(653-495)]=\cdots&lt;/math&gt;
# &lt;math&gt;\!4,210\div\!10+\!7,280\times\!7=\cdots&lt;/math&gt;
# &lt;math&gt;\!(3,375+6,353)\div\!4+\![\!464+\!37\times\!63]=\cdots&lt;/math&gt;
# &lt;math&gt;\![(729+5,324)\times\!42]+684\times\!43=\cdots&lt;/math&gt;
# &lt;math&gt;\!1,353\div\!(91-58)\times\!756=\cdots&lt;/math&gt;
# &lt;math&gt;\!(23,251-20,357)\times\![\!657+\!43\times\!86]=\cdots&lt;/math&gt;
# &lt;math&gt;\!543+\!653\times\!364-\!5,636+\!16,461\div\!3=\cdots&lt;/math&gt;
# &lt;math&gt;\!203,453+\!453,432-\!4,245\times\!74=\cdots&lt;/math&gt;
# &lt;math&gt;\!165,463-\![\!(365+1,253)\times\!(1,253-365)]=\cdots&lt;/math&gt;
# &lt;math&gt;\![\!(570+425)\times\!160]\times\!(53+25-45)=\cdots&lt;/math&gt;
# &lt;math&gt;\!234\div\!37+\!45\times\!76-\!532=\cdots&lt;/math&gt;
# &lt;math&gt;\![\!53+42\times\!(125\div\!25)+6,667]+4,686=\cdots&lt;/math&gt;
# &lt;math&gt;\!(1,283+742)+\![\!46\times\!64+\!75\times\!139]=\cdots&lt;/math&gt;
# &lt;math&gt;\![\!(5,483+3,247)\times\!(\!7,557\div\!3)]+\!14,535=\cdots&lt;/math&gt;
# &lt;math&gt;\!78,273-\!652\times\!37=\cdots&lt;/math&gt;
# &lt;math&gt;\![\!657\times\!(\!54+\!65)-\!1,248]-3,829=\cdots&lt;/math&gt;
# &lt;math&gt;\![\!(\!5,438-\!2,357)\times\!(\!7,659\div\!9)]-\![(\!8,000\div\!20\times\!76)+673]=\cdots&lt;/math&gt;

[[Category:Mathematics Worksheet]]</text>
      <sha1>88uny8zs74o1ccqeuoyklvf69xsi93h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Linear Equation One Variable</title>
    <ns>0</ns>
    <id>200120</id>
    <revision>
      <id>1548812</id>
      <parentid>1543254</parentid>
      <timestamp>2009-06-26T04:34:31Z</timestamp>
      <contributor>
        <username>Triwikanto</username>
        <id>232158</id>
      </contributor>
      <text xml:space="preserve">Find the value of the variables.

# &lt;math&gt;\!3x+\!3=\!21&lt;/math&gt;
# &lt;math&gt;\!6-\!5x=\!-4&lt;/math&gt;
# &lt;math&gt;\!3y+\!5=\!8+\!2y&lt;/math&gt;
# &lt;math&gt;\!6x-\!5=\!25&lt;/math&gt;
# &lt;math&gt;\!5+\!3x=\!4x&lt;/math&gt;
# &lt;math&gt;\!5x-\!2=4\tfrac{1}{2}x&lt;/math&gt;
# &lt;math&gt;\!10x+\!5=\!10\tfrac{1}{2}x&lt;/math&gt;
# &lt;math&gt;\!5x-\!3=\!4x+\!2&lt;/math&gt;
# &lt;math&gt;\!6x-\!4=\!7x-\!17&lt;/math&gt;
# &lt;math&gt;\!10x+\!2=\!20x-\!28&lt;/math&gt;
# &lt;math&gt;\!15x=\!5+\!25&lt;/math&gt;
# &lt;math&gt;\!5x+\!6=3x+\!10&lt;/math&gt;
# &lt;math&gt;\!8y-\!1=\!31&lt;/math&gt;
# &lt;math&gt;\!4x+\!6=\!24&lt;/math&gt;
# &lt;math&gt;\!5y-\!4=\!6y-\!14&lt;/math&gt;
# &lt;math&gt;\!6+\!3x=\!5x&lt;/math&gt;
# &lt;math&gt;\!10y+\!5=\!20&lt;/math&gt;
# &lt;math&gt;\!2x+\!3=\!3x-\!7&lt;/math&gt;
# &lt;math&gt;\!4y+\!6=\!-16&lt;/math&gt;
# &lt;math&gt;\!5x=\!4x+\!10&lt;/math&gt;
# &lt;math&gt;\!4y+\!3=\!-8&lt;/math&gt;
# &lt;math&gt;\!x-\!5=\!9&lt;/math&gt;
# &lt;math&gt;\frac{2}{3}+\!x=\frac{5}{6}&lt;/math&gt;
# &lt;math&gt;\!x-5\tfrac{2}{5}=13\tfrac{3}{10}&lt;/math&gt;
# &lt;math&gt;\!6,3x+\!21,26=\!53,426&lt;/math&gt;
# &lt;math&gt;\!86+\!5y=\!101&lt;/math&gt;
# &lt;math&gt;\!15y-\!5=13\tfrac{1}{3}y&lt;/math&gt;
# &lt;math&gt;\!2(\!5y+\!3)=\!26&lt;/math&gt;
# &lt;math&gt;\!5x-\!20=\!100&lt;/math&gt;
# &lt;math&gt;\!64+\!x-\!36=\!140&lt;/math&gt;

[[Category:Mathematics Worksheet]]</text>
      <sha1>581y8tdoual9qlqb7a1q1wxhw0uyy87</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Solutions To Mathematics Textbooks/Calculus Early Transcendentals (6th) (0495011665)</title>
    <ns>0</ns>
    <id>200122</id>
    <revision>
      <id>2380161</id>
      <parentid>2380160</parentid>
      <timestamp>2012-07-21T21:45:06Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <comment>Not required, it already has {{BookCat}}</comment>
      <text xml:space="preserve">=Solutions to &quot;Single Variable Calculus: Early Transcendentals&quot;, (6th Edition) by Stewart, J.=

[[/Diagnostic Tests/]]

==Chapter 1, Functions and Models==
:1.1 [[/Chapter 1.1|Four Ways To Represent A Function]]
:1.2 [[/Chapter 1.2|Mathematical Models: A Catalog of Essential Functions]]
:1.3 New Functions from Old Functions
:1.4 Graphing Calculators and Computers
:1.5 Exponential Functions
:1.6 Inverse Functions and Logarithms
:Review
:Principles of Problem Solving

==Chapter 2, Limits and Derivatives==
:2.1 The Tangent and Velocity Problems
:2.2 The Limit of a Function
:2.3 [[/Chapter 2.3|Calculating Limits Using the Limit Laws]]
:2.4 The Precise Definition of a Limit
:2.5 Continuity
:2.6 Limits at Infinity; Horizontal Asymptotes
:2.7 Derivatives and Rates of Change
:2.8 The Derivative as a Function
:Review
:Problems Plus

==Chapter 3, Differentiation Rules==
:...
{{BookCat}}</text>
      <sha1>0kpc4iaiig55lo4mx0g98svvxx3ylgt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Solutions To Mathematics Textbooks/Calculus Early Transcendentals (6th) (0495011665)/Diagnostic Tests</title>
    <ns>0</ns>
    <id>200123</id>
    <revision>
      <id>1603615</id>
      <parentid>1576777</parentid>
      <timestamp>2009-08-08T20:51:26Z</timestamp>
      <contributor>
        <username>Damien Karras</username>
        <id>64316</id>
      </contributor>
      <minor />
      <text xml:space="preserve">=Diagnostic Tests=

==1==

a) &lt;math&gt;(-3)^4 = (-3)^2 \cdot (-3)^2 = 9 \cdot 9 = 81\,&lt;/math&gt;

b) &lt;math&gt;-3^4 = -(3^4) = -81 \,&lt;/math&gt;

{{BookCat}}</text>
      <sha1>2fuag11vrij4162umxfh8zucrbrtjmi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Pranjalkumar</title>
    <ns>2</ns>
    <id>200125</id>
    <revision>
      <id>1545259</id>
      <parentid>1543434</parentid>
      <timestamp>2009-06-23T05:02:20Z</timestamp>
      <contributor>
        <username>Pranjalkumar</username>
        <id>236724</id>
      </contributor>
      <text xml:space="preserve">{{userpage}}

'''Name:''' Pranjal Kumar Singh

'''Web: ''' www.technohelix.com</text>
      <sha1>8dvujawtwa04roz0ifc52ate5veuawm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Languages/Templates</title>
    <ns>14</ns>
    <id>200128</id>
    <revision>
      <id>1543443</id>
      <timestamp>2009-06-22T11:51:42Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">This category contains templates used in the [[Wikijunior:Languages]] book.

{{BookCat}}</text>
      <sha1>3t0u1njwnh6sllwl0woop43yf5h7e8n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Psychology/Survey</title>
    <ns>0</ns>
    <id>200130</id>
    <redirect title="Introduction to Psychology/Surveys" />
    <revision>
      <id>1543477</id>
      <timestamp>2009-06-22T13:01:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Psychology/Survey]] to [[Introduction to Psychology/Surveys]]: History merge</comment>
      <text xml:space="preserve">#REDIRECT [[Introduction to Psychology/Surveys]]</text>
      <sha1>pmn8500exn1ony1be5hgnbk58rawn3u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Psychology/Abnormal</title>
    <ns>0</ns>
    <id>200131</id>
    <redirect title="Introduction to Psychology/Abnormal Psychology" />
    <revision>
      <id>1543482</id>
      <timestamp>2009-06-22T13:04:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Psychology/Abnormal]] to [[Introduction to Psychology/Abnormal Psychology]]: History merge.</comment>
      <text xml:space="preserve">#REDIRECT [[Introduction to Psychology/Abnormal Psychology]]</text>
      <sha1>l66yfj8ifovnar7p2zac0lwoejmy42o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Computer Programming Principles</title>
    <ns>0</ns>
    <id>200135</id>
    <revision>
      <id>2157165</id>
      <parentid>2022047</parentid>
      <timestamp>2011-08-14T19:55:45Z</timestamp>
      <contributor>
        <username>Billegge</username>
        <id>464487</id>
      </contributor>
      <text xml:space="preserve">== Computer Programming Principles : Program Design ==

'''[[w:Computer programming|Computer Programming]]''' is the process of writing, testing, troubleshooting, debugging and maintaining of a computer program. Good programming practices mix art, craft and engineering discipline. This book will teach you the basic principles of computer programming and good programming practices. What this book will not do is teach you to use a specific programming language. This book may also be useful as part of a course on computer theory, computer engineering, or software engineering, along side learning a programming language, or as part of an advanced programming course.

&lt;div style=&quot;width:95%; margin:auto;&quot;&gt;
&lt;div style=&quot;width:30%; margin:1em 0em; padding:0.5em 1em; border:1px solid blue; float:left; background:honeydew;&quot;&gt;
=== [[/The Problem/]] ===
* [[/The Problem/Brainstorming|Brainstorming]]
* [[/The Problem/Divide And Conquer|Divide And Conquer]]
* [[/The Problem/Complexity Reduction|Complexity Reduction]]
* [[/The Problem/Simplification|Simplification]]
* [[/The Problem/Generalization|Generalization]]
* [[/The Problem/Research|Research]]
* [[/The Problem/Hypothesis Testing|Hypothesis Testing]]
* [[/The Problem/Trial And Error|Trial And Error]]
&lt;/div&gt;

&lt;div style=&quot;width:30%; margin:1em 0em; padding:0.5em 1em; border:1px solid blue; border-left:0px; float:left; background:honeydew;&quot;&gt;
=== [[/Solutions/]] ===
* [[/Solutions/Brainstorming|Brainstorming]]
* [[/Solutions/Divide And Conquer|Divide And Conquer]]
* [[/Solutions/Complexity Reduction|Complexity Reduction]]
* [[/Solutions/Simplification|Simplification]]
* [[/Solutions/Generalization|Generalization]]
* [[/Solutions/Research|Research]]
* [[/Solutions/Hypothesis Testing|Hypothesis Testing]]
* [[/Solutions/Trial And Error|Trial And Error]]
&lt;/div&gt;

&lt;div style=&quot;width:30%; margin:1em 0em; padding:0.5em 1em; border:1px solid blue; border-left:0px; float:left; background:honeydew;&quot;&gt;
=== [[/Identifying The Approach/]] ===
* [[/Identifying The Approach/Brainstorming|Brainstorming]]
* [[/Identifying The Approach/Divide And Conquer|Divide And Conquer]]
* [[/Identifying The Approach/Complexity Reduction|Complexity Reduction]]
* [[/Identifying The Approach/Simplification|Simplification]]
* [[/Identifying The Approach/Generalization|Generalization]]
* [[/Identifying The Approach/Research|Research]]
* [[/Identifying The Approach/Hypothesis Testing|Hypothesis Testing]]
* [[/Identifying The Approach/Trial And Error|Trial And Error]]
&lt;/div&gt;
&lt;/div&gt;

&lt;div style=&quot;width:95%; margin:auto; clear:both;&quot;&gt;
&lt;div style=&quot;width:30%; margin:1em 0em; padding:0.5em 1em; border:1px solid blue; float:left; background:honeydew;&quot;&gt;
=== [[/Quality Requirements/]] ===
* [[/Quality Requirements/Performance|Performance]]
* [[/Quality Requirements/Reliability|Reliability]]
* [[/Quality Requirements/Robustness|Robustness]]
* [[/Quality Requirements/Usability|Usability]]
* [[/Quality Requirements/Portability|Portability]]
* [[/Quality Requirements/Operability|Operability]]
* [[/Quality Requirements/Hypothesis Testing|Hypothesis Testing]]
* [[/Quality Requirements/Trial And Error|Trial And Error]]
&lt;/div&gt;

&lt;div style=&quot;width:30%; margin:1em 0em; padding:0.5em 1em; border:1px solid blue; border-left:0px; float:left; background:honeydew;&quot;&gt;
=== [[/Methodologies/]] ===
* [[/Methodologies/Waterfall|Waterfall]]
* [[/Methodologies/Prototyping|Prototyping]]
* [[/Methodologies/Incremental|Incremental]]
* [[/Methodologies/Spiral|Spiral]]
* [[/Methodologies/Object-oriented|Object-oriented]]
* [[/Methodologies/Functional|Functional]]
* [[/Methodologies/Procedural|Procedural]]
* [[/Methodologies/Rapid Application Development|Rapid Application Development]]
* [[/Methodologies/Reverse Programming|Reverse Programming]]
&lt;/div&gt;

&lt;div style=&quot;width:30%; margin:1em 0em; padding:0.5em 1em; border:1px solid blue; border-left:0px; float:left; background:honeydew;&quot;&gt;
=== [[/Documentation/]] ===
* [[/Documentation/Requirements|Requirements]]
* [[/Documentation/Design|Design]]
* [[/Documentation/Technical|Technical]]
* [[/Documentation/User|User]]
* [[/Documentation/Changes|Changes]]
* [[/Documentation/Research|Research]]
* [[/Documentation/Hypothesis Testing|Hypothesis Testing]]
* [[/Documentation/Trial And Error|Trial And Error]]
&lt;/div&gt;
&lt;/div&gt;

&lt;div style=&quot;width:95%; margin:auto; clear:both;&quot;&gt;
&lt;div style=&quot;width:30%; margin:1em 0em; padding:0.5em 1em; border:1px solid blue; float:left; background:honeydew;&quot;&gt;
=== [[/Maintaining/]] ===
* [[/Maintaining/Testing|Testing]]
* [[/Maintaining/Troubleshooting|Troubleshooting]]
* [[/Maintaining/Debugging|Debugging]]
* [[/Maintaining/Optimizing|Optimizing]]
* [[/Maintaining/Updating|Updating]]
&lt;/div&gt;

&lt;div style=&quot;width:30%; margin:1em 0em; padding:0.5em 1em; border:1px solid blue; border-left:0px; float:left; background:honeydew;&quot;&gt;
=== [[/Appendixes/]] ===
* [[/Appendixes/Bibliography|Bibliography]]
* [[/Appendixes/Languages|Language Comparison]]
* [[/Appendixes/Decision Making|Decision Making]]
* [[/Appendixes/Copying|Copying]]
* [[/Appendixes/Contributors|Contributors]]
&lt;/div&gt;
&lt;/div&gt;
__NOTOC__ __NOEDITSECTION__
{{subjects|computer programming}}
{{alphabetical|c}}
{{status|0%}}</text>
      <sha1>7z8emngj8fpbtradjegiwerc1t52fes</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Psychology</title>
    <ns>0</ns>
    <id>200136</id>
    <redirect title="Subject:Psychology" />
    <revision>
      <id>1852621</id>
      <parentid>1543538</parentid>
      <timestamp>2010-06-23T13:22:17Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Redirected page to [[Subject:Psychology]]</comment>
      <text xml:space="preserve">#REDIRECT [[Subject:Psychology]]</text>
      <sha1>3capmaulve9a01tvevofho938u4w20n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Computer Programming Principles/Appendixes/Copying</title>
    <ns>0</ns>
    <id>200137</id>
    <revision>
      <id>1852198</id>
      <parentid>1852197</parentid>
      <timestamp>2010-06-22T16:59:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>cleanup</comment>
      <text xml:space="preserve">{{imbox
|type=license
|image=[[Image:CC some rights reserved.svg|90px|CC]]&lt;br/&gt;[[Image:Cc-by_new_white.svg|24px|BY]][[Image:Cc-sa white.svg|24px|&amp;nbsp;SA]]
|text=This work is licensed under the [[w:Creative Commons|Creative&amp;nbsp;Commons]] [http://creativecommons.org/licenses/by-sa/3.0/ Attribution-Share Alike 3.0 Unported] license. In short: you are free to share and to make derivatives of this work under the conditions that you appropriately attribute it, and that you only distribute it under the same, similar or a [http://creativecommons.org/compatiblelicenses compatible] license. Any of the above conditions can be waived if you get permission from the copyright holder.{{#if:|&lt;br/&gt;&lt;br/&gt;Attribution: }}''
}}
{{BookCat}}</text>
      <sha1>tedi2t4ydnn2c2yqe87sv6hz6u0zfg4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Requests for deletion/Cyberman Psychology</title>
    <ns>4</ns>
    <id>200138</id>
    <revision>
      <id>1659513</id>
      <parentid>1546240</parentid>
      <timestamp>2009-11-18T03:50:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Wikibooks:Votes for deletion/Cyberman Psychology]] to [[Wikibooks:Requests for deletion/Cyberman Psychology]]: Per [[Wikibooks_talk:Votes_for_deletion#Page_rename_proposal]]</comment>
      <text xml:space="preserve">&lt;noinclude&gt;== Cyberman Psychology ==&lt;/noinclude&gt;
{{closed|Closed as [[File:Symbol delete vote.svg|15px]] '''Delete''' since the pages with content have been merged into [[Introduction to Psychology]] and the histories are now merged. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 13:52, 22 June 2009 (UTC)}}
I'm nominating this for deletion because it's now been merged into [[Introduction to Psychology]] where appropriate.  Chapter 1 and Chapter 3 have been merged while Chapter 2 and 4 remain.  However, 2 and 4 are only a collection of links to Wikipedia articles and do not contain actual content.  On a more subjective note, the book was apparently named after its creator, which is pretty anathema to the concept of an open wiki. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 02:04, 1 June 2009 (UTC)
:If chapters 1 &amp; 3 have been merged (&amp; history-merged?) then [[File:Symbol delete vote.svg|15px]] '''delete forthwith''' &amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 00:30, 4 June 2009 (UTC)
:: [[File:Symbol opinion vote.svg|15px]] '''FYI:''' Chapter 1 was simply moved into the Introduction to Psychology as a subpage, but Chapter 3 does need a history merge - I did that one manually into an existing page. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 01:12, 4 June 2009 (UTC)
{{end closed}}</text>
      <sha1>n6m3cq8g6l72bxguzp1d9nijrj5gjc2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Computer Programming Principles/The Problem</title>
    <ns>0</ns>
    <id>200139</id>
    <revision>
      <id>1760869</id>
      <parentid>1739094</parentid>
      <timestamp>2010-04-19T11:59:15Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <comment>Undo revision 1739094 by [[Special:Contributions/91.64.24.144|91.64.24.144]] ([[User talk:91.64.24.144|talk]])</comment>
      <text xml:space="preserve">== The Problem ==

Most software programs are made because there is a problem that needs to be addressed or solved. Before a problem can be addressed, you need to clearly identify the problem or problems that need to be addressed. In this section you will learn basic skills to identifying problems.

=== Problem Statement ===

A problem statement is a description of the issues that need to be addressed. A good problem statement answers:

# What is the problem? This should help explain why a program is needed.
# Who has the problem? This should help identify who is likely to use the program.

If the answers are too general, thinking and creativity may be required.

{{BookCat}}</text>
      <sha1>qmnioxsy91mnmsd7t2fdct59wbva0lr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>ITerm</title>
    <ns>0</ns>
    <id>200140</id>
    <redirect title="DisablingBells/iTerm" />
    <revision>
      <id>1543569</id>
      <timestamp>2009-06-22T13:56:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[ITerm]] to [[DisablingBells/iTerm]]: History merge.</comment>
      <text xml:space="preserve">#REDIRECT [[DisablingBells/iTerm]]</text>
      <sha1>i09txu91les3977ooufnorw9xl4gscw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Diatonic Harmonica/XB-40 and Valved diatonic</title>
    <ns>0</ns>
    <id>200141</id>
    <redirect title="Harmonica/Types of harmonica" />
    <revision>
      <id>1543574</id>
      <timestamp>2009-06-22T14:02:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Diatonic Harmonica/XB-40 and Valved diatonic]] to [[Harmonica/Types of harmonica]]: History merge.</comment>
      <text xml:space="preserve">#REDIRECT [[Harmonica/Types of harmonica]]</text>
      <sha1>p1pk0sw4c8x1igethvb66zp7iuwkg78</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Computer Programming Principles</title>
    <ns>14</ns>
    <id>200142</id>
    <revision>
      <id>1543579</id>
      <timestamp>2009-06-22T14:04:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Computer programming]]</text>
      <sha1>t28enuzlnqcdpa8zx2niuccvxvbq1a4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Triwikanto</title>
    <ns>3</ns>
    <id>200148</id>
    <revision>
      <id>1713615</id>
      <parentid>1713613</parentid>
      <timestamp>2010-02-07T00:03:02Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <comment>Notification regarding [[:Collection of Western Song Lyrics]]. using [[User:Mike.lifeguard/Twinkle Speedy documentation|TW]]</comment>
      <text xml:space="preserve">&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Triwikanto!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 14:27, 22 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;

Lots of luck with your book [[Mathematics Worksheet]].  When it is more complete you can nominate it to be a featured book from the featured books page.  Have fun writing.  If you have any questions feel free to drop by my talk page.  [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 14:24, 22 June 2009 (UTC)

== [[Collection of Western Song Lyrics]] ==

I'm sorry, but I don't believe this book is within the scope of Wikibooks.  It's not a textbook intended to teach a topic.  Additionally, I feel it puts us at risk for copyright violation for the lyrics you've posted for songs that are not public domain.  And if the lyrics were public domain, they'd be a better fit at [[s:|Wikisource]] instead. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 02:27, 6 February 2010 (UTC)

{{mbox|type=warning|msg='''Wikibooks cannot accept [[Wikibooks:Copyrights|copyrighted]] materials.'''&lt;br/&gt;We [[Wikibooks:Welcome, newcomers|welcome]] and appreciate your contributions. If [[:Collection of Western Song Lyrics/Mario - Let Me Love You]] uses an acceptable copyleft license or the copyright holder(s) are willing to give [[Wikibooks:Boilerplate_request_for_permission|permission]] to use it under an acceptable copyleft license, then you need to include the licensing information with it. Please read [[Wikibooks:Media]] to learn more about the requirements. After 7 days if this is not addressed appropriately we will have to delete it [[WB:COPYVIO|per policy]]. If you have any questions you can ask me personally or ask in the [[WB:HELP|reading room]]. Thank you; Happy editing! &lt;font color=&quot;#E66C2C&quot;&gt;[[User:QuiteUnusual|'''QU''']]&lt;/font&gt; &lt;sup&gt;&lt;font color=&quot;#306754&quot;&gt;[[User talk:QuiteUnusual|TalkQu]]&lt;/font&gt;&lt;/sup&gt; 00:01, 7 February 2010 (UTC)}}

{{mbox|type=warning|msg='''Wikibooks cannot accept [[Wikibooks:Copyrights|copyrighted]] materials.'''&lt;br/&gt;We [[Wikibooks:Welcome, newcomers|welcome]] and appreciate your contributions. If [[:Collection of Western Song Lyrics/Boyz 2 Men - End Of The Road]] uses an acceptable copyleft license or the copyright holder(s) are willing to give [[Wikibooks:Boilerplate_request_for_permission|permission]] to use it under an acceptable copyleft license, then you need to include the licensing information with it. Please read [[Wikibooks:Media]] to learn more about the requirements. After 7 days if this is not addressed appropriately we will have to delete it [[WB:COPYVIO|per policy]]. If you have any questions you can ask me personally or ask in the [[WB:HELP|reading room]]. Thank you; Happy editing! &lt;font color=&quot;#E66C2C&quot;&gt;[[User:QuiteUnusual|'''QU''']]&lt;/font&gt; &lt;sup&gt;&lt;font color=&quot;#306754&quot;&gt;[[User talk:QuiteUnusual|TalkQu]]&lt;/font&gt;&lt;/sup&gt; 00:02, 7 February 2010 (UTC)}}

==[[Collection of Western Song Lyrics]]==
{{mbox|type=notice|msg=
Thank you for your interest in Wikibooks, but [[Collection of Western Song Lyrics|this page]] appears as though it may have been created in error (such as due to a test or a misplaced edit). Should it be a legitimate [[WB:WIW|legitimate Wikibooks module]], please use [[{{TALKPAGENAME:Collection of Western Song Lyrics}}|the discussion page]] to explain its scope. If these concerns are not responded to, the page will automatically be considered a candidate for [[Wikibooks:Deletion policy#Speedy deletions|speedy deletion]] in 7 days. &lt;font color=&quot;#E66C2C&quot;&gt;[[User:QuiteUnusual|'''QU''']]&lt;/font&gt; &lt;sup&gt;&lt;font color=&quot;#306754&quot;&gt;[[User talk:QuiteUnusual|TalkQu]]&lt;/font&gt;&lt;/sup&gt; 00:03, 7 February 2010 (UTC)
}}</text>
      <sha1>dl85yhd7q1lz1p3239v64owpi012utd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:MirianBruckschen</title>
    <ns>2</ns>
    <id>200150</id>
    <revision>
      <id>1543641</id>
      <parentid>1543640</parentid>
      <timestamp>2009-06-22T14:37:28Z</timestamp>
      <contributor>
        <username>MirianBruckschen</username>
        <id>234673</id>
      </contributor>
      <text xml:space="preserve">===About me===

Brazilian contributor, for a long time not really active. Interested in Artificial Intelligence, Knowledge Representation and Natural Language Processing, and heavily interested in everything related to Language and Linguistics. 

And I miss my userboxes here :(

===Contact===

* Email: cleo.sl at gmail.com
* Homepage: http://mirian.is.dreaming.org
* At pt.wikipedia.org: http://pt.wikipedia.org/wiki/Usu%C3%A1rio:MirianBruckschen
* Talk page :)</text>
      <sha1>4rjy58cc0a8tvlhivaye4zlif3s1gce</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Languages</title>
    <ns>14</ns>
    <id>200151</id>
    <revision>
      <id>2488033</id>
      <parentid>1543643</parentid>
      <timestamp>2013-02-15T08:02:41Z</timestamp>
      <contributor>
        <username>VolkovBot</username>
        <id>171303</id>
      </contributor>
      <minor />
      <comment>r2.7.2) (Robot: Adding [[az:Kateqoriya:Vikiuşaq:Dillər]]</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[Wikijunior:Languages]] book.

[[Category:Wikijunior Our World of People|Languages]]

[[az:Kateqoriya:Vikiuşaq:Dillər]]</text>
      <sha1>a6n0fjfbycdmv2y1ngup77jeicgs9ve</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Introduction</title>
    <ns>0</ns>
    <id>200154</id>
    <revision>
      <id>2010145</id>
      <parentid>2010141</parentid>
      <timestamp>2010-12-30T18:41:52Z</timestamp>
      <contributor>
        <username>Eric.a.booth</username>
        <id>414281</id>
      </contributor>
      <comment>/* Stata Basics */</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;


== Why use Stata ? ==

* It includes the very latest methods in econometrics
* It is a portable software (ie you can install it on your USB stick) 
* It is widely used in economics/econometrics.
* It is commercial but it can utilize user-written functions.
* It has a nice Graphical User Interface

== Stata Basics ==

Stata Windows
* Command
* Review
* Variables 
* Variables Manager
* Results
* Data Editor 
* Data browser 
* Graph editor
* Do-file editor 

=== Main Windows ===

* All the results appears in the '''Results''' window.
* The '''Command''' window can be used to interactively give instructions to Stata. This is an alternative to using the dialog boxes accessed via Stata drop-down menus or running Stata in batch mode using a do-file or ado-file.
* The '''Variables''' window lists all variables and labels of the dataset in memory. You can click on the name of a variable and it appears in the command window.
* The  '''Variables Manager''' allows the user to quickly view and edit all the variable names, variable labels, formats, value labels, and notes.
* The '''Review''' window shows a list of past instructions. It can be useful if you want to quickly do things again. You just have to click on an instruction and it will appear again in the ''command window''. 
* You can also have a look at your data by typing in the command window -browse- or -edit-.
** -edit- allow you to change your datasets by hand, exactly as in excel. However this is not recommanded.
** -browse- may be a safer option. If you want to have a look at a specific list of variables, you can specify it to Stata by typing in the command window :
&lt;pre&gt;browse var1 var2 var3&lt;/pre&gt;
* The '''viewer''' window displays any SMCL (Stata Markup Control Language) file, such as help documentation.
* The '''do-file editor''' allows users to create and edit do-files and ado-files.

=== Keyboard shortcuts ===

* Ctrl + D : do a program (selected text or whole do file)
* ⌘ + Shift + D : do a program (Mac OS 10+)

=== Basic commands ===

* -help- (or -h-) : gives the help file of a command in a Viewer window.
&lt;pre&gt;
h reg
&lt;/pre&gt; 

* -search- : search local help files for a keyword. 
&lt;pre&gt;
search covariance
&lt;/pre&gt; 

* -findit- : search a keyword across local and net-based files.
&lt;pre&gt;
findit covariance
&lt;/pre&gt;

* -cd- : change working directory
&lt;pre&gt;
cd  &quot;~/Desktop&quot;
&lt;/pre&gt;

* -pwd- : displays the print working directory. 
&lt;pre&gt;
pwd
&lt;/pre&gt;

* -dir- or -ls- :  list all the files in the working directory
&lt;pre&gt;
ls /* Lists all files in the directory */
ls , w /* the 'w' option simplifies the output*/
ls *.dta, w /* lists all files ending with '''.dta''' */
&lt;/pre&gt;

=== Stata Do-files ===

The command -doedit- opens a new do-file editor. 
 . doedit

== Stata Programming Style ==

* Most command can be abbreviated. For instance: 
** g or gen stands for generate
** h for help
** su for summarize
** gr for graph
** sc for scatter
** etc
* No brackets  
* * at the beginning of a line stands for comment
* Stata is case sensitive.

== Updates, News, etc ==


 . view news

&lt;pre&gt;
. news
&lt;/pre&gt;

&lt;pre&gt;
. update
&lt;/pre&gt;

{{Stata/Navbar||Settings}}</text>
      <sha1>p1ym7duogzd971sosrb13z7ssmm0woy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Requests for deletion/Hot Topics in HRM 2007</title>
    <ns>4</ns>
    <id>200155</id>
    <revision>
      <id>1659637</id>
      <parentid>1546242</parentid>
      <timestamp>2009-11-18T03:50:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Wikibooks:Votes for deletion/Hot Topics in HRM 2007]] to [[Wikibooks:Requests for deletion/Hot Topics in HRM 2007]]: Per [[Wikibooks_talk:Votes_for_deletion#Page_rename_proposal]]</comment>
      <text xml:space="preserve">&lt;noinclude&gt;== Hot Topics in HRM 2007 ==&lt;/noinclude&gt;
{{closed|Closed as [[File:Symbol delete vote.svg|15px]] '''Delete''' - Effort made to contact primary contributor on May 28, 2009&amp;mdash;no response. Book contains no content to merge and no objections have been raised beyond the need for the aforementioned query. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 17:06, 22 June 2009 (UTC)}}
This book was apparently created for a class project.  Human Resources Management is what I assume the HRM stands for.  If you look at [[:Category:Hot Topics in HRM 2007]] you might see a great number of pages.  However, look at any of those pages and they have, at most, a link to rate the page.  Given the 2007 in the title and the main contributor's last efforts made in December 2006, it would appear the book is no longer relevant to any class and stands little hope of going anywhere or serving any purpose. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 02:37, 29 May 2009 (UTC)
:[[Image:Symbol delete vote.svg|15px]] '''Delete''' Man... I love having [[User:Adrignola|Adrignola]] around here.  --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 13:00, 29 May 2009 (UTC)

:[[Image:Symbol delete vote.svg|15px]] '''Delete'''. &lt;font color=&quot;#E66C2C&quot;&gt;[[User:QuiteUnusual|'''Unusual? Quite''']]&lt;/font&gt; &lt;sup&gt;&lt;font color=&quot;#306754&quot;&gt;[[User talk:QuiteUnusual|TalkQu]]&lt;/font&gt;&lt;/sup&gt; 10:49, 31 May 2009 (UTC)
:This is a project from ODU - someone should make an effort to contact the coordinator before we do anything else. &amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 00:29, 4 June 2009 (UTC)
:: [[File:Symbol opinion vote.svg|15px]] '''FYI:''' I did place a notice on the page of [[User:Pmo200g|Pmo200g]] who was the first logged-in contributor.  Previous to that it was an IP address.  You may have the rights to determine if they are the same user.  The user just mentioned has the following on their description page: &quot;Dr. O'Shea is the Director of the Handheld Augmented Reality Project at Harvard University's Graduate School of Education.&quot;.  If they were the original creator of the page at the IP in the history, then I'm inclined to think it's ''not'' an ODU project. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 01:17, 4 June 2009 (UTC)
{{end closed}}</text>
      <sha1>6tkq7cit1md93a576uc7bw64jz7uydx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Non-Alcoholic Tiramisu</title>
    <ns>102</ns>
    <id>200157</id>
    <revision>
      <id>1751233</id>
      <parentid>1543751</parentid>
      <timestamp>2010-04-05T10:10:13Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 cup mascarpone cheese
* 4  Twinkies, halved
* 1/2 cup sugar
* 1 cup espresso, cooled
* Unsweetened cocoa powder as needed
* 2 egg yolks, beaten

== Procedure ==
#Scoop out cream filling from inside of Twinkies and place halves in a 9x9 high-sided square baking pan in a flat layer and top with espresso. Discard cream.
#Combine egg yolks, cheese, and sugar. Drain excess espresso from Twinkies. Pour cheese mixture over Twinkies and smooth with an offset spatula.
#Place as much cocoa powder as you think you'll need into a sifter or container with a shaker lid and liberally dust on top of cheese. Serve.</text>
      <sha1>cqewnx8ohpwap0f7tlo5d7lepgg66uf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Lemon Mayonnaise</title>
    <ns>102</ns>
    <id>200159</id>
    <revision>
      <id>2686102</id>
      <parentid>1740066</parentid>
      <timestamp>2014-07-31T01:04:56Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 8 [[Cookbook:Egg yolk|egg yolks]]
* 1/2 [[Cookbook:cup|cup]] extra-virgin [[Cookbook:Olive Oil|olive oil]], divided
* 2 [[Cookbook:tbsp|tbsp]] freshly squeezed [[Cookbook:Lemon Juice|lemon juice]]
* 1 [[Cookbook:tsp|tsp]] of [[Cookbook:Cayenne Pepper|cayenne pepper]]
* 3/4 [[Cookbook:tsp|tsp]] [[Cookbook:salt|salt]]
* 3/4 [[Cookbook:tsp|tsp]] white [[Cookbook:pepper|pepper]]
* 2 [[Cookbook:tsp|tsp]] finely grated [[Cookbook:Lemon zest|lemon zest]]

== Procedure ==
#Whisk together all ingredients except for oil in a large bowl. One tablespoon at a time, slowly drizzle in oil while continually whisking. Keep refrigerated for up to 3 weeks in a nonreactive container.

[[Category:Lemon recipes]]
[[Category:Mayonnaise recipes]]
[[Category:Refrigerated recipes]]</text>
      <sha1>9gbmcx3ugjva4vanowqq9qytf7fduor</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Applewood Bacon</title>
    <ns>102</ns>
    <id>200160</id>
    <revision>
      <id>2678223</id>
      <parentid>2305985</parentid>
      <timestamp>2014-07-03T02:47:42Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added cats for bacon, pork, smoked.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
*1 pork belly from the loin end
*2 cups salt
*2 cups granulated sugar
*1 gallon apple cider
*1 gallon iced water
*Applewood chunks

== Procedure ==
#In a large pot bring to a boil apple cider. Dissolve salt and sugar. 
#Move to a very large container and add iced water. 
#Once ice has melted and brine is cool enough, insert pork belly. 
#Refrigerate for 3 days. 
#Remove and place on top of a running box fan for 30 minutes per side.
#Place dry applewood chunks in the firebox of a cold smoker. 
#Insert pork belly and smoke for 3-4 hours. 
#Remove and place in the freezer for up to 2 hours. 
#Slice as thick or as thin as you like and cook or refrigerate for up to 3 weeks.

[[Category:Bacon recipes|{{PAGENAME}}]]
[[Category:Pork recipes|{{PAGENAME}}]]
[[Category:Smoked recipes|{{PAGENAME}}]]</text>
      <sha1>g21zkcyts1bjlv9cz2hoyyzxs8hm5j2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Common Lisp/External libraries/Funds</title>
    <ns>0</ns>
    <id>200161</id>
    <revision>
      <id>2064151</id>
      <parentid>1544368</parentid>
      <timestamp>2011-03-04T19:23:19Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: of it's → of its using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">Funds defines several “functional” data structures for Common Lisp.  Functional data structures, also sometimes known as persistent data structures, are data structures that are immutable, or do not modify their contents.  Instead of modifying, they creates a new object which has some changes in it, but is otherwise the same as the old.  This may seem inefficient, but the new object is created in such a way that it shares much of its contents with the old object, making this a cheap operation.  By using these techniques, functional data structures can come close to providing the same performance as mutable data structures but without the added complexity of mutable state.

One functional data structure that every Lisp programmer is familiar with is the list.  While a list can be destructively modified, it isn't in standard usage, and operations on lists produce new lists that share structure with the original list.  For instance, you can CONS an element onto the head of a list and the list returned shares the entire old list but with a new head tacked in front of the old one.

Functional data structures are particularly useful for multiprocessing applications as they can remove the danger of one process changing a shared data structure in a way that invalidates that structure for another processes.

==Further Reading==
http://common-lisp.net/project/funds/ Homepage

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>4thmfqj0s9xft5653s1xmbw17rjmmts</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Computer Programming Principles/Maintaining/Testing</title>
    <ns>0</ns>
    <id>200162</id>
    <revision>
      <id>1726006</id>
      <parentid>1712856</parentid>
      <timestamp>2010-02-24T17:16:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Reverted edits by [[Special:Contributions/144.36.135.204|144.36.135.204]] ([[User talk:144.36.135.204|Talk]]) to last revision by [[User:Gallaiis|Gallaiis]]</comment>
      <text xml:space="preserve">== Introduction ==

'''[[w:Software testing|Software testing]]''' is used to gain valuable information about a program's quality and can be used to uncover problems. Software testing is only as good at the conditions tested for. Untested conditions can still cause a program to function in unexpected ways. Knowing what requirements and priorities the program has is a major step in preparation for software testing. Software testing can help you find answers to:

* Are the requirements for the program satisfied?
* Are there any gaps in the program's requirements?
* Are there defects or failures in the program's designed?
* Are there any unexpected errors?
* Does the program work as expected?

== Build scripts ==

Try to set up [http://c2.com/cgi/wiki?OneButtonTesting &quot;one-button testing&quot;].
That makes it much more convenient to type a little, then hit that button which
* saves the file you just edited,
* compiles the application with all the appropriate options (such as &quot;-fno-emit-frame&quot;, if necessary), and
* runs a few quick tests, to make sure your &quot;improvements&quot; don't accidentally break something else.

Spending an hour to code up a few tests and set up one-button testing may *seem* like it is more hassle than it is worth. Manually compiling the file, and manually run through the various parts of the application to make sure they work, may take far less than an hour.
But trust me, most programs you are going to edit-compile-test many, many times.
And a year from now, when you make just one tiny little change, wouldn't you much rather push-the-button and be done with it, rather than
* manually compile the file
* manually run through the application and see that it suddenly it doesn't work any more
* pull out your hair until
* hours later, you remember you needed to include &quot;-fno-emit-frame&quot;
* manually re-compile the file, this time with &quot;-fno-emit-frame&quot;
* start testing all over from the beginning.

{{wikipedia|Continuous integration}}
There are lots of ways to set up an [[Wikipedia:Make_(software) | automated build system]].

One-button testing is just one part of the continuous integration recommended by some programmers.

Even lawyers can see the advantages of automated build scripts. &lt;ref&gt;[http://www.softwarefreedom.org/resources/2008/compliance-guide.html#x1-70003.4 'Avoid the “Build Guru”']&lt;/ref&gt;

== Further reading ==

{{reflist}}

{{BookCat}}</text>
      <sha1>ka8zjabn2639187zlpawyc3z88kte5b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Computer Programming Principles</title>
    <ns>1</ns>
    <id>200163</id>
    <revision>
      <id>2226246</id>
      <parentid>1994474</parentid>
      <timestamp>2011-12-02T17:54:47Z</timestamp>
      <contributor>
        <ip>75.80.20.99</ip>
      </contributor>
      <comment>/* Redlinks ? */ new section</comment>
      <text xml:space="preserve">==Structure==
[[User:DavidCary|DavidCary]] made [http://en.wikibooks.org/w/index.php?title=Computer_Programming_Principles&amp;diff=1543769&amp;oldid=1543592 a change] to the book's contents for a flat structure, using [[Help:Editing#Subpage links]] as justification. Seeing as [[User:Darklama|Darklama]] initially set up the book with a hierarchical structure just recently, I feel discussion would be prudent before such a change is made. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 18:14, 22 June 2009 (UTC)

I believe a hierarchical structure is necessary with the current page naming. You'll notice that the sections under The Problem, Solutions, Identifying The Approach, and Quality Requirements have identical pages. The flat structure will result in name conflicts, while a structure using chapters will allow pages of the same names that are associated with each chapter. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 18:14, 22 June 2009 (UTC)

: The flat structure also allows pages of the same name to be associated with more than one chapter.
: The flat structure allows a page called &quot;Trial And Error&quot; to be placed in more than one chapter.
: [http://www.communitywiki.org/en/HierarchyConsideredHarmful HierarchyConsideredHarmful] discusses some flaws of deep hierarchy that are fixed by using the flat structure, as suggested by [[Help:Editing#Subpage links]]. --[[User:DavidCary|DavidCary]] ([[User talk:DavidCary|talk]]) 19:12, 22 June 2009 (UTC)

:: I'm very disappointed that you didn't wait for the ''original author'' of the book to comment before completely changing the structure of the book '''again'''. Did Darklama want &quot;Trial and Error&quot; to be in more than one chapter? From the original structure it would appear to be &quot;no&quot;; but that is why I began a discussion on this, to get his input. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 19:22, 22 June 2009 (UTC)

The flat approach only makes since if the intent was to identify problems, solutions and approaches in one go, which is not the intent. While a problem solving approach is intended to be used in the first three units/sections, breaking it down is intended to make the process easier for people new to the process, keep people focused on doing one step at a time, and also help people to see what the similarities and the differences are in each step on their own without forcing too much information on them at once. This has nothing to do with hierarchy, but rather separating concepts. Too little separation can also be considered harmful and can lead to its own problems. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 20:16, 22 June 2009 (UTC)

== Redlinks ? ==

Why are there so many redlinks on this article ? [[Special:Contributions/75.80.20.99|75.80.20.99]] ([[User talk:75.80.20.99|discuss]]) 17:54, 2 December 2011 (UTC)</text>
      <sha1>8o9wnbwf8csa8zsbduuvbo688wf6not</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Chipotle BBQ Chicken Nuggets</title>
    <ns>102</ns>
    <id>200164</id>
    <revision>
      <id>2682750</id>
      <parentid>2681195</parentid>
      <timestamp>2014-07-19T18:30:05Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Distinguishing the various types of frying cats.</comment>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Southwestern cuisine|Southwestern U.S. cuisine]]

== Ingredients ==
* 4 boneless skinless chicken breast halves, cut into 1 1/2 in. pieces
* Cornmeal as needed
* Freshly squeezed lemon juice as needed
* 3 tbsp [[Cookbook:Chipotle BBQ Rub|Chipotle BBQ Rub]]
* Oil for deep-frying
* Black pepper

== Procedure ==
#Place cornmeal in a pie pan and lemon juice in another pie pan.
#Dip chicken pieces in lemon juice then season with Rub. Dip again in lemon juice.
#Dredge pieces, three at a time, into cornmeal then dip in lemon juice again then dredge again in cornmeal.
#Heat oil to 350° and fry pieces in batches for 6 minutes. Drain on a cooling rack but '''not''' paper towels. Sprinkle with black pepper and serve.

[[Category:Southwestern recipes]]
[[Category:Chicken recipes]]
[[Category:Deep fried recipes]]
[[Category:Appetizer recipes]]
[[Category:Main course recipes]]</text>
      <sha1>jypu6ttdycs7f18wcdea28db2wdnv42</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Computer Programming Principles/Testing</title>
    <ns>0</ns>
    <id>200166</id>
    <redirect title="Computer Programming Principles/Maintaining/Testing" />
    <revision>
      <id>1543788</id>
      <timestamp>2009-06-22T18:22:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Computer Programming Principles/Testing]] to [[Computer Programming Principles/Maintaining/Testing]]: Fixing name so linked from main page. See talk page on main page as well.</comment>
      <text xml:space="preserve">#REDIRECT [[Computer Programming Principles/Maintaining/Testing]]</text>
      <sha1>7zfqwtydsjsn7vqu1oibzqps454r7v0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Turbanado Sugar</title>
    <ns>102</ns>
    <id>200167</id>
    <redirect title="Cookbook:Turbinado Sugar" />
    <revision>
      <id>1543795</id>
      <timestamp>2009-06-22T18:26:41Z</timestamp>
      <contributor>
        <username>Iwatchaltonbrown</username>
        <id>243605</id>
      </contributor>
      <comment>moved [[Cookbook:Turbanado Sugar]] to [[Cookbook:Turbinado Sugar]]: Former title was incorrectly spelled.</comment>
      <text xml:space="preserve">#REDIRECT [[Cookbook:Turbinado Sugar]]</text>
      <sha1>4s913v1virpi8iu511jegswqpjp6mby</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide/Wildflowers - Western US and Canada</title>
    <ns>0</ns>
    <id>200169</id>
    <redirect title="Field Guide/Wildflowers/Western US and Canada" />
    <revision>
      <id>1543809</id>
      <timestamp>2009-06-22T18:31:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide/Wildflowers - Western US and Canada]] to [[Field Guide/Wildflowers/Western US and Canada]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Wildflowers/Western US and Canada]]</text>
      <sha1>tgjeleiynntvzomt6kbnkbjsff9qetu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Field Guide/Wildflowers - Western US and Canada</title>
    <ns>1</ns>
    <id>200170</id>
    <redirect title="Talk:Field Guide/Wildflowers/Western US and Canada" />
    <revision>
      <id>1543811</id>
      <timestamp>2009-06-22T18:31:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:Field Guide/Wildflowers - Western US and Canada]] to [[Talk:Field Guide/Wildflowers/Western US and Canada]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:Field Guide/Wildflowers/Western US and Canada]]</text>
      <sha1>qqp83vfcpm2184r2umi4mqozzrzgm6c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide/Wildflowers - Western Europe and the British Isles</title>
    <ns>0</ns>
    <id>200171</id>
    <redirect title="Field Guide/Wildflowers/Western Europe and the British Isles" />
    <revision>
      <id>1543815</id>
      <timestamp>2009-06-22T18:33:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide/Wildflowers - Western Europe and the British Isles]] to [[Field Guide/Wildflowers/Western Europe and the British Isles]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Wildflowers/Western Europe and the British Isles]]</text>
      <sha1>fyp8ih62xjk51ep54ifoz79ffdz1i86</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide:Wildflowers - Amazon Rainforest</title>
    <ns>0</ns>
    <id>200172</id>
    <redirect title="Field Guide/Wildflowers/Amazon Rainforest" />
    <revision>
      <id>1543818</id>
      <timestamp>2009-06-22T18:35:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide:Wildflowers - Amazon Rainforest]] to [[Field Guide/Wildflowers/Amazon Rainforest]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Wildflowers/Amazon Rainforest]]</text>
      <sha1>b55eegnado0x9oc7mewta7fllz9h0aa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide to Reptiles</title>
    <ns>0</ns>
    <id>200174</id>
    <redirect title="Field Guide/Reptiles" />
    <revision>
      <id>1543837</id>
      <timestamp>2009-06-22T18:46:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide to Reptiles]] to [[Field Guide/Reptiles]]: Moving into book linking to it as a chapter.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Reptiles]]</text>
      <sha1>s4g1l0m5bfgwj76u76rovt3sz059dhk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide to Reptiles/Eastern US and Canada</title>
    <ns>0</ns>
    <id>200175</id>
    <redirect title="Field Guide/Reptiles/Eastern US and Canada" />
    <revision>
      <id>1543839</id>
      <timestamp>2009-06-22T18:46:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide to Reptiles/Eastern US and Canada]] to [[Field Guide/Reptiles/Eastern US and Canada]]: Moving into book linking to it as a chapter.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Reptiles/Eastern US and Canada]]</text>
      <sha1>azy78ob344i30go0l8d2f43l5pfumvj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide to Reptiles/Texas Alligator Lizard</title>
    <ns>0</ns>
    <id>200176</id>
    <redirect title="Field Guide/Reptiles/Texas Alligator Lizard" />
    <revision>
      <id>1543841</id>
      <timestamp>2009-06-22T18:46:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide to Reptiles/Texas Alligator Lizard]] to [[Field Guide/Reptiles/Texas Alligator Lizard]]: Moving into book linking to it as a chapter.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Reptiles/Texas Alligator Lizard]]</text>
      <sha1>9fpsnwvx19phplv706zlfnmq2ffs6bo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide to Animal Tracks</title>
    <ns>0</ns>
    <id>200177</id>
    <redirect title="Field Guide/Animal Tracks" />
    <revision>
      <id>1543844</id>
      <timestamp>2009-06-22T18:47:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide to Animal Tracks]] to [[Field Guide/Animal Tracks]]: Moving into book linking to it as a chapter.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Animal Tracks]]</text>
      <sha1>fw4ovaqbg9za8ooh041hgn9qdi8me9v</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide to Animal Tracks/Mammals</title>
    <ns>0</ns>
    <id>200178</id>
    <redirect title="Field Guide/Animal Tracks/Mammals" />
    <revision>
      <id>1543846</id>
      <timestamp>2009-06-22T18:47:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide to Animal Tracks/Mammals]] to [[Field Guide/Animal Tracks/Mammals]]: Moving into book linking to it as a chapter.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Animal Tracks/Mammals]]</text>
      <sha1>4a6mcyxc7osn3v0sjyle2dln6zvvthk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide to Animal Tracks/Raccoon</title>
    <ns>0</ns>
    <id>200179</id>
    <redirect title="Field Guide/Animal Tracks/Raccoon" />
    <revision>
      <id>1543848</id>
      <timestamp>2009-06-22T18:47:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide to Animal Tracks/Raccoon]] to [[Field Guide/Animal Tracks/Raccoon]]: Moving into book linking to it as a chapter.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Animal Tracks/Raccoon]]</text>
      <sha1>8pznq9jkx13980xjqkdr44nxcpaqxun</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide/Birds - Western US and Canada</title>
    <ns>0</ns>
    <id>200180</id>
    <redirect title="Field Guide/Birds/Western US and Canada" />
    <revision>
      <id>1543858</id>
      <timestamp>2009-06-22T18:52:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide/Birds - Western US and Canada]] to [[Field Guide/Birds/Western US and Canada]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Birds/Western US and Canada]]</text>
      <sha1>h0hzegvqt7dhhtpeqheiisd3pnpnpfj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide/Birds - Eastern US and Canada</title>
    <ns>0</ns>
    <id>200181</id>
    <redirect title="Field Guide/Birds/Eastern US and Canada" />
    <revision>
      <id>1543860</id>
      <timestamp>2009-06-22T18:52:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide/Birds - Eastern US and Canada]] to [[Field Guide/Birds/Eastern US and Canada]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Birds/Eastern US and Canada]]</text>
      <sha1>6a357mwoj6ukflojyts60h0m8jnq8ii</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Field Guide/Birds - Eastern US and Canada</title>
    <ns>1</ns>
    <id>200182</id>
    <redirect title="Talk:Field Guide/Birds/Eastern US and Canada" />
    <revision>
      <id>1543862</id>
      <timestamp>2009-06-22T18:52:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:Field Guide/Birds - Eastern US and Canada]] to [[Talk:Field Guide/Birds/Eastern US and Canada]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:Field Guide/Birds/Eastern US and Canada]]</text>
      <sha1>dpfytimky74t4meg7c5329oh7sk17w3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide/Birds - Western Europe</title>
    <ns>0</ns>
    <id>200183</id>
    <redirect title="Field Guide/Birds/Western Europe" />
    <revision>
      <id>1543864</id>
      <timestamp>2009-06-22T18:53:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide/Birds - Western Europe]] to [[Field Guide/Birds/Western Europe]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Birds/Western Europe]]</text>
      <sha1>f5nek14vis528ithf015bg7z3ll584o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Maple Sugar</title>
    <ns>102</ns>
    <id>200184</id>
    <revision>
      <id>1743357</id>
      <parentid>1615372</parentid>
      <timestamp>2010-03-24T22:01:27Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{ingredient}} | [[Cookbook:Sweeteners|Sweeteners]]

'''Maple sugar''' is basically [[cookbook:Maple Syrup|maple syrup]] boiled until it crystallizes into something like [[cookbook:Turbinado Sugar|turbinado sugar]], and has a maple flavor good in dishes where you don't want to use any liquid.

{{DEFAULTSORT:{{PAGENAME}}}}
[[Category:Sweeteners]]</text>
      <sha1>n79lmtd53gop950ubhfgaudv4rc2diw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide/Birds - British Isles</title>
    <ns>0</ns>
    <id>200185</id>
    <redirect title="Field Guide/Birds/British Isles" />
    <revision>
      <id>1543868</id>
      <timestamp>2009-06-22T18:53:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide/Birds - British Isles]] to [[Field Guide/Birds/British Isles]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Birds/British Isles]]</text>
      <sha1>souhxfdrktfl1mvvci79e2o3kfyzb9c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide/Birds - British Isles/Passeriformes Thumbnails</title>
    <ns>0</ns>
    <id>200186</id>
    <redirect title="Field Guide/Birds/British Isles/Passeriformes Thumbnails" />
    <revision>
      <id>1543870</id>
      <timestamp>2009-06-22T18:53:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide/Birds - British Isles/Passeriformes Thumbnails]] to [[Field Guide/Birds/British Isles/Passeriformes Thumbnails]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Birds/British Isles/Passeriformes Thumbnails]]</text>
      <sha1>hofvu3wrpy35r643glm9sxwrkt7ipsr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Seasoned Salt</title>
    <ns>102</ns>
    <id>200187</id>
    <revision>
      <id>2690179</id>
      <parentid>1785586</parentid>
      <timestamp>2014-08-09T19:14:26Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 cup salt
* 1/3 cup garlic powder
* 1/3 cup paprika
* 1/4 cup celery seed
* 1/4 cup dehydrated lemon peel
* 3 tbsp dried rosemary
* 3 tbsp dried parsley

== Procedure ==
#Combine all ingredients in an airtight container. Stored in a cool dark place, this will keep indefinitely.

[[Category:Spice Mix recipes]]</text>
      <sha1>3i5eavc46rt2uachnkq0yaanb4maq1o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide/Birds - Australia</title>
    <ns>0</ns>
    <id>200188</id>
    <redirect title="Field Guide/Birds/Australia" />
    <revision>
      <id>1543885</id>
      <timestamp>2009-06-22T19:08:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide/Birds - Australia]] to [[Field Guide/Birds/Australia]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Birds/Australia]]</text>
      <sha1>7ce157i6b5t03j99vk8od2v03cow8x6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide/Birds - New Zealand</title>
    <ns>0</ns>
    <id>200189</id>
    <redirect title="Field Guide/Birds/New Zealand" />
    <revision>
      <id>1543891</id>
      <timestamp>2009-06-22T19:11:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide/Birds - New Zealand]] to [[Field Guide/Birds/New Zealand]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Birds/New Zealand]]</text>
      <sha1>klhujz0ftmwywx6mjww43808txvwlu7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Field Guide/Dragonflies and Damselflies - Eastern US and Canada</title>
    <ns>0</ns>
    <id>200190</id>
    <redirect title="Field Guide/Dragonflies and Damselflies/Eastern US and Canada" />
    <revision>
      <id>1543897</id>
      <timestamp>2009-06-22T19:13:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Field Guide/Dragonflies and Damselflies - Eastern US and Canada]] to [[Field Guide/Dragonflies and Damselflies/Eastern US and Canada]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Field Guide/Dragonflies and Damselflies/Eastern US and Canada]]</text>
      <sha1>13jtmvgapnd56ijsllh7q16vk77kbb3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Reading room/Archives/2009/June</title>
    <ns>4</ns>
    <id>200191</id>
    <revision>
      <id>2015240</id>
      <parentid>2015234</parentid>
      <timestamp>2011-01-10T20:34:18Z</timestamp>
      <contributor>
        <username>He7d3r</username>
        <id>70094</id>
      </contributor>
      <minor />
      <comment>typo</comment>
      <text xml:space="preserve">{{talkarchive}}

== writing from right to left ==

How I can write from right to left in wikibook?

: You may not be able to. Writing from right to left in a system that is left-to-right oriented is not easy to program, I think you would need a parser extension to do it. The problem is that wiki-langauge does not have substrings. You might be able to get the same effect by Using a right justification and writing everything backwards, but frankly that seems a bit ridiculus. Am I wrong about it being difficult?--[[User:Graeme E. Smith|Graeme E. Smith]] ([[User talk:Graeme E. Smith|talk]]) 05:05, 31 May 2009 (UTC)

:: &lt;div dir=&quot;rtl&quot;&gt;gnorw ruoY&lt;/div&gt;
:: To write from right to left use the attribute dir=&quot;rtl&quot; on any block xhtml element such as div. The only reason what I wrote is backwards is because English is a left to right language. For languages that are naturally written from right to left it wouldn't actually be considered backwards. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 11:26, 31 May 2009 (UTC)

:Well color me surprised div is a block xhtml statement but you still have to put it into a system typing from left to right, if you are writing on a standard browser. So you still have to write it backwards...;) Oh, and does our PDF converter understand block xhtml? I tried to format a page using Div statements and my font sizes disappeared in the pdf. Same thing happened when I tried to size a picture, the size disappeared.--[[User:Graeme E. Smith|Graeme E. Smith]] ([[User talk:Graeme E. Smith|talk]]) 05:13, 4 June 2009 (UTC)

:: Some &quot;standard&quot; browsers are quiet capable of typing from right to left as well. I think the PDF converter ignores a lot of things. You could try filling a bug report to get those bugs fixed. Although the PDF converter could be ignoring those things on purpose, so as to comply with the publish company's requirements. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 12:10, 4 June 2009 (UTC)
== Can't silence &lt;nowiki&gt;&lt;ref&gt;&lt;/nowiki&gt; tag error message with display:none style ==

I am running into a problem with the cite extension. The &lt;nowiki&gt;&lt;ref&gt;&lt;/nowiki&gt; tag will tell you if you fail to put a &lt;nowiki&gt;&lt;references /&gt;&lt;/nowiki&gt; tag at the end of a page. This is very unhelpful if you want to use &lt;nowiki&gt;&lt;ref&gt;&lt;/nowiki&gt; tags in templates. One way around this is to embed the &lt;nowiki&gt;&lt;ref&gt;&lt;/nowiki&gt; tags in &lt;nowiki&gt;&lt;div style=&quot;display:none&quot;;&gt;&lt;/div&gt;&lt;/nowiki&gt; sections. This seems to work if the group parameter is null. But, if it isn't, the error magically bleeds out of the display:none section. For example, the following does not generate a visible error:

&lt;nowiki&gt;&lt;div style=&quot;display:none;&quot;&gt;&lt;/nowiki&gt;&lt;br&gt;
&lt;nowiki&gt;&lt;ref name=&quot;Name&quot; group=&quot;&quot;&gt; &lt;cite class=&quot;book&quot; style=&quot;font-style:normal&quot; &gt;Blah blah blah.&lt;/cite&gt; &lt;/ref&gt;&lt;br&gt;&lt;/nowiki&gt;&lt;br&gt;
&lt;nowiki&gt;&lt;/div&gt;&lt;/nowiki&gt;&lt;br&gt;

However, the following markup results in a visible error:

&lt;nowiki&gt;&lt;div style=&quot;display:none;&quot;&gt;&lt;/nowiki&gt;&lt;br&gt;
&lt;nowiki&gt;&lt;ref name=&quot;first&quot; group=&quot;fn&quot;&gt; &lt;span class=footnote&gt;footnote text 1&lt;/span&gt; &lt;/ref&gt;&lt;br&gt;&lt;/nowiki&gt;&lt;br&gt;
&lt;nowiki&gt;&lt;ref name=&quot;second&quot; group=&quot;fn&quot;&gt; &lt;span class=footnote&gt;footnote text 2&lt;/span&gt; &lt;/ref&gt;&lt;br&gt;&lt;/nowiki&gt;&lt;br&gt;
&lt;nowiki&gt;&lt;ref name=&quot;third&quot; group=&quot;fn&quot;&gt; &lt;span class=footnote&gt;footnote text 3&lt;/span&gt; &lt;/ref&gt;&lt;br&gt;&lt;/nowiki&gt;&lt;br&gt;
&lt;nowiki&gt;&lt;/div&gt;&lt;/nowiki&gt;&lt;br&gt;

Since the second example works on my local mediawiki installation (i.e., the error does not appear), there appears to be a configuration issue on Wikibooks that causes the error message leakage. If so, to whom should I report this? [[User:Dnessett|Dnessett]] ([[User talk:Dnessett|talk]]) 16:18, 3 June 2009 (UTC)

: You should report it here, which you've done. I'll go change the relevant mediawiki message now. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 17:08, 3 June 2009 (UTC)
: Ok I've fixed it so using &lt;nowiki&gt;&lt;ref group=&quot;name&quot;&gt;&lt;/nowiki&gt; without &lt;nowiki&gt;&lt;references group=&quot;name&quot; /&gt;&lt;/nowiki&gt; won't report any error now, so there is no need to use &quot;display:none;&quot; now or use any other sort of work around. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 17:19, 3 June 2009 (UTC)

Great. Thanks. I'll probably keep the display:none sections, since I am working on a template that may be useful on other mediawiki installations. I have not completed unit testing, but if you want a preview, see [[User:Dnessett/Template/Bref/Examples | Bref template examples]]. [[User:Dnessett|Dnessett]] ([[User talk:Dnessett|talk]]) 17:28, 3 June 2009 (UTC)

: Well if your looking for a solution that will work on all projects, don't use &quot;display:none&quot;. The simplest solution is to include &lt;nowiki&gt;&lt;noinclude&gt;&lt;references group=&quot;name&quot; /&gt;&lt;/noinclude&gt;&lt;/nowiki&gt; in the template. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 17:32, 3 June 2009 (UTC)

Unfortunately, that won't work. The template is designed to allow references to &lt;nowiki&gt;&lt;ref&gt;&lt;/ref&gt;&lt;/nowiki&gt; tagged data on pages other than those where the &lt;nowiki&gt;&lt;ref&gt;&lt;/ref&gt;&lt;/nowiki&gt; data appears. It does this using citation lists, which are pages containing &lt;nowiki&gt;&lt;ref&gt;&lt;/ref&gt;&lt;/nowiki&gt; tagged data. Citation lists are transcluded silently on pages that reference citations. Silence is imposed by the display:none style attribute. Using &lt;nowiki&gt;&lt;noinclude&gt;&lt;references group=&quot;name&quot; /&gt;&lt;/noinclude&gt;&lt;/nowiki&gt; would eliminate the error message on the template page, but not on the pages where the template is used. For a more complete explanation, see [[User:Dnessett/Template/Bref/doc]]. [[User:Dnessett|Dnessett]] ([[User talk:Dnessett|talk]]) 18:09, 3 June 2009 (UTC)
== Generating a .pdf of a whole book? ==

Hi. I'm wondering if there is a way to generate a .pdf with the entire content of a book. Using the &quot;generate .pdf&quot; tool on the left menu, you only get the current page, so if the chapters are in subpages, you don't get them. :/ Is there a way around that? -[[User:Brutulf|Brutulf]] ([[User talk:Brutulf|talk]]) 23:03, 5 June 2009 (UTC)
:Yes, there is, but it's a little bit of a manual process (though not that bad, and the output is really pretty good).  If you look in the side panel on the left, you should see a section called &quot;Create a book&quot; with two links in it.  Navigate to the first chapter of the book you want a pdf of, and then click the link that says &quot;Add wiki page.&quot;  Then go to the next chapter and click it again.  Repeat until you have added every module in the book you want.  Finally, click on &quot;Show collection page.  From there you can rearrange, delete, etc.  When you're satisfied with your collection, save it, and then generate a pdf from that. If you have more questions, visit [[Help:Collections]], or ask again here. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 23:15, 5 June 2009 (UTC)

::Thanks, I'll try that. -[[User:Brutulf|Brutulf]] ([[User talk:Brutulf|talk]]) 17:40, 6 June 2009 (UTC)

== Congratulations on starting a new book! ==

This is a continuation of an archived discussion.  See the archival trail of the discussion at: [http://en.wikibooks.org/wiki/Wikibooks:Reading_room/Archives/2008/December#Congratulations_on_starting_a_new_book.21].
In summary, I questioned the practice of labelling a book &quot;Congratulations on starting a new book!&quot; for all users to see, not just the creator.  The replies convince me as to the usefulness of this function, but I suggest rephrasing the text to genericise it.  For example:
:This is the new book &lt;whatever&gt;!
:'''To all readers:''' Keep this template for at least 2 weeks to advertise the book. Do not remove this template until the book has been properly categorized.  
: '''To the author:''' Please properly categorize your book using &lt;Subject&gt;. Read The Wikibooks Writer for more information about starting books. Ask questions in the Reading Room.
: For categorization help see WB:AS for ideas and WB:CHAT for assistance.
--[[User:Irrevenant|Irrevenant]] ([[User talk:Irrevenant|talk]]) 05:20, 6 June 2009 (UTC)

: The notice isn't for just readers or just the author, this is a wiki anyone can help to categorize the book. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 10:02, 6 June 2009 (UTC)
== *.swf files ==

Hi all. For the [[Wings_3D/User_Manual|Wings 3D User Manual]] I would want to add some *.swf files with instructions, that are easy to follow even by newbies. These flash files are created with [http://debugmode.com/wink/ Wink], look a little bit like a video, but in essence are some carefully choosen screenshots with the added value of text explanations/bubbles, navigation buttons and the video impression achived by animating the cursor movement. Here a selfmade [http://tugendbol.de/wings3d/tuts_wink/group_scale/group_scale.htm sample] of what I plan to do (be sure to have read the following, before you click ... you have to trust me and the Wink author and the vendor of the Flash player).

One problem with *.swf is, that it may contain ActionScript, a derivative of ECMA aka JavaScript and thus may be a security risk principally. On the other hand, the needed player runs in sort of a &quot;sandbox&quot; and can by default only write to a very limited area on the users file system (it's cookies somewhere). But then again, even that limited feature is known to be exploited, e.g. by YouTube to keep record of the users sound volume settings (regardless of the domain, where the video is played) ... and who knows, what else is possible with just that limited access?

Other problems:

* *.swf is NOT accepted by Commons, because it is a proprietary format (though widespread)
* Wink is free, but ''is not'' Open Source

Nevertheless I think, such tutorial sequences would help the Wings3D book a lot. Wings3D itself IS Open Source and my tut's will be licensed under the GFDL (the above one/link IS GFDL, though not noted in the file itself).

Any hint/suggestion is very welcome -- [[User:Deerwood|Deerwood]] ([[User talk:Deerwood|talk]]) 03:18, 4 June 2009 (UTC)

: Like Wikimedia Commons, Wikibooks only supports uploading free formats. So no .swf files can't be uploaded and Wikibooks has no control over that. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 03:26, 4 June 2009 (UTC)

:: Thanks Darklama for your quick answer. I spent several hours tonight to find a working converter from *.swf to *.svg for the Wink output without success so far, search phrase 'convert swf to svg', from the most prominent links then: the one free online service isn't alive any more and 'Flash Exploit' seems to be unable to do that. Illustrator might be able to do it, but is ruled out because it's not free at all (and I don't have it). If onyone has another hint for a converter or some other way (including some scripting solution) to produce *.svg I would like to hear about it. -- [[User:Deerwood|Deerwood]] ([[User talk:Deerwood|talk]]) 03:56, 5 June 2009 (UTC)

== bookshelves ==

how do i get a book on a bookshelf ([[Unlingvae|Unlingv&amp;auml;]])--[[User:Finaloffer|Finaloffer]] ([[User talk:Finaloffer|talk]]) 20:26, 4 June 2009 (UTC)

: The quick answer is you don't any more. The longer answer is you should make sure books are [[Wikibooks:Categories|categorized]] and [[WB:CCR|cataloged]] instead. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 20:33, 4 June 2009 (UTC)

:: Why shouldn't bookshelves be edited as long as they are linked from the Main Page? --[[User:Martin Kraus|Martin Kraus]] ([[User talk:Martin Kraus|talk]]) 07:43, 10 June 2009 (UTC)
::: With bookshelves, each bookshelf must be edited. With subject pages, editing the book is all that is required in most cases. Some bookshelves have already been turned into redirects to subject pages. More are likely to follow as more books currently listed on bookshelves are listed on subject pages. By following the new system and not editing bookshelves, bookshelves can be more quickly phased out or replaced. The links on the main page will likely be updated once people can use subjects to find all the books they use to be able to find on bookshelves. The less people use the bookshelves to list new books the sooner they can be phased out or replaced IMO. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 11:16, 10 June 2009 (UTC)
:::: OK. My opinion is: as long as a page is linked from the main page, it should be kept up to date. Well, thinking about it: any page that is not marked obsolete should be kept up to date. --[[User:Martin Kraus|Martin Kraus]] ([[User talk:Martin Kraus|talk]]) 11:25, 10 June 2009 (UTC)
::::: I don't think keeping the page updated is helpful at this point. I could go mark all the bookshelves as obsolete. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 12:12, 10 June 2009 (UTC)
:::::: Maybe you should first change the links on the main page. Any page linked from the main page cannot reasonably considered obsolete, can it? --[[User:Martin Kraus|Martin Kraus]] ([[User talk:Martin Kraus|talk]]) 12:25, 10 June 2009 (UTC)

:The friendly answer is: some bookshelves are protected; thus, you must log in to edit them (I'm not sure, you might even have to be an editor for some). Which book do you want to include in which bookshelf? --[[User:Martin Kraus|Martin Kraus]] ([[User talk:Martin Kraus|talk]]) 07:43, 10 June 2009 (UTC)
::The even friendlier answer is: I just added it. (Previously I didn't see that you had specified the book.) --[[User:Martin Kraus|Martin Kraus]] ([[User talk:Martin Kraus|talk]]) 11:25, 10 June 2009 (UTC)

== ETD Guide ==

Hi!

I am writing with regard to
  ETD Guide
  The Guide for Electronic Theses and Dissertations
  http://en.wikibooks.org/wiki/ETD_Guide

This falls under the aegis of the Networked Digital Library of Theses and Dissertations, NDLTD, www.ndltd.org.  One version of the Guide was developed with NDLTD and UNESCO financial support. Some of the students working with me revised this and put it into Wikibooks.  I serve as Executive Director for NDLTD.

Now I see that there is a post that we don't conform to Wikibooks' naming policy.

Can someone explain that?

I've created an account
  etdfox0714
My email is
  fox@vt.edu

[[User:Edfox0714|Edfox0714]] ([[User talk:Edfox0714|talk]]) 20:49, 9 June 2009 (UTC)Ed Fox, 9 June 2009
:[[WB:NC|The naming convention]] (which has been superceded by the [[WB:NP|Naming Policy]]) states that book titles should be spelled out rather than abbreviated.  I'm guessing that's the issue.  The Naming Policy is silent on this matter, so IMO, you can do what you want with that post.  --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 23:05, 9 June 2009 (UTC)
== Subject pages. ==

Since bookshelves are being depricated, it has lead me to wonder if there is a nice way to make to make the development stages appear on the subject page. Does anyone know of one? [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 11:01, 11 June 2009 (UTC)

: I can't think of any. In the past there has been discussion on whether or not the development stages even make sense because books can continue to be developed indefinitely. The &quot;development stages&quot; aren't really stages of development either, there signs of progress towards completion. 0% complete, 25% complete, 50% complete and 100% complete. When I think of &quot;development stages&quot; I think of a development life cycle, which goes something like: drafting/outlining, expanding, refining, correcting, and repeat by rewriting. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 12:57, 11 June 2009 (UTC)

:: Is the plan to also deprecate putting the development stage next to the books title on what ever page we list books on? All your comments about what a development stage are are interesting.  I just find it handy to know how complete the authors feel the book is when I am opening it up.  Somehow I always felt that was one of the strengths of the project.  Maybe nothing was perfect, but the books themselves often let you know how imperfect. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 14:28, 11 June 2009 (UTC)
::: I think that would be the result yes. What about featured books? Isn't that useful for knowing what the community feels is ready? --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 14:46, 11 June 2009 (UTC)
:::: Featured books are wonderful! But almost all of the books I have read here have not been featured books.  For me the development stages doesn't tell me about how great a book is, it tells me about where the book is (good or bad).  Featured books being a substitute for development stages would be rather like asking students to submit lists of classes where they received A's instead of submitting their transcript.  It is nice information, but not a substitute.

I suppose as a follow question, is it also necessary to only use automatically generated lists on the subject pages as well? [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 14:29, 11 June 2009 (UTC)

: No its not considered absolutely necessary right now, but its one of the things people wanted to help book contributors. Instead of editing X pages only the main page of the book needs to be edited. Less time spent worrying about organization is more time that book contributors can spend writing. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 14:46, 11 June 2009 (UTC)

::So one could in theory copy over the information from the book shelf page onto the subject page, leaving the automatically generated lists below, but not necessarily losing the information that is on the book shelf page. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 15:36, 11 June 2009 (UTC)

::: That would be inadvisable, as subject pages were designed to be dynamically generated.  That would require editing subject pages themselves every time a book's status is changed.  You said yourself that you often have read books that were not featured, so whether a book is at 50% or 100% doesn't even factor into the decision to click the link or not.  If a book's author wants to indicate its progress, they can do so on the title page.  Listing every book manually on the subject pages would be no different than moving the bookshelves from the Wikibooks namespace to the Subject namespace. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 16:41, 11 June 2009 (UTC)

(unindent) Sure you'd like that information before the level of clicking on the book.  As an editor I seek out books on the list the need improvement, and I look down the list for things that are around 50% complete and try to help.  As a reader I search for things that are further along, since I probably will not benefit if it is not at least 75% of the way.  The fact of the matter is if it is not at a stage I am interested in (such as 0%) I don't click. (Not to mention a book can be 100% complete and not worthy of being featured)  For example, if someone shows up and wants to read about algebra: they may either end up looking at [[Mathematics_bookshelf#Algebra]] or [[Subject:Algebra]].  Which is more helpful?  I would say the Mathematics bookshelf currently gives you some idea of how mature the books are, what level of reader they are for, etc.  I am not trying to make argue we should keep bookshelves, just trying to get people to talk about ideas.

For example, we could create a category for each of 0 25% ... 100% and add books to that category.   Also, I believe some amount of manual editing of subject pages might be necessary.  I thought that wasn't a bad thing, as it was explained to me the point of moving to subjects was more psychological, to free us from the idea that books had to be on one and only one bookshelf, etc.  Weren't we able to automatically generate lists for a while using categories? 

Maybe I should remind myself, why are we moving from bookshelves to Subjects?  And although I am just moaning at this point, why do we still call categories subjects in the links at the bottom of pages? (I am not against these things, I will just be a more effective editor if I understand.) [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 21:32, 11 June 2009 (UTC)

: Contributors can also feel a book is 100%, while still not being mature enough to benefit readers. Contributors can also feel a book is only 5%, while having enough information to benefit readers. Percentages can be misleading to both readers and contributors. To modify an old saying &quot;Don't judge a book by its percentages&quot;. If you want to know what books need help look at [[:Category:Wikibooks maintenance]] and the related categories. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 21:48, 11 June 2009 (UTC)

:: To modify another saying, development stages are the worst of all possible systems until you look at what else is available.  Sure the system has faults, but it just seems like we are scrapping it because we would rather not think about a method for implementing it on subject pages.  Books requiring maintenance is nice, it is great when you want to kill some spare time.  But when it comes to books I can realistically contribute content to, I am only interested in one (or possibly two) subjects.  I would like to contribute to everything, but I am not able to.  Hence, lists sorted by subject are helpful. (The same is true when one is looking for a book to read.)  The pages you point to get to be unwieldy.  Yes, some books will always be mis-categorized as to how far along they are, but maintenance tags are arguably in a worse state of affairs.  Realistically, how many books/modules that need to be expanded have a tag?  (If, after hard work, we had every module tagged appropriately the fore mentioned pages would be very difficult to sift through.) Perhaps my experience is skewed, but many books I look at have no tags at all, but still need a lot of work. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 08:54, 12 June 2009 (UTC)

:I kinda like the idea of having categories for completeness.  Now I'm going to continue the brainstorming (read that as I'm about to propose some lunatic ideas).  Using DPL it would then be easy to sort the books by completeness in a given subject.  Actually, I've been doing this with chapters in [[Adventist Youth Honors Answer Book]] for maybe two years now, but it's a binary decision - an honor is either done, or it's not.  When a chapter is &quot;done&quot; I tag it with [[:Category:Adventist Youth Honors Answer Book/Completed Honors]], and I have a few pages that sort them by that.  For instance, [[Adventist Youth Honors Answer Book/Completed Honors Needing Work]] lists chapters that have instruction for teaching enough of an honor that it could be awarded, but the honor still doesn't provide instruction for meeting every optional requirement.  It would be pretty easy to create a template that transcluded a stage icon based on what category a module is in.  Maybe percentages are the wrong metric, and maybe that would be the real use of the multi-dimensional flagged-revs settings.  Not suggesting that a book's flagged-revs setting be used to sort the books, but rather that books be placed in categories along those lines.  Food for thought.  --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 22:54, 11 June 2009 (UTC)

:: I must admit my ignorance and ask:  What is DPL? A multidimensional measure also could work, but it would need to be in a very small dimensional space.  [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 08:54, 12 June 2009 (UTC)
:::I don't remember what DPL stands for other than that the D is for dynamic.  It's a way of listing pages (dynamic page listings?) based on the categories they belong to (or do not belong to).  Take a look at [[Adventist Youth Honors Answer Book/Completed Honors Needing Work]] (including the markup).  Also see [[Adventist Youth Honors Answer Book/Honors Not Yet Complete]] for an example of how to include a page that is in one category but ''not'' in another.  --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 12:50, 12 June 2009 (UTC)

::: It's a nice idea, but I have to say that it would be a true ordeal tagging every book with [[:Category:00%]] or a template with a category like that in it.  For additional information on this extension, see [[mw:Extension:DynamicPageList]]. (You had the right idea on the acronym.) -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 13:22, 12 June 2009 (UTC)
:::: Any page not in one of these categories could be listed in a different section.  Not an ideal solution of course, but better than not being listed.  I concede that this idea may be unworkable. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 13:41, 12 June 2009 (UTC)

== Legal/copyright Question: exclusive or non-exclusive transfer of copyright? ==

I have a question about the transfer of my own copyright works into Wikibooks; I looked at the FAQ and did a google search but have not seen the answer elsewhere, and request that the answer be added to the FAQ.

My question is this: when I transfer my own copyright work into Wikibooks, am I granting to the GFDL/Wikibooks an ''exclusive'' or ''non-exclusive'' right to copy (in the sense described in http://en.wikipedia.org/wiki/Copyrights#Transfer_and_licensing)?

I would like to transfer paragraphs/examples from other documents I have written and for which I own the copyright, while still being able to distribute these documents (possibly in large numbers or for money) without inclusion of the GFDL. If I am transferring an exclusive right (as I would to most publishers), then I believe I would have to live within the GFDL as if I had copied the material ''from'' Wikibooks. If I am granting a non-exclusive right to copy, then I can still do what I like with my pre-upload copies that I send ''to'' Wikibooks (even sell the pre-uploaded version, as long as I don't sell an exclusive right to it). With either transfer, the material I upload can be &quot;edited mercilessly and redistributed at will&quot;, which is fine with me.

I could make this point moot by just re-creating fresh variants of the examples I would be uploading, but of course that is slower, and my time is valuable.

Thanks for any answer you can provide. Apologies in advance if this is already clearly stated somewhere and I missed it.
[[User:Davew haverford|Davew haverford]] ([[User talk:Davew haverford|talk]]) 12:20, 15 June 2009 (UTC)

: GFDL lets anyone profit from the work, as well as use it, modify it, etc. Its a non-exclusive right. As the copyright holder you can continue to use the work any way you want. By granting Wikibooks a license you are letting anyone else use it under the GFDL. Businesses could be less willing to pay you though if they know its available for free on Wikibooks, unless you can provide some other benefit(s). Due to a recent decision, you will also have to be willing to grant Wikibooks the right to use the work under the terms of the CC-BY-SA license, and under a combined dual licensing GFDL/CC-BY-SA model, otherwise once Wikibooks copyright model is updated the work will most likely have to be deleted, since it was not available on a wiki under the GFDL prior to November of 2008. I hope that answers your questions. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 13:12, 15 June 2009 (UTC)

::Darklama, I've been away from WikiBooks for a while and am not familiar with the CC-BY-SA license that you mention. Where can I find a description of it and how it applies? Thanks. [[User:Selden|Selden]] ([[User talk:Selden|talk]]) 16:37, 18 June 2009 (UTC)

== Image licensing enforcement ==

As I'm categorizing pages and images, I come across many images that people have put on their user pages, especially if I look through [[Special:UncategorizedFiles]].  I am wondering if as I look through images in the future, whether I should be proactive about tagging with {{tlx|nld}} or whether it's assumed that these user page images are licensed via other means.  I've seen many unlicensed images so far as I filed them in [[:Category:User page images]].  Would it be helpful or disruptive to tag all the unlicensed images people are using for their personal use on Wikibooks? -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 05:09, 16 June 2009 (UTC)

: In the past I think some have urged that people should be able to include images of themselves on their user page and shouldn't have to use copyleft licenses. Personally I think [[WB:HOST]] applies, and I don't think unlicensed/non-free images should be hosted or ignored simply because they are used in the User namespace. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 11:29, 16 June 2009 (UTC)
::I agree with '''&lt;font color=&quot;midnightblue&quot;&gt;d&lt;/font&gt;&lt;font color=&quot;green&quot;&gt;l&lt;/font&gt;'''.  It's a slippery slope that we don't want to venture down.  If we have a rule, we should enforce it.  If we do not wish to enforce it, we should not have it. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 12:22, 16 June 2009 (UTC)
::: Thanks for the clarification. I suspected this would be the response but due to the number of pictures that were untagged wanted to make sure I wouldn't be violating some unwritten rule. As you make clear, rules are rules and they apply to all. Now I won't feel uncomfortable tagging a few hundred images with {{tlx|nld}}. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 14:47, 16 June 2009 (UTC)
== Multiple row cells? ==

Just out of question, can you make cells in tables that span multiple rows? if so, how?--[[User:Finaloffer|Finaloffer]] ([[User talk:Finaloffer|talk]]) 20:24, 4 June 2009 (UTC)

: Yes you can have cells that span multiple columns, multiple rows or both. '| colspan=&quot;2&quot; | cell content', '| rowspan=&quot;2&quot; | cell content', and '| colspan=&quot;2&quot; rowspan=&quot;2&quot; | cell content'. Where '2' is the number of rows or columns to span. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 20:28, 4 June 2009 (UTC)


:::See [[Editing_Wikitext/Tables#Spanning|Spanning]] for similar examples. [[User:Armchair|Armchair]] ([[User talk:Armchair|talk]]) 14:36, 5 June 2009 (UTC)

== Force Page Breaks ==

I recently started on a new project, [[Wikijunior:Summer Flowers of Northern New England]].  Having taken up the hobby of photographing wildflowers a couple of years ago, I was asked to put together a small pamphlet for a children's program which will take place at the end of this month.  Thanks to the work I've done over on the [[v:Bloom Clock]], gathering pictures and providing text for all the flowers that bloom around my stomping grounds will not be a problem.  Getting it to print decently '''will'' be though, at least for me.  I'm planning to use the MediaWiki collections feature, but right now it's breaking my tables across mutiple pages.  I would really like to be able to force a page break between each table.

I hacked together a template [[:Template:WJ Flower]] for this project, so any page break stuff would be easiest there.  I guess.  If anyone wants to pretty up my template a bit, I would certainly welcome such efforts.  One thing I still want to do is use the &quot;color&quot; field to paint a stripe across the top of the page (table?) and along the left margin.  Actually, I will need the stripe on the left margin for half, and on along the right margin for the other half.  Or maybe it would be easier to do both (then I can rearrange and add extra flowers without re-justifying the margins on all subsequent pages).

Are page breaks even possible?  Should I be looking at a different solution?  Latex? (I don't have time for that learning curve). Import html into OpenOffice and then fiddle with it?

Any help is greatly appreciated. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 03:30, 9 June 2009 (UTC)

:Page breaks are possible with the traditional way of printing (the link &quot;printable version&quot; in the &quot;toolbox&quot; and then you would use the functionality of your browser for printing) and the template {{tlx|Newpage}}. Collections don't support page breaks as far as I know. An alternative would be to have each table on its own wiki page, wouldn't it? LaTeX and OpenOffice would also be feasible alternatives. --[[User:Martin Kraus|Martin Kraus]] ([[User talk:Martin Kraus|talk]]) 11:30, 9 June 2009 (UTC)

::Just checked: you would also have to add a &quot;chapter&quot; in the collection for each table in order get that page break.--[[User:Martin Kraus|Martin Kraus]] ([[User talk:Martin Kraus|talk]]) 11:36, 9 June 2009 (UTC)
:::Thanks Martin.  Making each plant its own chapter did force page breaks.  Unfortunately, the output is still not what I'm looking for.  The pdf generator insists on putting the full page name at the top of each chapter.  Couple that with the WB naming policy, and you get one ugly mess.  It's also making some &quot;chapter&quot; cross page boundaries in awkward places and overlapping blocks of text.  I'm probably going to import this into OpenOffice and work with it that way.  Or maybe Inkscape, I dunno.  It sure would have been nice to be able to buy a hardcopy from PediaPress. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 12:56, 9 June 2009 (UTC)

::::As far as I understand it, the hardcopies from PediaPress are produced differently (with manual corrections). The problems with page breaks can probably be solved easily by PediaPress for a hardcopy. You should contact them directly. --[[User:Martin Kraus|Martin Kraus]] ([[User talk:Martin Kraus|talk]]) 16:06, 9 June 2009 (UTC)
::::: Thanks again Martin.  I think my strategy will be to continue developing the content, and then contact them when I'm ready to print. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 16:47, 9 June 2009 (UTC)
Heya Jim. Have a look at the layout on [[Organic_Horticulture_in_the_Mid-Atlantic/Chenopodium_album]]. It's designed so that you can transclude all of the pages so that it shows the header differently (like [[Organic_Horticulture_in_the_Mid-Atlantic/Print_version_6.16.08-001]]). The template at the bottom of the page includes a directive not to print the interwiki boxes. --[[User:SB_Johnny|&lt;font color=&quot;green&quot;&gt;'''SB_Johnny'''&lt;/font&gt;]]  &lt;sup&gt;[[User_talk:SB_Johnny|&lt;font color=&quot;green&quot;&gt;talk&lt;/font&gt;]]&lt;/sup&gt; 14:41, 9 June 2009 (UTC)
:Hey Johnny - nice to hear from you again.  I'm not getting how your example changes the headers though.  --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 16:47, 9 June 2009 (UTC)
::Heh, I'm around, just not on WV ;-). The top of the pages in that book have a separate &quot;title&quot; (the large centered text), so when the page is transcluded, that serves as the title rather than the actual page title. I make my pdfs by just &quot;printing&quot; on my own computer, but then saving as a pdf rather than putting on paper and then uploading that file. Might be a MacOS thing though, not sure. 
::As far as what the bottom template does, see [http://en.wikibooks.org/w/index.php?title=Template:ohma-weed&amp;action=edit the div on the first line]. That forces a page break when printing. --[[User:SB_Johnny|&lt;font color=&quot;green&quot;&gt;'''SB_Johnny'''&lt;/font&gt;]]  &lt;sup&gt;[[User_talk:SB_Johnny|&lt;font color=&quot;green&quot;&gt;talk&lt;/font&gt;]]&lt;/sup&gt; 10:09, 11 June 2009 (UTC)

== Need some (minimal) help testing ==

Several days ago I [[Wikibooks:Reading_room/Administrative_Assistance#Request_for_test | asked for some help]] on the Administrative Assistance part of the Reading room, but so far no one has stepped forward. Perhaps that was the wrong forum. So, let me try here.

I have created a [[User:Dnessett/Template/Bref/Clean Back Links.js |helper script]] that removes useless back links in reference and footnote data created by the [[User:Dnessett/Template/Bref/doc |Bref template]], which I also wrote. Since this template and helper script is located in my user namespace, I wish to confirm that it works in someone else's namespace as well. I am pretty sure it will, but a test will confirm it. I could create a dummy user on Wikibooks and do the test myself, but I thought that would be both a waste of Wikibooks resources and perhaps contravene the '''no sockpuppets''' policy.

Testing should take no more than 5 minutes or less. First, look at the [[User:Dnessett/Bref Examples/Example1/References | Example 1 References]] and the [[User:Dnessett/Bref Examples/Example4/References | Example 4 References]]. You should see back links at the beginning of each reference. Then do one of two things. Create a personal per-book page for the examples (which should be named User:&lt;your user name&gt;/per_book/Bref_Examples.js) and add the following to it: importScript('User:Dnessett/Template/Bref/Clean Back Links.js'). If you do not wish to create a personal per book page for the test, simply place importScript('User:Dnessett/Template/Bref/Clean Back Links.js') in your skin's javascript file (e.g., User:&lt;your user name&gt;/monobook.js for the Monobook skin). The go to both [[User:Dnessett/Bref Examples/Example1/References | Example 1 References]] and [[User:Dnessett/Bref Examples/Example4/References | Example 4 References]]. The back links should no longer appear. You can then delete the importScript('User:Dnessett/Template/Bref/Clean Back Links.js') from the page where you put it. Let me know the results. Thanks in advance. [[User:Dnessett|Dnessett]] ([[User talk:Dnessett|talk]]) 15:15, 18 June 2009 (UTC)

== Where do I ask questions about Wikibits.js? ==

I am running into some problems with a couple of functions in wikibits.js. Where is the proper place to ask questions about them - here or somewhere else? [[User:Dnessett|Dnessett]] ([[User talk:Dnessett|talk]]) 17:13, 18 June 2009 (UTC)
== Wikipedia style link? ==

I recently came across [[Quaternion]] which seems to be a wikipedia style link to something else on the subject.  It seems prudent to me to recommend this page for deletion, for many reasons but the simplest of which would be naming conversions.  But I thought I would check and make sure I understand how things are usually done first. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 09:08, 19 June 2009 (UTC)

: The author moved the page above to [[Fractals/Quaternion Fractals]], so it's now part of a book. They could have created the page at the current location and created a redirect at the first location, but it's the same result. They did this so that if someone types &quot;quaternion&quot; in the search box to the left, they will go to [[Quaternion]], which then directs them to the relevant page in the [[Fractals]] book. This allows the use of Wikibooks subpages, with Wikipedia ease of use in obtaining information on a subject just by typing it in the box. The only time this doesn't work is if two books cover the same topic. Then, who gets the use of the prime main-space redirect?  Hopefully that clarifies what was being done. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 12:22, 19 June 2009 (UTC)
: A lot of pages similar to that were recently created and moved into the Fractals book. Given that there new some time should be given for them to develop. In general such pages would qualify for speedy deletion because they aren't textbook material. The redirects caused by the moves qualify for speedy deletion once they are orphaned. There isn't really any benefit when searching because pages in books containing a search term will be found. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 12:58, 19 June 2009 (UTC)
:: True, Darklama. To play Devil's Advocate, though, people might say they prefer having those redirects remain in order to bypass the search results page. On the other hand, I can see where other textbook authors who have similar content might take offense when their books are bypassed, when they would have shown up in the search results as well. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 13:04, 19 June 2009 (UTC)

== Request for comments. ==

I had recently attempted to go about improving the Subject page for Mathematics.  My idea was to set up something which looked a bit more specialized then the standard template which many of the subject pages have (No offense to WhiteKnight or anyone involved with creating this template, who have done terrific work).  The layout of the mathematics bookshelf page gives a rough idea about how advanced various mathematical texts are.  I thought this was an excellent idea, and wanted to do something similar with the Subject page.  My idea was to set up categories which gave books based on the difficulty of the book and use these to set up automatically generated lists.  A simple mock up, which is by no means meant to be complete, can be found at my [[User:Thenub314/sandbox|sandbox]]   As I started this I discovered there was a feeling that this couldn't be done.  In particular, Darklama and I have been deep in discussion about how feasible an idea this was. This may be read at my [[User talk:Thenub314#University_level_mathematics|talk page]].  (The conversation starts off as a bit of an argument but gets more peaceful as time goes on.) We have seemed to reach nearing some consensus on the one category I have created so far, apart from the proper name for it.  

When it became clear that I intended to create other categories Darklama felt I had gone far enough and I should involve the reading room before creating any more categories.  That about gets us up to present. I would love to hear any comments that people have. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 13:31, 19 June 2009 (UTC)

: Wikibooks' history of using levels for the math bookshelf only extends back 3 years. What levels to use or even whether to use levels at all doesn't seem to have ever been really discussed on the talk page for the math bookshelf. However I notice some past comments on the talk page for math bookshelf where people have voiced there views that there approach would be better without generating any discussing. If there has been discussion over the past 3 years it seems to have been done elsewhere. I think Thenub313 and I have gotten stuck on how to move forward. Rather then leaving the situation as it has happened in the past I think what to do or how to organize the math books could benefit from some more community input and involvement. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 13:59, 19 June 2009 (UTC)

I think in general organizing math books by difficulty is going to be difficult to achieve. I think this is why this approach was never adopted for other subjects. How can books be organized by difficulty in a way that isn't dependent on how a specific country rates a subject's difficulty or a person's personal opinion on how difficult learning a specific subject is? I can understand and see how doing so could be useful, but how can Wikibooks make it useful for a general audience or so it is useful for most people? --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 13:59, 19 June 2009 (UTC)

: It was adopted for books on languages, using [[Language Learning Difficulty for English Speakers]] to file them in subcategories of [[:Category:Languages by category]]. This was not difficult, however, as the differences and even the filing of specific books was defined by an outside party. It would be nice if there were an outside source to classify mathematical topics difficulty-wise, as one person doing it will be tainted by either personal opinion or nationality. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 14:13, 19 June 2009 (UTC)

:: That book also admits the rankings are specific to a specific institute in the US, and that many people may disagree with a language's ranking. So even the difficulty of learning a language is tainted by nationality. I think it would be a good for Wikibooks to have some consensus on using difficulty rating in general. If the Wikibooks community decides that difficulty ratings are a good idea, I think it would be good for Wikibooks to have some consensus or even a guideline on how best to categorize books by difficulty. Like is using the US standard for Languages acceptable? Would it be acceptable to use a US standard for Math books too? Should multiple standards to be used instead? Should Wikibooks come up with its own definition of difficulty levels? --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 14:31, 19 June 2009 (UTC)

::(this may be redundant because of an edit conflict, but including it anyways) Perhaps it is worth playing devil's advocate and pointing out that it is not clear this would alleviate all of Darklama's concerns. The outside party that created this list of difficulty was a US government body. It is not immediately clear to what extent their numbers reflect all native English speakers, or if this is strongly skewed toward Americans. To quote him this page represents how &quot;a specific country rates a subject's difficulty&quot;. My question would be should we get rid of this page because it may be biased? (And should I not attempt to categorize because I may be biased?) [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 14:50, 19 June 2009 (UTC)

::: Yes, to what extent the rankings reflect all or most native English speakers is not clear. Probably the only way to ensure clarity is to ensure that whatever approach is used for ranking difficulty levels is backed up by community consensus and a community process. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 16:24, 19 June 2009 (UTC)

:::: For mathematics, I would think that rather than rating by difficulty, texts should be rated by prerequisites?  So Algebra should not be attempted until Arithmetic has been mastered, and Calculus should not be attempted before Algebra is.  This approach would eliminate the subjective standards.  In my experience, the thing that makes mathematics difficult is a poor foundation.  If the prerequisites are not met, it's going to be tough-going.  It might ''still'' be tough going with the prerequisites in place, but IMO, it's a lot easier once they are met.  No idea how to translate this thought into a wiki structure though. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 16:34, 19 June 2009 (UTC)

::::: That is actually the approach I suggested to begin with. Wikibooks has {{tlx|prerequisite}} for that. However that doesn't seem to be enough to satisfy what Thenub314 wants. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 17:00, 19 June 2009 (UTC)

:::::: I actually like the idea of getting the books to state more clearly what the prerequisites are.  There are a few subjects where it is not the end of the story.  Let me give a few examples of what I think issues are.  The topic of algebra at the moment has several texts at various levels of difficulty.  These books would have the same set of prerequisites, but it may be useful to explain which is geared toward a more advanced audience.  

:::::: A second issue is that many subjects do not have clear prerequisites (notice the books here may disagree with me on this point).  Examples here might include Group Theory, Topology, Formal logic, Euclidean Geometry.  Any mathematical subject that starts with the axioms and then goes forward could be thought of as facing this kind of issue.  So it would be nice to have a way to describe if a book is written for elementary school students or college students. If such a range seems absurd, I could simply point to Euclidean Geometry as a subject that has books at every level.  The Formal Logic book handles this issue by stating explicitly at the beginning it is for a college level audience and looking through the book I agree.  At the end of the the day, I would like to categorize Formal logic that way.  I should point out though that Darklama has already made the comment that this sentence is inappropriate and should be removed from the book because of cultural concerns as to what college or university means. 

:::::: The only last comment I would make about prerequisites is that we should probably encourage people not to point to other wikibooks to say &quot;You should know the contents of this book&quot;.  On the one hand, very few math books here have matured enough to actually cover the topics they intend to.  On the other hand books also go through very drastic overhauls every once and a while, so it is not a very stable piece of information.  The abstract algebra points to Linear algebra and Algebra as things one should know before starting this book, the reader may be left wonder what exactly it is he or she should know. Because both Algebra and Linear Algebra have (for a while) been in a state that is halfway merged with other books and are not particularly readable at the moment.  (Though I am doing what I can as quickly as I can to correct this.)  [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 18:52, 19 June 2009 (UTC)

::::::: Difficulty levels aren't any more stable due to books being overhauled. Books can also start with Arithmetic and work up to Trigonometry or some other branch of mathematics, or touch on each major branch of mathematics. Such books might have varying degrees of difficulty. The mathematics bookshelf only tries to make a distinction between introductory books and higher education books. Consider that a higher education book could also be introductory. Difficulty levels won't tell you why a book is considered easy or hard, while prerequisites can give you some idea of why you may have difficulty understanding what a book covers and can point readers in the right direction. I think it would be far more useful to say &quot;If you have trouble understanding or following this algebra book, try these algebra books&quot;. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 20:02, 19 June 2009 (UTC)

:::::::: I never meant to imply difficulty levels were were stable under major overhauls, just that it seems a bad practice to use the books here to describe prerequisites.  I disagree with that the book shelf simply has two categories and no further distinctions.  The subject of algebra is clearly subdivided between elementary and intermediate.  Perhaps more subtlety is the sequence that books appear in more or less follows the usual sequence of prerequisites.  Let me state more explicitly that I think mathematics texts should have clearly defined prerequisites.  I agree that the information &quot;If you have trouble understanding this book...&quot; is helpful, I would just like to attempt to convey this information in a clear and consistent manner.  And as I stated above, (and I will provide article references if you desire), there are not clear prerequisites for every subject.  Furthermore, with some of these subjects we have multiple books at different levels. Prerequisites themselves do not solve he problem. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 23:16, 19 June 2009 (UTC)

: Perhaps it would be difficult. Thankfully some of the work categorizing has been done before at the bookshelf page, and we have that to learn from. While books moved from one place to another from time to time, at no point did it seem to cause much controversy. While no one can guarantee that they are 100% neutral, this is not quite a reason not to try to make things better. I think the bookshelf page is more useful the the current subject page, regardless of nationality. And I would like to keep that from disappearing. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 14:50, 19 June 2009 (UTC)

:: To me the discussion page looks like people have tried to avoid problems or controversy by avoiding discussions when people have tried to initiate discussion. I think the bookshelf might suffer from apathy rather than the organization lacking controversy. I don't think there is much that can be gleaned or learned from the way the bookshelf is organized because of the absence of discussion over its organization. Basejumper123 mention the reorganization was for easier reference, but doesn't provide any insight explaining why [{{fullurl:Wikibooks:Mathematics_bookshelf|diff=456999&amp;oldid=456991}} further reorganization] was done. [{{fullurl:Wikibooks:Mathematics bookshelf|diff=1161890&amp;oldid=1156043}} the current approach] also was explained but not discussed. On the talk page [[Wikibooks talk:Mathematics bookshelf#Catalogue for High School|High School Cataloging]] is suggested,  on [[Wikibooks talk:Mathematics bookshelf#Reorganize Bookshelf|reorganizing the bookshelf]] someone suggests that general, advance and special be replaced by grade levels, and another person suggested that [[Wikibooks talk:Mathematics bookshelf#We need a dependency tree.21|we need a dependency tree]]. I'm not criticizing the changes or absence or discussion, but rather pointing out that it makes it difficult to understand why the current approach is used and not some other approach. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 16:24, 19 June 2009 (UTC)

::: I do not see apathy, and I find the suggestion a bit insulting. I was around in 2006 shortly after Basejumper123 categorized the books and if I hadn't liked what I saw, I would have left a comment.  The posts you point to seem to be people requesting further categorization, which I think speaks to the fact that this is something users would find helpful.  Instead of apathy, what I see reflected is the a small group of editors, whose interest was not piqued by the suggestion of further categorization as a new project to take on. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 23:16, 19 June 2009 (UTC)
== Strange behavior of the subject template? ==

Probably this is not very interesting, but here goes anyways. While attempting to categorize some pages from the list of uncategorized pages I came across [[Grab_a_Screen_/_Edit_Screen_Grab_-_Paint]], allow me not to state my opinion of its contents.  I wanted to put this under [[Subject:Computer software]]. I noticed after adding &lt;nowiki&gt;{{Subject|Computer software}}&lt;/nowiki&gt; that computer software did not appear on the category list at the bottom of the page.  It occurred to me that this page has a slash in its title, which may have thrown off the template.  Prehaps it did not add the Computer software category because this page appears to be title &quot;_Edit_Screen_Grab_-_Paint&quot; and part of the book &quot;Grab_a_Screen_&quot;  It seems that the Wikimedia software didn't parse this title in the same way because there was no redlink pointing back up to &quot;Grab_a_Screen_&quot; at the top of the page.  After double checking [[WB:NP]] there doesn't seem to be any policy preventing someone from placing a slash in the title of a book, so I thought that this may be a minor bug in the subject template. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 14:08, 22 June 2009 (UTC)

: I think the policy should say that the slash (among other things) must not be used as part of book or page name. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 14:16, 22 June 2009 (UTC)
: For what it is worth, you and I are in complete agreement on this subject. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 14:19, 22 June 2009 (UTC)
:: FWIW I think that particular page is outside Wikibooks scope. Seems to be intended as course work since it mentions credits, and the subject is pretty narrowly defined. Perhaps Wikiversity would be a better home for it, unless there is a general computer book it could go into. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 14:23, 22 June 2009 (UTC)

== TextBox Template ==

In some of my work on the Linear algebra book I have come across the rather annoying problem.  If anyone could explain why this happens to me I would be grateful.  The {{tlx|TextBox}} template seems to respect the last line break of the last &quot;paragraph&quot; but no other.  To explain what I mean in the two text boxes below there are two &quot;paragraphs&quot;, the first paragraph is the same in both text boxes and all line breaks are ignored.  The second paragraph on the first text box is contained all on one line, and displays correctly.  In the second text box there are many line breaks but only the one that occurs between the bold words '''LINE''' and '''BREAK''' appears (At least on my browser.)  Questions I have: Is it a user issue (meaning am I doing something wrong?) Is this dependent on browser? Is there a nice way to stop that line break from occurring? 

{{TextBox|1=
;Proof:
We will verify the second sentence, which is equivalent to the first.
The first clause, that the dimension &lt;math&gt;n&lt;/math&gt; of the domain of &lt;math&gt;t^n&lt;/math&gt; equals
the rank of &lt;math&gt;t^n&lt;/math&gt; plus the nullity of &lt;math&gt;t^n&lt;/math&gt;, holds for any transformation and
so we need only verify the second clause.We will verify the second sentence, which is equivalent to the first.
The first clause, that the dimension &lt;math&gt;n&lt;/math&gt; of the domain of &lt;math&gt;t^n&lt;/math&gt; equals
the rank of &lt;math&gt;t^n&lt;/math&gt; plus the nullity of &lt;math&gt;t^n&lt;/math&gt;, holds for any transformation and
so we need only verify the second clause.
We will verify the second sentence, which is equivalent to the first.
The first clause, that the dimension &lt;math&gt;n&lt;/math&gt; of the domain of &lt;math&gt;t^n&lt;/math&gt; equals
the rank of &lt;math&gt;t^n&lt;/math&gt; plus the nullity of &lt;math&gt;t^n&lt;/math&gt;, holds for any transformation and
so we need only verify the second clause.

Assume that &lt;math&gt; \vec{v}\in\mathcal{R}_\infty(t)\cap\mathcal{N}_\infty(t) =\mathcal{R}(t^n)\cap\mathcal{N}(t^n) &lt;/math&gt;, to prove that &lt;math&gt;\vec{v}&lt;/math&gt; is &lt;math&gt; \vec{0} &lt;/math&gt;. Because &lt;math&gt; \vec{v} &lt;/math&gt; is in the nullspace, &lt;math&gt; t^n(\vec{v})=\vec{0} &lt;/math&gt;. On the other hand, because &lt;math&gt; \mathcal{R}(t^n)=\mathcal{R}(t^{n+1}) &lt;/math&gt;, the map &lt;math&gt; t:\mathcal{R}_\infty(t)\to \mathcal{R}_\infty(t) &lt;/math&gt; is a dimension-preserving homomorphism and therefore is one-to-one. A composition of one-to-one maps is one-to-one, and so &lt;math&gt; t^n:\mathcal{R}_\infty(t)\to \mathcal{R}_\infty(t) &lt;/math&gt; is one-to-one. But now&amp;mdash; because only &lt;math&gt; \vec{0} &lt;/math&gt; '''LINE''' '''BREAK''' is sent by a one-to-one linear map to &lt;math&gt; \vec{0} &lt;/math&gt;&amp;mdash; the fact that &lt;math&gt; t^n(\vec{v})=\vec{0} &lt;/math&gt; implies that &lt;math&gt; \vec{v}=\vec{0} &lt;/math&gt;.
}}
{{TextBox|1=
;Proof:
We will verify the second sentence, which is equivalent to the first.
The first clause, that the dimension &lt;math&gt;n&lt;/math&gt; of the domain of &lt;math&gt;t^n&lt;/math&gt; equals
the rank of &lt;math&gt;t^n&lt;/math&gt; plus the nullity of &lt;math&gt;t^n&lt;/math&gt;, holds for any transformation and
so we need only verify the second clause.We will verify the second sentence, which is equivalent to the first.
The first clause, that the dimension &lt;math&gt;n&lt;/math&gt; of the domain of &lt;math&gt;t^n&lt;/math&gt; equals
the rank of &lt;math&gt;t^n&lt;/math&gt; plus the nullity of &lt;math&gt;t^n&lt;/math&gt;, holds for any transformation and
so we need only verify the second clause.
We will verify the second sentence, which is equivalent to the first.
The first clause, that the dimension &lt;math&gt;n&lt;/math&gt; of the domain of &lt;math&gt;t^n&lt;/math&gt; equals
the rank of &lt;math&gt;t^n&lt;/math&gt; plus the nullity of &lt;math&gt;t^n&lt;/math&gt;, holds for any transformation and
so we need only verify the second clause.

Assume that &lt;math&gt; \vec{v}\in\mathcal{R}_\infty(t)\cap\mathcal{N}_\infty(t) =\mathcal{R}(t^n)\cap\mathcal{N}(t^n) &lt;/math&gt;,
to prove that &lt;math&gt;\vec{v}&lt;/math&gt; is &lt;math&gt; \vec{0} &lt;/math&gt;. Because &lt;math&gt; \vec{v} &lt;/math&gt; is in the nullspace, &lt;math&gt; t^n(\vec{v})=\vec{0} &lt;/math&gt;.
On the other hand, because &lt;math&gt; \mathcal{R}(t^n)=\mathcal{R}(t^{n+1}) &lt;/math&gt;, the map &lt;math&gt; t:\mathcal{R}_\infty(t)\to \mathcal{R}_\infty(t) &lt;/math&gt;
is a dimension-preserving homomorphism and therefore is one-to-one. A composition of one-to-one maps is one-to-one, and so
&lt;math&gt; t^n:\mathcal{R}_\infty(t)\to \mathcal{R}_\infty(t) &lt;/math&gt;
is one-to-one. But now&amp;mdash; because only &lt;math&gt; \vec{0} &lt;/math&gt; '''LINE'''
'''BREAK''' is sent by a one-to-one linear map to &lt;math&gt; \vec{0} &lt;/math&gt;&amp;mdash; the fact that &lt;math&gt; t^n(\vec{v})=\vec{0} &lt;/math&gt; implies that &lt;math&gt; \vec{v}=\vec{0} &lt;/math&gt;.
}}

I've fixed the problem with the template. The problem may seem odd, but the problem was that the closing &lt;nowiki&gt;&lt;/div&gt;&lt;/nowiki&gt; was on the same line. MediaWiki is suppose to suppress paragraph breaks (&lt;nowiki&gt;&lt;p&gt;...&lt;/p&gt;&lt;/nowiki&gt;) for two lines of text without any intermediate line breaks, however at the same time MediaWiki is also suppose to put paragraph breaks around the start and end of text if there is tag, while trying to predict if that is appropriate. I think there is a bug because its suppose to suppress a paragraph break if the div is on the same line which it does, but it seems to be depending on there being a line break so finds the previous line break, which it shouldn't do, and puts the paragraph break there. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 12:54, 23 June 2009 (UTC)

: In case it is of interest, there is no line break between '''LINE''' and '''BREAK''' in either of the two paragraphs on my browser (Safari 4.0, Mac OS X 1.4.11) (Perhaps because the template is fixed?). [[User:Dnessett|Dnessett]] ([[User talk:Dnessett|talk]]) 14:32, 23 June 2009 (UTC)

:: Thanks Darklama, that does indeed fix the problem, which will speed up my processing a great deal.  For anyone reading this there is no longer there is no longer a line break between '''Line''' and '''Break''', as there shouldn't have been. :) [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 18:11, 23 June 2009 (UTC)
== Very confused while trying to upload image ==

I've spent bits of several days trying to figure out how to upload and make use of an image in a wikibook I'm starting (specifically, [[Visualizing Computation]]).

I have learned to use Inkscape and discovered and dealt with some obscure issues (such as why you don't want to have a non-integer canvas size), and now am just trying to install the image on the wikimedia commons and use it in on wikibooks.

I have uploaded an [https://secure.wikimedia.org/wikipedia/commons/wiki/File:Power_log_med.svg image to wikimedia commons] and tried to refer to it from the [http://en.wikibooks.org/wiki/Visualizing_Computation/Memory_Evolution_Diagrams appropriate wikibooks page], but I seem to be getting the old version of the file (which has the same name, but lives on wikibooks instead of the commons).

Can someone please (a) take a look at the wikibooks page and tell me if the reference is being done in the right way, and also (b) delete the Power_log_med.svg file from wikibooks so that my reference will reach the one on wikimedia commons (telling me how to do (b) is even better, but my understanding is that this requires administrator access).

(note that I'm planning to add [[Visualizing Computation]] to the list of new books once I've got at least ''one'' good page made).

Thanks,
[[User:Davew haverford|Davew haverford]] ([[User talk:Davew haverford|talk]]) 19:54, 19 June 2009 (UTC)

(Upon re-checking, I've noticed that I ''do'' seem to be getting the current version of the image, but it looks oddly pixellated on my screen; I'd still be happy to have the wikibooks version of the image deleted, and be interested in advice about how to improve the image visual quality, which as I understand it should ''never'' be poor with an SVG. [[User:Davew haverford|Davew haverford]] ([[User talk:Davew haverford|talk]]) 19:59, 19 June 2009 (UTC))

(p.p.s. the image looks fine on my Mac running Firefox, but pixellated on Ubuntu Linux running Firefox. This may be a platform-dependent rendering issue. I'm going to stop worrying about technology and focus on uploading good content when I get back to this on Monday. [[User:Davew haverford|Davew haverford]] ([[User talk:Davew haverford|talk]]) 01:29, 20 June 2009 (UTC))
:Doesn't look to me like there's a local image by the same name. What you see at [[:File:Power log med.svg]] is the file from Commons. &amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 01:34, 20 June 2009 (UTC)

== Welcome message ==

I just tried adding the &lt;nowiki&gt;{{welcome}}&lt;/nowiki&gt; template to a new users page.  Unfortunately the first line of what it produced was &lt;nowiki&gt;&quot;Welcome, {{subst:PAGENAME}}!&quot;&lt;/nowiki&gt;.  There is a high probability I made a mistake, but I am not sure what I did wrong.  Why didn't the users name appear? [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 14:31, 22 June 2009 (UTC)
: Because you used {{tlx|welcome}} rather then {{subst|welcome}}. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 14:40, 22 June 2009 (UTC)
::Very good, I have made a change over at [[Wikibooks:Maintenance]] to reflect this. That is where saw the instructions just to use {{tlx|welcome}}. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 15:06, 22 June 2009 (UTC)
== How to start?? ==

I guess I'm a little lost about how to &quot;CREATE&quot; a &quot;BOOK&quot;?  Under the tab &quot;create a book&quot; I click &quot;add page to book&quot; and it just adds a book to a collection.  Is that how you begin a book?  Maybe someone can lead me to the appropriate place on the site where I can begin creating my own Wikibook.

Thanks in advance...
~Uber Lost

: Well, long story short, you can search for the title you want.  If a book by this title doesn't already exist then it will show you a list of possible matches. Just above this list there will be a message There is no page titled .... You can create this page. You can click on the &quot;create this page&quot; redlink to do exactly that.  You can find this, and possibly other useful information, in the book [[Using Wikibooks]].  Have fun! [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 13:47, 22 June 2009 (UTC)

== Software help ==

Is wikibooks a good place to software documentation such as [http://www.geogebra.org/help/docuen/ GeoGebra Help 3.2]? The application has the [http://www.geogebra.org/download/license.txt source code under GNU General Public License v2] but the Documentation Files are (currently and unfortunately) under Creative Commons Attribution-'''NonCommercial-NoDerivs''' 3.0. So, I a user of GeoGebra and a pt.wikibooks collaborator I would like to contact Markus Hohenwarter (markus at geogebra org) asking about his interest in using Wikibooks for future versions of the documentation. What do you think? [[pt:User:Helder.wiki|Helder]]20:21, 25 June 2009 (UTC)

: Wikibooks would be a good place to write a book documenting that software program. You would have to document the program from scratch though, unless the person or persons who owns the copyright to the help docs agrees to relicense. As you might of guessed, works submitted to Wikibooks must allow commercial uses and derivatives. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 20:32, 25 June 2009 (UTC)
:: Right! I will ask them about this... Some time ago Markus gave us permission to use screen shots of GeoGebra in Wikimedia projects, via OTRS (for example, this one: [[:File:Geogebra.png|Geogebra.png]]). So, maybe they can also extend the permission for Documentation... This would be a lot better than start the book from scratch =)

:: By the way, how to delimit when such a wikibook documenting the software is a derivative work of the original documentation and when it is a new work that uses that documentation as reference? [[pt:User:Helder.wiki|Helder]]21:12, 25 June 2009 (UTC)
:: Another question: what do you think about [http://www.geogebra.org/forum/viewtopic.php?f=20&amp;t=1893 this discussion] at GeoGebra forum, related to Wikibooks? Leave a comment there too... =) [[pt:User:Helder.wiki|Helder]]21:03, 26 June 2009 (UTC)

:::In a nutshell...
:::'''Derivative work''' uses previously produced content.
:::'''references''' are used when a few snippets of content (phrases) are used in the resulting work or to give credits to the original content authors if the new work is build on ideas, concepts or discoveries made elsewhere. They are also useful to provide the reader with other related sources of content or to extend the usefulness of the book without extensible overlapping previously produced content that doesn't fall perfectly in the scope of the new book, or can't be copied verbatim. --[[User:Panic2k4|Panic]] ([[User talk:Panic2k4|talk]]) 23:07, 26 June 2009 (UTC)

::: For derived works there is no standardized way to do it exactly. A common practice is to create an authors or copyright page to list the attributions. &quot;This book contains ''work'' written by ''who'' and is released under ''what''&quot;. You could also add that to the talk page for each page in which you derived works from. You could also use the edit summary to include a link to the work your copying from. You could do all three for completeness and to be thorough. A bibliography-like page is often used to link to or list works used as a reference. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 23:26, 26 June 2009 (UTC)
== Template request ==

Hi, I would like to copy the &lt;nowiki&gt;{{harv}}&lt;/nowiki&gt; template from wikipedia to here.  I imagine this should be done in such a way as to preserve the edit history.  If someone could help me with this that would be great. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 11:25, 24 June 2009 (UTC)
:Imported that + dependencies. Hope it works - there may be conflicts with our templates you'll have to resolve. If you need help, ask again. &amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 16:33, 24 June 2009 (UTC)
== 'Special' bookshelf doesn't contain its contents. ==

From the homepage the 'Special Groups' bookshelf contains the cookbook, study guides, etc but if you click on the &quot;Special Groups&quot; link, none of those are available from the Special groups page itself.  I don't really know enough about how Wikibooks is structured to take a punt at it myself. http://en.wikibooks.org/wiki/Wikibooks:Special_groups_department --[[User:Irrevenant|Irrevenant]] ([[User talk:Irrevenant|talk]]) 00:44, 13 June 2009 (UTC)</text>
      <sha1>ex99eghdtjg6n48uc6pn82fqcveun24</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Financial Derivatives</title>
    <ns>14</ns>
    <id>200192</id>
    <revision>
      <id>1543950</id>
      <timestamp>2009-06-22T19:32:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Finance]]</text>
      <sha1>1a5qc6c2u13bo5f65hlvl9ts6bleton</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Find File Professional</title>
    <ns>14</ns>
    <id>200193</id>
    <revision>
      <id>1543954</id>
      <timestamp>2009-06-22T19:35:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Utility software]]</text>
      <sha1>r6xd9cafepje0rq1hou3z6s3h8yyeuv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:RCCorona</title>
    <ns>3</ns>
    <id>200194</id>
    <revision>
      <id>1543959</id>
      <timestamp>2009-06-22T19:38:05Z</timestamp>
      <contributor>
        <username>DavidCary</username>
        <id>973</id>
      </contributor>
      <comment>welcome.</comment>
      <text xml:space="preserve">&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, RCCorona!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, [[User:DavidCary|DavidCary]] ([[User talk:DavidCary|talk]]) 19:38, 22 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>2ck18xea9ywnnuxllbu5amb3crnzhv8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Media Centers Based on Wyplayer/General information</title>
    <ns>0</ns>
    <id>200199</id>
    <revision>
      <id>2086292</id>
      <parentid>1546384</parentid>
      <timestamp>2011-04-25T01:22:13Z</timestamp>
      <contributor>
        <ip>79.151.138.214</ip>
      </contributor>
      <comment>/* Known related devices */</comment>
      <text xml:space="preserve">Wyplayer is a device developed originally at France...

= Known related devices =
* Wyplayer (France)
* MediaTitan
* ZoltarTV
* Mediatec
* Iomega

= Marketing =
Wyplayer was available from november 2008 (?)

= Device features =
&lt;ul&gt;
&lt;li&gt;Chipset: ST Micro 7109&lt;/li&gt;
&lt;li&gt;RAM: 256 Mb&lt;/li&gt;
&lt;li&gt;Ethernet 10 / 100 Mbit/s&lt;/li&gt;
&lt;li&gt;Wireless (some models) 802.11b/g/n (WEP, WPA y WPA2 support)&lt;/li&gt;
&lt;li&gt;Tuner: Double tuner DVB-T 
    &lt;ul&gt;
     &lt;li&gt;Modulation modes DVB-T: QPSK/QAM 16/64&lt;/li&gt;
     &lt;li&gt;FEC Automatic selection&lt;/li&gt;
     &lt;li&gt;UHF/VHF support(47 … 862 MHz)&lt;/li&gt;
     &lt;li&gt;Channel bandwidth 7, 6 or 8 MHz&lt;/li&gt;
     &lt;li&gt;All guard Interval modes: 1/31, 1/16, 1/8, 1/4 active symbol ''[por traducir]''&lt;/li&gt;
     &lt;li&gt;All code rates ''[por traducir]''&lt;/li&gt;
     &lt;li&gt;Red SFN o MFN&lt;/li&gt;
   &lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;USB Device
  &lt;ul&gt;
   &lt;li&gt;High speed USB 2.0, B&lt;/li&gt;
   &lt;li&gt;MTP device&lt;/li&gt;
   &lt;li&gt;USB host&lt;/li&gt;
   &lt;li&gt;High speed USB 2.0, A (1x front, 2x back)&lt;/li&gt;
  &lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Video outputs
  &lt;ul&gt;
    &lt;li&gt;Composite Video(CVBS)&lt;/li&gt;
    &lt;li&gt;HDMI (v1.2)&lt;/li&gt;
  &lt;/ul&gt;
&lt;li&gt;
&lt;li&gt;Audio outputs
  &lt;ul&gt;
    &lt;li&gt;Stereo (CVBS)&lt;/li&gt;
    &lt;li&gt;S/PDIF (Optical)&lt;/li&gt;
    &lt;li&gt;HDMI (v1.2)&lt;/li&gt;
  &lt;/ul&gt;
&lt;li&gt;
&lt;li&gt;Hard disk drive: 3.5” Serial-ATA 1.5 Gbit/s&lt;/li&gt;
&lt;li&gt;Fan: Temp Sensor and PID controller&lt;/li&gt;
&lt;li&gt;Remote: IR, 2x AAA battery&lt;/li&gt;
&lt;li&gt;Power supply
  &lt;ul&gt;
    &lt;li&gt;In: 100-240V 50/60Hz 1.2A&lt;/li&gt;
    &lt;li&gt;Out: DC 12V 4.0A&lt;li&gt;
  &lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

= Source Code =
At the beginning was published that this devices firmware was obtained from open source code. To date, X versions of code has been released:
&lt;enlace&gt;
[[es:Discos multimedia basados en Wyplayer/Información general]]

{{BookCat}}</text>
      <sha1>0lgf79glo7p7x495uulk0u95ncbadkh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Media centers based on Wyplayer/General information</title>
    <ns>0</ns>
    <id>200200</id>
    <redirect title="Media Centers Based on Wyplayer/General information" />
    <revision>
      <id>1544028</id>
      <timestamp>2009-06-22T19:57:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Media centers based on Wyplayer/General information]] to [[Media Centers Based on Wyplayer/General information]]: Matching root page's name.</comment>
      <text xml:space="preserve">#REDIRECT [[Media Centers Based on Wyplayer/General information]]</text>
      <sha1>kdh0830j2kbzxet16dpzdw2o3cku0xd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Media Centers Based on Wyplayer</title>
    <ns>14</ns>
    <id>200201</id>
    <revision>
      <id>1544030</id>
      <timestamp>2009-06-22T19:58:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Multimedia software]]</text>
      <sha1>1ikxpa1x767ndaor3oelavoh7bld9b9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Mascarpone Mac 'n Cheese</title>
    <ns>102</ns>
    <id>200203</id>
    <revision>
      <id>2686625</id>
      <parentid>1745252</parentid>
      <timestamp>2014-07-31T19:46:36Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>16549</id>
      </contributor>
      <minor />
      <comment>Koavf moved page [[Cookbook:Mascarpone Mac N' Cheese]] to [[Cookbook:Mascarpone Mac 'n Cheese]]</comment>
      <text xml:space="preserve">{{recipe}}

Folding in unsweetened whipped cream makes it light and airy.

== Ingredients ==
* 1 pound cooked macaroni
* 1 cup mascarpone cheese
* 1 cup heavy whipping cream, beaten to soft peaks
* 3 tbsp sugar
* Pinch of salt
* 1/4 cup unsalted butter
* 1/4 cup all purpose flour
* 2 cups heavy cream

== Procedure ==
#Melt butter in a large saucepan over medium heat. Whisk in flour and cook until light blond color is achieved.
#Add remaining ingredients except for macaroni and beaten cream. Bring to a boil until reduced by half. Remove from heat and gently fold in cream.
#Place macaroni in the bottom of a 9x13 square baking pan. Pour cheese mixture over and bake in a 350° oven for 25 minutes or until bubbly on top and puffed up. Remove and serve.</text>
      <sha1>qexz0oyaqcon40vybce0lmh5gxt2zn1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:198.85.228.129</title>
    <ns>3</ns>
    <id>200204</id>
    <revision>
      <id>1544162</id>
      <timestamp>2009-06-22T20:30:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/198.85.228.129|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 20:30, 22 June 2009 (UTC)}}</text>
      <sha1>tq5bryohzzyzkvekytxvwdtttp41oic</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:How Things Work</title>
    <ns>14</ns>
    <id>200205</id>
    <revision>
      <id>1544225</id>
      <timestamp>2009-06-22T20:46:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior Discovery and Innovation|How Things Work]]</text>
      <sha1>oegjpjiye96caltowuaohgemw3celte</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:World Religions</title>
    <ns>14</ns>
    <id>200207</id>
    <revision>
      <id>1544299</id>
      <timestamp>2009-06-22T21:08:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior Our World of People|World Religions]]</text>
      <sha1>l6308i1tzsn60jzbxb8ko7tsbo2y4h2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:United States Charters of Freedom</title>
    <ns>14</ns>
    <id>200208</id>
    <revision>
      <id>1544304</id>
      <timestamp>2009-06-22T21:12:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior Our World of People|United States Charters of Freedom]]</text>
      <sha1>drhqkf1slray1miy9m4mnq5atng4dk7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:United States Charters of Freedom/Federalist Papers</title>
    <ns>14</ns>
    <id>200209</id>
    <revision>
      <id>1544314</id>
      <timestamp>2009-06-22T21:16:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Sub-book category</comment>
      <text xml:space="preserve">This category contains pages on the Federalist Papers, described in the [[{{BOOKNAME}}]] book.

[[Category:{{BOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>m46al41akli707x318179yycu5xgzsi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Practical Electronics/ICs/74</title>
    <ns>0</ns>
    <id>200213</id>
    <redirect title="Practical Electronics/IC/7400 Series" />
    <revision>
      <id>1544411</id>
      <timestamp>2009-06-22T22:00:07Z</timestamp>
      <contributor>
        <username>Inductiveload</username>
        <id>30522</id>
      </contributor>
      <comment>moved [[Practical Electronics/ICs/74]] to [[Practical Electronics/IC/7400 Series]]: match 4000 series</comment>
      <text xml:space="preserve">#REDIRECT [[Practical Electronics/IC/7400 Series]]</text>
      <sha1>s3jg0y9gdcfewacl8mzp0orw2qnggpb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Practical Electronics/74Label</title>
    <ns>0</ns>
    <id>200214</id>
    <redirect title="Practical Electronics/7400 Series/Labelling" />
    <revision>
      <id>1544414</id>
      <timestamp>2009-06-22T22:00:58Z</timestamp>
      <contributor>
        <username>Inductiveload</username>
        <id>30522</id>
      </contributor>
      <comment>moved [[Practical Electronics/74Label]] to [[Practical Electronics/7400 Series/Labelling]]: move to be a subpage of 7400 series</comment>
      <text xml:space="preserve">#REDIRECT [[Practical Electronics/7400 Series/Labelling]]</text>
      <sha1>s36ufq8jngqiqgurq5h7nb8efqmkths</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Practical Electronics/ICs/Other</title>
    <ns>0</ns>
    <id>200215</id>
    <redirect title="Practical Electronics/IC/Other" />
    <revision>
      <id>1544416</id>
      <timestamp>2009-06-22T22:02:19Z</timestamp>
      <contributor>
        <username>Inductiveload</username>
        <id>30522</id>
      </contributor>
      <comment>moved [[Practical Electronics/ICs/Other]] to [[Practical Electronics/IC/Other]]: match other pages</comment>
      <text xml:space="preserve">#REDIRECT [[Practical Electronics/IC/Other]]</text>
      <sha1>to7vr3hqfi6pztk9z3yy6oast1x5yg5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:92.41.37.229</title>
    <ns>3</ns>
    <id>200216</id>
    <revision>
      <id>1544420</id>
      <timestamp>2009-06-22T22:10:01Z</timestamp>
      <contributor>
        <username>Reece</username>
        <id>46573</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/92.41.37.229|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Reece|&lt;font color=&quot;black&quot;&gt;&lt;b&gt;Reece&lt;/b&gt;&lt;/font&gt;]] [[User talk:Reece|&lt;font color=&quot;green&quot;&gt;&lt;small&gt;(Talk)&lt;/small&gt;&lt;/font&gt;]] [[Special:Contributions/Reece|&lt;font color=&quot;green&quot;&gt;&lt;small&gt;(Contributions)&lt;/small&gt;&lt;/font&gt;]] 22:10, 22 June 2009 (UTC)}}</text>
      <sha1>94bui2kuuknwvxnmzgizishackw9p7h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Practical Electronics/IC/4072</title>
    <ns>0</ns>
    <id>200217</id>
    <revision>
      <id>2020441</id>
      <parentid>1910166</parentid>
      <timestamp>2011-01-22T00:30:28Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>clean up, typos fixed: infomation → information using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">{{Logic_IC
|number = 4072
|logic_type = Combinatorial
|func_family = Logic
|description = Dual 4-Input OR Gate
|pins = 14
}}

The 4072 is a member of the [[Practical_Electronics/IC/4000 Series|4000 Series]] [[Practical_Electronics/CMOS|CMOS]] range, and contains two independent [[Practical_Electronics/Logic#OR|OR gates]], each with four inputs. The pinout diagram, given on the right, is the standard four-input CMOS logic gate IC layout:

:*Pin 7 is the ground supply (GND)
:*Pin 14 is the positive supply (V&lt;sub&gt;DD&lt;/sub&gt;)
:*Pins 2-5 and 9-12 are gate inputs for the two gates
:*Pin 1 and 13 are gate outputs
:*Pin 6 and 8 are not connected

The truth table for one of the two gates is shown below. For more information about the OR gate in general, see this [[Practical Electronics/Logic#OR|module]].

{{center|'''Truth Table for a Single Gate'''}}
{{Truthtable4
|A|B|C|D|Q|0|1|1|1 |1|1|1|1 |1|1|1|1 |1|1|1|1}}

This chip is widely available, and usually comes in a [[Practical_Electronics/IC/DIL|DIL]]-14 or [[Practical_Electronics/IC/SOIC|SOIC]]-14 package.</text>
      <sha1>dlr86eh1nuu2nfshnv6sjji1em4chs8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:142.23.44.233</title>
    <ns>3</ns>
    <id>200218</id>
    <revision>
      <id>1544545</id>
      <parentid>1544432</parentid>
      <timestamp>2009-06-22T23:42:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>/* You have been blocked */ new section</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/142.23.44.233|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 22:41, 22 June 2009 (UTC)}}

== You have been blocked ==

{{mbox|type=warning|msg='''You have been temporarily [[Wikibooks:Blocking policy|blocked]] from editing Wikibooks&amp;nbsp;for a period of 1 week. The reason given for the block was &quot;continued vandalism of [[Collaborative Problem-Solving in Educational Settings]].&quot;

Please note that page blanking, addition of random text or spam, deliberate misinformation, privacy violations, [[Wikibooks:No personal attacks|personal attacks]], and repeated, blatant violations of our [[Wikibooks:Neutral point of view|neutral point of view]] policy are considered [[Wikibooks:vandalism|vandalism]]. If you wish to make useful contributions, you are welcome to come back after the block expires.&lt;br&gt;To request to be unblocked, add {{tlx|unblock|reason}} to [[Special:MyTalk|your user talk page]], which you can still edit.&lt;br/&gt;}}</text>
      <sha1>c4ulh4ujefd8muzvq338ditpg041eas</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:World War II</title>
    <ns>14</ns>
    <id>200219</id>
    <revision>
      <id>1544434</id>
      <timestamp>2009-06-22T22:43:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior Our World of People|World War II]]</text>
      <sha1>jnnhr4mfr2pjs5hav0wwew89t751pi5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:South America</title>
    <ns>14</ns>
    <id>200220</id>
    <revision>
      <id>1544482</id>
      <timestamp>2009-06-22T23:07:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior Our World of People|South America]]</text>
      <sha1>aksrblm7kw3ratrf0trqrrdqc27wc6q</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Kings and Queens of England</title>
    <ns>14</ns>
    <id>200221</id>
    <revision>
      <id>1544509</id>
      <timestamp>2009-06-22T23:22:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior Our World of People|Kings and Queens of England]]</text>
      <sha1>2q08g4yd68jhvew0spo2qpb0xtqco56</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Lgm432</title>
    <ns>3</ns>
    <id>200222</id>
    <revision>
      <id>1544558</id>
      <timestamp>2009-06-23T00:11:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">== Welcome! ==

&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Lgm432!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, --[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 00:11, 23 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>rwhe115rli0v0v86j3sgwt86f919r6l</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:121.121.212.197</title>
    <ns>3</ns>
    <id>200223</id>
    <revision>
      <id>1544561</id>
      <timestamp>2009-06-23T00:14:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/121.121.212.197|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 00:14, 23 June 2009 (UTC)}}</text>
      <sha1>agp1p650h8946x4jovv1c19lbjqoirh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Europe</title>
    <ns>14</ns>
    <id>200224</id>
    <revision>
      <id>1544565</id>
      <timestamp>2009-06-23T00:39:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior Our World of People|Europe]]</text>
      <sha1>2nig0d5topah6dxxp40zei8sp3sn54e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikijunior:Ancient Civilizations</title>
    <ns>14</ns>
    <id>200225</id>
    <revision>
      <id>1544631</id>
      <timestamp>2009-06-23T01:17:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Wikijunior Our World of People|Ancient Civilizations]]</text>
      <sha1>5ri994vsypqgq8c1b1utvhbmgbf7etb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:210.15.244.102</title>
    <ns>3</ns>
    <id>200228</id>
    <revision>
      <id>1544681</id>
      <parentid>1544674</parentid>
      <timestamp>2009-06-23T01:45:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>/* You have been blocked */ new section</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/210.15.244.102|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 01:42, 23 June 2009 (UTC)}}

== You have been blocked ==

{{mbox|type=warning|msg='''You have been temporarily [[Wikibooks:Blocking policy|blocked]] from editing Wikibooks&amp;nbsp;for a period of 1 week. The reason given for the block was &quot;vandalizing [[Managing Groups and Teams/How Do You Build High-performing Virtual Teams?]].&quot;

Please note that page blanking, addition of random text or spam, deliberate misinformation, privacy violations, [[Wikibooks:No personal attacks|personal attacks]], and repeated, blatant violations of our [[Wikibooks:Neutral point of view|neutral point of view]] policy are considered [[Wikibooks:vandalism|vandalism]]. If you wish to make useful contributions, you are welcome to come back after the block expires.&lt;br&gt;To request to be unblocked, add {{tlx|unblock|reason}} to [[Special:MyTalk|your user talk page]], which you can still edit.&lt;br/&gt;}}</text>
      <sha1>69v15zohyhalorxz6cl2l1v0d5uwymi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:156.56.133.84</title>
    <ns>3</ns>
    <id>200229</id>
    <revision>
      <id>1544707</id>
      <timestamp>2009-06-23T02:17:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>query on [[The Practice of Learning Theories/Behavioral Changes]]</comment>
      <text xml:space="preserve">==[[The Practice of Learning Theories/Behavioral Changes]]==
Why do you keep adding content from [[Web 2.0 and Emerging Learning Technologies/GIS]] to a page that has nothing to do with Geographic Information Systems? -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 02:17, 23 June 2009 (UTC)</text>
      <sha1>5jj62aaf6xo6my5y9jwepdvowukmrf7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Directing Technology/Training</title>
    <ns>1</ns>
    <id>200230</id>
    <revision>
      <id>1544792</id>
      <parentid>1544791</parentid>
      <timestamp>2009-06-23T02:49:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Undo revision 1544791 by [[Special:Contributions/Adrignola|Adrignola]] ([[User talk:Adrignola|Talk]]) - was a talk page.</comment>
      <text xml:space="preserve">==About the Author==

John Loeper is a teacher of social studies at Lehigh Career and Technical Institute (LCTI) in Schnecksville PA. LCTI is a Classrooms for the Future school. As such, the school has received through the CFF grant, hundreds of computers along with interactive whiteboards, and other multimedia equipment for use in the classrooms. The school's faculty has also benefitted greatly from the professional development provided by the grant for the teachers who are using the equipment in their classrooms. Mr Loeper has played a role in the delivery of this training to the faculty as a facilitator of the online training.
 
Mr. Loeper has been recognized by the Allentown School District and the State of Pennsylvania as a Keystone Technology Integrator, for excellence in use of technology in the classroom. He has a Masters in Instructional Technology from Lehigh University.

Prior to becoming a K-12 teacher, Mr. Loeper was an instructor of adults in the use of technology in the workplace.</text>
      <sha1>nd0p2e5bymupbfwqkmndwornyuemdch</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:216.15.87.231</title>
    <ns>3</ns>
    <id>200232</id>
    <revision>
      <id>1544820</id>
      <timestamp>2009-06-23T02:58:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Join Us!</comment>
      <text xml:space="preserve">== Join Us! ==

{{#ifeq:&quot;{{NAMESPACE}}&quot;| &quot;User talk&quot;|
Hello and '''[[Wikibooks:Welcome, newcomers|welcome]]''' to [[Wikibooks]], a collection of open-content textbooks!

You should consider [[Special:Userlogin|creating an account or logging in]]. It's free and requires no personal information. Here are some advantages:

* A username of your choice.
* Greater security and privacy, as your IP address will be hidden from most users.
* Your own personal user page and talk page.
* [[Special:Contributions/{{PAGENAME}}|Your contributions]] will directly attributed to you.
* The use of your own [[Help:Watching pages|watchlist]] to monitor pages that you are interested in.
* Your opinions carry greater weight in the [[Wikibooks:Decision making|decision making process]].
* You become a recognized member of the Wikibooks community.

We hope that you choose to become a Wikibookian and [[Special:Userlogin|create an account]].

Feel free to ask any questions on my talk page or in the [[Wikibooks:Reading room|Reading room]].
Be sure to sign your talk page comments with four tildes (&lt;nowiki&gt;~~~~&lt;/nowiki&gt;).

| {{#if:  | |&lt;!-- this is so if anyone tries to use it where it doesn't go they will know. --&gt;
{{mbox|type=warning|This template must only be used on '''User [[Help:Talk page|discussion]]''' pages.}} }} }}--[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 02:58, 23 June 2009 (UTC)</text>
      <sha1>e2q2fyh4d9ojjrn9f5a5er5ofqrqq5j</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Directing Technology/Maintain/Maintaining Technology</title>
    <ns>1</ns>
    <id>200233</id>
    <revision>
      <id>1548109</id>
      <parentid>1548108</parentid>
      <timestamp>2009-06-25T15:44:05Z</timestamp>
      <contributor>
        <username>Dal308</username>
        <id>113428</id>
      </contributor>
      <comment>/* Created the following sections under the general category called &quot;Maintain&quot; */</comment>
      <text xml:space="preserve">== Author Name ==
Dan Vitalo (djv3@lehigh.edu)
Dave Lugo (dal308@lehigh.edu)

== Created the following sections under the general category called &quot;Maintain&quot; ==
Dan:

Equipment Repairs,
Updating, Patching, and otherwise Securing Computers.
Excursus on Software Licensing

Dave:

The Technology Director and Backup,
Backup vs Restore, 
Real-world backup,
end of life,
Research on End of Life,
Equipment replacement,
life cycle FAQs.
general backup FAQs,
Network Monitoring Software

== Need for Future ==

a page entitled Excursus on Software Licensing</text>
      <sha1>kh29wn9lmh6qyk1xxst9h2g0t6izy00</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Directing Technology/Maintain/Supporting Technology</title>
    <ns>1</ns>
    <id>200234</id>
    <revision>
      <id>1547059</id>
      <parentid>1547019</parentid>
      <timestamp>2009-06-24T18:26:54Z</timestamp>
      <contributor>
        <username>Dvitalo12</username>
        <id>212119</id>
      </contributor>
      <text xml:space="preserve">== Author Name ==
Dan Vitalo (djv3@lehigh.edu)

== Created the following sections under the general category called &quot;Support&quot; ==
Receiving,
Cataloging or Inventory Management, 
Inventory Software Options,
Deployment,
Deployment Software Options.

== Need for Future ==

nothing noted at this time.

== Author Name ==
David Lugo (dal308@lehigh.edu) created the following sections under the general category Support:
Distribution FAQs for the Technology Director</text>
      <sha1>2m6c9j736p9qymr1i46naut580irnuh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wings 3D/User Manual/Wings File Format</title>
    <ns>0</ns>
    <id>200235</id>
    <revision>
      <id>2357384</id>
      <parentid>1964361</parentid>
      <timestamp>2012-05-29T17:08:45Z</timestamp>
      <contributor>
        <ip>143.85.199.242</ip>
      </contributor>
      <comment>/* Overall structure */</comment>
      <text xml:space="preserve">== The Wings3D file format (version 2). ==

See http://wings3d.com/ for the Open Source modeller written in Erlang.

Important source files to look at: .../src/wings.hrl and .../src/wings_ff_wings.erl.

One more reference is the [http://www.servechilled.de/ogrestuff/w2o.zip exporter implemented in Perl] which is outdated.

Please note, that there is '''current development of Wings''' in progress ''changing also the file format'', so it is advisable to stall work on this document, until the file format stabilized again.

=== Overall structure ===

A *.wings file has 3 main parts:

; 1. Header:
: The header is 15 bytes long and essentially ASCII, formed by the human readeable string &quot;#!WINGS-1.0&quot; followed by the hex bytes 0x0D, 0x0A, 0x1A, 0x04 aka &quot;\r\n^Z^D&quot; aka CR, LF, SUB and EOT (Ctrl-Z being the &quot;end of input&quot; char in Windows and Ctrl-D the same in UNIX).
; 2. Length of data:
: A 4 byte unsigned integer giving the size of the entire file, stored in big-endian format. This value should match the size of the file on disk, otherwise the file is missing data.
; 3. Data:
: The main part of the file in Erlang's [http://www.erlang.org/doc/apps/erts/erl_ext_dist.html External Term Format] as of section 8.1; specifically it is a ''Zlib-compressed'' term as indicated by the first two bytes 131, 80. The next 4 bytes thus are an unsigned integer giving the size of the uncompressed data. The rest of the file is the actual compressed data/term.

: When processing *.wings files with Erlang or a language having a full blown interface (in the Erlang distribution exists a [http://www.erlang.org/doc/apps/erl_interface/index.html C interface] and a [http://www.erlang.org/doc/apps/jinterface/index.html Java interface], there is also a [http://www.lysator.liu.se/~tab/erlang/py_interface/ Python interface] elsewhere) you just feed the whole data part to the appropriate function/method.

: But when dealing with *.wings files in some other language, these 6 bytes might be seen as additional header information, the rest must be uncompressed and then further be handled to reconstruct the nested structure of the term.

To get an impression of how a simple Wings model looks in Erlang syntax (after uncompressing; manually reindented and commented/linked to emphasize structure and help):

[[Image:Wings_tetrahedron_vcol.png|thumb|A tetrahedron, vertex colored in face mode RGB, lower face unassigned, rendered white]]

  { wings, 2, [[#The_Topmost_Tuple|% The Topmost Tuple]]
    {
      [  [[#Shapes|% Shapes]]
        { object, &quot;tetrahedron1&quot;,
          { winged,
            [
              [
                { color_rt, &lt;&lt;0,0,0,0,0,0,0,0,63,128,0,0&gt;&gt; },
                { color_lt, &lt;&lt;63,128,0,0,0,0,0,0,0,0,0,0&gt;&gt; },
                { edge,     0,1,2,0,4,2,1,3 }
              ],
              [
                { color_rt, &lt;&lt;0,0,0,0,63,128,0,0,0,0,0,0&gt;&gt; },
                { color_lt, &lt;&lt;0,0,0,0,0,0,0,0,63,128,0,0&gt;&gt; },
                { edge,     0,2,0,3,3,0,2,5 }
              ],
              [
                { color_rt, &lt;&lt;63,128,0,0,0,0,0,0,0,0,0,0&gt;&gt; },
                { color_lt, &lt;&lt;0,0,0,0,63,128,0,0,0,0,0,0&gt;&gt; },
                { edge,     0,3,3,2,5,1,0,4 }
              ],
              [
                { color_rt, &lt;&lt;0,0,0,0,0,0,0,0,63,128,0,0&gt;&gt; },
                { edge,     1,2,1,0,5,4,0,1 }
              ],
              [
                { color_lt, &lt;&lt;63,128,0,0,0,0,0,0,0,0,0,...&gt;&gt; },
                { edge,     1,3,2,1,2,0,3,5 }
              ],
              [
                { color_rt, &lt;&lt;0,0,0,0,63,128,0,0,0,0,...&gt;&gt; },
                { edge,     2,3,1,3,4,3,1,2 }
              ]
            ],
            [ [], [], [], [] ],
            [
              [ &lt;&lt;0,0,0,0,0,0,0,0,63,241,107,40,245,93,114,...&gt;&gt; ],
              [ &lt;&lt;0,0,0,0,0,0,0,0,191,225,107,40,245,93,...&gt;&gt; ],
              [ &lt;&lt;191,240,0,0,0,0,0,0,191,225,107,40,245,...&gt;&gt; ],
              [ &lt;&lt;63,240,0,0,0,0,0,0,191,225,107,40,...&gt;&gt; ]
            ],
            []
          },
          [
            { plugin_states, [] },
            { mode, vertex}
          ]
        }
      ], [[#Shapes|% Shapes end]]
      [  [[#Materials|% Materials]]
        { default,
          [
            { maps, [] },
            { opengl,
              [
                { ambient,   { 1.0,1.0,1.0,1.0 } },
                { diffuse,   { 1.0,1.0,1.0,1.0 } },
                { emission,  { 0.0,0.0,0.0,0.0 } },
                { shininess, 1.0 },
                { specular,  { 1.0,1.0,1.0,1.0 } }
              ]
            }
          ]
        }
      ], [[#Materials|% Materials end]]
      [  [[#Props|% Props]]
        { scene_prefs, [] },
        { plugin_states, [] }
      ]  [[#Props|% Props end]]
    }
  }

You'll spot the two essential compound Erlang datatypes '''tuple''' (indicated by braces as in {something,someother,somemore}) and '''list''' (indicated by square brackets [elem1,elem2,...], some '''atoms''' (the all lower case strings without quotes in this sample, e.g. wings, edge, plugin_states), a string (&quot;tetrahedron1&quot;), some binary data (indicated by double angle brackets with byte values inbetween &lt;&lt;0,1,2,3&gt;&gt;) and some integer and float values. And you see, this is all heavily nested (e.g. a list of lists of tuples).

=== External Term Format ===

When you can't use an existing interface (or want to write a new one), you have to know the ''external'' format of Erlang terms, which is [http://www.erlang.org/doc/apps/erts/erl_ext_dist.html very well documented here]. Note, that you then have to deal with a stream of bytes and must reconstruct the nested structure yourself somehow. For reference, the Erlang/OTP source code has a module called &quot;jinterface&quot; that gives a Java implementation of a set of classes that can read this format.

To process *.wings files you should be prepared to at least be able to deal with

* 8.4  SMALL_INTEGER_EXT
* 8.5  INTEGER_EXT
* 8.6  FLOAT_EXT
* 8.7  ATOM_EXT
* 8.11 SMALL_TUPLE_EXT
* 8.13 NIL_EXT
* 8.14 STRING_EXT
* 8.15 LIST_EXT
* 8.16 BINARY_EXT

=== The Topmost Tuple ===

The topmost data structure after expanding is a ''tagged'' tuple with 3 elements:

# The atom 'wings', identifying this as a wings file.
# The integer (2) indicating the file version.
# another tuple having 3 elements, namely ''[[#Shapes|Shapes]]'', ''[[#Materials|Materials]]'' and ''[[#Props|Props]]''.

A compliant loader should check for the presence of the first 2 elements, and verify that the third element is a 3-tuple.

=== Shapes ===

The Shapes section consists of a ''list'' of objects, each of which is a quadruple (4-tuple) describing every separate object. The object quadruple has the following format:

# The ''tag'' atom 'object'.
# A string with the name of the object, such as &quot;tetrahedron1&quot;
# Another quadruple containing the object's actual data, tagged by the atom 'winged' (as in the winged-edge data structure). This tuple is described in the next section.
# A list containing information about plug-in states and selection mode for this object. Generally, this isn't used in an importer/exporter.

==== The Winged Edge Datastructure ====

'''Wings3D''' uses the [http://www.cs.mtu.edu/~shene/COURSES/cs3621/NOTES/model/winged-e.html winged edge data structure] enabling it to be exceptionally fast on all operations involving ''neighborhood'' operations (e.g. edge looping). The *.wings file format stores these winged edge data structures directly, therefore the majority of the data is stored within the edges themselves rather than in tables (such as *.3ds or *.X file formats).

The tagged tuple 'winged' contains all of the data required to define the object's geometry. It takes the following format:
# The atom 'winged' (tag)
# A list containing a series of lists, each defining an edge.
# A list containing a series of lists, each defining a mapping between a face and a material.
# A list containing a series of lists, each defining a vertex.
# A list, usage unknown as of now -- nil in examples.

In the first list (edge data), a series of lists is found, with each list defining an edge. In each edge's list, the following tuples may appear. Note that a tuple may not appear more than once in each edge's list or else Wings will be unable load it, and the order in which they appear does not matter.
 
* Tagged 9-tuple 'edge': Defines the winged edge data structure and must be present. Has the format of:
*# The atom 'edge' (tag)
*# Start Vertex
*# End Vertex
*# Left Face
*# Right Face
*# Left Predecessor
*# Left successor
*# Right predecessor
*# Right successor
* Tagged 2-tuple 'color_rt': Defines right vertex edge color. Has the format of:
*# The atom 'color_rt' (tag)
*# 12-byte binary blob representing the color value in RGB notation. Each component is stored as a 32-bit single precision floating point value.
* Tagged 2-tuple 'color_lt': Defines left vertex edge color. Has the format of:
*# The atom 'color_lt' (tag)
*# 12-byte binary blob representing the color value in RGB notation. Each component is stored as a 32-bit single precision floating point value.
* Tagged 2-tuple 'uv_rt': Defines right vertex UV coordinate. Has the format of:
*# The atom 'uv_rt' (tag)
*# 16-byte binary blob representing the UV coordinate, with 8-byte floating point values for each number.
* Tagged 2-tuple 'uv_lt': Defines left vertex UV coordinate. Has the format of:
*# The atom 'uv_lt' (tag)
*# 16-byte binary blob representing the UV coordinate, with 8-byte floating point values for each number.

As of Wings 1.1.15, both UV and vertex colors may be found in this list. Previously, only one or the other could be found.

In the second list (material data), there is an entry for every face defined by the previously read winged edge structures.
* If the face has no material (the default material), then the item in the list is nil.
* If the face has a material, the entry is a list containing a tagged 2-tuple in the format of:
*# The atom 'material' (tag)
*# The atom of the material name, such as 'tetrahedron1_auv'. This is a reference to the materials section.

=== Materials ===

Link target to be filled in later.

=== Props ===

Link target to be filled in later.

{{BookCat}}</text>
      <sha1>gcc48hfonpnhiakgb1ucz5k0zs4q4hd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:CRE Loaded Features/Configuration/Images</title>
    <ns>1</ns>
    <id>200240</id>
    <revision>
      <id>1545274</id>
      <timestamp>2009-06-23T06:57:30Z</timestamp>
      <contributor>
        <ip>115.128.16.168</ip>
      </contributor>
      <comment>Created page with '  this is next to useless. Don't just write out the heading in a slightly different way and call it &quot;help&quot; what does it actually do? image calculation - what? whats happening? wi...'</comment>
      <text xml:space="preserve">

this is next to useless. Don't just write out the heading in a slightly different way and call it &quot;help&quot; what does it actually do? image calculation - what? whats happening? will it crop? re-size to width - height contraint? what/</text>
      <sha1>1v9qd12oqawbur5kudnab6k2dmy0rjp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Sjorskingma</title>
    <ns>2</ns>
    <id>200244</id>
    <revision>
      <id>1545401</id>
      <timestamp>2009-06-23T10:41:46Z</timestamp>
      <contributor>
        <ip>86.85.221.195</ip>
      </contributor>
      <comment>Created page with '&lt;div style=&quot;background-color:#aaffff; line-height:1.5; border-width : 6px; border-style:solid;border-color:#88CCFF;&quot;&gt; &lt;div style=&quot;background-color:#aaffff; line-height:1.5; borde...'</comment>
      <text xml:space="preserve">&lt;div style=&quot;background-color:#aaffff; line-height:1.5; border-width : 6px; border-style:solid;border-color:#88CCFF;&quot;&gt;
&lt;div style=&quot;background-color:#aaffff; line-height:1.5; border-width : 5px; border-style:solid;border-color:#00CCCC;&quot;&gt;
&lt;div style=&quot;background-color:#eeffff; line-height:1.5; border-width : 2px; border-style:solid;border-color:#3399AA;&quot;&gt;
&lt;div style=&quot;background-color:#eeffff; line-height:1.5; border-width : 2px; border-style:solid;border-color:#666677;&quot;&gt;
&lt;div style=&quot;background-color:#eeffff; line-height:1.5; border-width : 5px; border-style:solid;border-color:#BBBBBB;&quot;&gt;
&lt;div style=&quot;background-color:#eeffff; line-height:1.5; border-width : 5px; border-style:solid;border-color:#BBDDBB;&quot;&gt;
&lt;div style=&quot;background-color:#aaffff; line-height:1.5; border-width : 6px; border-style:solid;border-color:#88CCFF;&quot;&gt;
&lt;div style=&quot;background-color:#aaffff; line-height:1.5; border-width : 5px; border-style:solid;border-color:#00CCCC;&quot;&gt;
&lt;div style=&quot;background-color:#eeffff; line-height:1.5; border-width : 2px; border-style:solid;border-color:#3399AA;&quot;&gt;
&lt;div style=&quot;background-color:#eeffff; line-height:1.5; border-width : 2px; border-style:solid;border-color:#666677;&quot;&gt;
&lt;div style=&quot;background-color:#eeffff; line-height:1.5; border-width : 5px; border-style:solid;border-color:#BBBBBB;&quot;&gt;
&lt;div style=&quot;background-color:#eeffff; line-height:1.5; border-width : 5px; border-style:solid;border-color:#BBDDBB;&quot;&gt;
Link to my Dutch wikipedia userpage ---&gt; [http://nl.wikipedia.org/wiki/Gebruiker:Sjorskingma]
&lt;/div&gt;</text>
      <sha1>nc34py9umhtjfpz1hym7zkb9qssghy5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Transwiki log/Articles moved from here/en.wikipedia</title>
    <ns>4</ns>
    <id>200245</id>
    <revision>
      <id>1545409</id>
      <parentid>1545408</parentid>
      <timestamp>2009-06-23T11:28:50Z</timestamp>
      <contributor>
        <username>Uncle G's 'bot</username>
        <id>9752</id>
      </contributor>
      <comment>TRANSWIKI: 'bot assisted transwiki from [[Politics of Merrimack/Merrimack Politics of 2005]] to [[Wikipedia:Transwiki:Politics of Merrimack/Merrimack Politics of 2005]] .</comment>
      <text xml:space="preserve">
*[[Politics of Merrimack]] &amp;rarr; [[Wikipedia:Transwiki:Politics of Merrimack]] [[User:Uncle G&amp;#39;s &amp;#39;bot|]] ([[User talk:Uncle G&amp;#39;s &amp;#39;bot|talk]]) 11:11, 23 June 2009 (UTC)
*[[Politics of Merrimack/Merrimack Politics of 2002]] &amp;rarr; [[Wikipedia:Transwiki:Politics of Merrimack/Merrimack Politics of 2002]] [[User:Uncle G&amp;#39;s &amp;#39;bot|]] ([[User talk:Uncle G&amp;#39;s &amp;#39;bot|talk]]) 11:15, 23 June 2009 (UTC)
*[[Politics of Merrimack/Merrimack Politics of 2005]] &amp;rarr; [[Wikipedia:Transwiki:Politics of Merrimack/Merrimack Politics of 2005]] [[User:Uncle G&amp;#39;s &amp;#39;bot|]] ([[User talk:Uncle G&amp;#39;s &amp;#39;bot|talk]]) 11:28, 23 June 2009 (UTC)</text>
      <sha1>mlaa8gnuzdxqnnhwara86nr0le2ap2d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Symantec-Ghost-Solution-Suite 2.jpg</title>
    <ns>6</ns>
    <id>200246</id>
    <revision>
      <id>2360985</id>
      <parentid>1545413</parentid>
      <timestamp>2012-06-08T13:15:53Z</timestamp>
      <contributor>
        <username>Mabdul</username>
        <id>173174</id>
      </contributor>
      <comment>this has to be a fair use :(</comment>
      <text xml:space="preserve">== Summary ==
{{Information |Description=screenshot of Ghost|Source=Symantec website |Date=6-21-09 |Author=Symantec |Permission=see below}}

== Licensing ==
{{non-free software screenshot}}
{{Fairuse rationale
|module      = Directing Technology/Maintain/Supporting Technology
|copyrights  = Symantec
|not free    = This is a screenshot of a proprietary software
|rationale   = There is no free equivalent for this screenshot
|source      = Symantec website
}}</text>
      <sha1>b6gbsj7ujudgl4eozv5skgowtntfslz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Symantec-Ghost-Solution-Suite task screen.jpg</title>
    <ns>6</ns>
    <id>200247</id>
    <revision>
      <id>2360980</id>
      <parentid>1545418</parentid>
      <timestamp>2012-06-08T13:13:01Z</timestamp>
      <contributor>
        <username>Mabdul</username>
        <id>173174</id>
      </contributor>
      <comment>correcting license: this has to be a fair use image!</comment>
      <text xml:space="preserve">== Summary ==
{{Information |Description=screenshot of Ghost, task screen|Source=Symantec website |Date=6-21-09 |Author=Symantec |Permission=see below}}

== Licensing ==
{{non-free software screenshot}}
{{Fairuse rationale
|module      = Directing Technology/Maintain/Supporting Technology
|copyrights  = Symantec
|not free    = This is a screenshot of a proprietary software
|rationale   = There is no free equivalent for this screenshot
|source      = Symantec website
}}</text>
      <sha1>1nwely7p2c9zmvf1ce1uiwd4drdflo1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Clonezilla config.jpg</title>
    <ns>6</ns>
    <id>200248</id>
    <revision>
      <id>2360982</id>
      <parentid>1545419</parentid>
      <timestamp>2012-06-08T13:14:20Z</timestamp>
      <contributor>
        <username>Mabdul</username>
        <id>173174</id>
      </contributor>
      <comment>correct license</comment>
      <text xml:space="preserve">== Summary ==
{{Information |Description=screenshot of Clonezilla information screen|Source=Clonezilla website |Date=6-21-09 |Author=Clonezilla |Permission=permission of author, as per description on website |other_versions= }}

== Licensing ==
{{Free screenshot|GPL}}</text>
      <sha1>3plzxa157conyzsr13ay48b5b5ksi40</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Directing Technology/Purchase/Learn More About the Bidding Process</title>
    <ns>0</ns>
    <id>200250</id>
    <revision>
      <id>1552836</id>
      <parentid>1547066</parentid>
      <timestamp>2009-06-30T13:29:12Z</timestamp>
      <contributor>
        <username>Jpfranzen</username>
        <id>235346</id>
      </contributor>
      <text xml:space="preserve">{{Directing Technology/Contents}}
{{TOCright}}


==Introduction==
When the purchase of new equipment or construction exceeds the amount of $10,000 a school district must purchase the equipment through a competitive public bid.  For a technology director a bid might be required for the following items:
:*Creating, maintaining, and Updating Networks
:*Laptop purchasing for school buildings
:*Large Scale software purchasing
:*Any construction associated with the development of technology infrastructure
The bid process has many steps and can last for 4 to 6 months from creating the bid to final school board approval.  In the end the proposed bid will go to the lowest bidder that meets all of the bid specifications.  The bidding process is dominated by detailed specifications that aim to protect the school district and potential vendors.  These specifications and conditions govern every aspect of bidding from creation to completion.   While bidding is an important part of a Technology Directors position, it is becoming less frequently used for hardware purchases due to &quot;state contracts&quot; or cooperative purchasing agreements such as PEPPM and CoStars.  Bidding is still an essential part of technology construction.  The first part of this page will look at putting together a bid proposal, followed by alternate ways to get around the bid process.  The following information is a general guideline for the bid process, however a technology director would need to look into specific district and state regulations on bidding.  

==How to Put Together a Bid==
[[File:puzzlepiece.jpg|200px|thumbnail]]
&lt;h5&gt;'''Step 1: Generating the Bid Proposal or Bid Spec'''&lt;/h5&gt;

Before a bid can be created a school district needs to assess their needs and figure out what equipment will work best in their situation or what construction is required.  There are many ways a district can gather this information.  
A need can be identified through (More about planning can be found in [[Directing Technology/Purchase]]):
:*Faculty interviews
:*Site visits to other schools
:*Administrative request
:*Curriculum needs
The need for new technology or construction can be the vision of a few people or the need of the whole district.  The planning process is especially important in creating specifications for a bid.  Specifications are the specific details of technology or construction that the district needs.  At the end of the bid process the school district will need to accept the lowest submitted bid that meets all the outlined specifications, so it is imperative that the specifications outline exactly what the district wants.  On the other end, the district cannot become so specific as to request certain brands or companies.  In the specifications the school district will also need to outline the time frame for the bid.  Specifications are a reason why many technology departments will use alternatives (discussed below) to bidding for the purchase of hardware.  If specifications are too general a district might end up with an inferior product that does not meet their needs or if the specifications are too specific they can actually drive away suitable bidders&lt;ref&gt;Roberts, T.(personal communication, June 7, 2009)&lt;/ref&gt;. 
For smaller purchases or equipment, the tech director might write the bid on their own, however for larger items or construction, a consultant or engineer might be hired to assist in creating the specifications.  This can assure that the bid accurately reflects the needs of the school district.  Specifications can range from memory and screen size in the purchase of laptops, to the specific types of wires and jacks used in construction.

In addition to creating a detailed set of specifications that describe the item or service needed, a bid should also include &quot;Conditions&quot; that protect the school district during the bidding, purchasing, receiving and installation process.  These Conditions cover everything from providing clearly marked samples, to completing the bid in the given time specifications, to what documents need to be submitted to meet the bid requirements.  A school district should have a list of general Conditions for the bidding procedure, however individual bids may have special conditions that are unique to that project.  
{|cellspacing=1 cellpadding=5 border=5
|-
|These are a few Conditions from a bid put out by the Wissahickon School District:
:*The Board has the right to accept or reject all or any portion of the bids submitted and to make the award in the best interest of the School District.
:*The Bidder agrees that if the contract is awarded to him, he will not assign. transfer, or sublet it, unless specific permission to do so is granted in writing by the School District.
:*The bidder agrees, if awarded the contract, to furnish and deliver the said items at such times, at such places and in such quantities as herein specified, and that all of the items shall be subject to the inspection and approval of the board.
The complete Bid Invitation and Specifications can be found at the [http://www.wsdweb.org/Portals/0/Schools/WSD_DO/Bid%20Form%20and%20Instructions%20March2009.pdf Wissahickon School District Website].&lt;ref&gt;http://www.wsdweb.org/Portals/0/Schools/WSD_DO/Bid%20Form%20and%20Instructions%20March2009.pdf&lt;/ref&gt;
|}


Once the technology director has put together a bid proposal that clearly states what the district needs, outlined the time table for the completion of the bid, and created additional conditions to protect the district, it is time time move onto the next step.

&lt;h5&gt; Step 2: Publicly Advertise the Bid&lt;/h5&gt;

Many school districts have a section of their websites dedicated to posting bids.  This is one way to publicly advertise the bids for vendors and contractors.  District bid pages are not limited to technology related bids, but rather contain all district bids ranging from food services to new construction.  These are a few examples of district bid pages: 
:*[http://www.phila.k12.pa.us/offices/procurement/bidschedule.htm Philadelphia School District]&lt;ref&gt;http://www.phila.k12.pa.us/offices/procurement/bidschedule.htm&lt;/ref&gt;
:*[http://www.soudertonsd.org/district/finance/bids/ Souderton Area School District]&lt;ref&gt;http://www.soudertonsd.org/district/finance/bids/&lt;/ref&gt;
:*[http://www.npenn.org/5577902321255/blank/browse.asp?a=383&amp;BMDRN=2000&amp;BCOB=0&amp;c=52181&amp;5577902321255Nav=|140|&amp;NodeID=286 North Penn School District]&lt;ref&gt;http://www.npenn.org/5577902321255/blank/browse.asp?a=383&amp;BMDRN=2000&amp;BCOB=0&amp;c=52181&amp;5577902321255Nav=|140|&amp;NodeID=286&lt;/ref&gt;

Some districts will also post bid advertisements on sites such as [http://www.eschoolmall.com/ESM/default.aspx eschoolmall.com]&lt;ref&gt;http://www.eschoolmall.com/ESM/default.aspx&lt;/ref&gt;.  This is a website that links schools and vendors in the bidding process, and also helps manage the bid process for the school district.

In the state of Pennsylvania it is required that a school advertise the bid in at least two local newspapers.  The newspaper bid notice should include several details about the bid including:
:* Where and when the sealed bid proposals are due
:* Where bid documents can be picked up and associated costs for documents
:* Items or construction that is up for bid
:* Time and location of pre-bid meetings
:* Any additional conditions that apply to the bid
:* Contact information for person issuing bid&lt;ref&gt;Pollack, S. (2009, May 13)Bidding notice.'' Souderton Independent''&lt;/ref&gt;

Once the bid has been advertised in a local newspaper, the district needs to get a Proof of Publication notice for file.  This proves the bid was properly advertised to the public.  This document will contain a copy of the ad, name of newspaper, and the dates it appeared in the newspaper.  It will also need to be notarized.

&lt;h5&gt;Step 3: Release Request for Proposal(RFP)&lt;/h5&gt;
After making the public aware of the bid, an RFP will be handed out to potential vendors or contractors.  This can be done in person, at a pre-bid meeting, through a district website, or through a third part website.  The RFP will contain all of the specifications and conditions created during the initial step of the bid process.  A basic template for an RFP can be on the Planning page or [http://www.netdynasty.com/articles/business/rfp/rfp_template/ here]&lt;ref&gt;http://www.netdynasty.com/articles/business/rfp/rfp_template/&lt;/ref&gt;.  Completed examples of RFPs can be found on many district websites such as [http://web.beaufort.k12.sc.us/education/components/docmgr/default.php?sectiondetailid=565&amp;catfilter=7&amp;PHPSESSID=7e1b321129b43a13992d9001f46eeb50#showDoc Beaufort County School District]&lt;ref&gt;http://web.beaufort.k12.sc.us/education/components/docmgr/default.php?sectiondetailid=565&amp;catfilter=7&amp;PHPSESSID=7e1b321129b43a13992d9001f46eeb50#showDoc&lt;/ref&gt;  A complete RFP should contain district information, bid specifications, time frame for bid submission and notification, submission process, proposed time frame for project completion, and contact information.  

&lt;h5&gt; Step 4: Receive and Publicly Open Bids &lt;/h5&gt;
All details surrounding the submission process should be clearly defined in the RFP.  Specific dates and time, and recipient of the submission should be included.  It should be mentioned that bids not submitted in the proper manner will not be opened. Bids are usually submitted in a sealed envelope with a label specified in the RFP.  Districts can require a paper submission, electronic submission or both.  Electronic submissions can take the form of diskettes, CD-ROMs, emails, or submission through a third party website.

Immediately after the stated deadline of submitting bids, all bids will be publicly opened

&lt;h5&gt;Step 5: Reviewing the Bids&lt;/h5&gt;
Once bids have been publicly opened, they are reviewed by the involved district members.  This can be a matter of comparing apples to oranges.&lt;ref&gt;Roberts, T.(personal communication, June 7, 2009)&lt;/ref&gt;  In the end, the lowest qualified bid will need to be selected.  A technology director will need to look closely at whether the proposed bids meet all the set specifications.  This is where well thought out and detailed specifications can make or break a bid.   A technology director cannot choose a bid based on a preferred brand or company.  A bid can only be selected for low costs and meeting bid conditions.  Reviewing bids is a complicated task and depends on the bids submitted and the quality of the bid specifications.  The final decision can be difficult since it needs to ensure the district receives a quality product or service that meets all of its needs, and also meets the legal aspects of the bidding process.     

&lt;h5&gt;Step 6: Submit Recommendation to Submit Bid for Final Approval&lt;/h5&gt; 
After a bid proposal has been selected by the technology director or involved parties, it is placed on the school board agenda for final approval.  During the school board meeting it is possible that further discussion about the bid selection will occur.  To complete the process the school board will need to accept the bid proposal.

&lt;h5&gt;Step 7: Purchasing or Construction&lt;/h5&gt;
Upon approval of the bid proposal, items can be purchased or construction can begin.  In the RFP there should be time frames for the completion of the bid.  Conditions of the bid will outline what will happen if a vendor or contractor cannot meet deadlines or bid specifications.  RFP conditions will also dictate the payment for items or services by the school district.  The entire process of bidding can take as few as two months, but usually lasts up to six.

==Alternates to the Bid Process==
Since the bid process can be complicated and may not yield desired results, there are alternatives that a technology director might want to consider.  The following sites work best for the purchase of technology hardware and do not offer the best alternative to technology construction.  Each state has different options, however most are programs that have pre-negotiated prices on common pieces of technology.  Selected vendors submit prices for items, and those prices are available to the district without bidding. Some programs may include construction costs.  This eliminates the need for a bid and guarantees the district will receive exactly want they want.  Without having to go through the bid process, a district can save time and money that can be spent on other things.  

[http://www.peppm.org/pa/default.htm PEPPM]&lt;ref&gt;http://www.peppm.org/pa/default.htm&lt;/ref&gt; PEPPM is a multi-state program that allows the purchase of products at pre-negotiated prices from different vendors.  PEPPM acts as a mediator, accepting orders and giving them to selected vendors.  Ordering can be done online or off-line by faxing a purchase order.  Purchase orders will follow individual vendor instructions, but will be sent to PEPPM.  E-rates can also be applied to purchases.

[http://www.portal.state.pa.us/portal/server.pt/community/costars/1272 COSTARS]&lt;ref&gt;http://www.portal.state.pa.us/portal/server.pt/community/costars/1272&lt;/ref&gt; COSTARS makes use of the Cooperative Purchasing Program in the state of Pennsylvania.  This allows local public procurements, such as schools to purchase items at a lower price.  Vendors submit bids to COSTARS for review, and reduced prices are then opened up to public procurements.

[http://www.iu13.org/tech_software_main.shtml IU13]&lt;ref&gt;http://www.iu13.org/tech_software_main.shtml&lt;/ref&gt; IU13 is a site that offers discounted software to the state of Pennsylvania.

==Sources==

{{reflist}}</text>
      <sha1>9kva3nogxs1erj2rdy5pvw1roo2pqg5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Kageskull</title>
    <ns>2</ns>
    <id>200252</id>
    <revision>
      <id>1545449</id>
      <timestamp>2009-06-23T13:14:33Z</timestamp>
      <contributor>
        <username>Kageskull</username>
        <id>245994</id>
      </contributor>
      <comment>Created Page</comment>
      <text xml:space="preserve">{{userpage}}

==Welcome==
My friends call me &quot;[[Kage]]&quot; (pronounced Kah-gay).  It's a nickname my [[martial arts]] [[sensei|instructor]] gave me meaning &quot;[[Shadow#Mythological_connotations|shadow]]&quot; in [[romanji]].  Please feel free to [http://en.wikibooks.org/w/index.php?title=User_talk:Kageskull&amp;action=edit&amp;section=new|leave a new message for me].</text>
      <sha1>p7kmz4f67ka2v2vqwn4ilamaav2v32p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>SwisTrack/Batch</title>
    <ns>0</ns>
    <id>200253</id>
    <revision>
      <id>1577868</id>
      <parentid>1545462</parentid>
      <timestamp>2009-07-23T20:53:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">SwisTrack supports a headless mode, that runs without a GUI for batch processing.  It lives in swistrack/Code/batch as a separate application binary. To use it, compile it by running &quot;make&quot; in that directory.  Run it by passing the configuration file on the command line. 

Here's an example:
&lt;code&gt;

$ cd swistrack/Examples/leurre/

$ ../../SwisTrackEnvironment/SwisTrack-batch ./leurre.swistrack 

&lt;/code&gt;

{{BookCat}}</text>
      <sha1>36kmmiaipey6q9d2nb9ibr8to776xt1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:91.208.219.22</title>
    <ns>3</ns>
    <id>200255</id>
    <revision>
      <id>2134093</id>
      <parentid>1545517</parentid>
      <timestamp>2011-07-05T09:09:19Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <comment>Please be constructive.</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/91.208.219.22|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 15:27, 23 June 2009 (UTC)}}

== July 2011 ==
We welcome and appreciate [[Special:Contributions/91.208.219.22|your contributions]], but some of your recent edits had to be undone. Please see [[Wikibooks:What is Wikibooks|What is Wikibooks?]] to learn more about what contributions are beneficial to Wikibooks. Please be aware that some edits can be considered [[Wikibooks:Vandalism|vandalism]], use the [[Wikibooks:Sandbox|sandbox]] for any test edits you would like to make, and read the [[Wikibooks:Welcome|welcome page]] to learn more about contributing constructively to this project. Thank you. &lt;font color=&quot;#E66C2C&quot;&gt;[[User:QuiteUnusual|'''QU''']]&lt;/font&gt; &lt;sup&gt;&lt;font color=&quot;#306754&quot;&gt;[[User talk:QuiteUnusual|TalkQu]]&lt;/font&gt;&lt;/sup&gt; 09:09, 5 July 2011 (UTC)</text>
      <sha1>nzphf3x3x9ybzbmf1me6i97n1jrl8m6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Gm1121983/Scorpion</title>
    <ns>2</ns>
    <id>200258</id>
    <revision>
      <id>2119064</id>
      <parentid>1545539</parentid>
      <timestamp>2011-06-09T14:21:06Z</timestamp>
      <contributor>
        <username>Gm1121983</username>
        <id>19061</id>
      </contributor>
      <text xml:space="preserve">The '''Scorpion''' is a hydrogen-powered sports car produced by the Ronn Motor Company (RMC). It's powered by a 3.5-liter twin turbo V-6 engine with 650 horsepower and 302 lb*ft torque, and it gets over 40 miles per gallon. It goes from 0-60 in 3.5 seconds and has a top speed of over 200 mph. It's exotic and eco-friendly.</text>
      <sha1>ol28qwdqv6suujpwootwr9qsrz1qxyv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Rob.harris</title>
    <ns>3</ns>
    <id>200259</id>
    <revision>
      <id>1545543</id>
      <timestamp>2009-06-23T15:43:17Z</timestamp>
      <contributor>
        <username>Ewen</username>
        <id>19329</id>
      </contributor>
      <comment>Hi!</comment>
      <text xml:space="preserve">Hi Rob! (Or is it [[User:rah34|rah]]?)

It's always good to see new life in the old project. I'll try to upload a stack of assignments and resources in the next few weeks. The forum digest needs attention too. Too busy teaching the course and not enough time for sharing. See you around!

[[User:Ewen|Ewen]] ([[User talk:Ewen|talk]]) 15:43, 23 June 2009 (UTC)</text>
      <sha1>qumy3xtslcgweapshvjjryw0rghstpg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:StepOne.png</title>
    <ns>6</ns>
    <id>200260</id>
    <revision>
      <id>1545562</id>
      <timestamp>2009-06-23T15:57:49Z</timestamp>
      <contributor>
        <username>Sapalskimichal</username>
        <id>244162</id>
      </contributor>
      <comment>{{Information
|Description=Step One for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskimichal</comment>
      <text xml:space="preserve">== Summary ==
{{Information
|Description=Step One for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskimichal)
|Permission=
|other_versions=
}}
== Licensing: ==
{{PD-self}}</text>
      <sha1>f3fg15dmpczex3wnevr50l0tls9ym0t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Embedded Control Systems Design/A design example</title>
    <ns>0</ns>
    <id>200261</id>
    <redirect title="Embedded Control Systems Design/A design example 2" />
    <revision>
      <id>1545569</id>
      <timestamp>2009-06-23T16:04:00Z</timestamp>
      <contributor>
        <username>Stef.lievens</username>
        <id>189810</id>
      </contributor>
      <comment>moved [[Embedded Control Systems Design/A design example]] to [[Embedded Control Systems Design/A design example 2]]: The changes to the chapter are going to be huge due to the writing style used (not scientific) and the non-consistency with the design pr</comment>
      <text xml:space="preserve">#REDIRECT [[Embedded Control Systems Design/A design example 2]]</text>
      <sha1>g1dph1t45mjgi5r9z9hx3mmi8i5o2wd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Embedded Control Systems Design/A design example 1</title>
    <ns>0</ns>
    <id>200262</id>
    <revision>
      <id>1685879</id>
      <parentid>1547936</parentid>
      <timestamp>2009-12-24T19:20:51Z</timestamp>
      <contributor>
        <ip>117.193.48.201</ip>
      </contributor>
      <comment>/* Phases of the design process */</comment>
      <text xml:space="preserve">{{Embedded Control Systems Design Page}}

This chapter illustrates the various steps in the design of an embedded system by means of a concrete example: an automated [[w:people mover|People Mover]].

==Introduction==
[[Image:BPLRT-ExtMid-CX100.JPG|right|thumb|250px|A [[w:Bombardier_CX-100|Bombardier_CX-100]] people mover in Signapore's [[w:Light Rapid Transit (Singapore)|Light Rapid Transit]].]]

To get a better understanding of the [[Embedded_Control_Systems_Design/Embedded_design_process|Design Process]] an example of an ECS is studied.
The various phases of the design process are discussed with regard to the example. 

The selected ECS for the example is the ''[[w:People mover|(automated) people mover]]''. Information of what a people mover is can be found on its [[w:People mover|wikipedia]] page.

==Phases of the design process==
This chapter discusses the different phases of the design process. Please note that the design process is not black and white but gray. That is there are many different ways to get to a design and there most certainly is no ultimate design process in which no interpretation or intellect is necessary.

These discussions give you an idea of what kind of information is necessary in which phase of the design process.

The chapter [[Embedded_Control_Systems_Design/Design_criteria|Design Criteria]] explains the approach of a design on a system level. It's useful to read this chapter first before you read further on.

===Requirements definition===
Goal of this phase is the ''product requirements'' document. It is a list of important requirements that can't be omitted.
In this example, the product requirement document is:
* Railway is given by client, specifications are known.
* Lay-out of the people mover is 1 locomotive with 1 (or more) carriages.
* Vehicle is driven by electric motor.
* Power for the motor comes through the rails.
* The railroad needs to by equipped with beacons at known locations.
* Locomotive is equipped with a beacon sensor.
* Every beacons yields its own reaction. 3 kinds of reactions exist:
** Speeding up with a certain amount.
** Slowing down with a certain amount.
** Stopping with a given deceleration.
* Safety measures.
* Headlights and internal illumination must switch on when it's dark.
* A control tower:
** must know the speed and position of the people mover at all times.
** must be able to take over control of the people mover when necessary.

===System specifications===
Here the requested behaviour of the system is described. Some specifications are:
* Wanted speeds dependent of the position (every corner has a different speed).
* What to do in case of certain scenario's (i.e. a fire, a rail block, ...).
* How fast to stop.
* Where are the different stops.
* ...

===Functional design===
The functional design phase defines which subprocesses and subsystems are necessary in the system.
[[Image:subsystems_peoplemover.gif|right|thumb|450px|Figure 1: Subsystems for the vehicle system of an automated peoplemover]]
[[Image:subsystems_communication.gif|right|thumb|450px|Figure 2: Interaction between subsystems]]
The system can be divied into three main parts:
* Traffic command system
* Control command system (= wireless communication)
* Vehicle command system

The vehicle command system can be divided further into subsystems. In the end it leaves a total of 7 subsystems:
* Wireless communication: Implements the transfer of information from the control tower to the train and vice versa.
* CPU: Is the brain of the people mover. All information is centralized and afterwards divided over the different subsystems. 
* Power: Is responsible fot the motor, its management system, ... 
* Control loop: Makes the control loop of the drive. 
* Sensors: Gathers information of the environment.
* Mechanical design.
* Esthetic design.

Figure 1 gives a schematic overview of the subsystems. The interaction between the different subsystems is presented in figure 2.

===Detailed design===
This phase results in a concrete structure of all modules from which the system must be made. The functional design is worked out on the component level. After this phase the only thing left is the implementaton. This phase can be thought of as the translation of the functional requirements into technical specifications.

===Implementation===
Building and testing prototypes of the system. Eventually leading to the production model. This phase needs no further explanation.

==Design context==
The chapter [[Embedded_Control_Systems_Design/Embedded_design_process#Design_contexts|Design Contexts]] explains the different contexts of a design.

The people mover is either a ''from scratch environment'' or an ''adapting environment'', depending on the presence of a previous model. The implications of a certain design context also are discussed in the section [[Embedded_Control_Systems_Design/Embedded_design_process#Design_contexts|Design Contexts]].

==System complexity==
The chapter [[Embedded_Control_Systems_Design/Categories_of_system_complexity|System Complexity]] explains the different categories of systems as a function of their complexity as well as the definition of complexity itself.

Using this chapter it's clear that the people mover is a system of type 2: '''Distributed hardware - Centralized control'''.
Perhaps in the future, when different autonomous people movers (of different companies) all use the same railroad system, the necessity of distributed control becomes obvious and this ''system of systems'' would be of the complexity class type 3. Note the analogy with [[Embedded_Control_Systems_Design/Aviation#Air_Traffic_Control|air traffic control]].

==Process vs system control==
[[Embedded_Control_Systems_Design/Process_control_vs_system_control|Process vs System control]] describes 2 types in which ECS can be divided.
The people mover, with its clear subsystems, is clearly of the type '''system control'''.</text>
      <sha1>co0qlwjm5aqepml6k8ovnmkp9p12085</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Practical Electronics/IC/4068</title>
    <ns>0</ns>
    <id>200263</id>
    <revision>
      <id>1545581</id>
      <timestamp>2009-06-23T16:15:01Z</timestamp>
      <contributor>
        <username>Inductiveload</username>
        <id>30522</id>
      </contributor>
      <comment>Created page with '{{Logic_IC |number = 4068 |logic_type = Combinatorial |func_family = Logic |description = 8-Input NAND/AND Gate |pins = 14 }}  The 4068 is a member of the [[Practical_Electronics...'</comment>
      <text xml:space="preserve">{{Logic_IC
|number = 4068
|logic_type = Combinatorial
|func_family = Logic
|description = 8-Input NAND/AND Gate
|pins = 14
}}

The 4068 is a member of the [[Practical_Electronics/IC/4000 Series|4000 Series]] [[Practical_Electronics/CMOS|CMOS]] range, and contains a single 8-input [[Practical_Electronics/Logic#NAND|NAND gate]], and, on some models the inverted output (i.e. an [[Practical_Electronics/Logic#AND|AND gate]]). The pinout diagram, given on the right, is the standard eight-input CMOS logic gate IC layout:

:*Pin 7 is the ground supply (GND)
:*Pin 14 is the positive supply (V&lt;sub&gt;DD&lt;/sub&gt;)
:*Pins 2-5 and 9-12 are gate inputs for the gate
:*Pin 1 and 13 are gate outputs. Pin 1 is not always available.
:*Pin 6 and 8 are not connected.

The NAND gate gives a high output for any combination of inputs, except when all inputs are high. The AND gate only gives a high when all inputs are high.

::&lt;math&gt; Q = \overline{A \cdot B \cdot C \cdot D \cdot E \cdot F \cdot G \cdot H } &lt;/math&gt;
::&lt;math&gt; \overline{Q} = A \cdot B \cdot C \cdot D \cdot E \cdot F \cdot G \cdot H  &lt;/math&gt;

This chip is widely available, and usually comes in a [[Practical_Electronics/IC/DIL|DIL]]-14 or [[Practical_Electronics/IC/SOIC|SOIC]]-14 package.

An 8-input NAND gate is available as the TTL [[Practical_Electronics/IC/7420|7430]], but no AND gate is available.</text>
      <sha1>apw0113v9tdjrvzrs4ngvls6ha3vpd2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Practical Electronics/IC/7420</title>
    <ns>0</ns>
    <id>200264</id>
    <revision>
      <id>1545598</id>
      <parentid>1545582</parentid>
      <timestamp>2009-06-23T16:46:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Added page to book's category.</comment>
      <text xml:space="preserve">==Datasheets==

[http://www.nxp.com/acrobat_download/datasheets/74F30_2.pdf NXP 74F30]

{{BookCat}}</text>
      <sha1>dzghclsdn2yok2vyh3t8u659s3nqill</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Media Centers Based on Wyplayer/Hardware</title>
    <ns>0</ns>
    <id>200265</id>
    <revision>
      <id>2691952</id>
      <parentid>1757774</parentid>
      <timestamp>2014-08-16T14:33:53Z</timestamp>
      <contributor>
        <username>Rotlink</username>
        <id>761486</id>
      </contributor>
      <minor />
      <comment>fixing dead links</comment>
      <text xml:space="preserve">This multimedia disks are built with very similar hardware to any computer but less performance and smaller size. Although the component specification is not public, some users have been finding out parts and illustrating the various components.

== Chipset ==
Probably, device's chipset is a ST Micro 7109.This chipset provides JTAG/TAP interface.

You can find chip specification at:
*http://www.st.com/stonline/products/literature/bd/11660/sti7109.pdf

== Pics of CMT2D (non-wifi version) ==
By opening the box, the following hardware can be seen:

*https://archive.is/20130114053437/img269.imageshack.us/img269/258/mediatitan1.jpg
*https://archive.is/20130114051923/img269.imageshack.us/img269/538/mediatitan2.jpg
*https://archive.is/20130114050039/img269.imageshack.us/img269/3254/mediatitan3.jpg
*https://archive.is/20130114044437/img269.imageshack.us/img269/9430/mediatitan4.jpg

== Board Components of CMT2D (non-wifi version) ==

As you can see in the image below, the components identified so far in a CMT2D are:
*http://img40.imageshack.us/img40/4601/mediatitan4ident.jpg (Media Titan CMT2D board components)

{| border=&quot;1&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;
|-
! style=&quot;background:#efefef;&quot; | Component
! style=&quot;background:#efefef;&quot; | Description
! style=&quot;background:#efefef;&quot; | Link
|- 
| FLASH MEMORY
| Samsung Semiconductor - K9F2G08U0A-PCBOO - NAND Flash
| http://www.samsung.com/global/business/semiconductor/productInfo.do?fmly_id=159&amp;partnum=K9F2G08U0A
|-
| Other FLASH MEMORY (symbol in pic------&gt;  ?)
| Spansion - S29GL064N - NAND Flash
| http://www.spansion.com/products/S29GL064N.html
|-
| HD INTERFACE
| SST - SST55VD020 - ATA Flash Disk Controller
| http://www.sst.com/products.xhtml/embedded_controllers/55/SST55VD020
|}
{{BookCat}}


[[es:Discos multimedia basados en Wyplayer/Hardware]]
[[fr:Disque_dur_multimédia_Wyplayer/Hardware]]</text>
      <sha1>9knnhukjmh7tc5wv8e4izf2irui6mm1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Practical Electronics/Templates</title>
    <ns>14</ns>
    <id>200266</id>
    <revision>
      <id>1545597</id>
      <timestamp>2009-06-23T16:46:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">This category contains templates used in the [[Practical Electronics]] book.

[[Category:Practical Electronics|Templates]]</text>
      <sha1>36gzerbww8kc5mbbfp8nqtv2hm4pr94</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:213.0.69.136</title>
    <ns>3</ns>
    <id>200267</id>
    <revision>
      <id>1545600</id>
      <timestamp>2009-06-23T16:48:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Join Us!</comment>
      <text xml:space="preserve">== Join Us! ==

{{#ifeq:&quot;{{NAMESPACE}}&quot;| &quot;User talk&quot;|
Hello and '''[[Wikibooks:Welcome, newcomers|welcome]]''' to [[Wikibooks]], a collection of open-content textbooks!

You should consider [[Special:Userlogin|creating an account or logging in]]. It's free and requires no personal information. Here are some advantages:

* A username of your choice.
* Greater security and privacy, as your IP address will be hidden from most users.
* Your own personal user page and talk page.
* [[Special:Contributions/{{PAGENAME}}|Your contributions]] will directly attributed to you.
* The use of your own [[Help:Watching pages|watchlist]] to monitor pages that you are interested in.
* Your opinions carry greater weight in the [[Wikibooks:Decision making|decision making process]].
* You become a recognized member of the Wikibooks community.

We hope that you choose to become a Wikibookian and [[Special:Userlogin|create an account]].

Feel free to ask any questions on my talk page or in the [[Wikibooks:Reading room|Reading room]].
Be sure to sign your talk page comments with four tildes (&lt;nowiki&gt;~~~~&lt;/nowiki&gt;).

| {{#if:  | |&lt;!-- this is so if anyone tries to use it where it doesn't go they will know. --&gt;
{{mbox|type=warning|This template must only be used on '''User [[Help:Talk page|discussion]]''' pages.}} }} }}--[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 16:48, 23 June 2009 (UTC)</text>
      <sha1>r7pcuzn5ha1bhg9s7gv1rq932n1177g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Media centers based on Wyplayer/Hardware</title>
    <ns>0</ns>
    <id>200268</id>
    <redirect title="Media Centers Based on Wyplayer/Hardware" />
    <revision>
      <id>1545603</id>
      <timestamp>2009-06-23T16:48:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Media centers based on Wyplayer/Hardware]] to [[Media Centers Based on Wyplayer/Hardware]]: Fixing root page name to match actual name.</comment>
      <text xml:space="preserve">#REDIRECT [[Media Centers Based on Wyplayer/Hardware]]</text>
      <sha1>o4uqgu3zgxq9h4f0znsd8zij7egi65x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:StepTwo.png</title>
    <ns>6</ns>
    <id>200269</id>
    <revision>
      <id>1545746</id>
      <timestamp>2009-06-23T17:28:30Z</timestamp>
      <contributor>
        <username>Sapalskimichal</username>
        <id>244162</id>
      </contributor>
      <comment>{{Information
|Description=Step Two for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskimichal</comment>
      <text xml:space="preserve">== Summary ==
{{Information
|Description=Step Two for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskimichal)
|Permission=
|other_versions=
}}
== Licensing: ==
{{PD-self}}</text>
      <sha1>jywz101wng44ior8gsyoh5eysd625fo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:StepThree.png</title>
    <ns>6</ns>
    <id>200270</id>
    <revision>
      <id>1545751</id>
      <timestamp>2009-06-23T17:29:28Z</timestamp>
      <contributor>
        <username>Sapalskimichal</username>
        <id>244162</id>
      </contributor>
      <comment>{{Information
|Description=Step Three for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskimich</comment>
      <text xml:space="preserve">== Summary ==
{{Information
|Description=Step Three for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskimichal)
|Permission=
|other_versions=
}}
== Licensing: ==
{{PD-self}}</text>
      <sha1>3g7qlkh8u0w4b9mdv1533c90cif5s21</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:StepFour.png</title>
    <ns>6</ns>
    <id>200271</id>
    <revision>
      <id>1545756</id>
      <timestamp>2009-06-23T17:30:13Z</timestamp>
      <contributor>
        <username>Sapalskimichal</username>
        <id>244162</id>
      </contributor>
      <comment>{{Information
|Description=Step Four for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskimicha</comment>
      <text xml:space="preserve">== Summary ==
{{Information
|Description=Step Four for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskimichal)
|Permission=
|other_versions=
}}
== Licensing: ==
{{PD-self}}</text>
      <sha1>h3exlns9k7z5nbjnmdsoe1907ziyatr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:StepFive.png</title>
    <ns>6</ns>
    <id>200272</id>
    <revision>
      <id>1545766</id>
      <timestamp>2009-06-23T17:31:37Z</timestamp>
      <contributor>
        <username>Sapalskimichal</username>
        <id>244162</id>
      </contributor>
      <comment>{{Information
|Description=Step Five for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskimicha</comment>
      <text xml:space="preserve">== Summary ==
{{Information
|Description=Step Five for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskimichal)
|Permission=
|other_versions=
}}
== Licensing: ==
{{PD-self}}</text>
      <sha1>9e2xirrh73qo4xtykenk1d3viclj5n2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:JewelFinished.png</title>
    <ns>6</ns>
    <id>200273</id>
    <revision>
      <id>1545777</id>
      <timestamp>2009-06-23T17:33:09Z</timestamp>
      <contributor>
        <username>Sapalskimichal</username>
        <id>244162</id>
      </contributor>
      <comment>{{Information
|Description=Finished Jewel for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalski</comment>
      <text xml:space="preserve">== Summary ==
{{Information
|Description=Finished Jewel for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskimichal)
|Permission=
|other_versions=
}}
== Licensing: ==
{{PD-self}}</text>
      <sha1>swjab2h8jishnynczk7xvpkkhs7rt27</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Jewel Materials.png</title>
    <ns>6</ns>
    <id>200274</id>
    <revision>
      <id>1545780</id>
      <timestamp>2009-06-23T17:34:29Z</timestamp>
      <contributor>
        <username>Sapalskimichal</username>
        <id>244162</id>
      </contributor>
      <comment>{{Information
|Description=Jewel Materials for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalsk</comment>
      <text xml:space="preserve">== Summary ==
{{Information
|Description=Jewel Materials for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskimichal)
|Permission=
|other_versions=
}}
== Licensing: ==
{{PD-self}}</text>
      <sha1>sut43sdfighci5qq9dydo9ljrc1cji9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:JewelExample.png</title>
    <ns>6</ns>
    <id>200275</id>
    <revision>
      <id>1545781</id>
      <timestamp>2009-06-23T17:35:46Z</timestamp>
      <contributor>
        <username>Sapalskimichal</username>
        <id>244162</id>
      </contributor>
      <comment>{{Information
|Description=Jewel Example for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskim</comment>
      <text xml:space="preserve">== Summary ==
{{Information
|Description=Jewel Example for Creating Jewel in Blender tutorial (http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Creating_a_jewel_in_Blender)
|Source=own work (screenshot)
|Date=2009-06-19
|Author=Michał Sapalski (username: sapalskimichal)
|Permission=
|other_versions=
}}
== Licensing: ==
{{PD-self}}</text>
      <sha1>ox5qfw7iyur4eqms0o84vsjvr7qlyug</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Reo On</title>
    <ns>2</ns>
    <id>200276</id>
    <revision>
      <id>1545926</id>
      <timestamp>2009-06-23T20:07:45Z</timestamp>
      <contributor>
        <username>Reo On</username>
        <id>246164</id>
      </contributor>
      <comment>me</comment>
      <text xml:space="preserve">[[w:User:Reo On]]</text>
      <sha1>lkvqmvnlrai2ljedowt2jr9gvp7dkgm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Celsius</title>
    <ns>102</ns>
    <id>200285</id>
    <redirect title="Cookbook:Oven temperatures" />
    <revision>
      <id>1546114</id>
      <timestamp>2009-06-23T23:36:53Z</timestamp>
      <contributor>
        <username>Nbarth</username>
        <id>79594</id>
      </contributor>
      <comment>redirect</comment>
      <text xml:space="preserve">#REDIRECT [[Cookbook:Oven temperatures]]</text>
      <sha1>p5w0fvn6w7kd1j2khx5y4awhwlu1yts</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Baste</title>
    <ns>102</ns>
    <id>200286</id>
    <redirect title="Cookbook:Basting" />
    <revision>
      <id>1546115</id>
      <timestamp>2009-06-23T23:37:50Z</timestamp>
      <contributor>
        <username>Nbarth</username>
        <id>79594</id>
      </contributor>
      <comment>init, redirect</comment>
      <text xml:space="preserve">#REDIRECT [[Cookbook:Basting]]</text>
      <sha1>sw87mnmlr7wifeb7m2neabxf69gq1bo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Helianthus divaricatus</title>
    <ns>110</ns>
    <id>200289</id>
    <revision>
      <id>1876119</id>
      <parentid>1546143</parentid>
      <timestamp>2010-07-07T18:39:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Helianthus divaricatus&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Woodland Sunflower
|binomial =Helianthus divaricatus
|image1=Helianthus_8771.jpg
|caption1 =
|image2 =Helianthus divaricatus 7718.jpg
|caption2=
|image3 =Transparent.png
|caption3=
|description =This wildflower likes sunny, open spaces, and can survive in dry, sandy soils.  It grows to a height of three to eight feet.  The yellow rays of the flower surround the yellow florets in the center disk, making a flower about 3 inches in diameter.  The leaves are shaped like a tear-drop, and range from one to four inches long.  The leaves are sessile ('''Sess'''-ile) meaning they attach directly to the stalk without a stem.  
|facts = Native Americans used the root of this plant to rid themselves of worms.
}}</text>
      <sha1>i7ffqvc8e5ggu978aq6no4kos6hq34h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikibooks featured-book templates/Goodbook</title>
    <ns>14</ns>
    <id>200290</id>
    <revision>
      <id>2000657</id>
      <parentid>2000656</parentid>
      <timestamp>2010-12-15T13:45:32Z</timestamp>
      <contributor>
        <username>JenVan</username>
        <id>315426</id>
      </contributor>
      <minor />
      <comment>Reverted edits by [[Special:Contributions/64.113.185.61|64.113.185.61]] ([[User talk:64.113.185.61|talk]]) to last revision by [[User:Adrignola|Adrignola]]</comment>
      <text xml:space="preserve">These are [[Template:Goodbook|Goodbook templates]], which advertise featured books.

[[Category:Featured-book templates|Goodbook]]</text>
      <sha1>ebjk7kzmezhxz32s9v5zs7whz8gasy8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Potentilla</title>
    <ns>110</ns>
    <id>200291</id>
    <revision>
      <id>1876085</id>
      <parentid>1546157</parentid>
      <timestamp>2010-07-07T18:35:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Potentilla&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Cinquefoil
|binomial =Potentilla
|image1 =Potentilla recta.jpeg
|caption1 =Rough-fruited Cinquefoil
|image2=Potentilla canadensis.jpg
|caption2=Dwarf Cinquefoil
|image3 =Viltganzerik DSCF1834.JPG
|caption3=Note the five-part leaves
|description =The word ''Cinquefoil'' means ''five leaves''.  There are about 500 species of cinquefoil worldwide, and several of them grow in New England.  Some are tall, and some are very short.  Most have leaves with five leaflets on them, with the leaflets having toothed edges.  Some have stems that creep along the ground and plant their own roots.  Some have fruits that look very much like wild strawberries.  The ones in New England have yellow flowers ranging from birght yellow to a creamy yellow.
|facts = Some people eat Cinquefoil leaves in salads.
}}</text>
      <sha1>11p87dg8cxxplshcch7edbq7qhga21l</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:139.130.97.98</title>
    <ns>3</ns>
    <id>200292</id>
    <revision>
      <id>1546216</id>
      <timestamp>2009-06-24T02:05:13Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>{{subst:test|--~~~~}}</comment>
      <text xml:space="preserve">{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/139.130.97.98|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 02:05, 24 June 2009 (UTC)}}</text>
      <sha1>9qhfsg09rkoxra7qsb72uybesdliedh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cascading Style Sheets/Centering</title>
    <ns>0</ns>
    <id>200294</id>
    <revision>
      <id>2205791</id>
      <parentid>2205787</parentid>
      <timestamp>2011-11-04T21:09:17Z</timestamp>
      <contributor>
        <username>Psweatte</username>
        <id>460785</id>
      </contributor>
      <minor />
      <text xml:space="preserve">Use margin: 0 auto on elements with a defined width to horizontally center block level containers 

Use margin-left:auto; margin-right:auto; instead of margin:0 auto; on elements with a defined width in HTML emails to horizontally center block level containers

Use margin: 0 auto; display: table; to horizontally center content that has an undefined width in standards compliant browsers

Use text-align: center; for the container and text-align: left, display:inline-block, and display:inline (in a separate declaration to trigger hasLayout) on the block element to horizontally center content that has an undefined width in IE6 and IE7. 

Use text-align: center for the container, display:inline-block(-moz-inline-box for Firefox 2) for the wrapper div, and display:inline for the content div to horizontally center content that has an undefined width across browsers. 

Set the wrapper div to display:inline in a subsequent IE specific declaration to trigger hasLayout. 

Set the content div to display:-moz-inline-box in a subsequent declaration to trigger the Firefox 2 experimental layout. 

In case the centered content wraps, use width:99% for the wrapper div to avoid issues in Firefox 3+ and Webkit browsers (Safari, Iron, Chromium, Chrome, etc). Add a fixed width div nested in the wrapper to address this in Firefox 2. The final cross-browser CSS follows this pattern:

&lt;syntaxhighlight lang=&quot;css&quot;&gt;
.container { text-align:center; }

/* Use width of less than 100% to avoid Firefox 3+ and Webkit wrapping issues */
.wrapper { width: 99%; }

/* Use inline-block for wrapper and placeholder */
.wrapper { display:-moz-inline-box; display: inline-block; }

.ie67 .wrapper, .content { display:inline; }

.content { display:-moz-inline-box; }
&lt;/syntaxhighlight&gt;

&lt;syntaxhighlight lang=&quot;html4strict&quot;&gt;
&lt;!--[if lte IE 7]&gt;
  &lt;body class=&quot;ie67&quot;&gt;
&lt;![endif]--&gt;

&lt;![if (!IE) | (gt IE 7 )]&gt;
  &lt;body&gt;
&lt;![endif]&gt;

&lt;div class=&quot;container&quot;&gt;
    &lt;div class=&quot;content&quot;&gt;
        &lt;div class=&quot;wrapper&quot;&gt;
            &lt;div&gt;fff&lt;/div&gt;
            &lt;div&gt;ggg&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/syntaxhighlight&gt;

Use display: table; height: 100%; for the container and display: table-cell; vertical-align: middle; for the content to vertically center content that has an undefined height in standards compliant browsers. Use height:100%; for the html and body tags as well if the container is the first child of the body.

Use position: relative; top: 50%; for the container and position: absolute; top: -50% for the content to vertically center content that has an undefined height in IE6 and IE7

Use line-height equal to the height of the container to vertically center images. Use font-size equal to the the height of the container as well in IE6 and IE7.

Use position:relative; and top:-50%; left:-50%; to center content that as an undefined width and height inside an absolutely positioned container with a defined width and height

Use height:100% for the html tag, body tag, container and an empty placeholder element plus display:inline-block; (-moz-inline-box for Firefox 2) and vertical-align: middle for the content and placeholder to vertically center content that has an undefined height across browsers. If an empty inline-block element (for example a span) is added inside the container and it is assigned height: 100%; vertical-align: middle then it allows to precisely get what we want: a line box with the desired height. The placeholder element is given 100% height to prop up the line box, so that vertical-align: middle has the desired effect. This will avoid the need for the aforementioned IE specific relative positioning workaround due to the lack of cross-browser support for display:table compared to display:inline-block. If the content is a block element, add display:inline in a separate declaration for IE6 and IE7 to trigger the hasLayout behavior. The final cross-browser CSS follows this pattern:

&lt;syntaxhighlight lang=&quot;css&quot;&gt;
html, body, #container, #placeholder { height: 100%; }

#content, #placeholder { 
display:inline-block; 
vertical-align: middle; 
}

*#content{display:inline;}
&lt;/syntaxhighlight&gt;

&lt;syntaxhighlight lang=&quot;html4strict&quot;&gt;
  &lt;div id=&quot;container&quot;&gt;
    &lt;div id=&quot;content&quot;&gt;
        Vertically centered
    &lt;/div&gt;
    &lt;span id=&quot;placeholder&quot;&gt;&lt;/span&gt;
  &lt;/div&gt;
&lt;/syntaxhighlight&gt;

Use the aforementioned vertical centering pattering with display:inline for the content div and display:inline-block to an extra nested wrapper div to vertically center an image gallery in Firefox, Safari, and Chrome(no change needed in IE or Opera). Make sure the width of the wrapper is less than 100% to avoid the inline-block bugs in those browsers as well. Here is the cross-browser pattern:
&lt;syntaxhighlight lang=&quot;css&quot;&gt;
html, body, .container, .placeholder { height: 100%; }

img { width:16px; height:16px; margin-left: 20px; margin-top: 10px; }

/* Use width of less than 100% for Firefox and Webkit */
.wrapper { width: 99%; }

.placeholder, .wrapper, .content { vertical-align: middle; }

/* Use inline-block for wrapper and placeholder */
.placeholder, .wrapper { display: inline-block; }

.ie67 .wrapper, .content { display:inline; }
&lt;/syntaxhighlight&gt;

&lt;syntaxhighlight lang=&quot;html4strict&quot;&gt;
  &lt;!--[if lte IE 7]&gt;
  &lt;body class=&quot;ie67&quot;&gt;
&lt;![endif]--&gt;

&lt;![if (!IE) | (gt IE 7 )]&gt;
  &lt;body&gt;
&lt;![endif]&gt;

&lt;div class=&quot;container&quot;&gt;
    &lt;div class=&quot;content&quot;&gt;
        &lt;div class=&quot;wrapper&quot;&gt;
            &lt;img src=&quot;http://microsoft.com/favicon.ico&quot;&gt;
            &lt;img src=&quot;http://mozilla.com/favicon.ico&quot;&gt;
            &lt;img src=&quot;http://webkit.org/favicon.ico&quot;&gt;
            &lt;img src=&quot;http://userbase.kde.org/favicon.ico&quot;&gt;
            &lt;img src=&quot;http://www.srware.net/favicon.ico&quot;&gt;
            &lt;img src=&quot;http://build.chromium.org/favicon.ico&quot;&gt;
            &lt;img src=&quot;http://www.apple.com/favicon.ico&quot;&gt;
            &lt;img src=&quot;http://opera.com/favicon.ico&quot;&gt;
            ...
            ...
       &lt;/div&gt;
   &lt;/div&gt;
   &lt;span class=&quot;placeholder&quot;&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;/syntaxhighlight&gt;

Specify the line height to be the same as the height of the containing element to vertically center inline text

Use margin-top: xxx (where xxx is equal to the height of the container div minus the height of the centered element). Divide this value by two to vertically center a block element

Use margin-left: xxx (where xxx is equal to the width of the container div minus the width of the centered element). Divide this value by two to horizontally center a block element  

Use top: 50% and margin-top: -xxx(where -xxx is equal to half of the defined height in pixels) to center absolutely positioned content vertically

Use left: 50% and margin-left: -xxx(where -xxx is equal to half of the defined width in pixels) to center absolutely positioned content horizontally

Use a rel pos span with display:inline-block and top:-50%; left:-50% and a higher z-index than the abs pos parent to center content inside an abs pos container. This uses an IE bug where a container's computed height is used for positioning instead of its height value

Use vertical-align to center images and text on the same line. Use pixel or percentage values if top, middle, or bottom are inconsistent. The sub, super, text-top, or text-bottom values are unreliable for cross browser consistency

[[Category:Cascading Style Sheets|Centering]]</text>
      <sha1>s910yxzxun77nctyf2j8me7xjcp5ppd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Requests for deletion/Growling/Screaming</title>
    <ns>4</ns>
    <id>200295</id>
    <revision>
      <id>1659605</id>
      <parentid>1546224</parentid>
      <timestamp>2009-11-18T03:50:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Wikibooks:Votes for deletion/Growling/Screaming]] to [[Wikibooks:Requests for deletion/Growling/Screaming]]: Per [[Wikibooks_talk:Votes_for_deletion#Page_rename_proposal]]</comment>
      <text xml:space="preserve">&lt;noinclude&gt;== [[Growling/Screaming]] ==&lt;/noinclude&gt;
{{closed|Closed as [[File:Symbol merge vote.svg|15px]] '''Merge''' because the relevant content was merged into [[Music Theory/Metal]] (by myself). Thus, this single page has now become part of another book. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 02:15, 24 June 2009 (UTC)}}
: [[File:Symbol delete vote.svg|15px]] '''Delete'''.  Doesn't seem to fit in with what wikibooks is, there are no other pages in the book, and no indiciation anything meaningful can be added. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 10:43, 19 June 2009 (UTC)
: [[File:Symbol delete vote.svg|15px]] '''Delete''' Not a book. No significant content.  Been here long enough and nothing much has happened to the book.--[[User:Xania|ЗAНИA]] [[Image:Flag_of_Italy.svg|15px]][[User talk:Xania|&lt;sup&gt;talk&lt;/sup&gt;]] 15:13, 20 June 2009 (UTC)
: [[File:Symbol comment vote.svg|15px]] '''Comment'''  One wonders if this might possibly find a home as a section within some larger book.  It isn't a book in itself (insufficient scope).  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 16:17, 20 June 2009 (UTC)
:: [[File:Symbol comment vote.svg|15px]] '''Comment''': [[Music Theory/Metal]] links to it. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 17:27, 20 June 2009 (UTC)
:: [[File:Symbol comment vote.svg|15px]] '''Comment''': Hmm... maybe the page could simply be merged there.  (The following comment has no importance what so every) I had initially thought the / in the title of this page was meant to indicate that screaming was a subpage of a book on growling which didn't actually exists.  But I notice now re-reading these pages that it may have been meant more as the usage when people write  &quot;and/or&quot;. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 18:50, 20 June 2009 (UTC)
{{end closed}}</text>
      <sha1>f139hqed50lav1l5igcmldlby5zgf4p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Flower Alphabet/N</title>
    <ns>111</ns>
    <id>200297</id>
    <revision>
      <id>1546235</id>
      <timestamp>2009-06-24T02:31:05Z</timestamp>
      <contributor>
        <username>Marsha Stern</username>
        <id>246279</id>
      </contributor>
      <comment>Created page with 'This is a terrific compilation, and a good model for ABC books that I have my kindergarten students make.  Just two of the flower pictures raised questions for me: The nasturtium...'</comment>
      <text xml:space="preserve">This is a terrific compilation, and a good model for ABC books that I have my kindergarten students make.  Just two of the flower pictures raised questions for me: The nasturtium pictured is  a nasturtium by genus, but its common name (from what I discovered on several websites) is watercress.  What gardeners know as nasturtium is in the genus Tropaeolum.  It is common, beloved, edible, and would make more sense here.  Similarly (and this is more of a quibble), yarrow may look like this to some folks, but most of us think of it as white or yellow. 
This is my first time logged in at Wikibooks, after reading the User Guide, and I'm not sure if this will reach you, but it didn't seem quite right to post this on your user page.</text>
      <sha1>ppy8lamlencksj1v1iyqes5om4ekw7z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Requests for deletion/Politics of Merrimack</title>
    <ns>4</ns>
    <id>200298</id>
    <revision>
      <id>1659783</id>
      <parentid>1546253</parentid>
      <timestamp>2009-11-18T03:50:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Wikibooks:Votes for deletion/Politics of Merrimack]] to [[Wikibooks:Requests for deletion/Politics of Merrimack]]: Per [[Wikibooks_talk:Votes_for_deletion#Page_rename_proposal]]</comment>
      <text xml:space="preserve">&lt;noinclude&gt;== Politics of Merrimack ==&lt;/noinclude&gt;
{{closed|Closed as [[File:Symbol redirect vote.svg|15px]] '''Transwiki''' with the note of the destination pages at [[Wikibooks:Transwiki log]]. Pages deleted per [[WB:SPEEDY#Speedy_deletions]] - not textbook material as confirmed by Mike.lifeguard below. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 02:52, 24 June 2009 (UTC)}}
Has not been updated since April 2006.  Main contributor stopped contributing at that time as well.  Even disregarding the limited scope of a book on Merrimack, New Hampshire election results, there are only two pages other than the title page.  The first (for 2002) is an outline with only a smidgen of information filled in and the other (for 2005) is a tiny stub.  I can't imagine anyone else coming along to document information that is of such a limited scope.  Should someone really need to know who was elected in 2002-2006 in Merrimack, New Hampshire, I have great confidence that they will find it in the public domain.  -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 23:23, 27 May 2009 (UTC)

:[[Image:Symbol delete vote.svg|15px]] '''Delete''' - and I ''live'' in NH. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 23:26, 27 May 2009 (UTC)
:[[Image:Symbol redirect vote.svg|15px]] '''Transwiki''' to Wikipedia what little content there is. [[w:New Hampshire state elections, 2004]] and related pages seem to be waiting for experts. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 23:33, 27 May 2009 (UTC)
:Per darklama. This is good content, just not suitable as a textbook. &amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 00:27, 4 June 2009 (UTC)

:: [[File:Symbol support vote.svg|15px]] '''Support''' I will support a transwiki as opposed to a deletion, though we'll have to agree to disagree on the quality of the content. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 16:45, 4 June 2009 (UTC)
:[[Image:Symbol redirect vote.svg|15px]] '''Transwiki''' as per the above comments.--[[User:Xania|ЗAНИA]] [[Image:Flag_of_Italy.svg|15px]][[User talk:Xania|&lt;sup&gt;talk&lt;/sup&gt;]] 22:30, 17 June 2009 (UTC)

: Okay, it seems to be agreed that this should be transwikied. I'm familiar with transwikiing pages ''to'' Wikibooks. What's the next step for transwikiing ''from'' Wikibooks? -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 14:30, 22 June 2009 (UTC)
:: Depends on the wiki. I have no idea what the procedure is for Wikipedia. I tried asked on IRC, and got [[w:Wikipedia:Administrators' noticeboard#How do we transwiki from Wikibooks?]] started. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 15:35, 22 June 2009 (UTC)

:: This has been transwikied now. See [[Wikibooks:Transwiki log/Articles moved from here/en.wikipedia]]. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 15:26, 23 June 2009 (UTC)
{{end closed}}</text>
      <sha1>lgowqaxb8cesg4fqc8j0rcrvqoq00f2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Islam In The World</title>
    <ns>14</ns>
    <id>200301</id>
    <revision>
      <id>1566436</id>
      <parentid>1546260</parentid>
      <timestamp>2009-07-11T21:51:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Islam]]</text>
      <sha1>cz0tqz99qi8e44w83ukd807njhysjqx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:121.52.152.85</title>
    <ns>3</ns>
    <id>200303</id>
    <revision>
      <id>1546275</id>
      <timestamp>2009-06-24T03:28:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Notification regarding [[:What is foss training]]. using [[User:Mike.lifeguard/Twinkle Speedy documentation|TW]]</comment>
      <text xml:space="preserve">

==[[What is foss training]]==
{{mbox|type=notice|msg=
[[What is foss training|This page]] appears to have been created in error (due to a test, or some kind of [[Help:Editing|misplaced edit]]). It might be a [[Help:Stub|stub]], if so, please use [[{{TALKPAGENAME:What is foss training}}|the discussion page]] as to explain what this page is about. If it evolves into a [[WB:WIW|legitimate Wikibooks module]], you may remove the tag. If not fixed, explained, or improved, it will automatically be considered a candidate for [[Wikibooks:Deletion policy#Speedy deletions|speedy deletion]] in 7 days. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 03:28, 24 June 2009 (UTC)
}}</text>
      <sha1>cy4ye7i9byflt249lgdlnn7i2qh934s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Requests for deletion/Islam In The World</title>
    <ns>4</ns>
    <id>200304</id>
    <revision>
      <id>1659673</id>
      <parentid>1546276</parentid>
      <timestamp>2009-11-18T03:50:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Wikibooks:Votes for deletion/Islam In The World]] to [[Wikibooks:Requests for deletion/Islam In The World]]: Per [[Wikibooks_talk:Votes_for_deletion#Page_rename_proposal]]</comment>
      <text xml:space="preserve">&lt;noinclude&gt;==[[Islam In The World]]==&lt;/noinclude&gt;
{{closed|Closed as [[File:Symbol keep vote.svg|15px]] '''Keep''' since book's main contributor has committed to a NPOV, book's name has been changed, and original objectors have changed position to result in an overwhelming number of keep or wait-and-see votes. This discussion's conclusion does not prevent future nominations. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 03:30, 24 June 2009 (UTC)}}
Point of View exercise - removing POV content leads to blank pages. Does not and cannot reasonably ever be a text box suitable for WB &lt;font color=&quot;#E66C2C&quot;&gt;[[User:QuiteUnusual|'''Unusual? Quite''']]&lt;/font&gt; &lt;sup&gt;&lt;font color=&quot;#306754&quot;&gt;[[User talk:QuiteUnusual|TalkQu]]&lt;/font&gt;&lt;/sup&gt; 09:12, 5 June 2009 (UTC)

: [[File:Symbol comment vote.svg|15px]] '''Comment''' The Wikibookian that was working on the project was not welcomed into the project and no attempt was made to address any issue prior to the proposal for VFD, this should be avoided if we are attempting to build up a community.  --[[User:Panic2k4|Panic]] ([[User talk:Panic2k4|talk]]) 03:33, 6 June 2009 (UTC)

: This book is quite ironic given U.S. president Obama's speech requesting that people of the world find a common ground to get along with one another.  Propaganda like &quot;Non Muslims are allowed to enter the country even thought the Phrophet (sic) Mohammad said before his death to get them out of the Arabic peninsula&quot; on the Saudi Arabia page does nothing to further that goal.  Given the content on the pages and what was on the USA page before it was blanked, I'd even propose that this book would encourage terrorism. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 12:12, 5 June 2009 (UTC)

:: [[File:Symbol wait.svg|15px]] '''Hold on''': I like where the book is now heading, with points now being stated to be based on the Quran rather than being put forth as though they were someone's personal point of view. The author is eager to make the changes needed for it to be from a neutral point of view. The book has not had much time to mature, either. In light of all this and comments made above, I am changing my position to one of wait-and-see.-- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 03:39, 6 June 2009 (UTC)

: &lt;s&gt;[[File:Symbol delete vote.svg|15px]] '''Delete''' Lists things that the author approves of and disapproves of, presented in an inherently POV way.  No realistic possibility that this could ever be transformed into anything NPOV.&lt;/s&gt;  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 13:56, 5 June 2009 (UTC)
:: I'm now willing to wait and see.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 15:20, 6 June 2009 (UTC)

: [[File:Symbol keep vote.svg|15px]] '''Keep''' - '''please don't delete''' I wonder do you want to delete because you didn't like what it's their? where is freedom of speech that you claim? I just started the book I didn't support my claims with evidence yet? should I look over my shoulder every time I write something, and be afraid that my work might be deleted before I get time to prove it? I'm ready to support every word I say. again the book isn't ready yet. I will work on it. if what I mentioned was true would you accept it? your organization (like HRW and Amnesty) is claiming that we violate the human rights and keep moaning about it and they don't stop trying to change our systems, can't I write about that? can't I write what is mentioned in our books? Do you think terrorist will take their order from wikipedia page?
:please tell me... [[User:الحارث بن همام|الحارث بن همام]] ([[User talk:الحارث بن همام|talk]]) 15:08, 5 June 2009 (UTC)

:: Rest assured, this is not about censorship.  Wikibooks is a forum for educational textbooks, and in order to serve that purpose effectively, it has to limit itself to works consistent with that purpose.  The basic policy page about this is '''[[Wikibooks:What is Wikibooks]]'''.  In this case, we've been referring especially to &quot;NPOV&quot;, which is short for &quot;'''[[Wikibooks:Neutral point of view|Neutral point of view]]'''&quot;.  We don't decide whether or not to remove things on the basis of whether or not we like them.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 16:12, 5 June 2009 (UTC)

:[[File:Symbol keep vote.svg|15px]] '''Keep''' - The book is still very empty and it can be argued that as it is it can be classified as humanistics/social sciences project (depending on how it will be evolving) and we do need some books on that section.
:I've examined the complains and addressed some. If people are willing to be productive and cooperate this work can be made to be very informative, and a platform for mutual understanding, as is I'm willing to support a keep to see how it evolves.
:I also have the opinion that the book should be renamed to a explanatory title &quot;Islam in the world&quot; or something that relates to the content.  --[[User:Panic2k4|Panic]] ([[User talk:Panic2k4|talk]]) 17:52, 5 June 2009 (UTC)

::I agree on renaming the book [[User:الحارث بن همام|الحارث بن همام]] ([[User talk:الحارث بن همام|talk]]) 03:06, 6 June 2009 (UTC)

::: Think about defining a proper scope of the book first (taking in context the criticism made here, there were indeed some NPOV issues exposed, creating unsubstantiated list of issues was prone to raise problems) and then advance some ideas for names.
::: If it helps create an area on your userspace to build up the content in a way that when you add it to the book it doesn't become objectionable.
::: I will gladly help selecting a few topics that would like to see covered/clarified about the Islamic culture, economics (the banking systems for instance) and politics (the differences in structure from occidental democracies, Israel and USA, the Palestinian issue, terrorism etc..) there are many interesting subjects that could be covered. I will try to continue to contribute to the work.  --[[User:Panic2k4|Panic]] ([[User talk:Panic2k4|talk]]) 03:20, 6 June 2009 (UTC)   

: [[File:Symbol delete vote.svg|15px]] '''Delete''' It's not a textbook, it's a religious soapbox rant. ---[[User:PurplePieman|PurplePieman]] ([[User talk:PurplePieman|talk]]) 23:16, 5 June 2009 (UTC)

::This assertion is incorrect, even on the unrevised version it was a stub with a few issues on the NPOV. It still is only a stub and the NPOV issues seem to have been addressed. This types of conflict could and should have been addressed first with the contributors on the works talk page before a VFD unless the subject matter is not fit for the Wikibooks project, this doesn't seem to be the case. We have some works on religion like [[Biblical Studies]], [[Christian Theology]], [[Adventist Youth Honors Answer Book]], [[Christianity]], [[Yeshua and Kabbalah]], [[Satanism]], [[The Ten Commandments]], [[History of Islam]], [[Islam Way of Life]] and [[Koranic Law of Nature]] to name a few.
::For what I gather from the text this book and what makes it an interesting project is that it doesn't seem to be only about the religion but about the interaction with policies and social/cultural aspects around the world from an Islamic perspective. I'm not stating that this work will evolve to be useful but as is we should give it a chance...  --[[User:Panic2k4|Panic]] ([[User talk:Panic2k4|talk]]) 03:09, 6 June 2009 (UTC)
:::&quot;Islamic perspective&quot;, or &quot;Islamic bias&quot;? For one thing, naming it &quot;God's Rights' doesn't exactly scream NPOV. I only see one side in this book...the Islamic side. ---[[User:PurplePieman|PurplePieman]] ([[User talk:PurplePieman|talk]]) 18:49, 7 June 2009 (UTC)
::::The scope of the book seems to be about the Islamic perspective it only becomes bias if the content inhibits impartial judgment from the reader. The creator of the project is willing to fix the problems if addressed in a non aggressive manner, but the issue is not about this particular author/editor but the book project as a concept. You are free to participate and help build it up so to avoid NPOV violations... --[[User:Panic2k4|Panic]] ([[User talk:Panic2k4|talk]]) 03:27, 8 June 2009 (UTC)
:::::I believe the point is that covering only the Islamic perspective when the book title is &quot;God's Rights&quot; makes it biased. There is the Jewish perspective, the Christian perspective, etc. to what God's Rights are too. There are two possible solutions to that problem. Change the scope of the book with the intent to cover every religion's perspective, or change the name of the book to better reflect its scope and audience. You previously suggested the book should be renamed and the only contributor seems to be open to changing the name, so that solution should probably be done. &quot;Islam In The World&quot;, &quot;Understanding The Islamic World&quot; and &quot;Understanding The Rights Of Islamics&quot; would all probably better reflect the scope of the book. Even with that the book would need to be sure not to limit itself to only one Islamic faction's perspective. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 11:40, 8 June 2009 (UTC)
::::::I agree to rename the book to &quot;Islam In The World&quot;. what should I do to rename it?. thanks for your help all [[User:الحارث بن همام|الحارث بن همام]] ([[User talk:الحارث بن همام|talk]]) 11:07, 9 June 2009 (UTC)
::::::: There is a move link next to the edit and history links that is used to also rename pages. I've already gone ahead and renamed the book for you this time. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 17:00, 9 June 2009 (UTC)
::::::::Oh I see it now. Thanks for doing it [[User:الحارث بن همام|الحارث بن همام]] ([[User talk:الحارث بن همام|talk]]) 18:30, 9 June 2009 (UTC)

:{{keep}} I was ready to delete too until I read Panic's assessment.  I think this book does have potential, but the authors do need to be very careful about maintaining a NPOV. It will not be easy.  --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 03:42, 6 June 2009 (UTC)

:{{question}} What is the clearly non-[[WB:WIW#Wikibooks is not a soapbox|advocacy]] objective of this book?  (It really needs to explicitly embrace such an objective, otherwise advocacy will be its naturally stable state.)  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 15:14, 6 June 2009 (UTC)
:: Too early to say for sure, but I think the non-advocacy objective of this book might be to compare how Islam is perceived by various countries and organizations, and how Islamics are treated in different parts of the world. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 11:47, 8 June 2009 (UTC)
:{{keep}} and rename per Panic's suggestion. It appears this is more of an analysis of countries, organizations, and people against the Koran's teachings.  As stated by Darklama, this book will be treading a thin line on NPOV unless it takes on all of the Muslim views, not just author's view/interpetation of the Koran.  It appears the contributor is foreign, so the ability to properly articulate a NPOV may be hampered. The community can assist with the development of the book, which is its purpose. [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 12:20, 8 June 2009 (UTC)
:{{keep}} active and still developing book with clear goals.  If you're still concerned later then nominate it again.--[[User:Xania|ЗAНИA]] [[Image:Flag_of_Italy.svg|15px]][[User talk:Xania|&lt;sup&gt;talk&lt;/sup&gt;]] 22:33, 17 June 2009 (UTC)
:{{comment}}  For this book to succeed in the long run (as we all have great hopes it will), its goals will have to evolve to be more clearly NPOV than they are now.  The objective now stated on the main page begins with the words &quot;point of view&quot;.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 23:45, 17 June 2009 (UTC)
{{end closed}}</text>
      <sha1>8kksw49203v9qxuq3bfod75eslplxsa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Islam In The World</title>
    <ns>1</ns>
    <id>200305</id>
    <revision>
      <id>1633619</id>
      <parentid>1633527</parentid>
      <timestamp>2009-09-22T17:12:05Z</timestamp>
      <contributor>
        <username>Panic2k4</username>
        <id>2865</id>
      </contributor>
      <comment>/* Needs help */</comment>
      <text xml:space="preserve">* {{todolink|Islam In The World|todo-list of Islam In The World}}
{{vfd-survived|page=Wikibooks:Votes for deletion/Islam In The World}}

== Needs help ==

This book needs help.  I've started on the [[../Netherlands]] portion, but I do not have the expertise to keep going.   There's problems with lack of NPOV, Islam websites in English (so it can't be easily verified by a mostly English speaking audience), and lack of substance. --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 10:28, 22 September 2009 (UTC)

:There are some unbalanced points but the book is being watched very carefully here since it was VFD (the issues it raises and the need to clarify them makes it well worth the trouble), this subject is very prone to ruffle some feathers but the scope of the book is very interesting and any lingering issues are due mostly because of lack of knowledge as you state.  --[[User:Panic2k4|Panic]] ([[User talk:Panic2k4|talk]]) 17:12, 22 September 2009 (UTC)</text>
      <sha1>snqictl0w8vxllk2oxn01exjtdcx23x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Animation:Master Features/Post Effects</title>
    <ns>0</ns>
    <id>200307</id>
    <revision>
      <id>2175135</id>
      <parentid>2053705</parentid>
      <timestamp>2011-10-03T19:13:43Z</timestamp>
      <contributor>
        <username>HethrirBot</username>
        <id>475400</id>
      </contributor>
      <minor />
      <comment>Robot: Cosmetic changes</comment>
      <text xml:space="preserve">Post Effects are image alterations applied to an image after it has been rendered but before it is saved. For example, the &quot;FrameBurn&quot; Post Effect will add a frame number to the upper right corner of a rendered image

In Animation:Master Post Effects are applied to a [[../Camera/]] in a [[../Choreographies|Choreography]].

== Loading a Post Effect ==

In the Project Workspace (PWS) window:

'''Post Effects folder&gt;RMB&gt;New&gt;Post Effect'''

A new &quot;Post Effect&quot; will appear in Post Effects folder. Then:

'''Post Effect&gt;RMB&gt;Change Type to&gt;Hash Inc.&gt;'''''select a post effect from list''

== Using a Post Effect ==

A post effect must be applied to a Camera in a Choreography. 

Either drag the Post Effect from the Post Effects folder onto the desired camera, or '''select the camera&gt;RMB&gt;New&gt;Post Effect&gt;'''''select a post effect from list''

When going to render, '''Buffers&gt;Apply camera's Post Effects to renderings''' must be ON in the Render Settings dialog.

{{BookCat}}</text>
      <sha1>tgupv07cg6rxlu1wetftr62ud63cal7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Post Effects</title>
    <ns>0</ns>
    <id>200308</id>
    <redirect title="Animation:Master Features/Post Effects" />
    <revision>
      <id>1546322</id>
      <timestamp>2009-06-24T04:40:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Post Effects]] to [[Animation:Master Features/Post Effects]]: Moving into book linking to it as subpage.</comment>
      <text xml:space="preserve">#REDIRECT [[Animation:Master Features/Post Effects]]</text>
      <sha1>iv2tp7kqgeefyp9e7myv03os66tel4t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Robcat2075</title>
    <ns>3</ns>
    <id>200309</id>
    <revision>
      <id>1546325</id>
      <parentid>1546324</parentid>
      <timestamp>2009-06-24T04:45:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>/* Welcome! */</comment>
      <text xml:space="preserve">== Welcome! ==

&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Robcat2075!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, --[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 04:43, 24 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;

==[[Animation:Master Features]]==
Please make all pages of this book subpages as detailed in the [[WB:NP|naming policy]]. I moved your Post Effects page into the book since it was created in the wrong location and added links on the main page's table of contents. You can then click those links to create new pages for the book. I wish you well with the book. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 04:45, 24 June 2009 (UTC)</text>
      <sha1>hja45iynb7p7tzroazbufo28w4fakjz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Luolimao</title>
    <ns>3</ns>
    <id>200310</id>
    <revision>
      <id>1546326</id>
      <timestamp>2009-06-24T04:46:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">== Welcome! ==

&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Luolimao!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, --[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 04:46, 24 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>i6vbzcfswzhdrbkt9d5u7fbb1gn28pr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Deerwood</title>
    <ns>3</ns>
    <id>200311</id>
    <revision>
      <id>1546327</id>
      <timestamp>2009-06-24T04:46:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">== Welcome! ==

&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Deerwood!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, --[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 04:46, 24 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>hwffjojw1tkiyad5rhit6ky87nyseqh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Jerry mcmanus</title>
    <ns>3</ns>
    <id>200312</id>
    <revision>
      <id>1546329</id>
      <timestamp>2009-06-24T04:47:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">== Welcome! ==

&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Jerry mcmanus!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, --[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 04:47, 24 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>ojlq37mtr2l1418hijcpwr70s2ar779</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:PAC</title>
    <ns>3</ns>
    <id>200313</id>
    <revision>
      <id>1564783</id>
      <parentid>1564778</parentid>
      <timestamp>2009-07-09T13:53:54Z</timestamp>
      <contributor>
        <username>Taxman</username>
        <id>10423</id>
      </contributor>
      <minor />
      <comment>Reverted edits by [[Special:Contributions/Bfbggonnnnn|Bfbggonnnnn]] ([[User talk:Bfbggonnnnn|Talk]]) to last revision by [[User:Taxman|Taxman]]</comment>
      <text xml:space="preserve">== Welcome! ==

&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, PAC!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, --[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 04:48, 24 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>42eu3bgqnqrpkecwgawam6m1vgm2c0y</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Fauxmight</title>
    <ns>3</ns>
    <id>200314</id>
    <revision>
      <id>1546331</id>
      <timestamp>2009-06-24T04:48:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">== Welcome! ==

&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Fauxmight!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, --[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 04:48, 24 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>ryy3slejlwssr7quexi8alo8fflu4ry</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Psimmler</title>
    <ns>3</ns>
    <id>200315</id>
    <revision>
      <id>1546332</id>
      <timestamp>2009-06-24T04:49:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">== Welcome! ==

&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Psimmler!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, --[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 04:49, 24 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>ag5g8jdr5ibu1xkoxgb9d28wycadu2i</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Salomonw</title>
    <ns>3</ns>
    <id>200316</id>
    <revision>
      <id>1546341</id>
      <timestamp>2009-06-24T05:01:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">== Welcome! ==

&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Salomonw!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, --[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 05:01, 24 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>nagocn32rfft9y3rtkzen8qz1vlsxg2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Bci2versty</title>
    <ns>3</ns>
    <id>200317</id>
    <revision>
      <id>1546342</id>
      <timestamp>2009-06-24T05:01:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">== Welcome! ==

&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Bci2versty!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, --[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 05:01, 24 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>0bqzbck6glt8yngzfnlp6ler50wauq0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Sicilian Defence</title>
    <ns>0</ns>
    <id>200318</id>
    <redirect title="Chess Opening Theory/1. e4/1...c5" />
    <revision>
      <id>1614038</id>
      <parentid>1546351</parentid>
      <timestamp>2009-08-21T20:47:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect</comment>
      <text xml:space="preserve">#REDIRECT [[Chess Opening Theory/1. e4/1...c5]]</text>
      <sha1>91gjn1n02u8myfmr359ltjpt4fh9pdu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Lowest Common Multiples</title>
    <ns>0</ns>
    <id>200320</id>
    <revision>
      <id>1710236</id>
      <parentid>1546373</parentid>
      <timestamp>2010-02-01T18:21:58Z</timestamp>
      <contributor>
        <ip>205.208.75.179</ip>
      </contributor>
      <text xml:space="preserve">Find the LCM of:

# 2 and 3
# 3 and 6
# 7 and 14
# 10 and 15
# 10 and 16
# 8 and 20
# 12 and 15
# 15 and 20
# 18 and 22
# 9 and 12
# 20 and 24
# 50 and 75
# 34 and 51
# 45 and 90
# 35 and 60
# 13 and 26
# 36 and 90
# 25 and 30
# 100 and 400
# 500 and 2,000
# 3, 6 and 9
# 7, 21 and 42
# 12, 24 and 36
# 24, 72 and 36
# 25, 30 and 50
# 42, 14 and 21
# 32, 48 and 60
# 23, 46 and 115
# 64, 128 and 256
# 56, 80 and 140
# 75, 100 and 200
# 14, 21 and 35
# 24, 36 and 60
# 41, 82 and 123
# 54, 72 and 90
# 12, 18, 30 and 40
# 25, 35, 50 and 100
# 14, 21, 35 and 70
# 21, 35, 14 and 56
# 32, 48, 24 and 60

[[Category:Mathematics Worksheet]]</text>
      <sha1>04a38ryxz7jbuaf6mfm4tmqf5wq4ln8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:R Programming/Navigation</title>
    <ns>10</ns>
    <id>200323</id>
    <revision>
      <id>2648670</id>
      <parentid>2583628</parentid>
      <timestamp>2014-05-06T14:44:21Z</timestamp>
      <contributor>
        <username>HgDeviasse</username>
        <id>1514312</id>
      </contributor>
      <text xml:space="preserve">&lt;div class=&quot;noprint&quot; style=&quot;background-color: #fff; border: 1px solid #8b8; padding: 0.5em; font-size: small; text-align: left; float: right; clear: right; width: 22%; margin: 0.5em&quot;&gt;
[[Image:Rlogo.png|60px|right]]
'''[[R Programming]]'''&lt;br /&gt;
----
* '''R Basics'''
** [[R Programming/Introduction|Introduction]]{{stage short|75%|Sep 11, 2009}}
** [[R Programming/Sample_Session|Sample Session]]{{stage short|100%|Jul 16, 2010}}
** [[R Programming/Manage_your_workspace|Manage your workspace]]{{stage short|50%|July 22 2011}}
** [[R Programming/Settings|Settings]]{{stage short|75%|May 20, 2011}}
** [[R Programming/Documentation|Documentation]]{{stage short|75%|Sep 11, 2009}}
** [[R Programming/Control_Structures|Control Structures]]{{stage short|75%|July 22 2011}}
** [[R Programming/Working_with_functions|Working with functions]]{{stage short|50%|July 22 2011}}
** [[R Programming/Debugging|Debugging]]{{stage short|50%|August 19 2011}}
** [[R Programming/Using_C_or_Fortran|Using C or Fortran]]
** [[R Programming/Utilities|Utilities]]{{stage short|00%|-}}
** [[R Programming/Estimation_utilities|Estimation utilities]]{{stage short|00%|-}}
** [[R Programming/Packages|Packages]]{{stage short|75%|July 22, 2011}}
* '''Data Management'''
** [[R Programming/Data_types|Data types]]{{stage short|75%|July 22, 2011}}
** [[R Programming/Working with data frames|Working with data frames]]{{stage short|25%|Sep 11, 2009}}
** [[R Programming/Importing_and_exporting_data|Importing and exporting data]]{{stage short|25%|Sep 11, 2009}}
** [[R Programming/Text_Processing|Text Processing]]{{stage short|75%|April 23, 2010}} 
** [[R Programming/Times and Dates|Times and Dates]]
* [[R Programming/Graphics|Graphics]]{{stage short|75%|July 22, 2011}}
** [[R Programming/Grammar_of_graphics|Grammar of graphics]]
* [[R Programming/Publication_quality_ouput|Publication quality output]]{{stage short|25%|Sep 11, 2009}}
* [[R Programming/Descriptive_Statistics|Descriptive Statistics]]{{stage short|75%|July 22 2011}}
* [[R Programming/Mathematics|Mathematics]]{{stage short|25%|Oct 4, 2009}}
** [[R Programming/Optimization|Optimization]]{{stage short|25%|Sep 11, 2009}}
** [[R Programming/Probability_Distributions|Probability Distributions]]{{stage short|75%|July 22 2011}}
** [[R Programming/Random_Number_Generation|Random Number Generation]]{{stage short|25%|Sep 11, 2009}}
* '''Statistical Core Methods'''
** [[R Programming/Maximum_Likelihood|Maximum Likelihood]]{{stage short|25%|Sep 11, 2009}}
** [[R Programming/Method_of_Moments|Method of Moments]]
** [[R Programming/Bayesian_Methods|Bayesian Methods]]{{stage short|00%|Sep 11, 2009}}
** [[R Programming/Bootstrap|Bootstrap]]{{stage short|00%|Sep 11, 2009}}
** [[R Programming/Multiple_Imputation|Multiple Imputation]]{{stage short|00%|Sep 11, 2009}}
** [[R Programming/Nonparametric_Methods|Nonparametric Methods]]{{stage short|50%|Sep 11, 2009}}
* '''Regression Models''' 
** [[R Programming/Linear_Models|Linear Models]]{{stage short|50%|Apr 28, 2010}}
** [[R Programming/Quantile_Regression|Quantile Regression]]{{stage short|00%|Sep 11, 2009}}
** [[R Programming/Binomial_Models|Binomial Models]]{{stage short|00%|Sep 17, 2009}}
** [[R Programming/Multinomial_Models|Multinomial Models]]{{stage short|00%|Sep 11, 2009}}
** [[R Programming/Tobit_And_Selection_Models|Tobit And Selection Models]]{{stage short|00%|Oct 4, 2009}}
** [[R Programming/Count_Data Models|Count Data Models]]{{stage short|00%|Sep 11, 2009}}
** [[R Programming/Duration_Analysis|Duration Analysis]]{{stage short|00%|Sep 11, 2009}}
* [[R Programming/Time_Series|Time Series]]{{stage short|25%|July 22 2011}}
* [[R Programming/Factor Analysis|Factor Analysis]]{{stage short|25%|Sep 17, 2009}}  
* '''Classification'''
** [[R Programming/Ordination|Ordination]]{{stage short|25%|Sep 11, 2009}}
** [[R Programming/Clustering|Clustering]]{{stage short|00%|Sep 11, 2009}}  
* [[R Programming/Network Analysis|Network Analysis]]{{stage short|00%|Sep 11, 2009}}
* '''High Performance Computing'''
** [[R Programming/Profiling R code|Profiling R code]]{{stage short|00%|Jun 27, 2011}}
** [[R Programming/Parallel computing with R|Parallel computing with R]]{{stage short|00%|Jun 27, 2011}}
* '''Appendix'''
** [[R Programming/Sources|Sources]]
** [[R Programming/Index|Index]]{{stage short|00%|Oct 25, 2010}}
----
&lt;small&gt;[http://en.wikibooks.org/w/index.php?title=Template:R_Programming/Navigation&amp;action=edit edit this box]&lt;/small&gt;
&lt;/div&gt;&lt;noinclude&gt;[[Category:Exclude in print]]&lt;/noinclude&gt;{{BookCat}}</text>
      <sha1>qr56ypmi2qowvirhxn1m2vf15m2yxsi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Documentation</title>
    <ns>0</ns>
    <id>200325</id>
    <revision>
      <id>2665928</id>
      <parentid>2532516</parentid>
      <timestamp>2014-05-25T21:38:27Z</timestamp>
      <contributor>
        <username>Herbee</username>
        <id>2277</id>
      </contributor>
      <minor />
      <comment>Fix a broken sentence.</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

== Obtaining Help ==
For each package you have a ''reference manual'' available as an HTML file from within R or as a PDF on the CRAN website. You also often have ''Vignettes'' or comprehensive articles in the R Journal, the Journal of Statistical Software, etc.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt;library(help=&quot;package_name&quot;)
&gt;vignette(&quot;np&quot;,package=&quot;np&quot;)
&gt;vignette(all=FALSE) # vignettes for all attached packages
&gt;vignette(all=TRUE) # vignettes for all packages on the computer
&lt;/source&gt;
You can search for help inside all loaded packages using &lt;tt&gt;help()&lt;/tt&gt; or &lt;tt&gt;?&lt;/tt&gt;. Usually you do not need to add quotes to function names, but sometimes it can be useful. &lt;tt&gt;args()&lt;/tt&gt; gives the full syntax of a function.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; help(lm)
&gt; ?lm
&gt; ?&quot;for&quot;
&gt; ?&quot;[[&quot;
&gt; args(&quot;lm&quot;)
function (formula, data, subset, weights, na.action, method = &quot;qr&quot;, 
    model = TRUE, x = FALSE, y = FALSE, qr = TRUE, singular.ok = TRUE, 
    contrasts = NULL, offset, ...) 
NULL
&lt;/source&gt;

&lt;tt&gt;apropos()&lt;/tt&gt; and &lt;tt&gt;find()&lt;/tt&gt; looks for all the functions in the loaded packages containing a keyword or a regular expression&lt;ref&gt;If you want to know more about regular expressions, have a look at the [[R_Programming/Text_Processing#Regular_Expressions | Regular expressions]] section in the [[R_Programming/Text_Processing | Text Processing]] page.&lt;/ref&gt;. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; apropos(&quot;norm&quot;)
  [1] &quot;dlnorm&quot;         &quot;dnorm&quot;          &quot;plnorm&quot;        
  [4] &quot;pnorm&quot;          &quot;qlnorm&quot;         &quot;qnorm&quot;         
  [7] &quot;qqnorm&quot;         &quot;qqnorm.default&quot; &quot;rlnorm&quot;        
 [10] &quot;rnorm&quot;          &quot;normalizePath&quot; 
&lt;/source&gt;

You can search for help in all installed packages using &lt;tt&gt;help.search()&lt;/tt&gt; or its shortcut &lt;tt&gt;??&lt;/tt&gt;.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; ??&quot;lm&quot;
&gt; help.search(&quot;covariance&quot;)
&lt;/source&gt;

&lt;tt&gt;RSiteSearch()&lt;/tt&gt; looks for help in all packages and in the R mailing lists. The '''sos''' package improves the &lt;tt&gt;RSiteSearch()&lt;/tt&gt; function with the &lt;tt&gt;findFn()&lt;/tt&gt; function. &lt;tt&gt;???&lt;/tt&gt; is a wrapper for &lt;tt&gt;findFn()&lt;/tt&gt;.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; RSiteSearch(&quot;spline&quot;)
&gt; library(&quot;sos&quot;)
&gt; findFn(&quot;spline&quot;, maxPages = 2)
&gt; ???&quot;spline&quot;(2)
&lt;/source&gt;

&lt;tt&gt;hints()&lt;/tt&gt; in the '''hints''' package suggests what to do with an object.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; fit &lt;- lm(y ~ x)
&gt; library(&quot;hints&quot;)
&gt; hints(fit) # returns a list of function using lm objects.
&lt;/source&gt;

== Handouts ==

*[http://cran.r-project.org/doc/manuals/R-intro.html '''An Introduction to R'''] The '''R''' Reference Manual
*[http://www.statmethods.net/ '''Robert Kabacoff's Quick R'''] 
*[http://cran.r-project.org/doc/contrib/Farnsworth-EconometricsInR.pdf '''Grant Farnsworth's Econometrics in R'''] The best introduction for an economist (about 20 pages)
*[http://www.ats.ucla.edu/stat/r/ '''UCLA R Computing Resources''']
*[http://cran.r-project.org/web/packages/HSAUR2/index.html '''A Handbook of Statistical Analyses Using R'''] by Brian S. Everitt and Torsten Hothorn
*'''fr+en''' [http://perso.univ-rennes1.fr/arthur.charpentier/slides-R.pdf Arthur Charpentier's R for acturies] 
*[http://www.decisionsciencenews.com/?p=261 Dan Goldstein's video tutorial]
*'''fr''' [http://alea.fr.eu.org/j/intro_R.html Julien Barnier's introduction to R for sociologists]
*[http://rosettacode.org/wiki/Category:R Rosetta Code] presents solutions to the same task in different programming languages.
*[http://www.johndcook.com/R_language_for_programmers.html 'R language for programmers', by John Cook]
*[http://people.su.se/~ma/R_intro/R_intro.pdf A Brief Guide to R Beginners in Econometrics]
*[http://www.cyclismo.org/tutorial/R/ R Tutorial by Kelly Black]

== Reference Sheet ==

* [http://devcheatsheet.com/tag/r/ List of Cheat Sheets]
* [http://www.macalester.edu/~kaplan/ISM/r-commands.pdf Daniel Kaplan Reference Sheet]

== Teaching Resources ==
* François Briatte has a nice introduction to data analysis using R&lt;ref&gt;[http://f.briatte.org/teaching/ida/ Introduction to Data Analysis]&lt;/ref&gt;
*[http://jackman.stanford.edu/classes/index.php Simon Jackman Political Methodology Classes] 
*[http://jkatz.caltech.edu/classes/ss228.html Jonathan Katz Political Methodology Classes]
*[http://people.su.se/~ma/R_intro/R_intro.pdf A Brief Guide to R for Beginners in Econometrics]
*[http://polisci.osu.edu/prism/luncheons.htm PRISM luncheons]
* [[Statistical Analysis: an Introduction using R]] - which includes a course on R
* [[Biostatistics with R]] aka A R companion to Wayne Daniel 's ''Biostatistics'' Book

== Blogs ==

*[http://planetR.stderr.org Planet R] the first R blog aggregator
*[http://www.r-bloggers.com/ R Bloggers] ''The news pulse for the R blogosphere ''
*[http://ryouready.wordpress.com/ &quot;R&quot; you Ready ?]
*[http://onertipaday.blogspot.com/ One R Tip a Day]
*[http://blog.revolution-computing.com/ Revolution computing blog]
*[http://yusung.blogspot.com/search/label/R Yu Sung Su's Blog:R]
*'''(fr)''' [http://freakonometrics.blog.free.fr/index.php Freakonometrics (in French)] lots of code chunks
*'''(fr)''' [http://coulmont.com/blog/tag/r/ Baptiste Coulmont (in French)]
*'''(fr)''' [http://quanti.hypotheses.org/tag/r/ Quanti Sciences Sociales (in French)] R blog for sociologists

== Journals ==

*[http://journal.r-project.org/current.html The R Journal]
*[http://www.jstatsoft.org/ Journal of Statistical Software] contains lots of articles on R packages.
*[http://polmeth.wustl.edu/thepolmeth.php The Political Methodologist] contains lots of articles on R for political scientists.

== Books ==

*[http://www.stats.ox.ac.uk/pub/MASS4/ Venables and Ripley : Modern Applied Statistics with S] 
** A very good introduction to R covering numerous topics.
*[http://cran.r-project.org/web/packages/HSAUR2/index.html A Handbook of Statistical Analyses Using R] (Brian S. Everitt and Torsten Hothorn, Chapman &amp; Hall/CRC, 2008)
*[http://www.stat.auckland.ac.nz/~paul/ItDT/HTML/ An Introduction to Data Technologies, by Paul Murrell]
** Everything you need to know about data management
* ''A first course in statistical programming with R'', John Braun and Duncan Murdoch.
*   Peter Dalgaard (2009). ISwR: Introductory Statistics with R. R package version 2.0-4. http://CRAN.R-project.org/package=ISwR
*[http://www.springer.com/series/6991 Springer Use R Series]
*[http://socserv.socsci.mcmaster.ca/jfox/Books/Companion/ John Fox : An R and S-PLUS Companion to Applied Regression]
*[http://www.stat.columbia.edu/~gelman/arm/ Gelman Hill : Data Analysis using Regression and Multilevel Hierarchical Models]

== useR and other R conferences ==

* [http://www.agrocampus-ouest.fr/math/useR-2009/ useR! 2009]
* [http://www.useR2010.org useR! 2010]
* [http://www.londonr.org/ London R homepage]
* [http://www.RinFinance.com R / Finance] conferences in 2009 and 2010

== Search Engine ==

* [http://www.rseek.org/ R seek]
* [http://www.google.com/codesearch Google Code Search with keyword &quot;lang:r&quot;] gives access to r programs including the request. For instance the following request &lt;code&gt;[http://www.google.com/codesearch?q=optim+lang%3Ar&amp;hl=en&amp;btnG=Search+Code optim lang:r]&lt;/code&gt; gives access to all the r programs including &lt;code&gt;optim&lt;/code&gt;.

== Q&amp;A / Forums ==

* Nabble R http://r.789695.n4.nabble.com/
* [http://stackoverflow.com/questions/tagged/r Stackoverflow]
* The [http://hashtags.org/tag/rstats/messages #rstats hashtag] on Twitter
* [[Internet Technologies/IRC|IRC]]: #r@freenode
* [http://alea.fr.eu.org/j/index.html#sec-2 r-soc] : mailing list for French sociologist

== References ==

{{reflist}}
{{R Programming/Navbar|Data types|Sample Session}}</text>
      <sha1>7e5wvennpqfb1meeor2xzf6jk1sj4sh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Advanced programming</title>
    <ns>0</ns>
    <id>200326</id>
    <revision>
      <id>2213473</id>
      <parentid>2094137</parentid>
      <timestamp>2011-11-17T23:46:24Z</timestamp>
      <contributor>
        <username>Dcljr</username>
        <id>2099</id>
      </contributor>
      <comment>/* References */ bypass redirect</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

== Conditional execution == 

* Help for programming : 
&lt;pre&gt;
&gt; ?Control
&lt;/pre&gt;

&lt;tt&gt;if&lt;/tt&gt; accepts a unidimensional condition.
&lt;pre&gt;
if (condition){
     statement  
     } 
else {
     alternative
    }
&lt;/pre&gt;

The &lt;tt&gt;ifelse()&lt;/tt&gt; command takes as first argument the condition, as second argument the treatment if the condition is true and as third argument the treatment if the condition is false. In that case, the condition can be a vector. For instance we generate a sequence from 1 to 10 and we want to display values which are lower than 5 and greater than 8. 
&lt;pre&gt;
&gt; x &lt;- 1:10 
&gt; ifelse(x&lt;5 | x&gt;8, x, 0)
 [1]  1  2  3  4  0  0  0  0  9 10
&lt;/pre&gt;

== Loops ==

R provides three ways to write loops: for, repeat and while. The &lt;tt&gt;for&lt;/tt&gt; statement is excessively simple. You simply have to define index (here k) and a vector (in the example below the vector is 1:5) and you specify the action you want between braces. 
&lt;pre&gt;
&gt; for (k in 1:5){
+ print(k)
+ }
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
&lt;/pre&gt;
When it is not possible to use the for statement, you can also use break or while by specifying a breaking rules. One should be careful with this kind of loops since if the breaking rules is misspecified the loop will never end.
In the two examples below the standard normal distribution is drawn in as long as the value is lower than 1. The cat() function is used to display the present value on screen.
&lt;pre&gt;
&gt; repeat { 
+ 	g &lt;- rnorm(1) 
+ 	if (g &gt; 1.0) break 
+ 	cat(g,&quot;\n&quot;)
+ 	} 
-1.214395 
0.6393124 
0.05505484 
-1.217408 
&gt; g &lt;- 0
&gt; while (g &lt; 1){
+ 	g &lt;- rnorm(1) 
+ 	cat(g,&quot;\n&quot;)
+ 	}
-0.08111594 
0.1732847 
-0.2428368 
0.3359238 
-0.2080000 
0.05458533 
0.2627001 
1.009195
&lt;/pre&gt;

=== Implicit loops === 

Loops are generally slow and it is better to avoid them when it is possible. 
* &lt;tt&gt;apply()&lt;/tt&gt; can apply a function to elements of a matrix or an array. This may be the rows of a matrix (1) or the columns (2).
* &lt;tt&gt;lapply()&lt;/tt&gt; applies a function to each column of a dataframe and returns a list. 
* &lt;tt&gt;sapply()&lt;/tt&gt; is similar but the output is simplified. It may be a vector or a matrix depending on the function.
* &lt;tt&gt;tapply()&lt;/tt&gt; applies the function for each level of a factor.

&lt;pre width = 80&gt;
&gt; N &lt;- 10
&gt; x1 &lt;- rnorm(N)
&gt; x2 &lt;- rnorm(N) + x1 + 1
&gt; male &lt;- rbinom(N,1,.48)
&gt; y &lt;- 1 + x1 + x2 + male + rnorm(N)
&gt; mydat &lt;- data.frame(y,x1,x2,male)
&gt; lapply(mydat,mean) # returns a list
$y
[1] 3.247

$x1
[1] 0.1415

$x2
[1] 1.29

$male
[1] 0.5

&gt; sapply(mydat,mean) # returns a vector
     y     x1     x2   male 
3.2468 0.1415 1.2900 0.5000 
&gt; apply(mydat,1,mean) # applies the function to each row
 [1]  1.1654  2.8347 -0.9728  0.6512 -0.0696  3.9206 -0.2492  3.1060  2.0478  0.5116
&gt; apply(mydat,2,mean) # applies the function to each column
     y     x1     x2   male 
3.2468 0.1415 1.2900 0.5000 
&gt; tapply(mydat$y,mydat$male,mean) # applies the function to each level of the factor
    0     1 
1.040 5.454 
&lt;/pre&gt;

* See also &lt;tt&gt;aggregate()&lt;/tt&gt; which is similar to &lt;tt&gt;tapply()&lt;/tt&gt; but is applied to a dataframe instead of a vector.

=== Iterators ===

* Loops in R are generally slow. &lt;tt&gt;iterators&lt;/tt&gt; may be more efficient than loops. See this entry in the [http://blog.revolution-computing.com/2009/07/counting-with-iterators.html Revolution Computing Blogs]




== References ==

{{reflist}}

{{R Programming/Navbar|Random Number Generation|Data Management}}

[[pt:R (linguagem de programação)/Estruturas de controle]]</text>
      <sha1>d5h6mlciqtaw3oz5rpmznp327qkew2o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Linear Models</title>
    <ns>0</ns>
    <id>200328</id>
    <revision>
      <id>2546268</id>
      <parentid>2213461</parentid>
      <timestamp>2013-07-30T06:01:43Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>layout</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

== Standard linear model ==
In this section we present estimation functions for the standard linear model estimated by ordinary least squares (OLS). Heteroskedasticity and endogeneity are treated below. The main estimation function is &lt;tt&gt;lm()&lt;/tt&gt;.

=== Fake data simulations ===
We first generate a fake dataset such that there is no hetereoskedasticity, no endogeneity and no correlation between the error terms. Therefore the ordinary least square estimator is unbiased and efficient. We choose a model with two variables and take all the coefficients equal to one. 

&lt;math&gt;
y_i = 1 + x_{1,i} + x_{2,i} + u_i
&lt;/math&gt;

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 1000
&gt; u &lt;- rnorm(N)
&gt; x1 &lt;- rnorm(N)
&gt; x2 &lt;- 1 + x1 + rnorm(N)
&gt; y &lt;- 1 + x1 + x2 + u
&gt; df &lt;- data.frame(y,x1,x2)
&lt;/source&gt;

=== Least squares estimation ===
* The standard function to estimate a simple linear model is &lt;code&gt;lm()&lt;/code&gt;.
* &lt;tt&gt;lsfit()&lt;/tt&gt; performs the least square procedure but the output is not formatted in fashionable way.
* &lt;tt&gt;ols()&lt;/tt&gt; ('''Design''') is another alternative.

We estimate the model using &lt;tt&gt;lm()&lt;/tt&gt;. We store the results in &lt;tt&gt;fit&lt;/tt&gt; and print the result using &lt;tt&gt;summary()&lt;/tt&gt; which is the standard function.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; fit &lt;- lm(y ~ x1 + x2, data = df)
&gt; summary(fit)
&lt;/source&gt;

There are some alternative to display the results. 
* &lt;tt&gt;display()&lt;/tt&gt; in the '''arm''' package is one of them. 
* &lt;tt&gt;coefplot()&lt;/tt&gt; ('''arm''') graphs the estimated coefficients with confidence intervals. This is a good way to present the results. 
* &lt;tt&gt;mtable()&lt;/tt&gt; in the '''memisc''' package can display the results of a set of regressions in the same table. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;arm&quot;)
&gt; display(fit)
&gt; coefplot(fit)
&lt;/source&gt;

&lt;tt&gt;fit&lt;/tt&gt; is a list of objects. You can see the list of these objects by typing &lt;tt&gt;names(fit)&lt;/tt&gt;. We can also apply functions to &lt;tt&gt;fit&lt;/tt&gt;.

We can get the estimated coefficients using &lt;tt&gt;fit$coeff&lt;/tt&gt; or &lt;tt&gt;coef(fit)&lt;/tt&gt;.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; fit$coeff
(Intercept)          x1          x2 
  1.2026522   0.8427403   1.5146775
&gt; coef(fit)
(Intercept)          x1          x2 
     0.7541      1.7844      0.7222 
&gt; output &lt;- summary(fit)
&gt; coef(output) 
             Estimate Std. Error  t value    Pr(&gt;|t|)
(Intercept) 1.1945847  0.2298888 5.196359 0.001258035
x1          0.6458170  0.3423214 1.886581 0.101182585
x2          0.6175165  0.2083628 2.963660 0.020995713
&lt;/source&gt;

&lt;tt&gt;se.coef()&lt;/tt&gt; ('''arm''') returns the standard error of the estimated coefficients.

The vector of fitted values can be returned via &lt;tt&gt;fit$fitted&lt;/tt&gt;, &lt;tt&gt;fitted(fit)&lt;/tt&gt; or the &lt;tt&gt;predict()&lt;/tt&gt; function.
The &lt;tt&gt;predict()&lt;/tt&gt; function also returns standard error  and confidence intervals for predictions.

&lt;source lang=&quot;rsplus&quot;&gt; 
&gt; fit$fitted
&gt; fitted(fit)
&lt;/source&gt;

The vector of residuals:
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; fit$resid
&gt; residuals(fit)
&lt;/source&gt;

The number of degrees of freedom :

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; fit$df
&lt;/source&gt;

==== Confidence intervals ====
We can get the confidence intervals using &lt;tt&gt;confint()&lt;/tt&gt; or &lt;tt&gt;conf.intervals()&lt;/tt&gt; in the '''alr3''' package.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; confint(fit, level = .9)
                   5 %     95 %
(Intercept) -0.7263261 1.200079
x1          -0.5724022 1.909924
x2           0.6185011 2.475079
&gt; confint(fit, level = .95)
                 2.5 %   97.5 %
(Intercept) -0.9652970 1.439050
x1          -0.8803353 2.217858
x2           0.3881923 2.705388
&gt; confint(fit, level = .99)
                 0.5 %   99.5 %
(Intercept) -1.5422587 2.016012
x1          -1.6237963 2.961319
x2          -0.1678559 3.261436
&gt; library(alr3)
&gt; conf.intervals(fit)
                 2.5 %   97.5 %
(Intercept) -0.9652970 1.439050
x1          -0.8803353 2.217858
x2           0.3881923 2.705388
&lt;/source&gt;

==== Tests ====
&lt;tt&gt;coeftest()&lt;/tt&gt; ('''lmtest''') performs the Student t test and z test on coefficients. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;lmtest&quot;)
&gt; coeftest(fit) # t-test
&gt; coeftest(fit,df=Inf) # z-test (for large samples)
&lt;/source&gt;

&lt;tt&gt;linear.hypothesis()&lt;/tt&gt; ('''car''') performs a finite sample F test on a linear hypothesis or an asymptotic Wald test using &lt;math&gt;\Chi^2&lt;/math&gt; statistics.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;car&quot;)
&gt; linear.hypothesis(fit,&quot;x1 = x2&quot;) # tests Beta1 = Beta2
&gt; linear.hypothesis(fit,c(&quot;(Intercept)&quot;, &quot;x1&quot;,&quot;x2&quot;),rep(1,3)) # Tests  Beta0 = Beta1 = Beta2 = 1
&gt; linear.hypothesis(fit,c(&quot;(Intercept)&quot;, &quot;x1&quot;,&quot;x2&quot;),rep(0,3)) # Tests  Beta0 = Beta1 = Beta2 = 0
&gt; linear.hypothesis(fit,c(&quot;x1&quot;,&quot;x2&quot;),rep(0,2)) # Tests Beta1 = Beta2 = 0
&lt;/source&gt;

See also &lt;tt&gt;waldtest()&lt;/tt&gt; ('''lmtest''') for nested models.

==== Analysis of variance ==== 
We can also make an analysis of variance using &lt;tt&gt;anova()&lt;/tt&gt;.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; anova(fit)
&lt;/source&gt;

==== Model Search and information criteria ====
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; # Akaike Information Criteria
&gt; AIC(fit)
[1] 26.72857
&gt; # Bayesian Information Criteria
&gt; AIC(fit,k=log(N))
[1] 27.93891
&lt;/source&gt;

The '''stats4''' package includes &lt;tt&gt;AIC()&lt;/tt&gt; and &lt;tt&gt;BIC()&lt;/tt&gt; function:
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(stats4)
&gt; ?BIC
&gt; lm1 &lt;- lm(Fertility ~ . , data = swiss)
&gt; AIC(lm1)
[1] 326.0716
&gt; BIC(lm1)
[1] 339.0226
&lt;/source&gt;

The &lt;tt&gt;step()&lt;/tt&gt; functions performs a model search using the Akaike Information Criteria. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 10^3
&gt; u &lt;- rnorm(N)
&gt; x1 &lt;- rnorm(N)
&gt; x2 &lt;- rnorm(N) + x1
&gt; x3 &lt;- rnorm(N)
&gt; y &lt;- 1+ x1 + x2 + u
&gt; fit &lt;- lm(y~x1+x2 + x3)
&gt; step.fit &lt;- step(fit)
&lt;/source&gt;

==== Zelig ====
* The method is also supported in '''Zelig'''
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 1000
&gt; u &lt;- rnorm(N)
&gt; x &lt;- rnorm(N)
&gt; y &lt;- 1 + x + u
&gt; mydat &lt;- data.frame(y,x)
&gt; z.out &lt;- zelig(y ~  x, model = &quot;ls&quot;, data = mydat)
&gt; x.out &lt;- setx(z.out, x = 10)
&gt; s.out &lt;- sim(z.out, x.out)
&gt; summary(s.out)
&lt;/source&gt;

=== Bayesian estimation ===
* &lt;tt&gt;MCMCregress()&lt;/tt&gt; ('''MCMCpack''')
* &lt;tt&gt;BLR()&lt;/tt&gt; ('''BLR''')
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 1000
&gt; u &lt;- rnorm(N)
&gt; x &lt;- rnorm(N)
&gt; y &lt;- 1 + x + u
&gt; mydat &lt;- data.frame(y,x)
&gt; 
&gt; posterior &lt;- MCMCregress(y ~ x, data = mydat)
&gt; summary(posterior)
&gt; plot(posterior)
&lt;/source&gt;

== Heteroskedasticity ==
* See the '''lmtest''' and '''sandwich''' packages.
* &lt;tt&gt;gls()&lt;/tt&gt; ('''nlme''') computes the generalized least squares estimator.
* See &quot;Cluster-robust standard errors using R&quot; [http://people.su.se/~ma/clustering.pdf (pdf)] by Mahmood Arai. He suggests two functions for cluster robust standard errors. &lt;tt&gt;clx()&lt;/tt&gt; allow for one-way clustering and &lt;tt&gt;mclx()&lt;/tt&gt; for two-way clustering. They can be loaded with the following command &lt;tt&gt;source(&quot;http://people.su.se/~ma/clmclx.R&quot;)&lt;/tt&gt;.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 10 # 10 people
&gt; T &lt;- 5 # 5 times
&gt; id &lt;- rep(1:N,T)
&gt; f &lt;- rep(rnorm(N),T) # is individual specific
&gt; u &lt;- rnorm(N*T)
&gt; x1 &lt;- rnorm(N*T) 
&gt; x2 &lt;- rnorm(N*T) + x1
&gt; y &lt;- 1 + x1 + x2 + f + u
&gt; fit &lt;- lm(y ~ x1 + x2 )
&gt; source(&quot;http://people.su.se/~ma/clmclx.R&quot;)
&gt; clx(fit, 1, id)
&lt;/source&gt;

== Robustness ==
[[w:Cook's distance|Cook's distance]]
&lt;source lang=&quot;rsplus&quot;&gt;
&gt;library(car)
&gt; cookd(fit)
           1            2            3            4            5 
0.0006205008 0.0643213760 0.2574810866 1.2128206779 0.2295047699 
           6            7            8            9           10 
0.3130578329 0.0003365221 0.0671830241 0.0048474954 0.0714255871
&lt;/source&gt;

Influence plot:
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; influence.plot(fit)
&lt;/source&gt;

Leverage plots:
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; leverage.plot(fit,term.name=x1)
&gt; leverage.plot(fit,term.name=x2)
&lt;/source&gt;

Bonferroni's outlier test:
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; outlier.test(fit)

max|rstudent| = 2.907674, degrees of freedom = 6,
unadjusted p = 0.02706231, Bonferroni p = 0.2706231

Observation: 3 
&lt;/source&gt;
See also &lt;tt&gt;outlier.t.test()&lt;/tt&gt; in the '''alr3''' package.

* &lt;tt&gt;inf.index()&lt;/tt&gt; in the '''alr3''' package computes all the robustness statistics (Cook's distance, studentized residuals, outlier test, etc)
* &lt;tt&gt;rlm()&lt;/tt&gt; performs a robust estimation 

* See [http://www.ats.ucla.edu/stat/r/dae/rreg.htm UCLA example]
* See also the '''robustbase''' package

== Instrumental Variables ==
* &lt;tt&gt;ivreg()&lt;/tt&gt; in the '''AER''' package&lt;ref&gt;  Christian Kleiber and Achim Zeileis (2008). Applied
  Econometrics with R. New York: Springer-Verlag. ISBN
  978-0-387-77316-2. URL
  http://CRAN.R-project.org/package=AER&lt;/ref&gt;
* &lt;tt&gt;tsls()&lt;/tt&gt; in the '''sem''' package.
* It is also possible to use the &lt;tt&gt;gmm()&lt;/tt&gt; command in the '''gmm''' package. See [[R Programming/Method of Moments|Methods of moments]] for an example.

=== Fake data simulations ===
We first simulate a fake data set with x correlated to u, z and u independant and x correlated with z. Thus x is an endogenous explanatory variable of y and z is a valid instrument for x. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 1000
&gt; z &lt;- rnorm(N)
&gt; u &lt;- rnorm(N) 
&gt; x &lt;- 1 + z + u + rnorm(N) # x is correlated with the error term u (endogeneity) and the instrument z
&gt; y &lt;- 1 + x + u
&lt;/source&gt;

=== Two stage least squares ===
Then we estimate the model with OLS (&lt;tt&gt;lm()&lt;/tt&gt;) and IV using z as an instrument for x.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; ols &lt;- lm(y ~ x)
&gt; summary(ols) # ols are biased
&gt; library(&quot;AER&quot;)
&gt; iv &lt;- ivreg(y ~ x | z)
&gt; summary(iv) # IV estimates are unbiased
&gt; library(&quot;sem&quot;)
&gt; iv2 &lt;- tsls(y  ~ x, instruments = ~ z)
&gt; summary(iv2)
&gt; library(&quot;gmm&quot;)
&gt; iv3 &lt;- gmm(y ~ x, z)
&gt; summary(iv3)
&lt;/source&gt;

We plot the results : 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; plot(y ~ x, col = &quot;gray&quot;)
&gt; abline(a  = 1,b = 1, lty = 1, col = 1, lwd = 2)
&gt; abline(ols,  lty = 2, col = 2 , lwd = 2)
&gt; abline(iv, lty = 3, col = 3, lwd = 2)
&gt; legend(&quot;topleft&quot;, legend = c(&quot;True values&quot;,&quot;OLS&quot;,&quot;IV&quot;), col = 1:3, lwd = rep(2,3), lty = 1:3)
&lt;/source&gt;

== Panel Data ==
&lt;tt&gt;plm()&lt;/tt&gt; ('''plm''') implements the standard random effect, fixed effect, first differences methods&lt;ref&gt;Yves Croissant, Giovanni Millo (2008). Panel Data Econometrics in R:  The plm Package. Journal of Statistical Software 27(2). URL http://www.jstatsoft.org/v27/i02/.&lt;/ref&gt;. It is similar to Stata's &lt;tt&gt;xtreg&lt;/tt&gt; command.

Note that &lt;tt&gt;plm&lt;/tt&gt; output are not compatible with &lt;tt&gt;xtable()&lt;/tt&gt; and &lt;tt&gt;mtable()&lt;/tt&gt; for publication quality output. 

* '''lme4''' and '''gee''' implements random effect and multilevel models.  
* See also '''BayesPanel'''

=== Random effects model ===
To implement a [http://en.wikipedia.org/wiki/Random_effects_model random effects model] we generate a fake data set with 1000 observations over 5 time periods.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 1000
&gt; T &lt;- 5
&gt; library(mvtnorm)
&gt; sig &lt;- diag(rep(1,T))
&gt; r &lt;- rmvnorm(N, sigma = sig)
&gt; wide &lt;- data.frame(id = 1:N,f = rnorm(N), u = r)
&gt; long &lt;- reshape(wide, varying = list(3:7), v.names = &quot;u&quot;, direction = &quot;long&quot;, timevar = &quot;year&quot;)
&gt; long$x1 &lt;- 1 + rnorm(N*T) 
&gt; long$x2 &lt;- 1 + rnorm(N*T) + long$x1
&gt; long$y &lt;- 1 + long$x1 + long$x2 + long$f + long$u
&gt; head(long[order(long$id),])
&lt;/source&gt;

We estimate the random effect model with the &lt;tt&gt;plm()&lt;/tt&gt; function and the &lt;tt&gt;model = &quot;random&quot;&lt;/tt&gt; option.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;plm&quot;)
&gt; panel &lt;- plm.data(long, index = c(&quot;id&quot;,&quot;year&quot;))
&gt; # panel &lt;- pdata.frame(long,c(&quot;id&quot;,&quot;year&quot;))
&gt; eq &lt;- y ~ x1 + x2
&gt; re &lt;- plm(eq, model = &quot;random&quot;, data=panel)
&gt; summary(re)
&lt;/source&gt;

=== Fixed effects model ===
For a [[:w:Fixed_effects_model|fixed effects model]] we generate a fake dataset and we correlate the fixed effects f with covariates : 

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 1000
&gt; T &lt;- 5
&gt; library(mvtnorm)
&gt; sig &lt;- diag(rep(1,T))
&gt; r &lt;- rmvnorm(N, sigma = sig)
&gt; wide &lt;- data.frame(id = 1:N,f = rnorm(N), u = r)
&gt; long &lt;- reshape(wide, varying = list(3:7), v.names = &quot;u&quot;, direction = &quot;long&quot;, timevar = &quot;year&quot;)
&gt; long$x1 &lt;- 1 + rnorm(N*T) + long$f
&gt; long$x2 &lt;- 1 + rnorm(N*T) + long$x1
&gt; long$y &lt;- 1 + long$x1 + long$x2 + long$f + long$u
&gt; head(long[order(long$id),])
&lt;/source&gt;

We first transform our data in a plm data frame using &lt;tt&gt;plm.data()&lt;/tt&gt;.
We estimate the fixed model using &lt;tt&gt;plm()&lt;/tt&gt; with &lt;tt&gt;model = &quot;within&quot;&lt;/tt&gt; as an option.
Then, we compare the estimate with the random effect model and perform an Hausman test. 
At the end, we plot the density of the fixed effects.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;plm&quot;)
&gt; panel &lt;- plm.data(long, index = c(&quot;id&quot;,&quot;year&quot;))
&gt; #panel &lt;- pdata.frame(long,c(&quot;id&quot;,&quot;year&quot;))
&gt; eq &lt;- y ~ x1 + x2
&gt; fe &lt;- plm(eq, model = &quot;within&quot;, data=panel)
&gt; summary(fe)
&gt; re &lt;- plm(eq, model = &quot;random&quot;, data=panel)
&gt; summary(re)
&gt; phtest(fe, re)
&gt; plot(density(fixef(fe)))
&gt; rug(fixef(fe))
&lt;/source&gt;

=== Dynamic panel data ===
* &lt;tt&gt;pgmm()&lt;/tt&gt; ('''plm''') implements the Arellano Bond estimation procedure&lt;ref&gt;
M Arellano, S Bond &quot;Some tests of specification for panel data: Monte Carlo evidence and an application to employment equations&quot;  - The Review of Economic Studies, 1991
&lt;/ref&gt;. It is similar to &lt;tt&gt;xtabond2&lt;/tt&gt; in Stata&lt;ref&gt;David Roodman, XTABOND2: Stata module to extend xtabond dynamic panel data estimator, http://ideas.repec.org/c/boc/bocode/s435901.html&lt;/ref&gt;.

== Simultaneous equations model ==
For a [:w:Simultaneous_equations_model|simultaneous equations model] the following packages are needed :
* '''sem''' package
* '''systemfit''' package

== References ==
{{reflist|2}}

== External links ==
* [http://www.r-statistics.com/2010/07/visualization-of-regression-coefficients-in-r/ Visualization of regression coefficients]

{{R Programming/Navbar|Descriptive Statistics|Maximum Likelihood}}</text>
      <sha1>5r7q1c3es6v85lm44jy18uksomusawi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Optimization</title>
    <ns>0</ns>
    <id>200329</id>
    <revision>
      <id>2488152</id>
      <parentid>2484464</parentid>
      <timestamp>2013-02-15T14:57:35Z</timestamp>
      <contributor>
        <ip>160.94.47.16</ip>
      </contributor>
      <comment>/* One dimensional problem */</comment>
      <text xml:space="preserve">{{Wikipedia|Optimization (mathematics)}}
{{Wikibooks|Statistics/Numerical_Methods/Optimization}}
&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

* &lt;tt&gt;optimize()&lt;/tt&gt; is devoted to one dimensional optimization problem.
* &lt;tt&gt;optim()&lt;/tt&gt;, &lt;tt&gt;nlm()&lt;/tt&gt;, &lt;tt&gt;ucminf()&lt;/tt&gt; ('''ucminf''')  can be used for multidimensional optimization problems.
* &lt;tt&gt;nlminb()&lt;/tt&gt; for constrained optimization.
* '''quadprog''', '''minqa''', '''rgenoud''', '''trust''' packages
* Some work is done to improve optimization in R. See [http://www.agrocampus-ouest.fr/math/useR-2009/slides/Nash+Varadhan.pdf Updating and improving optim(), Use R 2009 slides]&lt;ref&gt;Updating and improving &lt;tt&gt;optim()&lt;/tt&gt;, Use R 2009 slides http://www.agrocampus-ouest.fr/math/useR-2009/slides/Nash+Varadhan.pdf &lt;/ref&gt;, the [http://optimizer.r-forge.r-project.org/ R-forge optimizer page]&lt;ref&gt;R-forge optimizer http://optimizer.r-forge.r-project.org/&lt;/ref&gt; and the [http://r-forge.r-project.org/R/?group_id=395 corresponding packages including '''optimx'''].

== Numerical Methods ==

=== One dimensional problem ===

The one dimensional problem : 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; func &lt;- function(x){
+ 	return ( (x-2)^2 )
+ 	}
&gt; (func(-2))
[1] 16
&gt;
&gt; # plot your function using the 'curve function'
&gt; curve(func,-4,8) 
&gt;
&gt; # Here is another way to plot the function
&gt; # using a grid
&gt; grid &lt;- seq(-10,10,by=.1) 
&gt; func(grid)
&gt; plot(grid,func(grid))
&gt; 
&gt; # you can find the minimum using the optimize function
&gt; optimize(f=func,interval=c(-10,10))
$minimum
[1] 2

$objective
[1] 0
&lt;/source&gt;

=== Newton-Raphson ===

* &lt;tt&gt;nlm()&lt;/tt&gt; provides a Newton algorithm.
* '''maxLik''' package for maximization of a likelihood function. This package includes the Newton Raphson method.
* &lt;tt&gt;newtonraphson()&lt;/tt&gt; in the '''spuRs''' package.

=== BFGS ===

* The [[w:BFGS_method|BFGS]] method


&lt;source lang=&quot;rsplus&quot;&gt;
&gt; func &lt;- function(x){
+ 	out &lt;- (x[1]-2)^2 + (x[2]-1)^2
+ 	return &lt;- out
+ 	}&gt; 
&gt; optim(par=c(0,0), fn=func, gr = NULL,
+       method = c(&quot;BFGS&quot;),
+       lower = -Inf, upper = Inf,
+       control = list(), hessian = T)
&gt; optim(par=c(0,0), fn=func, gr = NULL,
+       method = c(&quot;L-BFGS-B&quot;),
+       lower = -Inf, upper = Inf,
+       control = list(), hessian = T)
&lt;/source&gt;

=== Conjugate gradient method === 

{{Wikipedia|Conjugate gradient method}}

* &lt;code&gt;optim()&lt;/code&gt; with &lt;code&gt;method=&quot;cg&quot;&lt;/code&gt;.

=== Trust Region Method ===

* [http://www.stat.umn.edu/geyer/trust/ &quot;trust&quot;] package for trust region method


=== The Nelder-Mead simplex method ===

* The [[w:Nelder–Mead method|Nelder Mead Method]]

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; func &lt;- function(x){
+ 	out &lt;- (x[1]-2)^2 + (x[2]-1)^2
+ 	return &lt;- out
+ 	}
&gt; 
&gt; optim(par=c(0,0), fn=func, gr = NULL,
+       method = c(&quot;Nelder-Mead&quot;),
+       lower = -Inf, upper = Inf,
+       control = list(), hessian = T)
&lt;/source&gt;


* The '''boot''' package includes another simplex method

== Simulation methods ==

=== Simulated Annealing ===

{{Wikipedia|Simulated annealing}}

* The [[w:Simulated_annealing|Simulated Annealing]] is an algorithm which is useful to maximise non-smooth functions. It is pre implemented in &lt;tt&gt;optim()&lt;/tt&gt;.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; func &lt;- function(x){
+ 	out &lt;- (x[1]-2)^2 + (x[2]-1)^2
+ 	return &lt;- out
+ 	}&gt; 
&gt; optim(par=c(0,0), fn=func, gr = NULL,
+       method = c(&quot;SANN&quot;),
+       lower = -Inf, upper = Inf,
+       control = list(), hessian = T)
&lt;/source&gt;

=== EM Algorithm ===

{{Wikipedia|EM algorithm}}

=== Genetic Algorithm ===

{{Wikipedia|Genetic algorithm}}

{{...}}
* '''rgenoud''' package for genetic algorithm&lt;ref&gt;Jasjeet Sekhon homepage : http://sekhon.berkeley.edu/rgenoud/&lt;/ref&gt;
* '''gaoptim''' package for genetic algorithm&lt;ref&gt;gaoptim on CRAN: http://cran.r-project.org/web/packages/gaoptim/index.html&lt;/ref&gt;

== References ==

* Venables and Ripley, Chapter 16.
* Cameron and Trivedi, ''Microeconometrics'', chapter 10
* Braun and Murdoch (Chapter 7)&lt;ref&gt;''A first course in statistical programming with R'' http://portal.acm.org/citation.cfm?id=1385416&lt;/ref&gt; is a very good reference on optimization using R. 

{{reflist}}

{{R Programming/Navbar|Mathematics|Probability Distributions}}</text>
      <sha1>po05wf5zvpkkee5ptefgl53llc0p321</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Publication quality ouput</title>
    <ns>0</ns>
    <id>200330</id>
    <revision>
      <id>2676375</id>
      <parentid>2575950</parentid>
      <timestamp>2014-06-24T23:46:00Z</timestamp>
      <contributor>
        <ip>124.149.179.225</ip>
      </contributor>
      <comment>Corrected spelling error: Yo &gt; You.</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

== Formatting numbers ==

You can use the &lt;code&gt; format() &lt;/code&gt; function to control the number of digits and other characteristics of a displayed object.   

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; df &lt;- data.frame(x = rnorm(10), y = rnorm(10))
&gt; print(df)
            x          y
1  -0.4350953 -0.6426477
2  -0.5947293 -0.2389625
3  -0.7061850 -2.4382016
4  -0.3384038 -0.6322842
5   0.2713353  0.5396409
6  -1.1144711 -2.0321274
7  -1.0356184  1.7217443
8  -2.6665278 -0.3621377
9   0.2975570  0.1598905
10  1.4631458 -0.7995652
&gt; print(format(df, digits=3, scientific=T))
           x         y
1  -4.35e-01 -6.43e-01
2  -5.95e-01 -2.39e-01
3  -7.06e-01 -2.44e+00
4  -3.38e-01 -6.32e-01
5   2.71e-01  5.40e-01
6  -1.11e+00 -2.03e+00
7  -1.04e+00  1.72e+00
8  -2.67e+00 -3.62e-01
9   2.98e-01  1.60e-01
10  1.46e+00 -8.00e-01
&lt;/source&gt;

== Sweave ==

{{Wikipedia|Sweave}}

'''Sweave'''&lt;ref&gt;The Sweave Homepage http://www.stat.uni-muenchen.de/~leisch/Sweave/ &lt;/ref&gt; is a ''literate programming'' language which integrates LaTeX and R code. The Sweave file generates a LaTeX file and an R file which can in turn be compiled. Roger Koenker&lt;ref&gt;http://www.econ.uiuc.edu/~roger/repro.html&lt;/ref&gt;, Meredith and Racine (2009)&lt;ref&gt;Meredith, E. and J.S. Racine (2009), “Towards Reproducible Econometric Research: The Sweave Framework,” Journal of Applied Econometrics, Volume 24, pp 366-374.&lt;/ref&gt; and Charles Geyer&lt;ref&gt;Charles Geyer &quot;Why Reproducible Research is the Right Thing&quot; http://www.stat.umn.edu/~charlie/Sweave/&lt;/ref&gt; argue that Sweave favors reproducible econometric/statistical research.

There are some alternatives to Sweave for [[w:literate programming|literate programming]]. One of them is Babel which is included in Emacs Orgmode&lt;ref name=&quot;babel&quot;&gt;Babel in Emacs Orgmode http://orgmode.org/worg/org-contrib/babel/intro.html&lt;/ref&gt;. This tool allow export to LaTeX and HTML. It is also possible to include code chunks for various programming languages (R, Ruby, etc).

=== Syntax === 

The main idea is that you write a file which includes LaTeX and R code. LaTeX code begins with &lt;tt&gt;@&lt;/tt&gt; and R code with &lt;tt&gt;&lt;&lt;&gt;&gt;=&lt;/tt&gt; (some options can be included between &lt;tt&gt;&lt;&lt;&lt;/tt&gt; and &lt;tt&gt;&gt;&gt;&lt;/tt&gt;). 
&lt;source lang=&quot;rsplus&quot;&gt;
@
% Some LaTeX code
\section{Results}
I show that ...
&lt;&lt;&gt;&gt;=
# Some R code
qnorm(.975)
@
% Some LaTeX code
$$
\Phi^{-1}(.975) = 1.96 
$$
&lt;/source&gt;

The file is stored with extension &lt;tt&gt;.Rnw&lt;/tt&gt; or &lt;tt&gt;.rnw&lt;/tt&gt;. At the end, you extract from this file an R file using &lt;tt&gt;Stangle()&lt;/tt&gt; and a LaTeX file using &lt;tt&gt;Sweave()&lt;/tt&gt;. Here is an example with a file called &lt;tt&gt;file.Rnw&lt;/tt&gt; which generates &lt;tt&gt;file.tex&lt;/tt&gt; and &lt;tt&gt;file.R&lt;/tt&gt;

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; Sweave(&quot;file.Rnw&quot;)
Writing to file file.tex
Processing code chunks ...
 1 : echo keep.source term verbatim pdf
 2 : echo keep.source term verbatim pdf
&gt; Stangle(&quot;file.Rnw&quot;)
Writing to file file.R 
&lt;/source&gt;

Then you can run LaTeX on your file.tex. This can be done using the &lt;tt&gt;system()&lt;/tt&gt; function or &lt;tt&gt;texi2dvi()&lt;/tt&gt;. 

&lt;source lang=&quot;rsplus&quot;&gt;
# Example under Windows :
system(&quot;pdflatex.exe -shell-escape file.tex&quot;) # runs pdflatex
system(&quot;open file.pdf&quot;) # opens the pdf 
&lt;/source&gt;

Note that you may need to download Sweave.sty from the internet since it is not part of the standard MikTeX distribution. 

You can also add your results in your text using the &lt;tt&gt;\Sexpr{}&lt;/tt&gt; function. 
&lt;source lang=&quot;rsplus&quot;&gt;
$
\Phi^{-1}(.975) = \Sexpr{qnorm(.975)} 
$
&lt;/source&gt;

=== Options ===

There are some options. These options can be included for each code chunk or in the Sweave command. 

* For figures, you can either include them in the tex file using &lt;tt&gt;fig=T&lt;/tt&gt; or not include them using &lt;tt&gt;fig=F&lt;/tt&gt;.
By default, figures are exported as pdf and eps files. 
If you only want one format suppress the other one with &lt;tt&gt;pdf=F&lt;/tt&gt; or &lt;tt&gt;eps=F&lt;/tt&gt; option.
* The R code can be displayed in the tex file using &lt;tt&gt;echo=T&lt;/tt&gt;. If you don't want to include it in the tex file, use  &lt;tt&gt;echo=F&lt;/tt&gt;.
* The R code can be evaluated using &lt;tt&gt;eval=T&lt;/tt&gt;. If you don't want to evaluate the R code, use &lt;tt&gt;eval=F&lt;/tt&gt;.
* The results : 
** &lt;tt&gt;results=tex&lt;/tt&gt; treats the output as LaTeX code
** &lt;tt&gt;results=verbatim&lt;/tt&gt; treats the output as Verbatim (the default)
** &lt;tt&gt;results=hide&lt;/tt&gt; does not include the results in the LaTeX output

These options can be passed to the &lt;tt&gt;Sweave()&lt;/tt&gt; function. 
&lt;source lang=&quot;rsplus&quot;&gt;
Sweave(&quot;file.Rnw&quot;, pdf = T, eps=F, echo = F, results = &quot;verbatim&quot;)
&lt;/source&gt;

They can also be passed to each code chunk. 
&lt;source lang=&quot;rsplus&quot;&gt;
&lt;&lt;fig=T,pdf=T,eps=F&gt;&gt;=
plot(rnorm(100), col = &quot;red&quot;)
@
&lt;/source&gt;

=== Text editor for Sweave ===

The main issue with Sweave is that few text editors include syntax highlighting for Sweave. Here are some exceptions : 
* [[R_Programming/Settings#RStudio|RStudio]] is a very good solution. It is easy to install and use and it includes buttons to run Sweave files.
* [[Learning the vi Editor|Vim]] provides syntax highlighting for Sweave file (''R no web syntax'')
* [[wikipedia:Emacs|Emacs]] + ESS ([[wikipedia:Emacs Speaks Statistics|Emacs Speaks Statistics]]) provides full support for Sweave file. It includes a keyboard shortcut to run Sweave files and syntax highlighting switching between LaTeX and R.
* [[R_Programming/Settings#Eclipse_with_StatET|Eclipse StatET]] plugin provides support for Sweave (LaTeX/R) documents with all basic features (syntax highlighting, bracket matching, toggle comment, ...) and with detection of R chunks.

=== See also ===

Some example of Sweave documents : 
* [http://www.stat.umn.edu/~charlie/Sweave/foo.Rnw Charles Geyer foo.Rnw example]
* [http://alea.fr.eu.org/j/intro_R.html Julien Barnier's introduction to R] (document in french)
* trick : type &lt;tt&gt;filetype:Rnw&lt;/tt&gt; or &lt;tt&gt;filetype:Snw&lt;/tt&gt; in Google to get Sweave files
* Notice that you can find lots of examples by browsing in the R library folder. The documentation is often written using Sweave and the Sweave file is often included in the package. See for instance in the '''np''' package the doc folder.

Some handouts : 
* &quot;Literate Programming with Sweave and DOCSTRIP&quot; ([http://people.su.se/~lundh/reproduce/sweave_and_docstrip.pdf pdf]) by Michael Lundholm
* Charles Geyer 2008 &quot;An Sweave Demo&quot; ([http://www.stat.umn.edu/~charlie/Sweave/foo.pdf pdf]) (short)
* ''Learning To Sweave in APA Style''&lt;ref&gt;[http://www.tug.org/pracjourn/2008-1/zahn/ Ista Zahn]''Learning To Sweave in APA Style'', The PracTeX Journal 2008, 1&lt;/ref&gt;

Some packages
* '''pgfSweave''' package
* '''ascii''' package
* '''cacheSweave'''
* '''exam''' automatic generation of exams

Some alternative literate programming packages : 
* '''odfWeave''' package to Sweave with OpenOffice. 
* '''knitr''' package
* '''decumar''', a literate programming interface for R by Hadley Wickham&lt;ref&gt;decumar git archive : http://github.com/hadley/decumar&lt;/ref&gt;
* '''relax''' package
* '''wikirobot'''&lt;ref&gt;wikirobot http://r-forge.r-project.org/projects/wikirobot/&lt;/ref&gt; is similar to Sweave but works with MediaWiki.

== Export to [[LaTeX]] ==

R has lots of functions which allow it to export results to LaTeX&lt;ref&gt;See the [[LaTeX]] Wikibook if you want to learn about LaTeX&lt;/ref&gt;.

=== General functions ===

&lt;tt&gt;toLatex()&lt;/tt&gt; in the '''utils''' package. 
* Note that &lt;tt&gt;toLatex()&lt;/tt&gt; does not handle matrices. 
* &lt;tt&gt;toLatex()&lt;/tt&gt; has been adapted to handle matrices and ftables in the '''memisc''' package.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; toLatex(sessionInfo())
\begin{itemize}
  \item R version 2.2.0, 2005-10-06, \verb|powerpc-apple-darwin7.9.0|
  \item Base packages: base, datasets, grDevices,
    graphics, methods, stats, utils
\end{itemize}
&lt;/source&gt;

* &lt;tt&gt;mat2tex()&lt;/tt&gt; ('''sfsmisc''')  exports matrix to LaTeX.
* &lt;tt&gt;tex.table()&lt;/tt&gt; ('''cwhmisc''') package exports a dataframe into a LaTeX table. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; tex.table(mydat)
\begin{table}[ht]
\begin{center}
\begin{footnotesize}
\begin{tabular}{r|rrr}
\hline
 &amp; y &amp; x1 &amp; x2\\ \hline
1 &amp; -0.09 &amp; -0.37 &amp; -1.04\\ 
2 &amp; 0.31 &amp; 0.19 &amp; -0.09\\ 
3 &amp; 3.78 &amp; 0.58 &amp; 0.62\\ 
4 &amp; 2.09 &amp; 1.40 &amp; -0.95\\ 
5 &amp; -0.18 &amp; -0.73 &amp; -0.54\\ 
6 &amp; 3.16 &amp; 1.30 &amp; 0.58\\ 
7 &amp; 2.78 &amp; 0.34 &amp; 0.77\\ 
8 &amp; 2.59 &amp; 1.04 &amp; 0.46\\ 
9 &amp; -1.96 &amp; 0.92 &amp; -0.89\\ 
10 &amp; 0.91 &amp; 0.72 &amp; -1.1\\ 
\hline
\end{tabular}
\end{footnotesize}
\end{center}
\end{table}
&lt;/source&gt;


* &lt;tt&gt;xtable()&lt;/tt&gt; ('''xtable''')  exports various objects, including tables, data frames, lm, aov, and anova, to LaTeX.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; # lm example
&gt; library(xtable)
&gt; x &lt;- rnorm(100)
&gt; y &lt;- 2*x + rnorm(100)
&gt; lin &lt;- lm(y~x)
&gt; xtable(lin)
% latex table generated in R 2.15.1 by xtable 1.7-0 package
% Sun Sep 23 21:54:04 2012
\begin{table}[ht]
\begin{center}
\begin{tabular}{rrrrr}
  \hline
 &amp; Estimate &amp; Std. Error &amp; t value &amp; Pr($&gt;$$|$t$|$) \\ 
  \hline
(Intercept) &amp; -0.0407 &amp; 0.0984 &amp; -0.41 &amp; 0.6803 \\ 
  x &amp; 2.0466 &amp; 0.1043 &amp; 19.63 &amp; 0.0000 \\ 
   \hline
\end{tabular}
\end{center}
\end{table}

&gt; # table example
&gt; x &lt;- sample(1:10, 30, replace = T)
&gt; tab &lt;- table(x)
&gt; tab &lt;- cbind(tab, prop.table(tab))
&gt; colnames(tab) &lt;- c(&quot;N.&quot;, &quot;Prop.&quot;)
&gt; xtable(tab, digits = c(0, 0, 2))
% latex table generated in R 2.15.1 by xtable 1.7-0 package
% Sun Sep 23 22:06:36 2012
\begin{table}[ht]
\begin{center}
\begin{tabular}{rrr}
  \hline
 &amp; N. &amp; Prop. \\ 
  \hline
1 &amp; 5 &amp; 0.17 \\ 
  3 &amp; 1 &amp; 0.03 \\ 
  4 &amp; 3 &amp; 0.10 \\ 
  5 &amp; 6 &amp; 0.20 \\ 
  6 &amp; 5 &amp; 0.17 \\ 
  7 &amp; 3 &amp; 0.10 \\ 
  8 &amp; 2 &amp; 0.07 \\ 
  9 &amp; 2 &amp; 0.07 \\ 
  10 &amp; 3 &amp; 0.10 \\ 
   \hline
\end{tabular}
\end{center}
\end{table}
&lt;/source&gt;

See also : 
* The '''highlight''' package by Romain François exports R code to LaTeX and HTML.
* &lt;tt&gt;format.df()&lt;/tt&gt; and &lt;tt&gt;latex()&lt;/tt&gt; in the '''Hmisc''' package. 
* The '''MEMISC''' and the '''quantreg''' packages include other &lt;tt&gt;latex()&lt;/tt&gt; function.

=== Descriptive statistics ===

* '''estout''' package. 
* The '''reporttools''' package include some functions for table of descriptive statistics&lt;ref&gt;[http://www.jstatsoft.org/v31/c01 reporttools: R Functions to Generate LaTeX Tables of Descriptive Statistics]&lt;/ref&gt;.

=== Estimation results === 

* The '''stargazer''' package provides an easy way to export the results of regressions to LaTeX&lt;ref&gt;http://www.r-statistics.com/2013/01/stargazer-package-for-beautiful-latex-tables-from-r-statistical-models-output/&lt;/ref&gt;
* '''texreg''' provides the same kind of features&lt;ref&gt;http://www.r-bloggers.com/texreg-a-package-for-beautiful-and-easily-customizable-latex-regression-tables-from-r/&lt;/ref&gt;.
* The '''estout''' package provides functions similar to the Stata's &lt;tt&gt;esttab&lt;/tt&gt; and &lt;tt&gt;estout&lt;/tt&gt; utilities&lt;ref&gt;estout : http://repec.org/bocode/e/estout/&lt;/ref&gt;. Estimates are stored using &lt;tt&gt;eststo()&lt;/tt&gt; and printed using &lt;tt&gt;esttab()&lt;/tt&gt;. They can be exported to CSV and LaTeX. These functions support &lt;tt&gt;lm&lt;/tt&gt;, &lt;tt&gt;glm&lt;/tt&gt; and &lt;tt&gt;plm&lt;/tt&gt; objects (see '''plm''' package).
* &lt;tt&gt;apsrtable()&lt;/tt&gt; ('''apsrtable''') exports the results of multiple regression to LaTeX in a way similar to the American Political Science Review publication standard. 
* The &lt;tt&gt;xtable&lt;/tt&gt; ('''xtable''' package) exports dataframes, matrix, estimation results&lt;ref&gt;[http://archive.is/20121225194652/dataninja.wordpress.com/2006/02/11/getting-tables-from-r-output/ xtable on dataninja blog]&lt;/ref&gt;. &lt;tt&gt;xtable()&lt;/tt&gt; can also be used to export the results to an HTML file. 
* [http://pj.freefaculty.org/R/WorkingExamples/outreg-worked.R The &lt;tt&gt;outreg()&lt;/tt&gt; function]&lt;ref&gt;The &lt;tt&gt;outreg()&lt;/tt&gt; function http://pj.freefaculty.org/R/WorkingExamples/outreg-worked.R&lt;/ref&gt; developped by Paul Johnson is similar to the [[Stata]] &lt;tt&gt;outreg&lt;/tt&gt;&lt;ref&gt;Stata outreg http://ideas.repec.org/c/boc/bocode/s375201.html&lt;/ref&gt; function. See [http://ryouready.wordpress.com/2009/06/19/r-function-to-create-tables-in-latex-or-lyx-to-display-regression-models-results/ &quot;R you ready ?&quot; post] on this topic.
* &lt;tt&gt;mtable()&lt;/tt&gt; and &lt;tt&gt;toLatex()&lt;/tt&gt; in the '''memisc'' package.
&lt;source lang=&quot;rsplus&quot;&gt;
N &lt;- 10^3
u &lt;- rnorm(N)
x1 &lt;- rnorm(N)
x2 &lt;- x1 + rnorm(N)
y &lt;- 1 + x1 + x2 + u
lm1 &lt;- lm(y ~ x1 + x2 )
lm2 &lt;- lm(y ~ x1 + x2 + I(x1*x2))

library(estout)
estclear() # clear all the eststo objects
eststo(lm1) 
eststo(lm2)
esttab() # print it

library(&quot;apsrtable&quot;)
apsrtable(lm1,lm2)

library(xtable)
xtable(lm1)
tab &lt;- xtable(lm1)
print(tab,type=&quot;html&quot;)

source(&quot;http://pj.freefaculty.org/R/WorkingExamples/outreg-worked.R&quot;)
outreg(list(lm1,lm2))

library(&quot;memisc&quot;)
toLatex(mtable(lm1,lm2))
&lt;/source&gt;

== Export to HTML ==

The '''rpublisher'''&lt;ref name =&quot;rpublisher&quot;&gt;rpublisher : http://code.google.com/p/rpublisher/&lt;/ref&gt; is a literate programming language which publish results in HTML (it is based on python and was last updated in 2008). 


See '''R2HTML''', '''xtable''', '''hwriter''', '''prettyR''', '''highlight''', '''HTMLUtils'''


&lt;tt&gt;wiki.table()&lt;/tt&gt; in the '''hacks''' package export a matrix or a dataframe into [http://www.mediawiki.org Mediawiki] table markup (as used on this wiki and many others).

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; wiki.table(matrix(1:16,4),caption=&quot;Test&quot;)
{|  
|+ Test 
| 1 || 5 || 9 || 13 
|-
| 2 || 6 || 10 || 14 
|-
| 3 || 7 || 11 || 15 
|-
| 4 || 8 || 12 || 16 
|}
&lt;/source&gt;

== References ==

{{reflist|2}}

{{R Programming/Navbar|Text Processing|}}</text>
      <sha1>tg9vuaswtzouq65jkmq5k0fpi6q2uq1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Maximum Likelihood</title>
    <ns>0</ns>
    <id>200331</id>
    <revision>
      <id>2621042</id>
      <parentid>2562967</parentid>
      <timestamp>2014-03-25T16:01:47Z</timestamp>
      <contributor>
        <username>Fishpi</username>
        <id>366400</id>
      </contributor>
      <comment>Rejected the last text change (by [[Special:Contributions/174.110.140.62|174.110.140.62]]) Broken markup</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

==Introduction==

Maximum likelihood estimation is just an [[R Programming/Optimization|optimization]] problem. You have to write down your log likelihood function and use some optimization technique. Sometimes you also need to write your score (the first derivative of the log likelihood) and or the hessian (the second derivative of the log likelihood). 

== One dimension == 

If there is only one parameter, we can optimize the log likelihood using &lt;code&gt;optimize()&lt;/code&gt;. 

=== Example with a type 1 Pareto distribution ===

We provide an example with a type 1 [[w:Pareto distribution|Pareto distribution]]. Note that in this example we treat the minimum as known and do not estimate it. Therefore this is a one-dimensional problem.

We use the &lt;code&gt;rpareto1()&lt;/code&gt; ('''actuar''') function to generate a random vector from a type 1 Pareto distribution with shape equal to 1 and minimum value equal to 500. We use the &lt;code&gt;dpareto1()&lt;/code&gt; ('''actuar''') function with option &lt;code&gt; log = TRUE&lt;/code&gt; to write the log likelihood. Then we just need to use &lt;code&gt;optimize()&lt;/code&gt; with &lt;code&gt;maximum=TRUE&lt;/code&gt;. We provide a minimum and a maximum value for the parameter with the &lt;code&gt;interval&lt;/code&gt; option.
 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(actuar)
&gt; y &lt;- rpareto1(1000, shape = 1, min = 500)
&gt; ll &lt;- function(mu, x) { 
+    sum(dpareto1(x,mu[1],min = min(x),log = TRUE)) 
+   } 
&gt; optimize(f = ll, x = y, interval = c(0,10), maximum = TRUE)
&lt;/source&gt;


== Multiple dimension ==

* &lt;tt&gt;fitdistr()&lt;/tt&gt; ('''MASS''' package) fits univariate distributions by maximum likelihood. It is a wrapper for &lt;code&gt;optim()&lt;/code&gt;.  
* If you need to program yourself your maximum likelihood estimator (MLE) you have to use a built-in optimizer such as &lt;tt&gt;nlm()&lt;/tt&gt;, &lt;tt&gt;optim()&lt;/tt&gt;. R also includes the following optimizers :
* mle() in the '''stats4''' package
* The '''maxLik''' package


=== Example with a logistic distribution ===

For instance, we draw from a logistic distribution and we estimate the parameters using .
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; # draw from a gumbel distribution using the inverse cdf simulation method
&gt; e.1 &lt;- -log(-log(runif(10000,0,1))) 
&gt; e.2 &lt;- -log(-log(runif(10000,0,1)))
&gt; u &lt;- e.2 - e.1  # u follows a logistic distribution (difference between two gumbels.)
&gt; fitdistr(u,densfun=dlogis,start=list(location=0,scale=1))
&lt;/source&gt;

=== Example with a Cauchy distribution ===

For instance, we can write a simple maximum likelihood estimator for a Cauchy distribution using the &lt;tt&gt;nlm()&lt;/tt&gt; optimizer.
We first draw a vector x from a Cauchy distribution. Then we define the log likelihood function and then we optimize using the &lt;tt&gt;nlm()&lt;/tt&gt; function. Note that &lt;tt&gt;nlm()&lt;/tt&gt; is minimizer and not a maximizer.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; n &lt;- 100
&gt; x &lt;- rcauchy(n)
&gt; mlog.1 &lt;- function(mu, x) { 
+   - sum(dcauchy(x, location = mu, log = TRUE)) 
+   } 
&gt; mu.start &lt;- median(x)
&gt; out &lt;- nlm(mlog.1, mu.start, x = x) 
&lt;/source&gt;


=== Example with a beta distribution ===

Here is an other example with the Beta distribution and the &lt;tt&gt;optim()&lt;/tt&gt; function.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; y &lt;- rbeta(1000,2,2)
&gt; loglik &lt;- function(mu, x) { 
+    sum(-dbeta(x,mu[1],mu[2],log = TRUE)) 
+    } 
&gt; 
&gt; out &lt;- optim(par = c(1,1), fn=loglik,x=y,method = &quot;L-BFGS-B&quot;,lower=c(0,0))
&lt;/source&gt;

== Tests ==

=== Likelihood Ratio Test ===

* &lt;tt&gt;lrtest()&lt;/tt&gt; in the '''lmtest''' package&lt;ref&gt;Achim Zeileis, Torsten Hothorn (2002). Diagnostic
  Checking in Regression Relationships. R News 2(3),
  7-10. URL http://CRAN.R-project.org/doc/Rnews/&lt;/ref&gt;.


== Some Specific cases ==

* &lt;tt&gt;gum.fit()&lt;/tt&gt; ('''ismev''' package) provides MLE for a Gumbel distributon


== Resources ==

* [http://www.stat.umn.edu/geyer/5931/mle/mle.pdf Charles Geyer : Maximum Likelihood in R (pdf, 9 pages)]
* [http://www.unc.edu/~monogan/computing/r/MLE_in_R.pdf Marco Steenbergen Maximum Likelihood Programming in R (pdf, 7 pages)]

== References ==

{{reflist}}

{{R Programming/Navbar|Linear Models|Bayesian Methods}}</text>
      <sha1>rmc9qrwothb6ecvda783eovfxje5dkl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Bayesian Methods</title>
    <ns>0</ns>
    <id>200332</id>
    <revision>
      <id>2443557</id>
      <parentid>1963879</parentid>
      <timestamp>2012-11-18T22:30:23Z</timestamp>
      <contributor>
        <ip>188.155.51.211</ip>
      </contributor>
      <comment>/* Interface with WinBugs */</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

== Introduction ==

R has lots of bayesian estimation procedures, much more than [[Stata]] or [[SAS]]. 

* '''LearnBayes''' by Jim Albert
* '''bayesm''' by Peter Rossi and Rob McCulloch
* '''BaM''' by Jeff Gill
* '''arm''' package by Jennifer Hill and Andrew Gelman.
* '''MCMCpack''' package.
* '''mcsm''' package by Christian Robert and George Casella.
* '''umacs''' ([http://www.stat.columbia.edu/~kerman/Research/umacs.html link]) by Jouni Kerman and Andrew Gelman.

== Interface with WinBugs ==

* WinBugs/OpenBugs is a popular statistical package for MCMC techniques. 
* Andrew Gelman has some instruction to use R and WinBugs on his [http://www.stat.columbia.edu/~gelman/bugsR/ webpage]
* There is also an interface with JAGS

== Resources ==

* Christian Robert and Jean Michel Marin ''The Bayesian Core'' ([http://www.ceremade.dauphine.fr/~xian/BCS/ link] including slides and R scripts)
* Jim Albert : ''Bayesian Computation with R'', Use R!, Springer 2007.
* Christian Robert and George Casella ''Introducing Monte Carlo Methods with R'', Use R!, Springer 2009 ([http://www.ceremade.dauphine.fr/~xian/books.html link] including the mcsm package).
* [http://faculty.chicagobooth.edu/peter.rossi/research/bsm.html Peter Rossi, Greg Allenby, Robert McCulloch : ''Bayesian Statistics and Marketing'' and &quot;bayesm&quot; package]. 
* CRAN task view for bayesian statistics ([http://cran.r-project.org/web/views/Bayesian.html link])

== References ==

{{reflist}}


{{R Programming/Navbar|Maximum Likelihood|Bootstrap}}</text>
      <sha1>gzwj26xx4e3go6tsjbov59hozd9lner</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Working with data frames</title>
    <ns>0</ns>
    <id>200333</id>
    <revision>
      <id>2610783</id>
      <parentid>2610782</parentid>
      <timestamp>2014-02-21T03:26:06Z</timestamp>
      <contributor>
        <ip>114.166.235.132</ip>
      </contributor>
      <comment>/* Reshaping a dataframe */   Correcting references to gdp1960 and gpd1970  (II)</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

In this section,  we deal with methods to read, manage and clean-up a data frame. 

In R, a dataframe is a list of vectors of the same length. They don't have to be of the same type. For instance, you can combine in one dataframe a logical, a character and a numerical vector. 

== Reading and saving data ==

If data are already in an R format (&lt;code&gt;.Rda&lt;/code&gt; or &lt;code&gt;.Rdata&lt;/code&gt;), you can load them in memory using &lt;code&gt;load()&lt;/code&gt;. 
You can save data to the R format using &lt;code&gt;save()&lt;/code&gt;.

&lt;source lang = &quot;rsplus&quot;&gt;
load(&quot;mydata.Rda&quot;)
save(mydata,file=&quot;mydata.Rda&quot;)
&lt;/source&gt;

== Example Datasets ==
* Most packages include example datasets to test the functions.
* The &lt;code&gt;data()&lt;/code&gt; function without argument gives the list of all example datasets in all the loaded packages. 
* If you want to load them in memory, you just need to use the data function and include the name of the dataset as an argument. 
* &lt;code&gt;str_data()&lt;/code&gt; ('''sfsmisc''') gives the structure of all datasets in a package. 
&lt;source lang = &quot;rsplus&quot;&gt;
&gt; data() # lists all the datasets in all the packages in memory
&gt; data(package=&quot;datasets&quot;) # lists all the datasets in the &quot;datasets&quot; package
&gt; data(Orange) # loads the orange dataset in memory
&gt; ?Orange # Help for the &quot;Orange&quot; Datasets
&gt; str_data(&quot;datasets&quot;) # gives the structure of all the datasets in the datasets package.
&lt;/source&gt;

* Some packages includes lots of datasets.
** The '''datasets''' package
** The '''AER''' package &lt;ref&gt;The AER Package http://cran.r-project.org/web/packages/AER/index.html&lt;/ref&gt; includes replication datasets for some important textbooks in econometrics.
**The '''EcDat''' package &lt;ref&gt;The EcDat Package http://cran.r-project.org/web/packages/Ecdat/index.html&lt;/ref&gt; includes replication archive for the Journal of Applied Econometrics, the Journal of Business and Economic Statistics, etc

== Building your own data frames ==

You can create a dataframe using vectors.
&lt;source lang = &quot;rsplus&quot;&gt;
u &lt;- rnorm(N)
x1 &lt;- rnorm(N)
x2 &lt;- rnorm(N)
y &lt;- 1 + x1 + x2 + u
mydat &lt;- data.frame(y,x1,x2)
&lt;/source&gt;

R has a spreadsheet-style data editor. One can use it to enter the data into a spreadsheet.
&lt;source lang = &quot;rsplus&quot;&gt;
mydat &lt;- edit(data.frame())
&lt;/source&gt;
Read table from the clipboard :
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; mydat &lt;- read.table(&quot;clipboard&quot;)
&lt;/source&gt;

You can also read space delimited tables in your code using &lt;code&gt;gsource()&lt;/code&gt; ('''Zelig'''). Here is an example with Yule 1899 data&lt;ref&gt; &quot;An investigation into the causes of changes in pauperism in England, chiefly during the last two intercensal decades (Part I.)&quot; - GU Yule - Journal of the Royal Statistical Society, June 1899, p 283&lt;/ref&gt;. 
&lt;source lang = &quot;rsplus&quot;&gt;
mydat &lt;- gsource(var.names = &quot;id union pauperism out old  pop&quot;, 
variables = &quot;
1 Kensington 27 5 104 136
2 Paddington  47 12 115 111
3 Fulham 31 21 85 174
&quot;)
&lt;/source&gt;

== Describing a data frame ==
{{...}}
* &lt;code&gt;str()&lt;/code&gt; gives a very brief description of the data.
* &lt;code&gt;names()&lt;/code&gt; gives the name of each variables
* &lt;code&gt;summary()&lt;/code&gt; gives some very basic summary statistics for each variable

== Browsing data ==
* You can browse your data in a spreadsheet using &lt;code&gt;View()&lt;/code&gt;. Depending on your operating system, this option is not always available and the result is not always the same.
* You can print the first lines using &lt;code&gt;head()&lt;/code&gt; and the last lines using &lt;code&gt;tail()&lt;/code&gt;. 

&lt;source lang=&quot;rsplus&quot;&gt;
View(mydata)
head(mydata, n = 20) # n = 20 means  that the first 20 lines are printed in the R console
&lt;/source&gt;

* [[R_Programming/Settings#RStudio|RStudio]] has a nice data browser (&lt;code&gt;View(mydata)&lt;/code&gt;).  
* RKward has also a nice data browser
* Paul Murrell is currently developping the '''rdataviewer''' package ([http://www.stat.auckland.ac.nz/~paul/Talks/viewer.pdf pdf]).

== Attaching data ==
One of the big advantage of R over [[Stata]] is that you can deal with multiple datasets at the same time. You just need to specify the name of the dataset and a &quot;$&quot; symbol before each variable name ( for instance &lt;code&gt;mydat1$var1&lt;/code&gt; and &lt;code&gt;mydat2$var1&lt;/code&gt;). If you only work with one dataset and you don't want to write again and again the name of the dataset as a prefix for each variable, you can use &lt;code&gt;attach()&lt;/code&gt;. 

&lt;source lang=&quot;rsplus&quot;&gt;
mydata$var1
attach(mydata)
var1
detach(mydata)
&lt;/source&gt;

== Detecting duplicates ==
When you want to clean up a data set, it is very often useful to check if you don't have the same information twice in the data. R provides some functions to detect duplicates.

* &lt;code&gt;duplicated()&lt;/code&gt; looks at duplicated elements and return a logical vector. You can use &lt;code&gt;table()&lt;/code&gt; to summarize this vector. 
* &lt;code&gt;Duplicated()&lt;/code&gt; ('''sfsmisc''') generalizes this command. &lt;code&gt;Duplicated()&lt;/code&gt; only marks unique values with &quot;NA&quot;.
* &lt;code&gt;remove.dup.rows()&lt;/code&gt; ('''cwhmisc''').
* &lt;code&gt;unique()&lt;/code&gt; keep only the unique lines in a dataset.

&lt;source lang=&quot;rsplus&quot;&gt;
library(&quot;Zelig&quot;)
mydat &lt;- gsource(
variables = &quot;
1 1 1 1
1 1 1 1
1 2 3 4
1 2 3 4
1 2 2 2
1 2 3 2&quot;)
unique(mydat) # keep unique rows
library(cwhmisc)
remove.dup.rows(mydat) # similar to unique()
table(duplicated(mydat)) # table duplicated lines
mydat$dups &lt;- duplicated(mydat) # add a logical variable for duplicates
&lt;/source&gt;

== Creating and removing variables ==

To create a new variable 
&lt;source lang=&quot;rsplus&quot;&gt;
mydata$newvar &lt;- oldvar
&lt;/source&gt;

If you want to delete a variable in a dataset, you can assign NULL to that variable : 
&lt;source lang = &quot;rsplus&quot;&gt;
# Delete the x variable in the df data frame.
df$x &lt;- NULL 
&lt;/source&gt;

== Renaming variables ==

* It is possible to rename variable by redefining the vector of names of a data frame. 
* There is also a &lt;code&gt;rename()&lt;/code&gt; function in the '''reshape''' package.

&lt;source lang=&quot;rsplus&quot;&gt;
df &lt;- data.frame(x = 1:10, y = 21:30)
names(df)
names(df) &lt;- c(&quot;toto&quot;,&quot;tata&quot;)
names(df)
names(df)[2] &lt;- &quot;titi&quot;
names(df)
&lt;/source&gt;

== Creating a subset of the data ==

One can subset the data using &lt;code&gt;subset()&lt;/code&gt;. The first argument is the name of the dataset, the second argument is a logical condition which say which lines will be included in the new dataset and the last argument is the list of variable which will be included in the new dataset. 

In the following example, we generate a fake dataset and we use the &lt;code&gt;subset()&lt;/code&gt; command to select the lines and columns of interest. We choose the lines such that x1 &gt; 0 and x2 &lt; 0 and we only keep x1 and x2 as variables.
&lt;source lang=&quot;rsplus&quot;&gt;
N &lt;- 100
x1 &lt;- rnorm(N)
x2 &lt;- 1 + rnorm(N) + x1
x3 &lt;- rnorm(N) + x2
mydat &lt;- data.frame(x1,x2,x3)
subset(x = mydat, subset = x1 &gt; 0 &amp; x2 &lt; 0, select = c(x1,x2))
subset(x = mydat, subset = x1 &gt; 0 &amp; x2 &lt; 0, select = - x3) # the same. 
&lt;/source&gt;

It is also possible to reorder the columns using the &lt;code&gt;select&lt;/code&gt; option.

&lt;source lang=&quot;rsplus&quot;&gt;
subset(x = mydat, subset = x1 &gt; 0 &amp; x2 &lt; 0, select = c(x1,x2))
subset(x = mydat, subset = x1 &gt; 0 &amp; x2 &lt; 0, select = c(x2,x1))
&lt;/source&gt;

== Sorting and ordering ==

* &lt;code&gt;order()&lt;/code&gt;
&lt;source lang = &quot;rsplus&quot;&gt;
mydat[order(var1,var2),]
&lt;/source&gt;

Suppose you want to randomize the order in a data set. You just need to generate a vector from a uniform distribution and to sort following that vector.

&lt;source lang=&quot;rsplus&quot;&gt;
df[order(runif(nrow(df))),]
&lt;/source&gt;

== Detecting missing values ==
* &lt;code&gt;is.na()&lt;/code&gt; returns a logical vector equal to TRUE if any of the variable in a dataset is missing and to FALSE otherwise.
* &lt;code&gt;complete.cases()&lt;/code&gt; returns a logical vector indicating TRUE if all cases are complete and FALSE otherwise.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; table(complete.cases(df))
&lt;/source&gt;

== Reshaping a dataframe ==

This topic is important if you deal with panel data. [[w:Panel data|Panel data]] can be stored in a wide format with one observation per unit and a variable for each time period or in a long format with one observation per unit and time period. &lt;code&gt;reshape()&lt;/code&gt; reshapes a dataset in a wide or long format.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; country &lt;- c(&quot;'Angola'&quot;,&quot;'UK'&quot;,&quot;'France'&quot;)
&gt; gdp.1960 &lt;- c(1,2,3)
&gt; gdp.1970 &lt;- c(2,4,6)
&gt; mydat &lt;- data.frame(country,gdp.1960,gdp.1970)
&gt; mydat # wide format
  country gdp.1960 gdp.1970
1  Angola       1       2
2      UK       2       4
3  France       3       6
&gt; reshape( data = mydat, varying = list(2:3) , v.names = &quot;gdp&quot;, direction = &quot;long&quot;) # long format
    country time gdp id
1.1  Angola    1   1  1
2.1      UK    1   2  2
3.1  France    1   3  3
1.2  Angola    2   2  1
2.2      UK    2   4  2
3.2  France    2   6  3
&lt;/source&gt;
* &lt;code&gt;varying&lt;/code&gt; gives the numbers of the columns which are time-varying
* &lt;code&gt;v.names&lt;/code&gt; gives the prefix of the time-varying variables
* &lt;code&gt;direction&lt;/code&gt; gives the direction, either &quot;long&quot; or &quot;wide&quot;. 

* See also : 
** &lt;code&gt;reShape()&lt;/code&gt; ('''Hmisc''')
** See Hadley Wickham's '''reshape''' package&lt;ref&gt;Reshaping Data with the reshape Package : http://www.jstatsoft.org/v21/i12&lt;/ref&gt;
** See Duncan Murdoch's '''tables''' package &lt;ref&gt;vignette for the tables package: http://cran.r-project.org/web/packages/tables/vignettes/tables.pdf&lt;/ref&gt;

=== External links ===
* [http://www.r-statistics.com/2012/01/printing-nested-tables-in-r-bridging-between-the-reshape-and-tables-packages/ Printing nested tables in R – bridging between the {reshape} and {tables} packages]

== Expanding a dataset ==

Sometimes we need to duplicate some lines in a dataset. For instance, if we want to generate a fake dataset with a [[w:Panel data|panel data]] structure. In that case, we would first generate time invariant variables and then duplicate each line by a given scalar in order to create time-varying variables. 

It is possible to use the &lt;code&gt;expand()&lt;/code&gt; function in the '''epicalc''' package. This will multiply each line by a given number. 

&lt;source lang=&quot;rsplus&quot;&gt;
N &lt;- 1000
T &lt;- 5
wide &lt;- data.frame(id = 1:N,f = rnorm(N),  rep = T)
library(&quot;epicalc&quot;)
long &lt;- expand(wide,index.var = &quot;rep&quot;)
long$time &lt;- rep(1:T,N)
&lt;/source&gt;

We can also use the ''do it yourself solution'' or create our own function. The idea is simple. We create a vector which igives for each line the number of times it should be replicated (dups in the following example). Then we use the &lt;code&gt;rep()&lt;/code&gt; function to create a vector which repeats the line numbers according to what we want. The last step creates a new dataset which repeats lines according to the desired pattern.

&lt;source lang=&quot;rsplus&quot;&gt;
expand &lt;- function(df,dups){
	df$dups &lt;- dups
	pattern &lt;- rep(1:nrow(df), times=df$dups)
	df2 &lt;- df[pattern,]
	index &lt;- function(x){
		1:length(x)
		}
	df2$year &lt;- unlist(tapply(df2$dups, df2$id, index))
	df2$dups &lt;- NULL 
	return(df2)
	}

df &lt;- data.frame(x = rnorm(3), id = 1:3)
dups = c(3,1,2)
expand(df,dups)
&lt;/source&gt;

== Merging dataframes ==

Merging data can be very confusing, especially if the case of multiple merge. Here is a simple example : 

We have one table describing authors : 
&lt;source lang = &quot;rsplus&quot;&gt;
&gt; authors &lt;- data.frame(
+     surname = I(c(&quot;Tukey&quot;, &quot;Venables&quot;, &quot;Tierney&quot;, &quot;Ripley&quot;, &quot;McNeil&quot;)),
+     nationality = c(&quot;US&quot;, &quot;Australia&quot;, &quot;US&quot;, &quot;UK&quot;, &quot;Australia&quot;),
+     deceased = c(&quot;yes&quot;, rep(&quot;no&quot;, 4)))
&gt; authors
   surname nationality deceased
1    Tukey          US      yes
2 Venables   Australia       no
3  Tierney          US       no
4   Ripley          UK       no
5   McNeil   Australia       no
&lt;/source&gt;
and one table describing books
&lt;source lang = &quot;rsplus&quot;&gt;
&gt; books &lt;- data.frame(
+     name = I(c(&quot;Tukey&quot;, &quot;Venables&quot;, &quot;Tierney&quot;,
+              &quot;Ripley&quot;, &quot;Ripley&quot;, &quot;McNeil&quot;, &quot;R Core&quot;)),
+     title = c(&quot;Exploratory Data Analysis&quot;,
+               &quot;Modern Applied Statistics ...&quot;,
+               &quot;LISP-STAT&quot;,
+               &quot;Spatial Statistics&quot;, &quot;Stochastic Simulation&quot;,
+               &quot;Interactive Data Analysis&quot;,
+               &quot;An Introduction to R&quot;),
+     other.author = c(NA, &quot;Ripley&quot;, NA, NA, NA, NA,
+                      &quot;Venables &amp; Smith&quot;))
&gt; books
      name                         title     other.author
1    Tukey     Exploratory Data Analysis             &lt;NA&gt;
2 Venables Modern Applied Statistics ...           Ripley
3  Tierney                     LISP-STAT             &lt;NA&gt;
4   Ripley            Spatial Statistics             &lt;NA&gt;
5   Ripley         Stochastic Simulation             &lt;NA&gt;
6   McNeil     Interactive Data Analysis             &lt;NA&gt;
7   R Core          An Introduction to R Venables &amp; Smith
&lt;/source&gt;
We want to merge tables books and authors by author's name (&quot;surname&quot; in the first dataset and &quot;name&quot; in the second one). We use the merge() command. We specify the name of the first and the second datasets, then by.x and by.y specify the identifier in both datasets. all.x and all.y specify if we want to keep all the observation of the first and the second dataset. In that case we want to have all the observations from the books dataset but we just keep the observations from the author dataset which match with an observation in the books dataset. 

&lt;source lang = &quot;rsplus&quot;&gt;
&gt; final &lt;- merge(books, authors, by.x = &quot;name&quot;, by.y = &quot;surname&quot;, sort=F,all.x=T,all.y=F)
&gt; final
      name                         title     other.author nationality deceased
1    Tukey     Exploratory Data Analysis             &lt;NA&gt;          US      yes
2 Venables Modern Applied Statistics ...           Ripley   Australia       no
3  Tierney                     LISP-STAT             &lt;NA&gt;          US       no
4   Ripley            Spatial Statistics             &lt;NA&gt;          UK       no
5   Ripley         Stochastic Simulation             &lt;NA&gt;          UK       no
6   McNeil     Interactive Data Analysis             &lt;NA&gt;   Australia       no
7   R Core          An Introduction to R Venables &amp; Smith        &lt;NA&gt;     &lt;NA&gt;
&lt;/source&gt;

It is also possible to merge two data.frame objects while preserving the rows’ order by one of the two merged objects&lt;ref&gt;[http://www.r-statistics.com/2012/01/merging-two-data-frame-objects-while-preserving-the-rows-order/ Merging data frames while preserving the rows]&lt;/ref&gt;.

== Resources ==
* [http://cran.r-project.org/doc/manuals/R-data.html R Data Manual]&lt;ref name = &quot;RDataManual&quot;&gt;R Data Manual http://cran.r-project.org/doc/manuals/R-data.html&lt;/ref&gt;.
* Paul Murrell's ''Introduction to Data Technologies''&lt;ref name=&quot;IdT&quot;&gt;Paul Murrell ''introduction to Data Technologies'' http://www.stat.auckland.ac.nz/~paul/ItDT/&lt;/ref&gt;.

== References ==
{{reflist|2}}

{{R Programming/Navbar|Random Number Generation|Importing and exporting data}}</text>
      <sha1>j8rbm756o5xcyzq8enilxyiqrxv4d1d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Descriptive Statistics</title>
    <ns>0</ns>
    <id>200335</id>
    <revision>
      <id>2482743</id>
      <parentid>2247108</parentid>
      <timestamp>2013-01-29T18:33:23Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>link to wikipedia</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

In this section, we present descriptive statistics, ie a set of tools to describe and explore data. This mainly includes univariate and bivariate statistical tools.

== Generic Functions ==

We introduce some functions to describe a dataset.

* &lt;tt&gt;names()&lt;/tt&gt; gives the names of each variable
* &lt;tt&gt;str()&lt;/tt&gt; gives the structure of the dataset
* &lt;tt&gt;summary()&lt;/tt&gt; gives the mean, median, min, max, 1st and 3rd quartile of each variable in the data.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; summary(mydat)
&lt;/source&gt;
* &lt;tt&gt;describe()&lt;/tt&gt; ('''Hmisc''' package) gives more details than &lt;tt&gt;summary()&lt;/tt&gt;
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;Hmisc&quot;)
&gt; describe(mydat)
&lt;/source&gt;
* &lt;tt&gt;contents()&lt;/tt&gt; ('''Hmisc''' package)
* &lt;tt&gt;dims()&lt;/tt&gt; in the '''Zelig''' package.
* &lt;tt&gt;descr()&lt;/tt&gt; in the '''descr''' package gives min, max, mean and quartiles for continuous variables, frequency tables for factors and length for character vectors.
* &lt;tt&gt;whatis()&lt;/tt&gt; ('''YaleToolkit''') gives a good description of a dataset.
* &lt;tt&gt;describe()&lt;/tt&gt; in the '''psych''' package also provides summary statistics:
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; x = runif(100)
&gt; y = rnorm(100)
&gt; z = rt(100,1)
&gt; sample.data = x*y*z
&gt; require(psych)
Loading required package: psych
&gt; describe(cbind(sample.data,x,z,y))
            var   n  mean   sd median trimmed  mad    min   max range  skew kurtosis   se
sample.data   1 100  0.37 3.21   0.00    0.07 0.31  -9.02 24.84 33.86  4.79    36.91 0.32
x             2 100  0.54 0.28   0.56    0.55 0.35   0.02  1.00  0.98 -0.12    -1.13 0.03
z             3 100  0.12 6.28   0.02   -0.01 1.14 -30.40 37.93 68.33  1.49    22.33 0.63
y             4 100 -0.01 1.07   0.09   -0.02 1.12  -2.81  2.35  5.16  0.00    -0.30 0.11
&lt;/source&gt;

== Univariate analysis ==

=== Continuous variable ===

==== Moments ====

* &lt;tt&gt;mean()&lt;/tt&gt; computes the mean
* the variance : &lt;tt&gt;var()&lt;/tt&gt;.
* the standard deviation &lt;tt&gt;sd()&lt;/tt&gt;.
* the skewness &lt;tt&gt;skewness()&lt;/tt&gt; ('''fUtilities''', '''moment''' or '''e1071''')
* the kurtosis : &lt;tt&gt;kurtosis()&lt;/tt&gt; ('''fUtilities''', '''moment''' or '''e1071''')
* all the moments : &lt;tt&gt;moment()&lt;/tt&gt; ('''moment''') and &lt;tt&gt;all.moments()&lt;/tt&gt; ('''moment''').
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(moments)
&gt;  x &lt;- rnorm(1000)
&gt; moment(x,order = 2) # the variance
[1] 0.999782
&gt; all.moments(x, order.max = 4) # mean, variance, skewness and kurtosis
[1] 1.000000000 0.006935727 0.999781992 0.062650605 2.972802009
&gt; library(&quot;e1071&quot;)
&gt; moment(x,order = 3) # the skewness
[1] 0.0626506
&lt;/source&gt;


==== Order statistics ====

* the range, the minimum and the maximum : &lt;tt&gt;range()&lt;/tt&gt; returns the range of a vector (minimum and maximum of a vector), &lt;tt&gt;min()&lt;/tt&gt; the minimum and &lt;tt&gt;max()&lt;/tt&gt; the maximum.
* &lt;tt&gt;IQR()&lt;/tt&gt; computes the interquartile range. &lt;tt&gt;median()&lt;/tt&gt; computes the median and &lt;tt&gt;mad()&lt;/tt&gt; the median absolute deviation.
* &lt;tt&gt;quantile()&lt;/tt&gt;, &lt;tt&gt;hdquantile()&lt;/tt&gt; in the '''Hmisc''' package and &lt;tt&gt;kuantile()&lt;/tt&gt; in the '''quantreg''' packages computes the sample quantiles of a continuous vector. &lt;tt&gt;kuantile()&lt;/tt&gt; may be more efficient when the sample size is big.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(Hmisc)
&gt; library(quantreg)
&gt; x &lt;- rnorm(1000)
&gt; seq &lt;- seq(0, 1, 0.25)
&gt; quantile(x, probs = seq, na.rm = FALSE, names = TRUE)
         0%         25%         50%         75%        100% 
-3.07328999 -0.66800917  0.02010969  0.72620061  2.92897970 
&gt; hdquantile(x, probs = seq, se = FALSE, na.rm = FALSE, names = TRUE, weights=FALSE)
       0.00        0.25        0.50        0.75        1.00 
-3.07328999 -0.66901899  0.02157989  0.72378407  2.92897970 
&gt; kuantile(x, probs = seq(0, 1, .25), na.rm = FALSE, names = TRUE)
         0%         25%         50%         75%        100% 
-3.07328999 -0.66800917  0.02010969  0.72620061  2.92897970 
attr(,&quot;class&quot;)
[1] &quot;kuantile&quot;
&lt;/source&gt;


==== Inequality Index ====

* The gini coefficient : &lt;tt&gt;Gini()&lt;/tt&gt; ('''ineq''') and &lt;tt&gt;gini()&lt;/tt&gt; ('''reldist'''). 
* &lt;tt&gt;ineq()&lt;/tt&gt; ('''ineq''') gives all inequalities index.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(ineq)
&gt; x &lt;- rlnorm(1000)
&gt; Gini(x)
[1] 0.5330694
&gt; RS(x) #  Ricci-Schutz coefficient
[1] 0.3935813
&gt; Atkinson(x, parameter = 0.5)
[1] 0.2336169
&gt; Theil(x, parameter = 0)
[1] 0.537657
&gt; Kolm(x, parameter = 1)
[1] 0.7216194
&gt; var.coeff(x, square = FALSE)
[1] 1.446085
&gt; entropy(x, parameter = 0.5)
[1] 0.4982675
&gt; library(&quot;reldist&quot;)
&gt; gini(x)
[1] 0.5330694
&lt;/source&gt;


* Concentration index 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(ineq)
&gt; Herfindahl(x)
[1] 0.003091162
&gt;  Rosenbluth(x)
[1] 0.002141646
&lt;/source&gt;


* Poverty index 

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(ineq)
&gt; Sen(x,median(x)/2)
[1] 0.1342289
&gt; ?pov # learn more about poverty index
&lt;/source&gt;


==== Plotting the distribution ====

We can plot the distribution using a box plot (&lt;tt&gt;boxplot()&lt;/tt&gt;), an histogram (&lt;tt&gt;hist()&lt;/tt&gt;), a kernel estimator (&lt;tt&gt;plot()&lt;/tt&gt; with &lt;tt&gt;density()&lt;/tt&gt;) or the empirical cumulative distribution function (&lt;tt&gt;plot()&lt;/tt&gt; with &lt;tt&gt;ecdf()&lt;/tt&gt;). See the [[R Programming/Nonparametric Methods|Nonparametric]] section to learn more about histograms and kernel density estimators. &lt;tt&gt;qqnorm()&lt;/tt&gt; produces a normal QQ plot and &lt;tt&gt;qqline()&lt;/tt&gt; adds a line to the QQ plot which passes through the first and the third quartile. 

* A box-plot is a graphical representation of the minimum, the first quartile, the median, the third quartile and the maximum. 
* &lt;tt&gt;stripchart()&lt;/tt&gt; and &lt;tt&gt;stem()&lt;/tt&gt; are also availables. 

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; x &lt;- rnorm(10^3)
&gt; hist(x)
&gt; plot(density(x))
&gt; boxplot(x)
&gt; plot(ecdf(x)) # plots the empirical distribution function
 
&gt; qqnorm(x)
&gt; qqline(x, col=&quot;red&quot;) # it does not do the plot but adds a line to existing one
&lt;/source&gt;


==== Goodness of fit tests ====

[[w:Kolmogorov Smirnov test|Kolmogorov Smirnov Test]] : 

The KS test is one sample goodness of fit test. The test statistic is simply the maximum of the absolute value of the difference between the empirical cumulative distribution function and the theoritical cumulative distribution function. &lt;tt&gt;KSd()&lt;/tt&gt; ('''sfsmisc''') gives the critical values for the KS statistic.
As an example, we draw a sample from a Beta(2,2) distribution and we test if it fits a Beta(2,2) a Beta(1,1) and a uniform distribution.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; y &lt;- rbeta(1000,2,2) # Draw y in a Beta(2,2) distribution
&gt; ks.test(y,&quot;pbeta&quot;,2,2) # Test if it fits a beta(2,2) distribution
&gt; ks.test(y,&quot;pbeta&quot;,1,1) # Test if it fits a beta(1,1) distribution
&gt; ks.test(y,&quot;punif&quot;) # Test if its fit a uniform distribution (in fact the beta(1,1) is a uniform distribution)
&lt;/source&gt;


Some tests are specific to the normal distribution. The Lillie Test is an extension of the KS test when the parameters are unknown. This is implemented with the &lt;tt&gt;lillie.test()&lt;/tt&gt; in the '''nortest''' package. &lt;tt&gt;shapiro.test()&lt;/tt&gt; implements the [[w:Shapiro Wilk Normality Test|Shapiro Wilk Normality Test]]

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 100
&gt; x &lt;- rnorm(N)
&gt; library(&quot;nortest&quot;)
&gt; lillie.test(x)

         Lilliefors (Kolmogorov-Smirnov) normality test

data:  x 
D = 0.0955, p-value = 0.9982*
&gt; shapiro.test(x)

	Shapiro-Wilk normality test

data:  x 
W = 0.9916, p-value = 0.7902
&lt;/source&gt;

* [[w:Anderson%E2%80%93Darling_test|Andersen Darling Test]] : 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;nortest&quot;)
&gt; ad.test(x)

	Anderson-Darling normality test

data:  x 
A = 0.2541, p-value = 0.7247
&lt;/source&gt;
See also the package '''ADGofTest''' for another version of this test&lt;ref&gt;Carlos J. Gil Bellosta (2009). ADGofTest: Anderson-Darling GoF test. R package version 0.1. http://CRAN.R-project.org/package=ADGofTest&lt;/ref&gt;.

* [[w:Shapiro–Francia test|Shapiro-Francia normality test]] : 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; sf.test(x)

	Shapiro-Francia normality test

data:  x 
W = 0.9866, p-value = 0.9953
&lt;/source&gt;

* [[w:Pearson chi-square test|Pearson chi-square normality test]] : 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;nortest&quot;)
&gt; pearson.test(x)

	Pearson chi-square normality test

data:  x 
P = 0.8, p-value = 0.8495
&lt;/source&gt;
* Cramer-von Mises normality test

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; cvm.test(x)

	Cramer-von Mises normality test

data:  x 
W = 0.0182, p-value = 0.9756
&lt;/source&gt;
* [[w:Jarque-Bera test|Jarque-Bera test]] : 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; jarque.bera.test(x)

	Jarque Bera Test

data:  x 
X-squared = 0.6245, df = 2, p-value = 0.7318
&lt;/source&gt;

=== Discrete variable ===

We generate a discrete variable using &lt;tt&gt;sample()&lt;/tt&gt; and we tabulate it using &lt;tt&gt;table()&lt;/tt&gt;. 
We can plot using a pie chart (&lt;tt&gt;pie()&lt;/tt&gt;), a bar chart (&lt;tt&gt;barplot()&lt;/tt&gt; or &lt;tt&gt;barchart()&lt;/tt&gt; ('''lattice''')) or a dot chart (&lt;tt&gt;dotchart()&lt;/tt&gt; or &lt;tt&gt;dotplot()&lt;/tt&gt; ('''lattice''')). 

* &lt;tt&gt;freq()&lt;/tt&gt; ('''descr''') prints the frequency, the percentages and produces a barplot. It supports weights.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; x &lt;- sample(c(&quot;A&quot;,&quot;B&quot;,&quot;C&quot;),100,replace=T)
&gt; tab &lt;- table(x)
&gt; tab
&gt; prop.table(tab)
&gt; pie(tab)
&gt; barplot(tab)
&gt; dotchart(tab)
&gt; library(&quot;descr&quot;)
&gt; freq(x) 
x 
      Frequency Percent
A            32      32
B            34      34
C            34      34
Total       100     100
&lt;/source&gt;



== Multivariate analysis ==

=== Continuous variables ===

* Covariance : &lt;tt&gt;cov()&lt;/tt&gt;
* Pearson's linear correlation : &lt;tt&gt;cor()&lt;/tt&gt;. 
* Pearson's correlation test &lt;tt&gt;cor.test()&lt;/tt&gt; performs the test.
* Spearman's rank correlation : 
** &lt;tt&gt;cor()&lt;/tt&gt; with &lt;tt&gt;method = &quot;spearman&quot;&lt;/tt&gt;. 
** &lt;tt&gt;spearman()&lt;/tt&gt; ('''Hmisc''')
* Spearman's rank correlation test : 
** &lt;tt&gt;spearman2()&lt;/tt&gt; ('''Hmisc''')
** &lt;tt&gt;spearman.test()&lt;/tt&gt; ('''Hmisc''')
** &lt;tt&gt;spearman.test()&lt;/tt&gt; ('''pspearman''' package) performs the Spearman’s rank correlation test with precomputed exact null distribution for n &lt;= 22.
* Kendall's correlation : &lt;tt&gt;cor()&lt;/tt&gt; with &lt;tt&gt;method = &quot;kendall&quot;&lt;/tt&gt;. See also the '''Kendall''' package.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 100
&gt; x1 &lt;- rnorm(N)
&gt; x2 &lt;- rnorm(N) + x1 + 1
&gt; y &lt;- 1 + x1 + x2 + rnorm(N)
&gt; plot(y ~ x1 ) # Scatter plot 
&gt; mydat &lt;- data.frame(y,x1,x2)
&gt; cor(mydat)
&gt; cor(mydat, method = &quot;spearman&quot;)
&gt; cor(mydat, method = &quot;kendall&quot;)
&gt; cor.test(mydat$x1,mydat$x2, method = &quot;pearson&quot;)
&gt; cor.test(mydat$x1,mydat$x2, method = &quot;spearman&quot;)
&gt; cor.test(mydat$x1,mydat$x2, method = &quot;kendall&quot;)
&lt;/source&gt;


=== Discrete variables ===

* &lt;tt&gt;table()&lt;/tt&gt;, &lt;tt&gt;xtabs()&lt;/tt&gt; and &lt;tt&gt;prop.table()&lt;/tt&gt; for contingency tables.
* &lt;tt&gt;assocplot()&lt;/tt&gt; and &lt;tt&gt;mosaicplot()&lt;/tt&gt; for graphical display of contingency table.
* &lt;tt&gt;CrossTable()&lt;/tt&gt; ('''descr''') is similar to [[SAS]] Proc Freq. It returns a contingency table with Chi square and Fisher independance tests.
* &lt;tt&gt;my.table.NA()&lt;/tt&gt; and &lt;tt&gt;my.table.margin()&lt;/tt&gt; ('''cwhmisc''')
* &lt;tt&gt;chisq.detail()&lt;/tt&gt; ('''TeachingDemos''')

=== Discrete and Continuous variables ===

* &lt;tt&gt;bystats()&lt;/tt&gt; Statistics by Categories in the '''Hmisc''' package
* &lt;tt&gt;summaryBy()&lt;/tt&gt; ('''doBy''')
* Multiple box plots : &lt;tt&gt;plot()&lt;/tt&gt; or &lt;tt&gt;boxplot()&lt;/tt&gt; 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 100
&gt; x &lt;- sample(1:4,N, replace = T) 
&gt; y &lt;- x + rnorm(N)
&gt; plot(y ~ x) # scatter plot
&gt; plot(y ~ as.factor(x)) # multiple box plot
&gt; boxplot(y ~ x) # multiple box plot
&gt; bystats(y , as.factor(x), fun = mean) 
&gt; bystats(y , as.factor(x), fun = quantile)
&lt;/source&gt;


* Equality of two sample mean &lt;tt&gt;t.test()&lt;/tt&gt; and &lt;tt&gt;wilcox.test()&lt;/tt&gt;,  Equality of variance &lt;tt&gt;var.test()&lt;/tt&gt;, equality of two distributions &lt;tt&gt;ks.test()&lt;/tt&gt;.
&lt;source lang=&quot;rsplus&quot;&gt;
N &lt;- 100
x &lt;- sample(0:1,N, replace = T) 
y &lt;- x + rnorm(N)
t.test(y ~ x )
wilcox.test(y ~ x)
&lt;/source&gt;


== References ==

{{reflist}}

{{R Programming/Navbar|Graphics|Linear Models}}</text>
      <sha1>6ro6zmspbsakesdqfz8fqwckaa6t0ob</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Scottish Gaelic/Phrases</title>
    <ns>0</ns>
    <id>200336</id>
    <revision>
      <id>2067160</id>
      <parentid>1576048</parentid>
      <timestamp>2011-03-07T06:33:59Z</timestamp>
      <contributor>
        <username>Thereen</username>
        <id>44896</id>
      </contributor>
      <minor />
      <comment>moved [[Scottish Gaelic/Scottish Gaelic Phrase Book]] to [[Scottish Gaelic/Phrases]]</comment>
      <text xml:space="preserve">==Scottish Gaelic Phrase Book==

*tiugainn!
:come on!

*tiugainn leam
:come with me

*tiugainn comhla rium
:come along with me

*de tha Beurla air &quot;làmh?&quot;
:what is the English for &quot;lamh&quot;?

*siuthad!
:on you go!, proceed!

*bidh modhail!
:behave! 
:bidh! /bi:/ be!; modhail /mo:l/ good;

*bidh s&amp;agrave;mhach
:be quiet! 
:bidh! /bi:/ be!; s&amp;agrave;mhach /savax/ quiet, peaceful;

*na bidh gorach!
:don't be silly!

*trobhad an seo!
:come here!
:trobhad! /trot/ come!; an seo, here;

*c&amp;agrave;ite bheil Catr&amp;igrave;ona?
:where is Catherine?
:(c&amp;agrave;ite - where; bheil - is; Catr&amp;igrave;ona - Catherine)

*c&amp;agrave;ite bheil Iain?
:where is Iain?
:(c&amp;agrave;ite - where; bheil - is; Iain - John)

*cum mo lamh!
:hold my hand!
:(cum! - hold!; mo - my; lamh - hand)

*cum an lamh aig Iain!
:hold John's hand!
:(cum! - hold!; an - the; lamh - hand; aig - belonging to; Iain - John)

*cum an lamh aig Catr&amp;igrave;ona!
:hold Catherine's hand

*tha acras air Seumas
:James is hungry (literally 'hunger is on James')

*tha Seumas ag iarraidh bainne
:James is wanting milk

*tha sin cunnartach
:that is dangerous

*tha e cunnartach
:it is dangerous

*bidh curramach!
:be careful!

*am bheil thu ag iarraidh bainne?
:are you wanting milk?

*tha mi ag iarraidh bainne
:I am wanting milk

*tha Iain ag iarraidh bainne
:John is wanting milk

*caite bheil am bainne?
:where is the milk?

*am bheil thu ag iarraidh s&amp;ugrave;gh?
:are you wanting juice?

*am bheil thu ag iarraidh s&amp;ugrave;gh ubhail?
:are you wanting apple juice?

*tha Mairi ag iarraidh s&amp;ugrave;gh ubhail
:Mary is wanting apple juice

*am bheil thu ag iarraidh s&amp;ugrave;gh orainds?
:are you wanting orange juice?

*caite bheil an s&amp;ugrave;gh?
:where is the juice?

*am bheil thu ag iarraidh b&amp;ugrave;rn?
:are you wanting water?

*am bheil thu ag iarraidh aran agus &amp;igrave;m?
:are you wanting bread and butter?

*tha Seumas a' dol a laighe
:James is going to bed

*a bheil a' Gh&amp;agrave;idhlig agad?
:do you speak Gaelic? (literally: Do you have Gaelic?)

*cuir do chota ort
:put your coat on (Literally: put your coat on you)

*tha an taigh againn mor
:our house is big (Literally: The house at us is big)

*chan eil an taigh againn mor
:our house is not big (Literally: The house at us is not big)

*tha am fear ag ionnsachadh
:the man is learning

*bha a' chaileag a' seinn
:the girl was singing

*tha an taigh beag
:the house is small

*tha an taigh mor
:the house is large

*tha an taigh alainn
:the house is lovely

*their Seumas sin
:James will say that

*an abair Seumas sin?
:will James say that?

*d&amp;eacute; ch&amp;igrave; thu?
:what do you see?

*cluinnidh tu na h-e&amp;ograve;in
:you will hear the birds

*tha am 'playpark' mor
:the playpark is big

*chan eil am 'playpark' mor
:the playpark is not big

*ch&amp;igrave; sinn thu nuair a thig thu
:we will see you when you come

*tha Seumas ann an itealan
:James is in an aeroplane

*chunnaic M&amp;agrave;iri an itealan
:Mary saw the aeroplane

*bha M&amp;agrave;iri a' cluich leis an ainealar
:Mary was playing with the computer

*n&amp;iacute; iad an d&amp;igrave;cheall
:they will do their best

*n&amp;iacute; M&amp;agrave;iri sin
:Mary will make that

*an dean Mairi sin?
:will Mary make that?

*nach abair Seumas riut?
:will James not tell you?

*an doir thu airgead do'n carthannais sin?
:will you give money to that charity?

*dh'fhaodadh tu a dhol rud beag nas luaithe
:you could go a little faster

*bidh fiughar agam ri sin
:I look forward to that (fiughar = hope or expectation)

*an dig thu a ch&amp;eacute;ilidh orm a-nochd?
:will you come to visit me tonight?

*seas air mo bheulaibh!
:stand in front of me!

*bha i na seasamh air mo ch&amp;ugrave;laibh
:she was standing behind me

*tha na solais sr&amp;agrave;ide os cionn an taigh-&amp;ograve;sda
:the street lights are above the hotel/restaurant

*th&amp;eacute;id sinn a Phartaig
:we will go to Partick (Partick is a place-name)

*chan eil anns an taigh ach D&amp;ograve;mhnall agust M&amp;agrave;iri
:there is no-one in the house except Donald and Mary

*Gaelic: ''Gàidhlig'' (GAH-lick)
*welcome: ''fàilte'' (FAL-tyuh)
*good-bye: ''mar sin leibh'' (mar SHIN laif)
*please: ''mas e do thoil e'' (mah SHEH daw HOL eh)
*thank you: ''tapadh leibh'' (TAH-pah ley)
*sorry: ''tha mi duilich'' (hah mee DOO-leekh)
*that one: ''am fear sin'' (am fer SHIN)
*how much?: ''cia mheud'' (kah VIUT)
*English: ''Beurla'' (BYER-luh)
*yes: &lt;sup&gt;2&lt;/sup&gt;''tha'' (hah)
*no: &lt;sup&gt;3&lt;/sup&gt;''chan eil'' (chan YIL)
*I don’t understand: ''chan eil mi a' tuigsinn'' (khan YIL mee uh TOOK-shin)
*Where’s the bathroom?: ''càit a bheil an taigh beag?'' (KATCH-uh vil an TUH-eeh bik)
*generic toast: ''slàinte'' (SLAN-tyuh)

{{BookCat}}</text>
      <sha1>rz1r20xjwg1cytlk1dky0rznno4pem0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Settings</title>
    <ns>0</ns>
    <id>200338</id>
    <revision>
      <id>2696234</id>
      <parentid>2584255</parentid>
      <timestamp>2014-08-31T21:27:12Z</timestamp>
      <contributor>
        <username>Rotlink</username>
        <id>761486</id>
      </contributor>
      <minor />
      <comment>fixing dead links</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

This page show how to install R, customize it and choose a working environment. Once you have installed R, you may want to choose a working environment. This can be a simple text editor (such as Emacs, Vim or Gedit), an integrated development interface (IDE) or graphical user interface (GUI). RStudio is now a popular option. 

== Installation ==
=== Linux ===
Installing R on Debian-based GNU/Linux distributions (e.g. Ubuntu or Debian itself) is as simple as to type in &lt;code&gt;sudo aptitude install r-base&lt;/code&gt; or  &lt;code&gt;sudo apt-get install r-base&lt;/code&gt; (don't forget that this is have to be done as root), or installing the package &lt;code&gt;r-base&lt;/code&gt; using your favourite package manager, for example Synaptic.

There is also a bunch of packages extending R to different purposes. Their names begin with &lt;code&gt;r-&lt;/code&gt;. Take a closer look at the package &lt;code&gt;r-recommended&lt;/code&gt;. It is a metapackage that depends on a set of packages that are recommended by the upstream R core team as part of a complete R distribution. It is possible to install R by installing just this package, as it depends on &lt;code&gt;r-base&lt;/code&gt;.

Installation with apt-get (Debian, Ubuntu and all linux distributions based on Debian)
&lt;pre&gt;
sudo apt-get install r-base
sudo apt-get install r-recommended
&lt;/pre&gt;

Installation with aptitude (Debian, Ubuntu and all linux distributions based on Debian)
&lt;pre&gt;
sudo aptitude install r-base
sudo aptitude install r-recommended
&lt;/pre&gt;

=== Mac OS ===
Installation : 
Visit the R project website (http://r-project.org/), select the &quot;CRAN&quot; page and choose mirror. Download the disk image (dmg file) and install R. 

The default graphical user interface for Mac is much better than the one for Windows. It includes 
* a dataframe manager, 
* a history of all commands, 
* a program editor which supports syntax highlighting.

=== Windows ===
(Section source &lt;ref&gt;This section was imported from the Wikiversity project [[v:How_to_use_R/Installation|Installation, How to use R course]]&lt;/ref&gt;)
==== Download ====
To install R under Windows operating system you have to download the binaries from the web. First go to [http://www.r-project.org/ r-project.org] and click ''CRAN'' under download section on the left panel and select a mirror site, from where you could download the required content. The best idea is pick a mirror closest to your actual geographical location, but other ones should work as well. The click ''Windows'' and in subdirectories ''base''. The windows binary is the exe file, in form R-''x''.''x''.''x''-win32.exe, where ''x'' denotes the actual version of the program. Regardless of the version the setup has the same steps. 

==== Setup ====
&lt;gallery&gt;
Image:R setup1.JPG
Image:R setup2.JPG
Image:R setup3.JPG
Image:R setup4.JPG
Image:R setup5.JPG
&lt;/gallery&gt;

As usual in Windows, if you just keep clicking the ''Next'' button, you will install the program without any problems. However, there are few things that you can alter.

# On the welcome screen click ''Next''.
# Read or just notice the GNU license, and click ''Next''.
# Select the location, where R should be installed. In case you don't prefer a particular location on your hard disc, the default choice will be OK for you.
# During the next step you can specify which parts of R you want to install. Choices are: User installation, Minimal user installation, Full installation and Custom installation. Notice the required space under the selection panel (varies between 20 and 66 MB). In case you are a beginner in R, choose the default ''User installation''.
# In this step you can choose between 2 ways. If you accept defaults, you skip the 3 &quot;extra&quot; steps during installation (see lower). 
# You can specify the ''Start menu'' folder.
# In the next step you can choose, between shortcut possibilities (desktop icon and/or quick launch icon) and specify registry entries.


With these steps you can customize the R graphical user interface.
* You can choose if you want an R graphic user interface covering the whole screen (MDI) or a smaller window (SDI).
* You can select the style, how the Help screen is displayed in R. You will use help a lot, so this may be an important decision. It is up to you, which style you prefer. Please note, that the content of help file will be the same regardless of your choice. Here you specify just the appearance of that particular window.
* In the next step you can specify, whether you want to use internet2.dll. If you are a beginner, pick the ''Standard'' option here.

==== Update ====
Updating R on Windows requires several steps:
# Downloading/installing the latest version of R
# Copying your packages from the library folder to the one in the new R installation

Both of these steps can easily be done using the ''[http://cran.r-project.org/web/packages/installr/ installr]'' package, by running the following command (which would both install the package, and update R)  &lt;ref&gt;[http://www.r-statistics.com/2013/03/updating-r-from-r-on-windows-using-the-installr-package/ Updating R from R (on Windows) – using the {installr} package]&lt;/ref&gt;:

&lt;source lang = &quot;rsplus&quot;&gt;
# installing/loading the package:
if(!require(installr)) { 
install.packages(&quot;installr&quot;); require(installr)} #load / install+load installr
updateR() # updates R
&lt;/source&gt;

There is also the possibility of using a &quot;global&quot; package library, see [http://www.r-statistics.com/2010/04/changing-your-r-upgrading-strategy-and-the-r-code-to-do-it-on-windows/ here] for more details.

=== Portable R for Windows ===

You have a portable version if you want to install R on your USB stick&lt;ref name = &quot;portableR&quot;&gt; Portable R http://sourceforge.net/projects/rportable/&lt;/ref&gt;. This is useful if you don't have admin rights on a computer. The basic installation requires something like 115 mb but you may need more if you want to install add-on packages.

== Working environment ==

Once you have installed '''R''', you need to choose a working environment. 
In this section, we review all possible working environment. This include a basic terminal as well as [[wikipedia:Integrated_development_environment|integrated development environment]] (therefore IDE), text editors or [[wikipedia:Graphical user interface|graphical user interface]] (therefore GUI).
* A graphical user interface provides some menu which makes it possible to run R without writing code. This is a good solution for beginners.
* A text editor makes it easy to write code.
* An integrated development environment provides a text editor and a compiler which makes it easy to write R scripts, to run them and to correct them. 

Note that there are some task specific GUIs. For instance '''speedR''' provides a GUI to import data into R. 

=== Terminal ===
[[File:R Terminal.png|thumb|upright=1.3|R in a Terminal window on Linux.]]

For Linux and Mac OS users it is possible to use R from the terminal. 

&lt;source lang = &quot;rsplus&quot;&gt;
$ R
&gt; q(&quot;no&quot;) # to leave R and return to the terminal
&lt;/source&gt;

=== R Gui ===

For Mac OS and Windows users, there is a graphical user interface. In Mac OS, the GUI includes a package manager, a program editor with syntax highlighting and a data browser. In Windows, the GUI is not better than a [[w:System console|Terminal]].


=== Graphical User Interface ===

This section includes material for beginners (eg people who are not familiar with computing).

==== Poor Man's GUI (pmg) ====

A simple GUI for learning R. It is recommanded for beginners. 

&lt;source lang = &quot;rsplus&quot;&gt;
&gt; install.packages(&quot;pmg&quot;, dependencies=TRUE)
# Windows users may also run the following scripts to install required libraries
&gt; source(&quot;http://www.math.csi.cuny.edu/pmg/installpmg.R&quot;) 
&lt;/source&gt;


&lt;source lang = &quot;rsplus&quot;&gt;
&gt; library(pmg)
&lt;/source&gt;

==== Jaguar : Java GUI for R ====

{{Wikipedia|Java GUI for R}}

* '''Jaguar : Java GUI for R'''&lt;ref&gt;http://jgr.markushelbig.org/JGR.html&lt;/ref&gt; is available for Linux, Mac and Windows ([http://www.rforge.net/JGR/screenshots.html screenshots]). 
* It is good for beginners.

==== R commander ====

* '''[[w:R Commander|Rcommander]]'''&lt;ref&gt;http://socserv.mcmaster.ca/jfox/Misc/Rcmdr/&lt;/ref&gt; developed  by John Fox provides a menu in the standard Graphical User Interface ([http://socserv.mcmaster.ca/jfox/Misc/Rcmdr/Rcmdr-screenshot.html screenshots]). 
* It works on Linux, Mac and Windows. 
* It is a good interface for beginners and for people who are not used to script editing.

&lt;source lang = &quot;rsplus&quot;&gt;
&gt; install.packages(&quot;Rcmdr&quot;) # installation
&gt; library(&quot;Rcmdr&quot;) # usage
&lt;/source&gt;

* Ubuntu users can also install R Commander from the software center.


=== Integrated development environment ===

==== RStudio ====
[[File:Rstudio.png|thumb|upright=1.5|RStudio on Ubuntu 12.10.]]
[http://www.rstudio.com/ RStudio] is an integrated development interface for R&lt;ref name = &quot;rstudio&quot;&gt;[http://www.rstudio.org/ rstudio.org]&lt;/ref&gt;.  
* It works on Mac, Windows and Linux platforms. 
* It supports [[R_Programming/Publication_Quality_Ouput#Sweave|Sweave]] and [[LaTeX]]. 
* It includes syntax highlighting for R, LaTeX and Sweave.
* It includes a way to view variables and dataframes.
* It makes it easy to load and install package, to navigate in the help files and to manage your workspace.
* It supports code and file name completion.
* It can be installed on a USB stick.
John Verzani has written a book dedicated to this new interface, ''Getting Started with RStudio''&lt;ref name = &quot;verzani&quot;&gt;John Verzani &quot;Getting Started with RStudio
An Integrated Development Environment for R&quot;, O'Reilly Media, September 2011&lt;/ref&gt; and Jeffrey Racine recommand RStudio for Sweave&lt;ref&gt;Jeffrey Racine, (forthcoming), &quot;RStudio: A Platform Independent IDE for R and Sweave,&quot; Journal of Applied Econometrics.&lt;/ref&gt;.

==== RKward ====

[[w:RKward|RKward]] is an IDE and a GUI for Linux (KDE) ([http://sourceforge.net/apps/mediawiki/rkward/index.php?title=Screenshots Screenshots]). RKWard aims to provide an easily extensible, easy to use IDE/GUI for R. RKWard tries to combine the power of the R-language with the (relative) ease of use of commercial statistics tools.

==== Eclipse with StatET ====

[[w:Eclipse (software)|Eclipse]] with the StatET plugin&lt;ref name = &quot;statet&quot;&gt;StatET : http://www.walware.de/goto/statet&lt;/ref&gt; provides an IDE for R. 
* It supports Sweave.

==== Rattle GUI ====

* '''[[w:Rattle GUI|Rattle]]'''&lt;ref&gt;Rattle : http://rattle.togaware.com/&lt;/ref&gt; for Linux, Windows and Mac ([http://rattle.togaware.com/rattle-screenshots.html screenshots])&lt;ref&gt;Graham J Williams. Rattle: A Data Mining GUI for R. The R Journal, 1(2):45-55, December 2009&lt;/ref&gt;.

==== Tinn R ====

* For Windows only
* Tinn R&lt;ref&gt;Tinn stands for ''Tinn Is Not Notepad'' http://www.sciviews.org/Tinn-R/&lt;/ref&gt; is a good IDE for Windows users. One can easily define keyboard shortcuts to execute selected R code from Tinn R.

==== Notepad++ and NpptoR ====


* For Windows only.

[[w:Notepad++|Notepad++]]&lt;ref&gt;Note that Notepad++ can be installed on a USB stick http://sourceforge.net/projects/notepadpluspe/&lt;/ref&gt; and NPPtoR&lt;ref&gt;NPPtoR is also a portable software http://sourceforge.net/projects/npptor/&lt;/ref&gt; provides syntax highlighting and hotkeys (by default F8) to send lines of code to R. Syntax highlighting can be easily modified using the dialog box to manage user define languages ('''Menu/View/Use Define Dialog...'''). NPPtoR provides a method to generate syntax highlighting dynamically (depending on all the available packages in the R environment).

==== Vi, Vim and GVim ====

{{Wikipedia|Vim}}{{Wikibooks|Learning the vi Editor}}

* Vim and GVim provides syntax highlighting
* Vim is for advanced users only
* The [http://www.vim.org/scripts/script.php?script_id=2628 Vim-R-plugin] allows the communication between Vim and R

==== Emacs and ESS ====

{{Wikibooks|Emacs}}
{{Wikipedia|Emacs}}
{{Wikipedia|Emacs Speaks Statistics}}
 
* Emacs with ESS (Emacs Speaks Statistics)&lt;ref&gt;ESS : http://ess.r-project.org/&lt;/ref&gt;. 
* Emacs is for advanced users only.

* For Linux users, you just have to install emacs and ESS using your standard package manager (synaptic, aptitude, yum, etc)
* For Mac and Windows user, you can have a look at Vincent Goulet's page which has binary with Emacs and ESS&lt;ref&gt; Vincent Goulet Emacs page http://vgoulet.act.ulaval.ca/emacs&lt;/ref&gt;.
* For Mac users, Aquamacs Emacs is a good solution. It is an enhancement of the standard Emacs editor.
* For Windows users, XEmacs is a good solution.


* Once the installation of Emacs and ESS is done, you just have to open Emacs and open or create a file with extension '''.R''' (C-x C-f). ESS will be automatically loaded. 
** C-c M-j evaluates the current line
** C-c M-r evaluates the current region
** C-c M-b evaluates the current buffer 

* See John Fox webpage http://web.archive.org/web/20050516104010/http://socserv.mcmaster.ca/jfox/Books/Companion/ESS/ess-xemacs.pdf to learn about Emacs and ESS

==== WinEdt ====

* ''How to use R for Windows with the RWinEdt extension ?'' by Andy Eggers&lt;ref&gt;http://www.people.fas.harvard.edu/~aeggers/RWinEdt_installation.pdf&lt;/ref&gt;
* WinEdt is not open source
* WinEdt is for Windows only.
* Install the '''RWinEdt''' package.

==== gedit with gedit-r-plugin ====

* For Linux users only.
* There is also a plugin for '''gedit''' called '''gedit-r-plugin'''. This can be installed using Synaptic or any other package manager on a linux platform.

== Customizing R ==

=== R profile ===

R can be customized using the Rprofile file. 
On Linux, this file is stored in the home directory. You can edit it by running the following command in a terminal :
&lt;pre&gt;
$ gedit ~/.Rprofile
&lt;/pre&gt;

If you use some packages very often, you can load them systematically using the Rprofile file. You can also change the default options.

=== Options ===

The function &lt;code&gt;options()&lt;/code&gt; without any argument show all options

&lt;source lang = &quot;rsplus&quot;&gt;
&gt; options()
&lt;/source&gt;

The linguistic and encoding options can be modified using &lt;code&gt;Sys.setlocale()&lt;/code&gt; :
&lt;source lang = &quot;rsplus&quot;&gt;
&gt; Sys.setlocale()
[1] &quot;fr_FR.UTF-8/fr_FR.UTF-8/fr_FR.UTF-8/C/fr_FR.UTF-8/en_US.UTF-8&quot;
&lt;/source&gt;

By default, error messages are in the local language. However, it is possible to set them in English using &lt;code&gt;Sys.sentev()&lt;/code&gt;

&lt;source lang = &quot;rsplus&quot;&gt;
Sys.setenv(LANGUAGE='en')
&lt;/source&gt;

== References ==
{{reflist|2}}

{{R Programming/Navbar|Data types|Packages}}
[[de:GNU R: Installation]]
[[pt:R (linguagem de programação)/Instalação]]</text>
      <sha1>dmyp6t2fk990lukh5pkd3zk13apekky</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Random Variables</title>
    <ns>0</ns>
    <id>200341</id>
    <redirect title="R Programming/Probability Distributions" />
    <revision>
      <id>2093270</id>
      <parentid>1564645</parentid>
      <timestamp>2011-05-07T12:00:50Z</timestamp>
      <contributor>
        <username>JackBot</username>
        <id>396820</id>
      </contributor>
      <minor />
      <comment>Bot: Fixing double redirect to [[R Programming/Probability Distributions]]</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Probability Distributions]]</text>
      <sha1>d1ex02327sdyah0mpvhxwdwgkto6wh5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Random Number Generation</title>
    <ns>0</ns>
    <id>200342</id>
    <revision>
      <id>2213476</id>
      <parentid>2201503</parentid>
      <timestamp>2011-11-17T23:47:37Z</timestamp>
      <contributor>
        <username>Dcljr</username>
        <id>2099</id>
      </contributor>
      <comment>/* References */ bypass redirect</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

== Random Number Generators ==

To a very high degree computers are deterministic and therefore are not a reliable [[:w:/dev/random|source of significant amounts of random values]].  In general [[:w:Pseudorandom_number_generator|pseudo random number generators]] are used.
The default algorithm in R is [[:w:Mersenne twister|Mersenne-Twister]] but a long list of methods is available. See the help of RNGkind() to learn about random number generators.

&lt;pre&gt;
?RNGkind
&lt;/pre&gt;

It is possible to use true random numbers. Some of them are collected on ''random.org'' ([http://www.random.org/ link]). The '''random''' ([http://dirk.eddelbuettel.com/code/random.html link]) package gives an access to them.

=== Randu ===

Randu is an old linear congruential pseudorandom number generator. 
There is a dataset generated with Randu in the '''datasets''' package. The function which is used to generate the dataset is in the help of this page. 
&lt;pre width=80&gt;
library(&quot;datasets&quot;)
?randu
&lt;/pre&gt;

== Seed ==

A pseudo random number generator is an algorithm based on a starting point called &quot;seed&quot;. If you want to perform an exact replication of your program, you have to specify the seed using the function set.seed(). The argument of set.seed has to be an integer.

&lt;pre&gt;
&gt; set.seed(1)
&gt; runif(1)
[1] 0.2655087
&gt; set.seed(1)
&gt; runif(1)
[1] 0.2655087
&lt;/pre&gt; 

== Sampling in a vector ==

Toss 10 coins 
&lt;pre&gt;
&gt; sample(0:1,10,replace=T)
 [1] 1 0 0 0 1 0 0 1 1 1
&lt;/pre&gt;
Roll 10 dice
&lt;pre&gt;
&gt; sample(1:6,10,replace=T)
 [1] 4 1 5 3 2 5 5 6 3 2
&lt;/pre&gt;
play lottery (6 random numbers out of 49 without replacement)
&lt;pre&gt;
&gt; sample(1:49,6,replace=F)
[1] 18 35 29  1 33 11
&lt;/pre&gt;


You can sample in a multinomial distribution : 
&lt;pre&gt;
&gt;mydat &lt;- sample(1:4,1000,rep=TRUE,prob=c(.2,.3,.2,.3))
&gt;table(mydat)
&lt;/pre&gt;

== Sampling in a standard univariate distribution ==

You can use rnorm, rt, etc. 

=== Misspecified argument ===

Note that if you put as argument of rnorm a vector instead of a number, R takes by default the length of the vector instead of returning an error. Here is an example : 

&lt;pre&gt;
x &lt;- rnorm(10) # Sample a normal random vector
set.seed(1) # use the seed
z &lt;- rnorm(x) # put a vector instead of a number as an argument of rnorm
set.seed(1) # initalize the seed again
z2 &lt;- rnorm(length(x)) # sample in a vector with the same length as x
plot(z2,z) # check that z and z2 are the same
&lt;/pre&gt;

== Inverse CDF method ==

* If you know the inverse CDF (quantile function), you can generate the random variable by sampling in the standard uniform distribution and transforming using the CDF.

For instance, if you want to simulate from a standard normal distribution, you can simulate from a standard uniform and transform it using the quantile function of the normal distribution. 

&lt;pre width = 80&gt;
N &lt;- 100
qnorm(runif(N))
&lt;/pre&gt;

This gives the same results as the &lt;tt&gt;rnorm()&lt;/tt&gt; function but the computing time is higher : 

&lt;pre width = 80&gt;
&gt; N &lt;- 10^7
&gt; system.time(qnorm(runif(N)))
   user  system elapsed 
   1.67    0.00    1.70 
&gt; system.time(rnorm(N)) 
   user  system elapsed 
   1.50    0.00    1.51 
&lt;/pre&gt;

== Importance sampling ==

* See Jeff Gill's [http://artsci.wustl.edu/~jgill/papers/sir4.txt routine]

== Metropolis algorithm ==

== Gibbs algorithm ==

* '''rgs''' package ([http://code.google.com/p/rgs-package/ link])

== Quasi random numbers ==

* [http://bm2.genes.nig.ac.jp/RGM2/R_current/library/randtoolbox/man/quasiRNG.html quasi RNG]

Sometimes you need to generate [http://mathworld.wolfram.com/QuasirandomSequence.html quasi random sequences]. The '''randtoolbox''' library provides several quasi random number generators. 

See also &lt;tt&gt;sHalton()&lt;/tt&gt; and &lt;tt&gt;QUnif()&lt;/tt&gt; ('''sfsmisc''').

* [[Wikipedia | Halton Sequence]] 

&lt;pre width=80&gt;
&gt; library(randtoolbox)
&gt; halton(10, dim = 2, init = TRUE, normal = FALSE, usetime = FALSE)
        [,1]       [,2]
 [1,] 0.5000 0.33333333
 [2,] 0.2500 0.66666667
 [3,] 0.7500 0.11111111
 [4,] 0.1250 0.44444444
 [5,] 0.6250 0.77777778
 [6,] 0.3750 0.22222222
 [7,] 0.8750 0.55555556
 [8,] 0.0625 0.88888889
 [9,] 0.5625 0.03703704
[10,] 0.3125 0.37037037
&lt;/pre&gt;

You can compare Halton draws with the standard R (pseudo) random number generator. 
Halton draws are much more systematic.

&lt;pre width = 80&gt;
&gt;random &lt;- cbind(runif(1000),runif(1000))
&gt;halton &lt;- halton(1000, dim = 2, init = TRUE, normal = FALSE, usetime = FALSE)
&gt;par(mfrow=c(2,2))
&gt;plot(halton[,1],halton[,2])
&gt;plot(random[,1],random[,2])
&lt;/pre&gt;

=== Examples ===

&lt;gallery&gt;
File:Halton sequence 2D.svg
File:Hammersley set 2D.svg
&lt;/gallery&gt;

== Resources ==

* [http://blog.revolution-computing.com/2009/02/how-to-choose-a-random-number-in-r.html Revolution Computing entry on pseudo random numbers]
* [http://www.wessa.net/distributions.wasp Statistical Distributions Module Wessa.net] it is online application which generates random numbers using R. You can have access to the R code and use it in your own programs.

== References ==

{{reflist}}


{{R Programming/Navbar|Probability Distributions|Control Structures}}</text>
      <sha1>fm6wc1mp6cvkc3s8l8uj34w6r93u1tw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Duration Analysis</title>
    <ns>0</ns>
    <id>200344</id>
    <revision>
      <id>2018602</id>
      <parentid>1784230</parentid>
      <timestamp>2011-01-17T16:15:22Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>stub</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

{{...}}

* [http://www.math.unm.edu/~bedrick/PIBBS/Rsurv.pdf Using R for Survival Analysis (pdf)]
* See the '''survival''' package
* &lt;tt&gt;bootkm()&lt;/tt&gt; Bootstrap Kaplan-Meier Estimates in '''Hmisc''' package
* &lt;tt&gt;event.chart()&lt;/tt&gt; Flexible Event Chart for Time-to-Event Data in the '''Hmisc''' package



== References ==

{{reflist}}


{{R Programming/Navbar|Count Data Models|Time Series}}</text>
      <sha1>eham4btnrjbjzfq8jkgzzuc4nowqxm1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Nonparametric Methods</title>
    <ns>0</ns>
    <id>200346</id>
    <revision>
      <id>2213501</id>
      <parentid>2213491</parentid>
      <timestamp>2011-11-18T00:10:52Z</timestamp>
      <contributor>
        <username>Dcljr</username>
        <id>2099</id>
      </contributor>
      <comment>/* Histogram */ reign in very long comments</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

This page deals with a set of [http://en.wikipedia.org/wiki/Non-parametric_statistics non-parametric methods] including the estimation of a cumulative distribution function (CDF), the estimation of probability density function (PDF) with histograms and kernel methods and the estimation of flexible regression models such as local regressions and generalized additive models. 

For an introduction to nonparametric methods you can have a look at the following books or handout : 
* ''Nonparametric Econometrics: A Primer'' by Jeffrey S. Racine&lt;ref name=&quot;primer&quot;&gt;Jeffrey S. Racine ''Nonparametric Econometrics: A Primer'' http://socserv.mcmaster.ca/racine/ECO0301.pdf and at the R code examples http://socserv.mcmaster.ca/racine/primer_code.zip&lt;/ref&gt;. 
* Li and Racine's handbook, ''Nonparametric econometrics''&lt;ref name =&quot;liracine&quot;&gt;Qi Li, Jeffrey S. Racine, ''Nonparametric econometrics'', Princeton University Press - 2007&lt;/ref&gt;.
* Larry Wasserman ''All of Nonparamatric Statistics''&lt;ref name = &quot;wasserman&quot;&gt;Wasserman, Larry, &quot;All of nonparametric statistics&quot;, Springer (2007) (ISBN: 0387251456)&lt;/ref&gt;

== Empirical distribution function ==
* The easiest way to estimate the empirical CDF uses the &lt;tt&gt;rank()&lt;/tt&gt; and the &lt;tt&gt;length()&lt;/tt&gt; functions.
* &lt;tt&gt;ecdf()&lt;/tt&gt; computes the empirical cumulative distribution function. 
* &lt;tt&gt;ecdf.ksCI()&lt;/tt&gt; ('''sfsmisc''') plots the empirical distribution function with confidence intervals.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 1000
&gt; x &lt;- rnorm(N)
&gt; edf &lt;- rank(x)/length(x)
&gt; plot(x,edf)
&gt; plot(ecdf(x),xlab = &quot;x&quot;,ylab = &quot;Distribution of x&quot;)
&gt; grid()
&gt; library(&quot;sfsmisc&quot;)
&gt; ecdf.ksCI(x1)
&lt;/source&gt;


== Density Estimation ==

=== Histogram ===

* &lt;tt&gt;hist()&lt;/tt&gt; is the standard function for drawing histograms. If you store the histogram as an object the estimated parameters are returned in this object. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; x &lt;- rnorm(1000)
&gt; hist(x, probability = T) # The default uses Sturges method.
&gt; # Sturges, H. A. (1926) The choice of a class interval.
&gt; # Journal of the American Statistical Association 21, 65–66. 
&gt; hist(x, breaks = &quot;Sturges&quot;, probability = T)
&gt; 
&gt; # Freedman, D. and Diaconis, P. (1981) On the histogram as a density estimator: L_2 theory.
&gt; # Zeitschrift für Wahrscheinlichkeitstheorie und verwandte Gebiete 57, 453–476. 
&gt; # (n^1/3 * range)/(2 * IQR).
&gt; hist(x, breaks = &quot;FD&quot;, probability = T)
&gt; 
&gt; # Scott, D. W. (1979). On optimal and data-based histograms. Biometrika, 66, 605–610. 
&gt; # ceiling[n^1/3 * range/(3.5 * s)].
&gt; hist(x, breaks = &quot;scott&quot;, probability = T)
&gt; 
&gt; # Wand, M. P. (1995). Data-based choice of histogram binwidth.
&gt; # The American Statistician, 51, 59–64. 
&gt; library(&quot;KernSmooth&quot;)
&gt; h &lt;- dpih(x)
&gt; bins &lt;- seq(min(x)-h, max(x)+h, by=h)
&gt; hist(x, breaks=bins, probability = T)
&lt;/source&gt;

It is also possible to choose the break points. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; x &lt;- rnorm(1000)
&gt; hist(x, breaks = seq(-4,4,.1))
&lt;/source&gt;

* &lt;tt&gt;n.bins()&lt;/tt&gt; ('''car''' package) includes several methods to compute the number of bins for an histogram.
* &lt;tt&gt;histogram()&lt;/tt&gt; ('''lattice''')
* &lt;tt&gt;truehist()&lt;/tt&gt; ('''MASS''')
* &lt;tt&gt;hist.scott()&lt;/tt&gt; ('''MASS''') plot a histogram with automatic bin width selection, using the Scott or Freedman–Diaconis formulae. 
* '''histogram''' package.

=== Kernel Density Estimation ===
* &lt;tt&gt;density()&lt;/tt&gt; estimates the [http://en.wikipedia.org/wiki/Kernel_Density_Estimation kernel density] of a vector. 
** Choose the bandwidth selection method with &lt;tt&gt;bw&lt;/tt&gt;.
** Check the sensitivity of the bandwidth choice using &lt;tt&gt;adjust&lt;/tt&gt;. The default is one. It is good practice to look at &lt;tt&gt;adjust=.5&lt;/tt&gt; and &lt;tt&gt;adjust=2&lt;/tt&gt;.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; x &lt;- rnorm(10^3)
&gt; plot(density(x,bw = &quot;nrd0&quot;, adjust = 1, kernel = &quot;gaussian&quot;), col = 1)
&gt; lines(density(x,bw = &quot;nrd0&quot;, adjust = .5, kernel = &quot;gaussian&quot;), col = 2)
&gt; lines(density(x,bw = &quot;nrd0&quot;, adjust = 2, kernel = &quot;gaussian&quot;), col = 3)
&gt; legend(&quot;topright&quot;, legend = c(&quot;adjust = 1&quot;, &quot;adjust = .5&quot;, &quot;adjust = 2&quot;), col = 1:3, lty = 1)
&lt;/source&gt;
** Choose the kernel function with &lt;tt&gt;kernel&lt;/tt&gt; : &quot;gaussian&quot;, &quot;epanechnikov&quot;, &quot;rectangular&quot;, &quot;triangular&quot;, &quot;biweight&quot;, &quot;cosine&quot;, &quot;optcosine&quot;.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; x &lt;- rnorm(10^3)
&gt; plot(density(x,bw = &quot;nrd0&quot;, adjust = 1, kernel = &quot;gaussian&quot;), col = 1)
&gt; lines(density(x,bw = &quot;nrd0&quot;, adjust = 1, kernel = &quot;epanechnikov&quot;), col = 2)
&gt; lines(density(x,bw = &quot;nrd0&quot;, adjust = 1, kernel = &quot;rectangular&quot;), col = 3)
&gt; lines(density(x,bw = &quot;nrd0&quot;, adjust = 1, kernel = &quot;triangular&quot;), col = 3)
&gt; legend(&quot;topright&quot;, legend = c(&quot;gaussian&quot;, &quot;epanechnikov&quot;, &quot;rectangular&quot;,  &quot;triangular&quot;), col = 1:4, lty = 1)
&lt;/source&gt;

* &lt;tt&gt;tkdensity()&lt;/tt&gt; ('''sfsmisc''') is a nice function which allow to dynamically choose the kernel and the bandwith with a handy graphical user interface. This is a good way to check the sensitivity of the bandwidth and/or kernel choice on the density estimation.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; x  &lt;- rnorm(10^3)
&gt; library(&quot;sfsmisc&quot;)
&gt; tkdensity(x)
&lt;/source&gt;
* &lt;tt&gt;kde2d()&lt;/tt&gt; ('''MASS''') estimates a bivariate kernel density.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 1000
&gt; x &lt;- rnorm(N)
&gt; y &lt;- 1 + x^2 + rnorm(N)
&gt; dd &lt;-  kde2d(y,x) # estimate the bivariate kernel
&gt; contour(dd) # plot the bivariate density
&gt; image(dd) # another plot the bivariate density
&lt;/source&gt;

==== Examples ====

&lt;gallery&gt;
File:Kernel density.svg
File:R-horsekick totals-density.svg
File:R-US state areas-density.svg
&lt;/gallery&gt;

== Local Regression ==

* &lt;tt&gt;loess()&lt;/tt&gt; is the standard function for local linear regression.
* &lt;tt&gt;lowess()&lt;/tt&gt; is similar to &lt;tt&gt;loess()&lt;/tt&gt; but does not has a standard syntax for regression &lt;code&gt; y ~ x  &lt;/code&gt;.This is the ancestor of loess (with different defaults!).
* &lt;tt&gt;ksmooth()&lt;/tt&gt; ('''stats''') computes the Nadaraya–Watson kernel regression estimate. 
* &lt;tt&gt;locpoly()&lt;/tt&gt; ('''KernSmooth''' package)
* &lt;tt&gt;npreg()&lt;/tt&gt; ('''np''' package)
* '''locpol''' computes local polynomial estimators
* '''locfit''' local regression, likelihood and density estimation


=== Examples === 

&lt;gallery&gt;
Image:NW cb16.png
&lt;/gallery&gt;


== Generalized additive semiparametric models (GAM) ==

* &lt;tt&gt;gam()&lt;/tt&gt; ('''gam''')
* &lt;tt&gt;gam()&lt;/tt&gt; ('''mgcv''')

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 10^3
&gt; u &lt;- rnorm(N)
&gt; x1 &lt;- rnorm(N)
&gt; x2 &lt;- rnorm(N) + x1
&gt; y &lt;- 1 + x1^2 + x2^3 + u
&gt; 
&gt; library(gam)
&gt; g1 &lt;- gam(y ~ x1 + x2 ) # Standard linear model
&gt; par(mfrow=c(1,2))
&gt; plot(g1, se = T)
&gt; 
&gt; g1 &lt;- gam(y ~ s(x1) + x2 ) # x1 is locally estimated
&gt; par(mfrow=c(1,2))
&gt; plot(g1, se = T)
&gt; 
&gt; g1 &lt;- gam(y ~ s(x1) + s(x2) ) # x1 and x2 are locally estimated
&gt; par(mfrow=c(1,2))
&gt; plot(g1, se = T)
&gt; 
&gt; library(mgcv)
&gt; g1 &lt;- gam(y ~ s(x1) + s(x2) ) # x1 and x2 are locally estimated
&gt; par(mfrow=c(1,2))
&gt; plot(g1, se = T)
&lt;/source&gt;


== References ==

{{reflist}}


{{R Programming/Navbar|Bootstrap|Quantile Regression}}</text>
      <sha1>29e32ytumqpku5umnskunkwwy8uux4b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Quantile Regression</title>
    <ns>0</ns>
    <id>200347</id>
    <revision>
      <id>2704652</id>
      <parentid>2485148</parentid>
      <timestamp>2014-09-27T18:05:35Z</timestamp>
      <contributor>
        <username>EigenFellow</username>
        <id>692725</id>
      </contributor>
      <minor />
      <comment>Correct code to include creation of the standard linear model</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;
{{...}}
[[w:Quantile regression|Quantile regression]] is a very old method which has become popular only in the last years thanks to computing progress. One of the main researcher in this area is also a R practitioner and has developped a specific package for quantile regressions ('''quantreg''')&lt;ref&gt;Roger Koenker (2010). quantreg: Quantile Regression. R package version 4.50. http://CRAN.R-project.org/package=quantreg&lt;/ref&gt;{{,}}&lt;ref&gt;[http://www.econ.uiuc.edu/~roger/research/rq/rq.html Roger Koenker's personal webpage]&lt;/ref&gt;.

In theory, Quantile regression are also linear and thus could have been included in the Linear regression page. However, this is a very specific topic and we think that it is worth writing a specific page for this topic.

== Simple quantile model ==
We simulate from a simple quantile model. We first generate a uniform error term u and a covariate x. 
&lt;source lang=&quot;rsplus&quot;&gt;
N &lt;- 10^3
u &lt;- runif(N)
x &lt;- 1 + rnorm(N)
y &lt;- qnorm(u, mean = 0, sd = 2) + qnorm(u, mean = 1, sd = 1) * x
&lt;/source&gt;

We estimate the quantile model for some values of tau (the quantile) and plot the coefficients : 
&lt;source lang=&quot;rsplus&quot;&gt;
q1 &lt;- rq(y ~ x, tau = seq(.1,.9,.1))
summary(q1)
plot(q1)
&lt;/source&gt;

We then plot the scatterplot, the predicted values using a standard linear model and the predicted values using a quantile linear model : 

&lt;source lang=&quot;rsplus&quot;&gt;
plot(x,y, col = &quot;grey&quot;)
m1 &lt;- lm(y ~ x)
abline(m1, col = &quot;red&quot;)
taus &lt;- seq(.1,.9,.1)
for (i in 1:length(taus)){
	abline(rq(y ~ x, tau = taus[i]), col = &quot;blue&quot;)
	}
grid()
&lt;/source&gt;

We can also estimate the model for all quantiles in the same time : 
&lt;source lang=&quot;rsplus&quot;&gt;
q2 &lt;- rq(y ~ x, tau = -1)
plot(q2, nrow = 2, ncol = 1)
&lt;/source&gt;

=== Computing time ===

For large data sets it is better to use the &quot;fn&quot; or &quot;pfn&quot; method. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; N &lt;- 10^5
&gt; u &lt;- runif(N)
&gt; x &lt;- 1 + rnorm(N)
&gt; y &lt;- qnorm(u, mean = 0, sd = 2) + qnorm(u, mean = 1, sd = 1) * x
&gt; system.time(rq(y ~ x, tau = .5, method = &quot;br&quot;))
   user  system elapsed 
   1.48    0.00    1.48 
&gt; system.time(rq(y ~ x, tau = .5, method = &quot;fn&quot;))
   user  system elapsed 
   0.60    0.00    0.61 
&gt; system.time(rq(y ~ x, tau = .5, method = &quot;pfn&quot;)) 
   user  system elapsed 
   0.30    0.00    0.29 
&lt;/source&gt;

== Resources ==
* Koenker, Roger (2005) ''Quantile Regression'', Cambridge University Press. ISBN 0-521-60827-9

== References ==
{{reflist}}

{{R Programming/Navbar|Nonparametric Methods|Binomial Models}}</text>
      <sha1>h6lodwn4wz9epqdc7ym6udoi216jcoj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Factor Analysis</title>
    <ns>0</ns>
    <id>200348</id>
    <revision>
      <id>2679297</id>
      <parentid>2678640</parentid>
      <timestamp>2014-07-07T07:21:13Z</timestamp>
      <contributor>
        <username>Fishpi</username>
        <id>366400</id>
      </contributor>
      <comment>Proper link to wikipedia</comment>
      <text xml:space="preserve">{{Wikipedia|Factor analysis}}
&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

== Introduction ==

[[Wikipedia|Factor analysis]] is a set of techniques to reduce the dimensionality of the data. The goal is to describe the dataset with a smaller number of variables (ie underlying factors). Factor Analysis was developed in the early part of the 20th century by L.L. Thurstone and others.  Correspondence analysis was originally developed by [[w:Jean-Paul_Benzécri|Jean-Paul Benzécri]] in the 60's and the 70's. Factor analysis is mainly used in marketing, sociology and psychology. It is also known as '''data mining''', '''multivariate data analysis''' or '''exploratory data analysis'''.

There are three main methods. ''Principal Component Analysis'' deals with continuous variables. ''Correspondence Analysis'' deals with a contingency table (two qualitative variables) and ''Multiple correspondence analysis'' is a generalization of the correspondence analysis with more than two qualitative variables.
The major difference between Factor Analysis and Principal Components Analysis is that in FA, only the variance which is common to multiple variables is analysed, while in PCA, all of the variance is analysed.
Factor Analysis is a difficult procedure to use properly, and is often misapplied in the psychological literature. One of the major issues in FA (and PCA) is the number of factors to extract from the data. Incorrect numbers of factors can cause difficulties with the interpretation and analysis of the data.

There are a number of techniques which can be applied to assess how many factors to extract. The two most useful are parallel analysis and the minimum average partial criterion. Parallel analysis works by simulating a matrix of the same rank as the data and extracting eigenvalues from the simulated data set. The point at which the simulated eigenvalues are greater than those of the data is the point at which the &quot;correct&quot; number of factors have been extracted. The Minimum Average Partial criterion uses a different approach but can often be more accurate. Simulation studies have established these two methods as the most accurate. Both of these methods are available in the &lt;tt&gt;psych&lt;tt&gt; package under the &lt;tt&gt;fa.parallel&lt;tt&gt; and the &lt;tt&gt;VSS&lt;tt&gt; commands.

Another issue in factor analysis is which rotation (if any) to choose. Essentially, the rotations transform the scores such that they are more easily interpretable. There are two major classes of rotations, orthogonal and oblique. Orthogonal rotations assume that the factors are uncorrelated, while oblique rotations allow the factors to correlate (but do not force this). Oblique rotations are recommended by some (e.g. MacCallum et al 1999) as an orthogonal solution can be obtained from an oblique rotation, but not vice versa. 

One of the issues surrounding factor analysis is that there are an infinite number of rotations which explain the same amount of variance, so it can be difficult to assess which model is correct. In response to such concerns, Structural Equation Modelling (SEM), which is also known as Confirmatory Factor Analysis (CFA) was developed by Joreskeg in the 1970's. The essential principle of SEM is that given a model, it attempts to reproduce the observed covariance matrix seen in the data. The ability of a model to reproduce the data can be used as a test of that model's truth. SEM is implemented in R in the &lt;tt&gt;sem&lt;tt&gt; and &lt;tt&gt;lavaan&lt;tt&gt; packages, as well as the OpenMx package (which is not available on CRAN). 

See the  following packages : '''FactoMineR''' ([http://factominer.free.fr/index.html website]), '''amap''', '''ade4''', '''anacor''', '''vegan''', '&quot;psych&quot;'

== Principal Component Analysis (PCA)==

PCA deals with continuous variables

* &lt;tt&gt;prcomp()&lt;/tt&gt; in the '''stats''' package.
* &lt;tt&gt;princomp()&lt;/tt&gt; in the '''stats''' package.
* &lt;tt&gt;PCA()&lt;/tt&gt; ('''FactoMineR''')
* See also &lt;tt&gt;factanal()&lt;/tt&gt;
* See also &lt;tt&gt;fa&lt;tt&gt; and &lt;tt&gt;prcomp&lt;tt&gt; in the '''psych''' package
&lt;source lang=&quot;rsplus&quot;&gt;
N &lt;- 1000
factor1 &lt;- rnorm(N)
factor2 &lt;- rnorm(N) 
x1 &lt;- rnorm(N) + factor1
x2 &lt;- rnorm(N) + factor1
x3 &lt;- rnorm(N) + factor2 
x4 &lt;- rnorm(N) + factor2
mydat &lt;- data.frame(x1,x2,x3,x4)
pca &lt;- prcomp(mydat)
names(pca)
plot(pca) # plot the eigenvalues
biplot(pca) # A two dimensional plot

pca2 &lt;- princomp(mydat)
biplot(pca2)

pca2 &lt;- princomp(~ x1 + x2 + x3 + x4, data = mydat) # princomp with a formula syntax
&lt;/source&gt;


== Correspondence Analysis (CA) ==

Correspondence analysis is a tool for analyzing contingency tables.

* &lt;tt&gt;corresp()&lt;/tt&gt; '''MASS'''
* Michael Greenacre's '''ca''' package ([http://www.jstatsoft.org/v20/i03/paper JSS article])
* Correspondence Analysis and Related Network ([http://www.carme-n.org/ link])
* Quick-R's page ([http://www.statmethods.net/advstats/ca.html link])
* Simple and Canonical Correspondence Analysis Using the R Package '''anacor''' ([http://cran.r-project.org/web/packages/anacor/vignettes/anacor.pdf pdf], [http://www.jstatsoft.org/v31/i05 JSS article])
* '''multiv'''

== Multiple Correspondence Analysis (MCA) ==
{{...}}
{{Wikipedia|Multiple correspondence analysis}}

== References ==

{{reflist}}


{{R Programming/Navbar|Time Series|Network Analysis}}</text>
      <sha1>cabsz5zrw56xhi8gx1pbcmaxgroitsz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Network Analysis</title>
    <ns>0</ns>
    <id>200349</id>
    <revision>
      <id>2425027</id>
      <parentid>2425026</parentid>
      <timestamp>2012-10-23T05:01:34Z</timestamp>
      <contributor>
        <username>Gibravo</username>
        <id>749930</id>
      </contributor>
      <comment>/* Creating graph from an adjacency matrix */</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;
{{Wikipedia|Social network}}

{{...}}
==Introduction==
We mainly use following packages to demontrate network analysis in R: '''statnet''', '''sna''', '''igraph'''. They are however not representing a complete list. See [http://cran.r-project.org/web/views/gR.html Task view of ''gR'', graphical models in R] for a complete list.

==Creating simple graphs with igraph==

&lt;source lang=&quot;rsplus&quot;&gt; 
&gt; # load the appropriate library
&gt; library(igraph)
&gt; # now create a few simple graphs
&gt; g &lt;- graph.empty(10,directed=FALSE)
&gt; g2 &lt;- graph.ring(10,directed=TRUE)
&gt; g3 &lt;- graph.full(10,directed=FALSE)
&gt; # now get information about these graphs
&gt; summary(g)
&lt;/source&gt;

==Creating graphs from data==

First load the igraph package
&lt;source lang=&quot;rsplus&quot;&gt;
library(igraph)
&lt;/source&gt;
then you can choose your preferred format. Below are examples of data provided as edge list and as adjacency matrix. 

=== Creating graph from an edge list ===

An edge list is formed by a two-column matrix, with each row defining one edge. An edge is drawn from each element in the first column to the corresponding element in the second one.
Use the &lt;code&gt; graph.edgelist() &lt;/code&gt; function to import your data.

&lt;source lang=&quot;rsplus&quot;&gt; 
# producing some random data in edge list form
el &lt;- cbind(sample(1:10, 10), sample(1:10, 10))

# creating and plottig the graph from the edge list
gr &lt;- graph.edgelist(el)
plot(gr)	
&lt;/source&gt;

=== Creating graph from an adjacency matrix ===

An adjacency matrix is a ''n'' × ''n'' matrix containing ''n'' vertices and where each entry ''a&lt;sub&gt;ij&lt;/sub&gt;'' represents the number of edges from vertex ''i'' to vertex ''j''. To import your adjacency matrix, use the &lt;code&gt; graph.adjacency()  &lt;/code&gt; function.

&lt;source lang=&quot;rsplus&quot;&gt; 
# producing a random adjacency matrix
adj &lt;- matrix(sample(0:1, 100, replace=T), 10, 10)

# creating and plottig the graph from the adjacency matrix
gr &lt;- graph.adjacency(adj)
plot(gr)
&lt;/source&gt;

== References ==
* [http://csde.washington.edu/statnet/ Statnet website ] includes all the documentation on network analysis using R.
* [http://alea.fr.eu.org/j/reseaux_R.html Julien Barnier's introduction (in French)]
* [http://www.jstatsoft.org/v24 Journal of Statistical Software #24 Special Issue on Networks in R]

{{reflist}}

{{R Programming/Navbar|Factor Analysis|}}</text>
      <sha1>4ar5h30zfq5c7rh6i47607ykw9n7dl6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Embedded Control Systems Design/Coördination Modelling</title>
    <ns>0</ns>
    <id>200350</id>
    <revision>
      <id>2065383</id>
      <parentid>1547995</parentid>
      <timestamp>2011-03-06T02:04:59Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: instantanious → instantaneous, visa versa → vice versa, eachother → each other, occurence → occurrence, occurance → occurrence (2), seperate → separate (2), transistion → using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">= Coördination Modelling =

== Model Representation ==

The coordination of a system can be modeled as a discrete-event system (DES). The behaviour of these systems is governed by discrete events occurring asynchronously over time. To model this discrete behaviour one can use Finite State Machines (FSM) or Petri Nets (PN). FSM are used where the decision making is centralized, instead PN are used where the decision making is distributed (multiple agents) (more on centralized vs. distributed: view a previous chapter).These two modelling tools are sufficient to model every DES.  Every PN can be converted to an FSM and vice versa. These modeling tools can be used to visualize, analize, designing and optimizing the coordination of a system.

=== Finite State Machines (FSM) ===

FSM models a discrete-event system as a combination of these model primitives: a set of states and a set of transitions. 
To go from a state to another, one has to satisfy the approriate condition (the occurrence of an event) between the two states. For more elaborated documentation: view the [[Embedded Control Systems Design/Finite State Machines and Petri Nets|corresponding section]] in this Wikibook, [http://en.wikipedia.org/wiki/Petri_net the wikipedia page], or [http://users.vtk.be/~s0170766/1e%20Master/2e%20semester/Embedded%20Control%20Systems/Appendix_FSM_PN_MDP.pdf the appendix].

[[Image:primitivesFSM.jpg|center|thumb|500px|FSM model primitives]]

The idea of FSM can be expanded; when the outcome of events are not deterministic but stochastic, this can be moddeled by a Markov Decision Process (MDP)

=== Petri Nets (PN) ===

PN models a discrete-event system as a combination of these model primitives: a set set of places, a set of transitions and a set of tokens. Places represent conditions and transitions represent events. The state of a PN is described by the marking of the PN. A marking is an assignment of tokens to places in the net. These tokens represent the conditions indicated by particular places which hold at a moment of time. A transition can only fire when it is enabled. A transition is enabled if each of its input places has at least one token in it. When it fires one token from each input place will be taken and one token will be put in each output place of the transition. For more a more detailed explanation: view the [[Embedded Control Systems Design/Finite State Machines and Petri Nets|corresponding section]] in this Wikibook, [http://en.wikipedia.org/wiki/Finite_state_machine the wikipedia page], or [http://users.vtk.be/~s0170766/1e%20Master/2e%20semester/Embedded%20Control%20Systems/Appendix_FSM_PN_MDP.pdf the appendix].


[[Image:primitivesPN.jpg|center|thumb|500px|PN model primitives]]

== Descrete Event System Properties ==

This section handles the general properties of discrete event systems.

=== Discrete ===

In nature everything is a continuous process. When modelling a system with a discrete-event system, one assumes that certain behaviour doesn't change through time. This constant behaviour is represented by a state.

=== Asynchronous nature ===

Because FSM and PN are discrete models, time isn't measured. Consequently, one doesn't know how long a transition from one state to another takes. Only the order of event occurrence is important. In reality transitions take time, so during a transition the system will be in an undefined state because instantaneous transitions are assumed. These timing aspects can be modelled but this makes the model more complex and harder to understand.

=== Deadlocks ===

When modelling distributed systems, one must taken account for the occurrence of never being able to  fire a transition because there are no tokens left to fill the empty transition inputs (because alle other tokens are also waiting on a transition). This situation of mutual waiting is called a deadlock.

=== Uninterpreted model ===

The states and transitions in FSM and PN are labeled with statements. These labels make clear what the state represents and what fysical condition will trigger an transition. If one would change the name of these labels, this wouldn't affect the execution of the models. That's why PN and FSM are uninterpreted. The same FSM or PN can describe many systems.

=== Hierarchy ===

Every FSM can be a sub-FSM of another, bigger FSM. The same is true for PN. The sub-FSM is represented by a separate state, while a sub-PN is replaced by one transition or one place. Hierarchy makes a model better to understand.

== Design lessons ==

From the previous properties one can derive some design rules. These are summarised in this section.

=== General ===
When designing the coordination of a system as a discrete event system, one should always keep the timing aspects in mind. Transitions in DES take no time at all, in contrast to real life. Outputs could for example take some time to emerge and neglecting this could make your model behave in an unpredictable way. Always model time when it's an important property of your system.

Other concerns are the starting-up and the shutting down behaviour.  Often FSM and PN are represented as if they never have to boot up or to shut down, while real-life systems do encounter these conditions.  Neglecting these conditions can cause the system to behave unpredictable and maybe even hazardous. The start and end procedures could be modelled as a separated FSM or PN.

Always use a hierarchical structure to clearify your design. With hierarchy it is also easy to model starting and ending. Starting for example is a state of a system. When all conditions are met, the system can go to its next state, the normal behaviour. When the system needs to shut down, it can go to its last state, the shut-down-state.

=== Design of FSM ===

FSM are widely used to design control systems. However, there are no general indications as to which type of FSM model (Moore vs. Mealy) is best to use in your design. Choice of a model depends on the application, execution means (for instance, hardware systems are usually best realised as Moore models) and preferences of a designer or programmer ([http://www.stateworks.com/technology/TN10-Moore-Or-Mealy-Model/ Moore or Mealy Model?]). The most simple model to understand and to program is the Moore model. The exit actions of the Mealy model should be treated as an auxiliary feature to simplify design or to reduce the number of states. This way you'll get a mixed model of both Moore and Mealy structure. However, be careful to mix synchronous Mealy and Moore models when synchronising two FSM. From experience it appears that this can cause the FSM to receive inputs from each other at unpredicted moments in time.

There are many programming tools like Xilinx to convert state charts to electrical circuits, to program an FPGA for example. VHDL, a programming language to design synchronous FSM, is also used. Matlab Simulink is also a useful tool to design FSM.

=== Design of Petri nets ===

Petri nets are less intuitive but very useful to check a system for deadlocks. A PN should be used to model a system when an FSM behaves unpredictable or when there appears to be a synchronisation problem.

{{BookCat}}</text>
      <sha1>esf5euau9ipomw8d159dk2iri0sh7sy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:ButterflyPhoenixDoubleNova wing dotdotdot uhuhhuhhh ovalOrifice.jpg</title>
    <ns>6</ns>
    <id>200351</id>
    <revision>
      <id>1546476</id>
      <timestamp>2009-06-24T09:09:24Z</timestamp>
      <contributor>
        <username>Danwills</username>
        <id>75561</id>
      </contributor>
      <comment>An example of a PhoenixDoubleNova Fractal, rendered by the author in UltraFractal.</comment>
      <text xml:space="preserve">== Summary ==
An example of a PhoenixDoubleNova Fractal, rendered by the author in UltraFractal.
== Licensing: ==
{{self|GFDL|cc-by-sa-3.0,2.5,2.0,1.0}}</text>
      <sha1>scao3ul593wknz913ksxnryeo0ve58r</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Scottish Gaelic/Sustainability</title>
    <ns>0</ns>
    <id>200352</id>
    <revision>
      <id>2148567</id>
      <parentid>2021076</parentid>
      <timestamp>2011-07-22T23:35:58Z</timestamp>
      <contributor>
        <ip>90.213.6.62</ip>
      </contributor>
      <comment>/* Making Gaelic sustainable */</comment>
      <text xml:space="preserve">==Usage of Scottish Gaelic==
===Past usage===
Prior to the Statutes of Iona and the religious Reformation in the sixteenth century, Gaelic was the main spoken language of the northwest half of Scotland and Lowland Scots was the main spoken language of the southeast half of Scotland.  From around that time, up until relatively recent times, successive governments sought to discourage the use of Gaelic and the language went into decline.

*Ref [[Wikipedia:Scots Gaelic]]
*Ref [[Wikipedia:Scotland]]
*Ref [[Wikipedia:Statutes of Iona]]
*Ref [[Wikipedia:Scottish Reformation]]

===Present day usage===
By the 1970s the Gaelic language was largely confined to the northwest islands of Scotland but most families in the Western Isles continued to use it as part and parcel of everyday family life.  Since then many families in the Western Isles have stopped speaking in Gaelic and many parents there are no longer passing their native language on to their children.

Many Gaelic speakers have great difficulty in understanding some Gaelic radio programmes (especially news and current affairs programmes) because their knowledge of Gaelic vocabulary is to some extent limited.  Additionally, many Gaelic words have fallen into relative disuse and Gaelic speakers often cannot understand all of the words in traditional poems and songs without the aid of a dictionary.  

A large percentage of Gaelic-speaking people are, relatively speaking, socially isolated from fellow Gaelic-speakers and seldom have the opportunity to make use of their skill in Gaelic.  Many Gaelic-speaking people live outside of the Gaelic-speaking areas such as in the cities, for example, and in such areas the social networks of Gaelic-speaking people are relatively poor.

Recently, however, the government and the education system have become more favourable towards Gaelic, and some schools in Scotland offer to educate children in Gaelic.  Many of the children in Gaelic schools and Gaelic units within schools, however, tend to confine their use of Gaelic to school hours and tend to speak English at home, particularly in families which are not in frequent contact with other Gaelic-speaking families.

Although more people are now learning Gaelic, and attitudes towards the Gaelic language are gradually improving, relatively few learners of Gaelic are achieving fluency.  As a result, very few learners of Gaelic are passing the language on to their children or grandchildren.

*Ref: [[Wikipedia:Western Isles]]

===Looking to the future===

Recently the government set up a department in Scotland called B&amp;ograve;rd na G&amp;agrave;idhlig whose responsibility is to encourage the increased use of Gaelic.  B&amp;ograve;rd na G&amp;agrave;idhlig has laid a strong emphasis on consultation with the Gaelic speaking population - giving some room for optimism for the future continued use of the language.

Understanding the signs indicating whether the language is likely to recover and increase in usage is a complicated matter and requires a good understanding of the principles of language revival ''(see [[Wikipedia:language revival]])''.

While it has to be said that a high proportion of Gaelic speakers are now socially isolated from other Gaelic speakers, giving them few opportunities to avail themselves of their skill in the language, there are increasing opportunities to learn Gaelic, and some of the Gaelic learning groups and societies encourage learners of Gaelic to speak in Gaelic as much as possible in order to make the learners feel more comfortable when speaking Gaelic.  

In recent years there was a tendency at Gaelic arts festivals for people to speak in English rather than Gaelic.  For instance prizegiving at M&amp;ograve;d competitions started to become conducted in English rather than Gaelic.  In recent festivals, however, it is said that the usage of spoken Gaelic has increased again and that some of these festivals are becoming, once again, social occasions where people are encouraged to use the language not only in poetry and song recital but in general conversation as well.

With such mixed indications it seems that the future of the Gaelic language hangs very much in the balance.

==Sustainability==

In our world, where English is used and understood by roughly a quarter of its entire population, it is becoming increasingly the case that local languages such as Gaelic can subsist alongside global languages such as English without one negating the importance of the other.  Indeed the use of English has increased enormously in recent years despite the fact that, as a proportion of the world's population, its number of mother-tongue speakers is actually decreasing.  Global languages facilitate international communication and business while local languages provide community cohesion, social stability and confidence as well as access to local forms of literature and culture.  A global language and a local language can live side by side provided they are each given specific roles or niches and provided each are afforded due respect.  Providing people with adequate opportunities to learn both a local and a global language and ensuring that such persons can be given the opportunity to be well integrated into the societies that use these languages is, in my view, a small price to pay for securing the personal, social and economic benefits of being sustainably and confidently bilingual.  The global and the local both matter and language is part-and-parcel of each.

===Making Gaelic sustainable===

The number of people with an ability to speak, read or write Scottish Gaelic has declined in the past few centuries and the number is now well under 50,000.  Many of the people who are able to speak Gaelic are not in the habit of using it and many Gaelic-speaking parents are not in the habit of speaking in Gaelic to their children.  Many of those who are able to speak Gaelic are scattered and effectively isolated from other Gaelic speakers and they seldom obtain opportunities to avail themselves of their skill in Gaelic.  There are also few occasions or situations where people are positively
encouraged or required to use Gaelic.  In addition, some Gaelic-speaking people have a negative attitude towards their language and
prefer not to make use of their ability to speak it, and discourage others from speaking it too.
This raises long-term questions about the sustainability of the language.  Wikipedia has useful information on language revival relating to the sustainability of languages like Scottish Gaelic (see [[Wikipedia:language revival]]).  

Research into sociolinguistics and related fields suggests that the following could be helpful towards the promotion and well-being of a lesser-used language:

*people in the dominant community have positive attitudes towards (and speak well of) those people who regularly use the lesser-used language
:(for more detail see David Crystal's book, Language Death)
*the community who regularly use the lesser-used language are relatively free from dangers such as war, persecution, famine, epidemics, poverty and crime
:(for more detail see David Crystal's book, Language Death)
*there are schools available which teach using the lesser-used language AND the use of the lesser-used language is also reinforced outside of school hours
:(for more detail see Joshua Fishman's book, Can Threatened Languages be Saved)
*the people who regularly speak the less-used language are also able to read and write in the less-used language
:(based on writings by both Joshua Fishman and David Crystal)
*the people who regularly use the less-used language are also able to make use of electronic (e.g. computer) technology
:(for more detail see David Crystal's book, Language Death)
*there is a general awareness of the potential benefits of being bilingual, including in particular the cognitive benefits and the potential benefits to the person's self-esteem and confidence
*there is some degree of general awareness of the social consequences of language shift (see [[Wikipedia:language shift]])
*those who have a working knowledge of the language have a strong presence in the education system
:(for more detail see David Crystal's book, Language Death)
*there are opportunities for people to enter into Gaelic language apprenticeships
:(for more detail see the research by Jon Reyhner at the University of Northern Arizona)

===Social consequences of language shift===

For the sustainability of a language it may be helpful if there is a general awareness of the consequences of language shift.  

Language shift can be detrimental to at least parts of the community associated with the language which is being lost. Sociolinguists such as Joshua Fishman, Lilly Wong Fillmore and Jon Reyhner report that language shift (when it involves loss of the first language) can lead to cultural disintegration and a variety of social problems including increased alcoholism, dysfunctional families and increased incidence of premature death.

For example, Ohiri-Aniche (1997) observes a tendency among many Nigerians to bring up their children as monolingual speakers of English and reports that this can lead to their children holding their heritage language in disdain and feeling ashamed of being associated with the language of their parents and grandparents. As a result of this some Nigerians are said to feel neither wholly European nor wholly Nigerian.

*Ref: Ohiri-Aniche, C (1997) Nigerian languages die.  ''Quarterly Review of Politics, Economics and Society 1(2),73-9''.

===Advantages of being able to communicate in more than one language===

For the purposes of making a lesser-used language sustainable it is probably helpful for people to be aware of the benefits of being able to communicate in more than one language.  There are several advantages in being able to communicate in more than one language.  It broadens a person's experiences, provides cognitive advantages and, provided each of the person's languages are afforded due respect, can contribute to a person's self-esteem and confidence.

People who are able to communicate well in more than one language can have a greater breadth of experiences, and often a greater tolerance of cultural differences. A person who is communicative in more than one language is often accepting of those who are culturally different and is often welcoming of those who speak other languages and have different customs.

People who are fluent in more than one language get to know which language to use with which person in which situation. Through this experience they appear to learn how to be more sensitive to the needs of listeners than people who can only communicate in one language.

People who can read and write in more than one language are able to enjoy two or more literatures, opening up different literary traditions, ideas, ways of behaving and ways of thinking. The pleasures of reading poems, novels and magazines and the enjoyment of writing to relatives and friends are all increased for people who have the ability to communicate proficiently in more than one language.

Where parents have different preferred languages, children learn how to communicate in each parent's language. This can allow a close and special relationship with each parent to develop.

Having two or more words for every object and idea can be an advantage to creativity. Sometimes corresponding words in different languages have different associations or connotations. When slightly different associations are attached to each word, the person with two or more languages may be able to think more creatively.

===Reversing language shift===

Joshua Fishman proposes an eight-stage model for reversing language shift and recommends that efforts should concentrate on the earlier stages until they have been consolidated before proceeding to the later stages.  The eight stages are as follows:

* Acquisition of the language by adults, who may effectively act as language apprentices (recommended where most of the remaining speakers of the language are elderly and socially isolated from other speakers of the language).

* Create a socially integrated population of active speakers of the language, thereby creating a community of people who use the language frequently (at this stage it is usually best to concentrate mainly on the spoken language rather than the written language).

* In localities where there are a reasonable number of people habitually using the language, encourage the informal use of the language among people of all age groups and within families and bolster its daily use through the establishment of local neighbourhood institutions in which the language is encouraged, protected and (in certain contexts at least) used exclusively. (At this stage it may be useful for speakers to be aware of the personal advantages of being bilingual).

* In areas where oral competence in the language has been achieved in all age groups encourage literacy in the language but in a way that does not depend upon assistance from (or goodwill of) the state education system.

* Where the state permits it, and where numbers warrant, encourage the use of the language in lieu of compulsory state education. (at this stage it may be useful for speakers of the language to be aware of the benefits of bilingual education).

* Where the above have largely been achieved encourage the use of the language in the workplace (lower worksphere).

* Where the above have largely been achieved encourage use of the language in local government services and mass media.

* Where the above have largely been achieved encourage use of the language in higher education, government etc.

This model of language revival seeks to avoid conflict and is intended to direct efforts to where they are most effective and to avoid wasting energy trying to achieve the later stages of language revival when the earlier stages have not been achieved.  For instance it is probably wasteful of effort to work on the later stages of language revival if few families are in the habit of using the language among themselves.

*Ref: [[Wikipedia:Joshua Fishman]]
*Ref: [[Wikipedia:language revival]]
*For information about revitalizing indigenous languages see http://jan.ucc.nau.edu/~jar/RIL_Contents.html

{{BookCat}}</text>
      <sha1>4afps9xia3ffpk6ugytklrj8w2ofvum</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Fractals/Links</title>
    <ns>0</ns>
    <id>200353</id>
    <revision>
      <id>2665740</id>
      <parentid>2619334</parentid>
      <timestamp>2014-05-25T11:04:06Z</timestamp>
      <contributor>
        <username>Adam majewski</username>
        <id>74163</id>
      </contributor>
      <minor />
      <comment>/* Pages */ formulae</comment>
      <text xml:space="preserve">=Programs=
* [http://www.mndynamics.com/indexp.html Mandel: software for real and complex dynamics by Wolf Jung ]
* [http://yorke.umd.edu/dynamics/ Dynamics - program ] by  [http://www.rug.nl/staff/h.e.nusse/ Helena E. Nusse] and [http://yorke.umd.edu/ James Yorke]
* [http://matek.hu/xaos/ Xaos]

=Pages=
* [http://ultrafractalwiki.fractalforums.com/ The UltraFractal wiki]
** [http://formulas.ultrafractal.com/cgi/formuladb?browse ultrafractal : formula db]
* [[Pictures of Julia and Mandelbrot Sets]]
* [http://www.fractalforums.com fractal forums]
* [http://mathr.co.uk/blog/ blog of Claude Heiland-Allen ]

* [http://classes.yale.edu/Fractals/ Fractal Geo metry from Yale University by Michael Frame, Benoit Mandelbrot (1924-2010), and Nial NegerFebruary 2, 2013]
* [http://www.math.rochester.edu/people/faculty/doug/oldcourses/215s98/notes.html Math 215 - Lecture notes by Professor Douglas C. Ravenel ]
* The Mandelbrot and Julia sets Anatomy by Evgeny Demidov : [http://www.ibiblio.org/e-notes/MSet/Contents.htm Java version] and [http://www.ibiblio.org/e-notes/MSet/contents.html JavaScript version]
* [http://www.mrob.com/pub/muency.html  Mu-Ency - The Encyclopedia of the Mandelbrot Set  by Robert Munafo] 
* [http://linas.org/art-gallery/index.html Linas' Art Gallery]
{{BookCat}}</text>
      <sha1>ddb9ayiv3jg04zt2vjjwsy49c3zw8s1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Fractals/Buddhabrot</title>
    <ns>0</ns>
    <id>200354</id>
    <revision>
      <id>1561153</id>
      <parentid>1561151</parentid>
      <timestamp>2009-07-06T04:11:48Z</timestamp>
      <contributor>
        <username>Danwills</username>
        <id>75561</id>
      </contributor>
      <text xml:space="preserve">[[Image:BuddhabTest3x notRGB.jpg|320px|right|thumb|A typical rendering of the Buddhabrot fractal]]

[[Image:BuddhabTest3x notRGB power4.jpg|320px|right|thumb|A rendering of the Buddhabrot Fractal using a non-standard power of 4.0. Three-way symmetry can be seen as a result.]]

[[Image:Buddhabrot Negmandel.jpg|320px|right|thumb|A rendering of the Buddhabrot Fractal using a non-standard power of -4.0 (minus four). This is a zoom in on one of 5 symmetrical points on the star that is formed when a negative power is used.]]

The Buddhabrot is an alternate method for the rendering of the traditional Mandelbrot fractal formula, where the [[Fractals/Orbits|orbits]] are traced and their positions drawn directly, rather than coloring based on some other outcome of the orbit.

==See Also==
* [[w:Buddhabrot|Wikipedia article on Buddhabrot]].

{{BookCat}}</text>
      <sha1>2bv9vynfif0epovgz3tpbn41zbc8mf6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>TeX/ifx</title>
    <ns>0</ns>
    <id>200355</id>
    <revision>
      <id>2460942</id>
      <parentid>1578128</parentid>
      <timestamp>2012-12-13T21:28:33Z</timestamp>
      <contributor>
        <ip>78.105.127.86</ip>
      </contributor>
      <comment>add reference to the tex faq</comment>
      <text xml:space="preserve">==Synopsis==

&lt;pre&gt;
\ifx \Macro1 \Macro2
&lt;tex commands&gt;
\else
&lt;tex commands&gt;
\fi
&lt;/pre&gt;

==Description==

With the \ifx command you can perform conditional compilation by testing for macro equivalence.
It does not expand the given macros. The two macros are considered equal if
* both are macros and
* the first level expansion is equal and
* they have the same state with regards to \long and \outer

See also the command [[TeX/def|\def]].

==Examples==
For example, let's say we define a new macro just to do conditional compilation:

&lt;pre&gt;
\def \myMacro {}
&lt;/pre&gt;

Then we can use \ifx to check if this macro is defined or not.
&lt;pre&gt;
\ifx \myMacro \undefined
This will be processed if myMacro is not defined.
\else
This will be processed if myMacro is defined.
\fi
&lt;/pre&gt;

See also [http://www.tex.ac.uk/cgi-bin/texfaq2html?label=isdef] on the use of this method for testing whether
a macro is defined.

{{BookCat}}</text>
      <sha1>3s0o093emb9958nhdrm86ug6zlh4fpo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Overview of Theology/An Introduction to Theology</title>
    <ns>0</ns>
    <id>200356</id>
    <revision>
      <id>2585712</id>
      <parentid>2460369</parentid>
      <timestamp>2013-11-28T11:36:30Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">==What is theology?==
Human beings are essentially social animals. Social animals operate in groups, packs or tribes. Usually individuals are linked by family connections to an 'alpha male' who provides tactical leadership. Provided this leadership increases the probability of success for individual members as well as for himself he will earn respect. Humans uniquely have the ability to formulate long-term strategic plans and communicate complex ideas which has made our species the most successful of all living creatures on this planet. Leadership is crucial to human success. The model of parental superiority is implicit from birth, as the infant human is incapable of independent survival. A hierarchical 'chain of command' with delegated responsibilities and privileges thus emerged naturally and early in human history. Ancestor worship is a form of hierarchical deference to wise (but dead) former leaders. 

===Death===
Theories about what happens after death - if there is a human spirit or soul capable of surviving the body is important to people. Should former leaders influence their survivors? Is  there  somewhere an unseen community of the dead or some sort of super-spirit capable of communicating with the living?  These ideas matter because people believe in these theories, and those beliefs, true or false, do indeed alter our behavior according to the expected reward or punishment. A trader trades with the expectation to be paid 'fairly'. If not, then a 'higher authority' - either the police or the judiciary will be expected to apply influence. A religious person may give alms, or take up arms without expectation of any earthly benefit, expecting instead 'a good feeling' now followed by a certain reward 'in heaven'. 

===Life===
Most religions use the 'external influence' of unseen forces to mold habits that led to successful survival. War is a human strategic invention that allows the winning side to take the riches of the losers, who may be killed or enslaved. War is dangerous for individuals, but not for armies or communities as a whole as long as they are successful defenders or colonizers. Individual warriors have to be assured they will receive their reward at the close of battle or else 'in the afterlife' if they are brave and do as they are told without question. The corollary is that if a warrior is cowardly or disobedient he will first be be killed and tormented 'in the afterlife'.   
===The purpose of Religion===
The origin of theology is uncertain, but it has been suggested that it evolved for the nurture of children&lt;ref&gt; {{cite book |title=Mothers and Others: The Evolutionary Origins of Mutual Understanding|first=Sarah|last=Blaffer Hrdy|isbn=9780674032996|publisher=Belknap Press of Harvard University|date=2009}}&lt;/ref&gt;.
A society that is able to breed successfully may need to steal from 'outsiders' and enslave 'foreigners' merely to survive. In so doing it is likely to accumulate power and worldly wealth which may be attractive predatory competitors. The same is true of criminal gangs and nation states. The successful strategy is therefore to distinguish 'right' and 'wrong' behavior between 'us' within a group and 'them' - our potential victims. As human societies became more complex the definitions of who was 'inside' (warriors certainly, but what about children, wives, slaves, friendly tribes.....?) as well as the context in which 'right' and 'wrong' might be judged and rewarded (or punished) became a problem requiring study and the evolution of clear rules, which we call theology. When may a warrior legally kill? What is 'just cause' war as distinguished from a criminal enterprise.....

== Types of religion==
Religions generally demand respect for parents, elders and certain wise or brave leaders. Hierarchical power structures culminate in monotheism, where a supreme, all-wise, ever-present but undetectable God monitors a believers' every thought and action.  The contrary view is of polytheism, where many gods deny supremacy to any person or deity. Universal democracy is a form of this, since every elector is an individual, but the average of their collective will (eventually) reign supreme. Rather than respecting the personal wishes of a king or president, democrats require their leaders to conform to their collective will, and punish those who abuse their delegated power. Neither absolute personal princely power nor absolute democracy is very efficient, and most societies strike a balance - The United States of America and the Republic of France have powerful presidents, but their term of office is very short. Conversely the monarchs of the Kingdoms of Spain and Britain rule 'for life' but they have very little power or freedom although their experience may lend them a certain moral authority. 

===Religion and Law===
The European Union has a power structure so complex that it is almost beyond understanding, and relies on the free-will of individual nation states to execute its directives, and rewards or punishes member states rather than their individual citizens. European and International Law emerged mostly from the Judeo-Christian traditions iluminated by some notable Muslim interpretations which evolved around the Iberian peninsula. International law is in one sense a form of religion binding in other religions in order to discourage predatory adventures, racism and genocide, whilst equally encouraging communication, trade and individual human rights guaranteed by the state in which people reside. Not all states subscribe to international law, and some that do place their own theocracy or judiciary above international courts. The USA for example does not submit itself to international scrutiny nor require nor allow its citizens to submit to any legal code except its own constitution. Similarly many Muslim countries apply Sharia (interpretive) contextual judgments rather than impose the rather stark international (codified) law.



== Christianity ==
The Creation in Christianity is based in the book of Genesis. Christians believe this book accurately depicts the creation.   
Genesis is  written in a poetic form, and is presumed to have been inspired by God. It illustrates the creation from the point of view of the Jewish culture and its people. There is an argument amongst Christians as to if it was was written as a parable (evolution via intelligent design) or as a literal truth (which creationists aver).
Most holy scripture is both historically ancient and tends to be  in a mythological language style. Genesis first appeared about three thousand years ago in the tenth century Before the Common Epoch (BC) probably during the reign af King Solomon, and it appears to have been written,re-written, translated and reinterpreted by many authors with different intentions. 
Genesis is not a scientific document, since 'the scientific method' was invented much later (in Baghdad around 7th to 10th century After the common epoch (AC)), Therefore, despite the claims of creationists, it could not explain the creation in scientific terms. Genesis is then a religious document that explain certain spiritual ideas which believers accept as 'true' from a religious and spiritual point of view.

There are many different interpretations about the Genesis from many different Christian denominations.

===Historical or spiritual truth?===
One such interpretation would state that although the book of Genesis does contain poetry and other types of literary devices, it is primarily a historical narrative of how God brought about the beginning of the universe, mankind, the beginning of the Chosen nation of Israel and how 'He' (God) set the wheels in motion for the beginning of his grace after mankind brought about the beginning of sin.  It is a book of beginnings, as is reflected in the title of the book, Bereshith (In the beginning).  Furthermore, for believers, it is more than merely a religious document that explains spiritual truths from a religious point of view.  They accept Genesis as a true historical narrative that reveals the reality of who God is, what he has done in history, and where man came from, how mankind fell into sin, the effects of the fall, and how God has chosen to redeem his chosen people through the Jewish people and his covenant, and ultimately, how He set into motion, the redemption of the elect which would eventually be His Church.
Right and wrong behaviors, just rewards and punishments are exemplified throughout the first five scriptural books (Jewish Torah or Christian Pentateuch) of which Genesis is the opening salvo. 
===Interpretation===
There are several points of differing interpretations within Christian Theology about the actual creation narrative itself.  The first debate begins within the very first word of the very first verse: Bereshith.  The problem arises in the interpretation of the translation.  Whereas, it could be translated &quot;In a beginning&quot; (using an indefinite article - one of many), most scholars will translate it as &quot;In the Beginning&quot; (definite article and therefore the unique story).  This may not seem like a big issue until one moves to the second verse and deals with the translation of the Hebrew word, Hayathah.  There are two legitimate translations of this word, which are, &quot;It was&quot; and &quot;It became&quot;.  If one goes with the former translation, it is clear that this is interpreted as one creation that simply continues the narrative of verse one and translates Bereshith as &quot;In the Beginning&quot;.  If one goes with the latter translation, then this would open the possibility for many different creations and the Gap theory, and would continue the narrative of verse one  which translates Bereshith as &quot;In a Beginning&quot;.  While, the Gap Theorists will point to many creation stories in the ancient world outside of the Jewish narrative as evidence of many creations, proponents of one creation will state that the context of the narrative does not lend itself to a Gap Theory.  The primary context of the narrative is not to tell us how many creations there were, but rather, that God is the one who created the beginning and was the one who was before time (eternal).  It further states that the context is to tell us about the beginning of man, sin, God' covenant, and God's law, and God's redemption of sinful man. The purpose of the writers of Genesis has always been to define 'right' and wrong' interactions (bestowing blessings and sins), how we humans may 'justly' reward and punish each other during our lives, and how (post mortem) we will ourselves eventually receive divine justice calculated and delivered 'fairly and utterly' by a unique and omnipotent God who has an exact record of our every passing moment. 

===History or Poetry?===
The next interpretive issue revolves around the chronological or historical timing of creation.  There are scholars who firmly believe  that creation must have occurred no longer than about 12,000 years ago.  This date may be approximately  deduced from the genealogies given later in Genesis, and on a literal interpretation of a seven days of 24 hours cycle of creation.  One of the major reasons that many Christians hold to this interpretation is that they want to deflect the teachings of 'chance' or Darwinian evolution. If creation of life on earth was simply chance then the fossil records and carbon dating techniques  would predate Genesis and date the world back to millions of years. God would then become merely decorative and cultural within human life rather than truly authoritative and believable source of all things and all-knowing. Contrary to Genesis report of mankind created and completed in an instant Darwin would allow for a gradual emergence of each species (including mankind) over millions of years.  Many faithful Christians, however, would argue that the timing is not of primary importance and that Genesis  explains WHY things are as they are, and so is compatible with,  not in conflict with science, which only explains how things may have become as they are. The actual sequence and timing being immaterial to religious purpose.  Whether  mankind emerged within a seven day cycle or over millions of years, the primary purpose if Genesis is to confirm that God is eternal and is the one agent who created everything.  One argument against the seven 24 hour period of time is that the sun and the moon were not apparently created until the fourth day, and these are essential elements in the measurement of time,  the seasons, and the years.  Another argument revolves around the word &quot;Yom&quot; which can be translated either as 'a day' or used to indicate some undefined period of time.  A third argument is based on the New Testament text which clarifies time as it is understood by God (2 Peter 3:8).  One thing is certain in believers minds is that, whether mankind emerged gradually over millions of years or was created in a split second, there was  God who existed before time as we humans understand it, and it was God who created all things in accordance with divine will.  

==References==
{{reflist}}

{{BookCat}}</text>
      <sha1>3d17zribodasl80qap0sftdqa80hgd1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Bootstrap</title>
    <ns>0</ns>
    <id>200357</id>
    <revision>
      <id>2457470</id>
      <parentid>2443559</parentid>
      <timestamp>2012-12-09T20:30:03Z</timestamp>
      <contributor>
        <username>Dourouc05</username>
        <id>470050</id>
      </contributor>
      <text xml:space="preserve">{{Wikipedia|Bootstrapping (statistics)}}

&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

{{...}}

* '''boot''' package includes functions from the book ''Bootstrap Methods and Their Applications'' by A. C. Davison and D. V. Hinkley (1997, CUP)
* '''bootstrap''' package.

== Quick how-to ==

Do a boostrap of some data for some function (here, mean): 
  b &lt;- boot(data, function(data, id) { mean(data[id]) }, 1000)
Use this to compute a 90%-confidence interval: 
  boot.ci(b, .9, type=&quot;norm&quot;)

== References ==

{{reflist}}

* Instructions for the '''boot''' package: http://www.statmethods.net/advstats/bootstrapping.html
* Sample using the '''boot''' package: http://druedin.com/2012/11/10/bootstrapping-in-r/

{{R Programming/Navbar|Bayesian Methods|Nonparametric Methods}}</text>
      <sha1>7tdxfz61l8pe2xri4hgfhhudtvwyxf9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Binomial Models</title>
    <ns>0</ns>
    <id>200358</id>
    <revision>
      <id>2536965</id>
      <parentid>2536830</parentid>
      <timestamp>2013-06-18T08:07:07Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>layout</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;
In this section, we look at the [[w:binomial regression|binomial model]]. We have one outcome which is binary and a set of explanatory variables. 

This kind of model can be analyzed using a [[w:linear probability model|linear probability model]]. However a drawback of this model for the parameter of the [[w:Bernoulli distribution|Bernoulli distribution]] is that, unless restrictions are placed on &lt;math&gt; \beta &lt;/math&gt;, the estimated coefficients can imply probabilities outside the [[w:unit interval|unit interval]] &lt;math&gt; [0,1] &lt;/math&gt; . For this reason, models such as the [[R_Programming/Binomial_Models#Logit_model|logit model]] or the [[R_Programming/Binomial_Models#Probit_model|probit model]] are more commonly used. If you want to estimate a linear probability model, have a look at the [[R_Programming/Linear_Models|linear models]] page.

== Logit model ==

The model takes the form : &lt;math&gt;y_i \sim Bernoulli(\pi_i)&lt;/math&gt; with the inverse link function : 
&lt;math&gt;\pi_i = \frac{exp(x_i'\beta)} {(1 + exp(x_i'\beta))}&lt;/math&gt;. It can be estimated using maximum likelihood or using bayesian methods. 

=== Fake data simulations ===

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; x &lt;- 1 + rnorm(1000,1) 
&gt; xbeta &lt;- -1  + (x* 1)
&gt; proba &lt;- exp(xbeta)/(1 + exp(xbeta))
&gt; y &lt;- ifelse(runif(1000,0,1) &lt; proba,1,0)
&gt; table(y)
&gt; df &lt;- data.frame(y,x)
&lt;/source&gt;

=== Maximum likelihood estimation ===

* The standard way to estimate a logit model is &lt;tt&gt;glm()&lt;/tt&gt; function with family &lt;tt&gt;binomial&lt;/tt&gt; and link &lt;tt&gt;logit&lt;/tt&gt;.
* &lt;tt&gt;lrm()&lt;/tt&gt; ('''Design''') is another implementation of the logistic regression model.
* There is an implementation in the '''Zelig''' package&lt;ref name = &quot;zeliglogit&quot;&gt;Kosuke Imai, Gary King, and Oliva Lau. 2008. &quot;logit: Logistic Regression for Dichotomous Dependent Variables&quot; in Kosuke Imai, Gary King, and Olivia Lau, &quot;Zelig: Everyone's Statistical Software,&quot; http://gking.harvard.edu/zelig&lt;/ref&gt;.

In this example, we simulate a model with one continuous predictor and estimate this model using the &lt;tt&gt;glm()&lt;/tt&gt; function.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; res &lt;- glm(y ~ x , family  = binomial(link=logit))
&gt; summary(res) # results
&gt; confint(res) # confindence intervals
&gt; names(res) 
&gt; exp(res$coefficients) # odds ratio
&gt; exp(confint(res)) # Confidence intervals for odds ratio (delta method)
&gt; predict(res) # prediction on a linear scale
&gt; predict(res, type = &quot;response&quot;) # predicted probabilities
&gt; plot(x, predict(res, type = &quot;response&quot;)) # plot the predicted probabilities
&lt;/source&gt;

==== Zelig ====

The '''Zelig'''' package makes it easy to compute all the quantities of interest.

We develop a new example. First we simulate a new dataset with two continuous explanatory variables and we estimate the model using &lt;tt&gt;zelig()&lt;/tt&gt; with  the &lt;tt&gt;model = &quot;logit&quot;&lt;/tt&gt; option. 
* We the look at the predicted values of y at the mean of x1 and x2 
* Then we look at the predicted values when x1 = 0 and x2 = 0
* We also look at what happens when x1 changes from the 3rd to the 1st quartile.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; x1 &lt;- 1 + rnorm(1000)
&gt; x2 &lt;- -1 + x1 + rnorm(1000)
&gt; xbeta &lt;- -1  + x1 + x2
&gt; proba &lt;- exp(xbeta)/(1 + exp(xbeta))
&gt; y &lt;- ifelse(runif(1000,0,1) &lt; proba,1,0)
&gt; mydat &lt;- data.frame(y,x1,x2)
&gt; table(y)
&gt; 
&gt; z.out &lt;- zelig(y ~ x1 + x2, model = &quot;logit&quot;, data = mydat) # estimating the model
&gt; summary(z.out)
&gt; x.out &lt;- setx(z.out, x1 = mean(x1), x2 = mean(x2)) # setting values for the explanatory variables
&gt; s.out &lt;- sim(z.out, x = x.out) # simulating the quantities of interest
&gt; summary(s.out)
&gt; plot(s.out) # plot the quantities of interest

&gt; # the same with other values
&gt; x.out &lt;- setx(z.out, x1 = 0, x2 = 0)
&gt; s.out &lt;- sim(z.out, x = x.out)
&gt; summary(s.out)

&gt; # What happens if x1 change from the 3rd quartile to the 1st quartile ? 
&gt; x.high &lt;- setx(z.out, x1 = quantile(mydat$x1,.75), x2 = mean(mydat$x2)) 
&gt; x.low &lt;- setx(z.out, x1 = quantile(mydat$x1,.25), x2 = mean(x2)) 
&gt; s.out2&lt;-sim(z.out, x=x.high, x1=x.low) 
&gt; plot(s.out2)
&lt;/source&gt;

* ROC Curve in the '''verification''' package.
* '''Zelig''' has a &lt;tt&gt;rocplot()&lt;/tt&gt; function.

* See [http://www.ats.ucla.edu/stat/r/dae/logit.htm UCLA Statistical Computing example]

=== Bayesian estimation ===

* &lt;tt&gt;bayesglm()&lt;/tt&gt; in the '''arm''' package 
* &lt;tt&gt;MCMClogit()&lt;/tt&gt; in the '''MCMCpack''' for a bayesian estimation of the logit model.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; # Data generating process
&gt; x &lt;- 1 + rnorm(1000,1) 
&gt; xbeta &lt;- -1  + (x* 1)
&gt; proba &lt;- exp(xbeta)/(1 + exp(xbeta))
&gt; y &lt;- ifelse(runif(1000,0,1) &lt; proba,1,0)
&gt; table(y)
&gt; 
&gt; library(MCMCpack)
&gt; res &lt;- MCMClogit(y ~ x)
&gt; summary(res)

&gt; library(&quot;arm&quot;)
&gt; res &lt;- bayesglm(y ~ x, family = binomial(link=logit))
&gt; summary(res)
&lt;/source&gt;

== Probit model ==

The [[w:Probit_model|probit model]] is a binary model in which we assume that the link function is the cumulative density function of a normal distribution. 

We simulate fake data. First, we draw two random variables x1 and x2 in any distributions (this does not matter). Then we create the vector xbeta as a linear combination of x1 and x2. We apply the link function to that vector and we draw the binary variable y as Bernouilli random variable.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; x1 &lt;- 1 + rnorm(1000)
&gt; x2 &lt;- -1 + x1 + rnorm(1000)
&gt; xbeta &lt;- -1  + x1 + x2
&gt; proba &lt;- pnorm(xbeta)
&gt; y &lt;- ifelse(runif(1000,0,1) &lt; proba,1,0)
&gt; mydat &lt;- data.frame(y,x1,x2)
&gt; table(y)
&lt;/source&gt;

=== Maximum likelihood ===

We can use the &lt;tt&gt;glm()&lt;/tt&gt; function with &lt;tt&gt;family=binomial(link=probit)&lt;/tt&gt; option or the &lt;tt&gt;probit()&lt;/tt&gt; function in the '''sampleSelection''' package which is a wrapper of the former one.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; res &lt;- glm(y ~ x1 + x2 , family = binomial(link=probit), data = mydat)
&gt; summary(res)
&gt; 
&gt; library(&quot;sampleSelection&quot;)
&gt; probit(y ~ x1 + x2, data = mydat)
&gt; summary(res)
&lt;/source&gt;

=== Bayesian estimation ===

* &lt;tt&gt;MCMCprobit()&lt;/tt&gt; ('''MCMCpack''')

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;MCMCpack&quot;)
&gt; post &lt;- MCMCprobit(y ~ x1 + x2 , data = mydat)
&gt; summary(post)
&gt; plot(post)
&lt;/source&gt;

=== See Also ===

* There is an example of a probit model with R on the UCLA statistical computing website&lt;ref name = &quot;uclaprobit&quot;&gt; UCLA statistical computing probit example http://www.ats.ucla.edu/stat/R/dae/probit.htm&lt;/ref&gt;.

== Semi-Parametric models ==


* [[w:Semiparametric_regression#Klein_and_Spady.27s_estimator|Klein and Spady estimator]]&lt;ref&gt;Klein, R. W. and R. H. Spady (1993), “An efficient semiparametric estimator for binary response models,” Econometrica, 61, 387-421.&lt;/ref&gt; is implemented in the '''np''' package&lt;ref&gt; Tristen Hayfield and Jeffrey S. Racine (2008). Nonparametric Econometrics: The np Package. Journal of Statistical Software 27(5). URL http://www.jstatsoft.org/v27/i05/.&lt;/ref&gt; (see '''npindex()''' with &lt;tt&gt;method = &quot;kleinspady&quot;&lt;/tt&gt; option).

== References ==

{{reflist|2}}

{{R Programming/Navbar|Quantile Regression|Multinomial Ordered Models}}</text>
      <sha1>dgqgu4i0evzn8k2jni30py256ddm97v</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Algebra</title>
    <ns>0</ns>
    <id>200360</id>
    <revision>
      <id>1710238</id>
      <parentid>1602914</parentid>
      <timestamp>2010-02-01T18:23:48Z</timestamp>
      <contributor>
        <ip>205.208.75.179</ip>
      </contributor>
      <text xml:space="preserve">This section contains worksheets for algebra problems.

{{stages}}

# [[/Addition and subtraction of algebraic terms/|Addition and subtraction of algebraic terms]] {{stage|100%|Jun 26, 2009}}
# [[/Lowest Common Multiples of Algebra/|Lowest Common Multiples of Algebra]] {{stage|00%|Jun 26, 2009}}
# [[/Greatest Common Factor of Algebra/|Greatest Common Factor of Algebra]] {{stage|00%|Jun 26, 2009}}
# [[/Algebraic exponents/|Algebraic exponents]] {{stage|25%|Jun 27, 2009}}
# [[/Fractional algebra/|Fractional algebra]] {{stage|25%|Aug 07, 2009}}
# [[/Substituting/|Substituting]] {{stage|00%|Jun 24, 2009}}
# [[/Factorization of algebraic terms/|Factorization of algebraic terms]] {{stage|25%|Jul 25, 2009}}
# [[/Pascal's Triangle/|Pascal's Triangle]] {{stage|100%|Jul 25, 2009}}
# [[/Polynomials/|Polynomials]] {{stage|00%|Jun 24, 2009}}

[[Category:Mathematics Worksheet]]</text>
      <sha1>3qg90jtsejrzfnkt7qkahyawx7fwmj0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Introduction</title>
    <ns>0</ns>
    <id>200361</id>
    <revision>
      <id>2561505</id>
      <parentid>2487628</parentid>
      <timestamp>2013-09-28T13:36:58Z</timestamp>
      <contributor>
        <ip>200.21.103.10</ip>
      </contributor>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

== What is R ? ==

R is statistical software which is used for data analysis. It includes a huge number of statistical procedures such as t-test, chi-square tests, standard linear models, instrumental variables estimation, local polynomial regressions, etc. It also provides high-level graphics capabilities.

== Why use R? ==

* R is [[w:Free software|free software]]. R is an official GNU project and distributed under the [[w:Free Software Foundation|Free Software Foundation]] [[w:General Public License|General Public License]] (GPL). 
* R is a powerful data-analysis package with many standard and cutting-edge statistical functions. See the Comprehensive R Archive Network's [http://cran.r-project.org/web/views/ Task Views] to get an idea of what you can do with R.
* R is a programming language, so its abilities can easily be extended through the use of user-defined functions. A large collection of user-contributed functions and packages can be found at CRAN's [http://cran.r-project.org/web/packages/ Contributed Packages] page.
* R is widely used in political science, statistics, econometrics, actuarial sciences, sociology, finance, etc.
* R is available for all major operating systems (Windows, Mac OS, GNU-Linux).
* R is [[w:Object-oriented programming|object oriented]]. Virtually anything (e.g., complex data structures) can be stored as an R object.
* R is a matrix language. 
* R syntax is much more systematic than [[Stata]] or [[SAS]] syntax.
* R can be installed on your USB stick&lt;ref name = &quot;portable&quot;&gt;Portable R by Andrew Redd http://sourceforge.net/projects/rportable/&lt;/ref&gt;.

=== Alternatives to R ===

* [[w:S-PLUS|S-PLUS]] is a commercial version of the same [[w:S (programming language)|S programming language]] that R is a free version of.
* [[w:Gretl|Gretl]] is free software for econometrics. It has a graphical user interface and is nice for beginners.
* [[Using_SPSS_and_PASW|SPSS]] is proprietary software which is often used in sociology, psychology and marketing. It is known to be easy to use. 
* [[w:PSPP|GNU PSPP]] is a free-software alternative to SPSS.
* [[SAS]] is proprietary software that can be used with very large datasets such as census data.
* [[Stata]] is proprietary software that is often used in economics and epidemiology.
* [[MATLAB Programming|MATLAB]] is proprietary software used widely in the mathematical sciences and engineering.
* [[Octave Programming Tutorial|Octave]] is free software similar to MATLAB. The syntax is the same and MATLAB code can be used in Octave.
* [[Python]] is a general programming language. It includes some specific libraries for data analysis such as Pandas&lt;ref&gt;{{Cite web|url=http://pandas.pydata.org/|title=Python Data Analysis Library|publisher=pandas.pydata.org/|accessdate=February 14th, 2013}}&lt;/ref&gt;{{,}}&lt;ref&gt;{{Cite web|url=http://blog.kaggle.com/2013/01/17/getting-started-with-pandas-predicting-sat-scores-for-new-york-city-schools/|title=Getting started with Pandas|publisher=blog.kaggle.com|accessdate=February 14th, 2013|date=January 17th, 2013}}&lt;/ref&gt;.

Beginners can have a look at [[w:PSPP|GNU PSPP]] or [[w:Gretl|Gretl]]. Intermediate users can check out [[Stata]]. Advanced users who like matrix programming may prefer [[MATLAB Programming|MATLAB]] or [[Octave Programming Tutorial|Octave]]. Very advanced users may use [[R Programming/Using C or Fortran|C or Fortran]].

=== See also ===

* [http://www.burns-stat.com/pages/Tutor/R_relative_statpack.pdf &quot;R Relative to Statistical Package&quot; by Patrick Burns]

== R programming style ==

* R is an object oriented programming language. This means that virtually everything can be stored as an R object. Each object has a class. This class describes what the object contains and what each function does with it. For instance, &lt;code&gt;plot(x)&lt;/code&gt; produces different outputs depending on whether &lt;code&gt;x&lt;/code&gt; is a regression object or a vector.
* The assignment symbol is &quot;&lt;code&gt;&lt;-&lt;/code&gt;&quot;. Alternatively, the classical &quot;&lt;code&gt;=&lt;/code&gt;&quot; symbol can be used.
The two following statements are equivalent :
&lt;source lang=&quot;rsplus&quot;&gt;
 &gt; a &lt;- 2
 &gt; a = 2
&lt;/source&gt;
* Arguments are passed to functions inside round brackets (parentheses).
* One can easily combine functions. For instance you can directly type 
&lt;source lang=&quot;rsplus&quot;&gt;mean(rnorm(1000)^2)&lt;/source&gt;
* The symbol &quot;&lt;code&gt;#&lt;/code&gt;&quot; comments to the end of the line:
&lt;source lang=&quot;rsplus&quot;&gt;
 # This is a comment
 5 + 7 # This is also a comment 
&lt;/source&gt;
* Commands are normally separated by a newline. If you want to put more than one statement on a line, you can use the &quot;&lt;code&gt;;&lt;/code&gt;&quot; delimiter.
&lt;source lang=&quot;rsplus&quot;&gt; a &lt;- 1:10 ; mean(a) &lt;/source&gt;
* You can also have one statement on multiple lines. 
* R is case sensitive: &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;A&lt;/code&gt; are two different objects.
* Traditionally underscores &quot;&lt;code&gt;_&lt;/code&gt;&quot; are not used in names. It is often better to use dots &quot;&lt;code&gt;.&lt;/code&gt;&quot;. One should avoid using an underscore as the first character of an object name.

== How you can help ==

Here are some things editors do to keep this book internally consistent.
If you have something to contribute, go ahead and make your contribution.
Other editors can touch up your edits afterwards so that they conform to the guidelines.

The local manual of style [[WB:LMOS]] for the R programming book, including a brief explanation of why we do it that way, is:

* Examples use &quot;source&quot; tags : &lt;code&gt;&lt;nowiki&gt;&lt;source lang=&quot;rsplus&quot;&gt; a &lt;- 1:10 ; mean(a) &lt;/source&gt;&lt;/nowiki&gt;&lt;code&gt;. That makes them look pretty to our readers.
* The name of packages are in bold  : &lt;code&gt;&lt;nowiki&gt;'''Hmisc'''&lt;/nowiki&gt;&lt;code&gt;.
* Name of functions are in &quot;code&quot; tags: &lt;code&gt;&lt;nowiki&gt;&lt;code&gt;lm()&lt;/code&gt;&lt;/nowiki&gt;&lt;code&gt;.
* Page titles -- the part after &quot;R Programming/&quot; -- are in sentence case, like &quot;[[R Programming/Working with data frames]]&quot;. We couldn't decide between sentence case and title case, so I flipped a coin.
* Every page has &lt;code&gt;&lt;nowiki&gt;&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;&lt;/nowiki&gt;&lt;code&gt; at the top and &lt;code&gt;&lt;nowiki&gt;{{R Programming/Navbar|Mathematics|Probability Distributions}}&lt;/nowiki&gt;&lt;code&gt; at the bottom. That makes it easier to navigate from one page to another online.

=== See Also ===

* [http://google-styleguide.googlecode.com/svn/trunk/google-r-style.html Google's R Style Guide] : a set of rules for R programmers

== References ==

{{reflist|2}}

{{R Programming/Navbar| |Sample Session}}</text>
      <sha1>pvkqby7s6k02lqc3hqjppjfrvtm51dp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:R Programming/Templates</title>
    <ns>14</ns>
    <id>200363</id>
    <revision>
      <id>1546571</id>
      <timestamp>2009-06-24T12:13:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book template category.</comment>
      <text xml:space="preserve">This category contains templates used in the [[{{BOOKNAME}}]] book.

{{BookCat}}</text>
      <sha1>h6n4r65mc9ae7by17me70kbye6f3k5p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Algebra/Addition and subtraction of algebraic terms</title>
    <ns>0</ns>
    <id>200364</id>
    <revision>
      <id>1548941</id>
      <parentid>1548932</parentid>
      <timestamp>2009-06-26T14:54:04Z</timestamp>
      <contributor>
        <username>Triwikanto</username>
        <id>232158</id>
      </contributor>
      <text xml:space="preserve">Do the questions carefully. (40 questions)

# &lt;math&gt;\!7(\!3x+\!2)-\!x=\cdots&lt;/math&gt;
# &lt;math&gt;\!(\!6x+\!3)+\!(-5x)=\cdots&lt;/math&gt;
# &lt;math&gt;\!4(\!3x+\!3)=\cdots&lt;/math&gt;
# &lt;math&gt;\!6(\!5-\!3x)+\!(\!4x+\!2)=\cdots&lt;/math&gt;
# &lt;math&gt;\!(\!7x^2-\!6x)+\!3x^2-\!8x=\cdots&lt;/math&gt;
# &lt;math&gt;\!5x(\!4+\!3y)+\!7x-\!2(\!3x+\!y)=\cdots&lt;/math&gt;
# &lt;math&gt;\!4(\!3x+\!2y)=\cdots&lt;/math&gt;
# &lt;math&gt;\!-7y(\!3x-\!5)+6x=\cdots&lt;/math&gt;
# &lt;math&gt;\!-5x(\!3x+\!7y)-5y=\cdots&lt;/math&gt;
# &lt;math&gt;\!3x+\!7y+\!5x+\!8y=\cdots&lt;/math&gt;
# &lt;math&gt;\!5(\!4x+\!3y)-\!5y+\!6x=\cdots&lt;/math&gt;
# &lt;math&gt;\!6x+\!5xy-\!7y+\!5y-\!9x+\!7x=\cdots&lt;/math&gt;
# &lt;math&gt;\!-5(\!3x+\!6y)+\!15y=\cdots&lt;/math&gt;
# &lt;math&gt;\!5x(\!y+\!4x)-\!9y-\!4x^2=\cdots&lt;/math&gt;
# &lt;math&gt;\!4y(\!3x+\!x^2)+\!(-8x^2)=\cdots&lt;/math&gt;
# &lt;math&gt;\!-6x(\!4y+\!5)+\!5y-\!7x=\cdots&lt;/math&gt;
# &lt;math&gt;\!9(\!7x+y^3)-\!6y^3+\!20x=\cdots&lt;/math&gt;
# &lt;math&gt;\!4x+\!7y-\!7x+5y-\!8x+\!5y-\!6x=\cdots&lt;/math&gt;
# &lt;math&gt;\!3x(\!2x+\!y)+\!10y=\cdots&lt;/math&gt;
# &lt;math&gt;\!-5y+\!6x-\!7y+\!8x=\cdots&lt;/math&gt;
# &lt;math&gt;\!6x^2+\!5x+\!4x^2-\!5x=\cdots&lt;/math&gt;
# &lt;math&gt;\!3y+\!5x-\!5(\!2x+\!5y)=\cdots&lt;/math&gt;
# &lt;math&gt;\!-9(\!3x+\!5y)-4y=\cdots&lt;/math&gt;
# &lt;math&gt;\!5x^2+\!3y-\!3x^2-\!6y+\!5x-\!8x=\cdots&lt;/math&gt;
# &lt;math&gt;\!12x(\!3x+\!6y)+\!5xy=\cdots&lt;/math&gt;
# &lt;math&gt;\!4(\!3x-\!7y)+\!5(\!6x+\!3y)=\cdots&lt;/math&gt;
# &lt;math&gt;\!5x(\!5x+\!3y)+(\!4x-\!5y)=\cdots&lt;/math&gt;
# &lt;math&gt;\!(\!3x+\!5y)\times\!(\!5x-\!y)=\cdots&lt;/math&gt;
# &lt;math&gt;\!(\!5x+\!3y)\times\!(\!3x-\!6y)=\cdots&lt;/math&gt;
# &lt;math&gt;\!(\!4x-\!4y)\times\!(\!6x-\!6y)=\cdots&lt;/math&gt;
# &lt;math&gt;\![(\!3x+\!2)+\!5y]+\!3x-\!5y-\!9x=\cdots&lt;/math&gt;
# &lt;math&gt;\![\!5x(\!3x+\!2y)+5xy-\!9x]+\!5x=\cdots&lt;/math&gt;
# &lt;math&gt;\!7x-\![(\!5x+\!y)\times\!(-7y)=\cdots&lt;/math&gt;
# &lt;math&gt;\![(\!6x+\!9)+\!7y(\!5+\!3x)]+\!24xy=\cdots&lt;/math&gt;
# &lt;math&gt;\!(\!x+\!y)\times\!2+\![(\!8y+\!x-\!4y)+(\!3x+\!5y-\!x)]=\cdots&lt;/math&gt;
# &lt;math&gt;\!(\!6x-\!4)\times\!(\!4x+\!5)\times\!(\!5x+\!6)=\cdots&lt;/math&gt;
# &lt;math&gt;\![\!4\times\!(\!3+\!7y)-\!17y]+\![(\!6x+\!5y-\!9x+\!(-7y)]=\cdots&lt;/math&gt;
# &lt;math&gt;\!5y\times\!(\!3+\!x)-\![\!5\times\!(\!5x-\!3y)+\!30x]=\cdots&lt;/math&gt;
# &lt;math&gt;\![\!(\!5x+\!5y)-\!(\!7y-\!(-3x)-\!y)]+\!(\!30x+\!15y)=\cdots&lt;/math&gt;
# &lt;math&gt;\!7x^2+\!5x-\!6y+\!5x^2-\!5x+\!7y-\!18x+\!8xy+\!x^2+\!12x-\!6y-\!7x^2+\!5x-\!4y\times\!(\!3x-\!6)+\!10xy-\!4x^2+\sqrt[3]{\!27x^3}=\cdots&lt;/math&gt;

[[Category:Mathematics Worksheet]]</text>
      <sha1>n3uv70sb2z8twda97cf5hye27jpkmbf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:R Programming/Navbar</title>
    <ns>10</ns>
    <id>200365</id>
    <revision>
      <id>2092658</id>
      <parentid>1546582</parentid>
      <timestamp>2011-05-05T14:41:04Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>color</comment>
      <text xml:space="preserve">{| cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; style=&quot;width:100%; border: 1px solid black;&quot; class=&quot;noprint&quot;
| style=&quot;width:33%; background-color:#f6f6f6;&quot; | {{#if: {{{1|}}}| [[../{{{1}}}{{!}}Previous: {{{1}}}]] }}
| style=&quot;width:33%; background-color:#f6f6f6; text-align:center;&quot; | [[R Programming|Index]]
| style=&quot;width:33%; background-color:#f6f6f6; text-align:right;&quot; | {{#if: {{{2|}}}| [[../{{{2}}}{{!}}Next: {{{2}}}]] }}
|}{{BookCat}}</text>
      <sha1>8ax98rlf7w0jterdj3snsacy72503sr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/R intro</title>
    <ns>0</ns>
    <id>200366</id>
    <redirect title="R Programming/Introduction" />
    <revision>
      <id>1546588</id>
      <timestamp>2009-06-24T12:53:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[R programming/R intro]] to [[R Programming/Introduction]]: Fixing title.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Introduction]]</text>
      <sha1>80lv6bkxffzq7iq652gvi07k00hdii1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/R settings</title>
    <ns>0</ns>
    <id>200367</id>
    <redirect title="R Programming/Settings" />
    <revision>
      <id>1546590</id>
      <timestamp>2009-06-24T12:54:49Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[R programming/R settings]] to [[R Programming/Settings]]: Fixing title.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Settings]]</text>
      <sha1>1hfujz1kgjjbf7ggrjjuswdgccc8m9n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Documentation</title>
    <ns>0</ns>
    <id>200369</id>
    <redirect title="R Programming/Documentation" />
    <revision>
      <id>1546595</id>
      <timestamp>2009-06-24T12:55:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[R programming/Documentation]] to [[R Programming/Documentation]]: Fixed title.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Documentation]]</text>
      <sha1>3qlrcd097f7jy6vceac3ewuaiq51ua5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Random Variables</title>
    <ns>0</ns>
    <id>200373</id>
    <redirect title="R Programming/Probability Distributions" />
    <revision>
      <id>2093271</id>
      <parentid>1571027</parentid>
      <timestamp>2011-05-07T12:01:10Z</timestamp>
      <contributor>
        <username>JackBot</username>
        <id>396820</id>
      </contributor>
      <minor />
      <comment>Bot: Fixing double redirect to [[R Programming/Probability Distributions]]</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Probability Distributions]]</text>
      <sha1>d1ex02327sdyah0mpvhxwdwgkto6wh5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Random Number Generation</title>
    <ns>0</ns>
    <id>200374</id>
    <redirect title="R Programming/Random Number Generation" />
    <revision>
      <id>1546606</id>
      <timestamp>2009-06-24T12:56:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[R programming/Random Number Generation]] to [[R Programming/Random Number Generation]]: Fixed title.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Random Number Generation]]</text>
      <sha1>th5n984kr9mpa9ta50gvyhdi0p0er7b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Data</title>
    <ns>0</ns>
    <id>200376</id>
    <redirect title="R Programming/Working with data frames" />
    <revision>
      <id>2483234</id>
      <parentid>1950545</parentid>
      <timestamp>2013-01-31T16:34:30Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect to [[R Programming/Working with data frames]]</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Working with data frames]]</text>
      <sha1>4kx9yy7l5mvugbdixpjzqn4oia1y5d5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Graphics</title>
    <ns>0</ns>
    <id>200377</id>
    <redirect title="R Programming/Graphics" />
    <revision>
      <id>1546612</id>
      <timestamp>2009-06-24T12:57:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[R programming/Graphics]] to [[R Programming/Graphics]]: Fixed title.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Graphics]]</text>
      <sha1>rzqx8ejkdjqyzjy85g0d2tcxcpfnrsh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Descriptive Statistics</title>
    <ns>0</ns>
    <id>200378</id>
    <redirect title="R Programming/Descriptive Statistics" />
    <revision>
      <id>1546614</id>
      <timestamp>2009-06-24T12:57:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[R programming/Descriptive Statistics]] to [[R Programming/Descriptive Statistics]]: Fixed title.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Descriptive Statistics]]</text>
      <sha1>hlp8n3azf21g7n60lnixrkodin0htrl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Linear Models</title>
    <ns>0</ns>
    <id>200379</id>
    <redirect title="R Programming/Linear Models" />
    <revision>
      <id>1546616</id>
      <timestamp>2009-06-24T12:57:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[R programming/Linear Models]] to [[R Programming/Linear Models]]: Fixed title.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Linear Models]]</text>
      <sha1>7oo63qiec4xbnav1ppl3x9voscl93eb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Bayesian Methods</title>
    <ns>0</ns>
    <id>200381</id>
    <redirect title="R Programming/Bayesian Methods" />
    <revision>
      <id>1546620</id>
      <timestamp>2009-06-24T12:57:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[R programming/Bayesian Methods]] to [[R Programming/Bayesian Methods]]: Fixed title.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Bayesian Methods]]</text>
      <sha1>3n4pfdtlmnily5myrkuliboel0pa9ro</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Bootstrap</title>
    <ns>0</ns>
    <id>200382</id>
    <redirect title="R Programming/Bootstrap" />
    <revision>
      <id>1546624</id>
      <timestamp>2009-06-24T12:57:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[R programming/Bootstrap]] to [[R Programming/Bootstrap]]: Fixed title.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Bootstrap]]</text>
      <sha1>7i4wa845zt0m544gf7ektlh49xx4zsp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Non Parametric</title>
    <ns>0</ns>
    <id>200383</id>
    <redirect title="R Programming/Nonparametric Methods" />
    <revision>
      <id>2213497</id>
      <parentid>2071629</parentid>
      <timestamp>2011-11-18T00:08:08Z</timestamp>
      <contributor>
        <username>Dcljr</username>
        <id>2099</id>
      </contributor>
      <comment>REDIRECT [[R Programming/Nonparametric Methods]]</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Nonparametric Methods]]</text>
      <sha1>rgwjtq0r2bwnqd4axaln0kdqtsbzguf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Quantile Regresion</title>
    <ns>0</ns>
    <id>200384</id>
    <redirect title="R Programming/Quantile Regression" />
    <revision>
      <id>1547316</id>
      <parentid>1546629</parentid>
      <timestamp>2009-06-24T20:31:06Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Quantile Regression]]</text>
      <sha1>3zv2gmc1ox5kjb7hab0d0p76gkdpafq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Duration analysis</title>
    <ns>0</ns>
    <id>200386</id>
    <redirect title="R Programming/Duration Analysis" />
    <revision>
      <id>1546633</id>
      <timestamp>2009-06-24T12:59:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[R programming/Duration analysis]] to [[R Programming/Duration Analysis]]: Fixed title.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Duration Analysis]]</text>
      <sha1>sqn3z6xzcqnpc5ij6d5tv054ijhop3o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Factor Analysis</title>
    <ns>0</ns>
    <id>200388</id>
    <redirect title="R Programming/Factor Analysis" />
    <revision>
      <id>1546637</id>
      <timestamp>2009-06-24T13:00:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[R programming/Factor Analysis]] to [[R Programming/Factor Analysis]]: Fixed title.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Factor Analysis]]</text>
      <sha1>evqdbh7l2z40ckbxgg7u41f09e3mdt8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Network Analysis</title>
    <ns>0</ns>
    <id>200389</id>
    <redirect title="R Programming/Network Analysis" />
    <revision>
      <id>1546639</id>
      <timestamp>2009-06-24T13:00:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[R programming/Network Analysis]] to [[R Programming/Network Analysis]]: Fixed title.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Network Analysis]]</text>
      <sha1>2k0wudajzr2apyg54qfzkj5hdfcc73x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R programming/Publication Quality Ouput</title>
    <ns>0</ns>
    <id>200390</id>
    <redirect title="R Programming/Publication quality ouput" />
    <revision>
      <id>2214204</id>
      <parentid>1546641</parentid>
      <timestamp>2011-11-19T16:46:57Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect to [[R Programming/Publication quality ouput]]</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Publication quality ouput]]</text>
      <sha1>7i9vhcv7wjvzkm1fmrue17tvgblslbf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFBibliography</title>
    <ns>10</ns>
    <id>200392</id>
    <redirect title="Template:False Friends of the Slavist/Bibliography" />
    <revision>
      <id>1546657</id>
      <timestamp>2009-06-24T13:15:46Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFBibliography]] to [[Template:False Friends of the Slavist/Bibliography]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Bibliography]]</text>
      <sha1>aiusl75etg8smicrk2o2ljk2mw25ii0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFBooks</title>
    <ns>10</ns>
    <id>200393</id>
    <redirect title="Template:False Friends of the Slavist/Books" />
    <revision>
      <id>1546662</id>
      <timestamp>2009-06-24T13:19:50Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFBooks]] to [[Template:False Friends of the Slavist/Books]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Books]]</text>
      <sha1>hgtike6jv2u7ddf8zdukfitryftb7ww</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFEmpty-</title>
    <ns>10</ns>
    <id>200394</id>
    <redirect title="Template:False Friends of the Slavist/Empty-" />
    <revision>
      <id>1546669</id>
      <timestamp>2009-06-24T13:24:49Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFEmpty-]] to [[Template:False Friends of the Slavist/Empty-]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Empty-]]</text>
      <sha1>2vuh530jvpsoac4cmv5gol1jaqxo5mm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFEmpty-1</title>
    <ns>10</ns>
    <id>200395</id>
    <redirect title="Template:False Friends of the Slavist/Empty-1" />
    <revision>
      <id>1546674</id>
      <timestamp>2009-06-24T13:26:51Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFEmpty-1]] to [[Template:False Friends of the Slavist/Empty-1]]: naminb convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Empty-1]]</text>
      <sha1>fwc724z8u5hdqt75m9y0mcu1ymqzmpl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFEmpty-x</title>
    <ns>10</ns>
    <id>200396</id>
    <redirect title="Template:False Friends of the Slavist/Empty-x" />
    <revision>
      <id>1546679</id>
      <timestamp>2009-06-24T13:28:27Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFEmpty-x]] to [[Template:False Friends of the Slavist/Empty-x]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Empty-x]]</text>
      <sha1>m9sheckgfwg6vuprkz7oqltaf7sxrib</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFEnd</title>
    <ns>10</ns>
    <id>200397</id>
    <redirect title="Template:False Friends of the Slavist/End" />
    <revision>
      <id>1546682</id>
      <timestamp>2009-06-24T13:30:07Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFEnd]] to [[Template:False Friends of the Slavist/End]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/End]]</text>
      <sha1>aqtf7m94a034czu5sub637fdd8roqd2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMonoSimple</title>
    <ns>10</ns>
    <id>200398</id>
    <redirect title="Template:False Friends of the Slavist/MonoSimple" />
    <revision>
      <id>1546685</id>
      <timestamp>2009-06-24T13:33:28Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMonoSimple]] to [[Template:False Friends of the Slavist/MonoSimple]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/MonoSimple]]</text>
      <sha1>96vg3wzb6ekmnpq5vdp145j1z8kojdz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FalseFriends</title>
    <ns>10</ns>
    <id>200400</id>
    <redirect title="Template:False Friends of the Slavist/FalseFriends" />
    <revision>
      <id>1546691</id>
      <timestamp>2009-06-24T13:38:06Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FalseFriends]] to [[Template:False Friends of the Slavist/FalseFriends]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/FalseFriends]]</text>
      <sha1>mjjxoqcfdf3mjo1vdg2kwkd726gassu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template talk:FalseFriends</title>
    <ns>11</ns>
    <id>200401</id>
    <redirect title="Template talk:False Friends of the Slavist/FalseFriends" />
    <revision>
      <id>1546693</id>
      <timestamp>2009-06-24T13:38:06Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template talk:FalseFriends]] to [[Template talk:False Friends of the Slavist/FalseFriends]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template talk:False Friends of the Slavist/FalseFriends]]</text>
      <sha1>pnz1ere8y7l1t35n6hydhf5ru19yo0o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-bg</title>
    <ns>10</ns>
    <id>200402</id>
    <redirect title="Template:False Friends of the Slavist/Flag-bg" />
    <revision>
      <id>1546698</id>
      <timestamp>2009-06-24T13:39:43Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-bg]] to [[Template:False Friends of the Slavist/Flag-bg]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-bg]]</text>
      <sha1>kcs19sfl06wirr6c2om09v4aotaid0j</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-by</title>
    <ns>10</ns>
    <id>200403</id>
    <redirect title="Template:False Friends of the Slavist/Flag-by" />
    <revision>
      <id>1546702</id>
      <timestamp>2009-06-24T13:41:30Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-by]] to [[Template:False Friends of the Slavist/Flag-by]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-by]]</text>
      <sha1>qvsnvw1cpan2mmp8og47z4wxnj86qcz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFHead</title>
    <ns>10</ns>
    <id>200404</id>
    <redirect title="Template:False Friends of the Slavist/Head" />
    <revision>
      <id>1546710</id>
      <timestamp>2009-06-24T13:44:01Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFHead]] to [[Template:False Friends of the Slavist/Head]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Head]]</text>
      <sha1>h8351fprzbix205spfvmqm75chqj9r6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFStart</title>
    <ns>10</ns>
    <id>200405</id>
    <redirect title="Template:False Friends of the Slavist/Start" />
    <revision>
      <id>1546714</id>
      <timestamp>2009-06-24T13:47:05Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFStart]] to [[Template:False Friends of the Slavist/Start]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Start]]</text>
      <sha1>8323pg9ftjnrtkitczao40yi1euwd39</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMonoHead</title>
    <ns>10</ns>
    <id>200406</id>
    <redirect title="Template:False Friends of the Slavist/MonoHead" />
    <revision>
      <id>1546717</id>
      <timestamp>2009-06-24T13:48:58Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMonoHead]] to [[Template:False Friends of the Slavist/MonoHead]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/MonoHead]]</text>
      <sha1>5vng44yzumt393t339le2wk425stkxk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMono</title>
    <ns>10</ns>
    <id>200407</id>
    <redirect title="Template:False Friends of the Slavist/Mono" />
    <revision>
      <id>1546722</id>
      <timestamp>2009-06-24T13:52:01Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMono]] to [[Template:False Friends of the Slavist/Mono]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Mono]]</text>
      <sha1>f8qbed4ey3dal3wopoqyf232q1up1pd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMapRow-x</title>
    <ns>10</ns>
    <id>200408</id>
    <redirect title="Template:False Friends of the Slavist/MapRow-x" />
    <revision>
      <id>1546726</id>
      <timestamp>2009-06-24T13:57:50Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMapRow-x]] to [[Template:False Friends of the Slavist/MapRow-x]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/MapRow-x]]</text>
      <sha1>b5n6shwi8z25kw3iy9ev8mj18rwcmnl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMapRow-1</title>
    <ns>10</ns>
    <id>200409</id>
    <redirect title="Template:False Friends of the Slavist/MapRow-1" />
    <revision>
      <id>1546729</id>
      <timestamp>2009-06-24T14:01:03Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMapRow-1]] to [[Template:False Friends of the Slavist/MapRow-1]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/MapRow-1]]</text>
      <sha1>ma43bldilnf9zpvqn1o00bpkelde5xf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMapRow-</title>
    <ns>10</ns>
    <id>200410</id>
    <redirect title="Template:False Friends of the Slavist/MapRow-" />
    <revision>
      <id>1546733</id>
      <timestamp>2009-06-24T14:02:47Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMapRow-]] to [[Template:False Friends of the Slavist/MapRow-]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/MapRow-]]</text>
      <sha1>qsb3ifqltkz8mwlu5xlld2bthjd8412</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Games and athletics bookshelf</title>
    <ns>4</ns>
    <id>200411</id>
    <revision>
      <id>1709404</id>
      <parentid>1709402</parentid>
      <timestamp>2010-01-31T18:33:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed link</comment>
      <text xml:space="preserve">{{deprecated bookshelf|[[Subject:Games]]}}
{{bookshelves}}
{{bookshelf|Games bookshelf}}
{{stages}}
----
This [[Wikibooks:Bookshelves|bookshelf]] is for games and game-related topics, except for [[Wikibooks:Electronic games bookshelf|electronic games]].

__TOC__

{{Requested books}}

== Board games ==
{{Goodbook|box=width: 300px; float: right;|title=Chess|cover=ChessSet.jpg|file=Chess.pdf|desc=Chess is an ancient strategy game played by two players. In this book you will not only learn to play chess, but you will learn to master it.}}

* [[Arimaa]] {{stage short|100%}}
* [[Chess]] {{stage short|100%}}
** [[Opening theory in chess]] {{stage short|25%}}
* [[Chinese checkers]]  {{stage|25%}}
* [[Diplomacy]] {{stage short|50%}}
* [[Go]] {{stage short|25%}}
** [[Computer Go]] {{stage short|00%}}
* [[Monopoly]] {{stage short|75%}}
* [[Reversi]] {{stage short|25%}}
* [[5 in a Row]] {{stage short|25%}}

{{Requested books}}

== Collectible card games ==

* [[Magic: The Gathering]] {{stage short|25%}}
* [[Pokémon Trading Card Game]] {{stage short|00%}}

{{Requested books}}

==Physical education==
: This section contains guides and manuals relating to physical education and training (martial arts, fighting, exercise, etc...).
: ''Add short exercise and fitness guides as appendices to [[Physical Activity]].''

* [[A Beginner's Guide to Rock Climbing]] {{stage short|25%}}
* [[Bodybuilding and Weight Training]]{{stage short|25%}}
* [[First Aid]]{{stage short|100%}}
* [[Guide to Parkour]]{{stage short|50%}}
* [[Outdoor Survival]]{{stage short|50%}}
* [[Physical Activity]]{{stage short|50%}}

{{Requested books}}

== Playing card games ==

* [[Bridge]]{{stage short|50%}}
* [[Euchre]]{{stage short|50%}}
* [[Hearts]]{{stage short|25%}}
* [[Poker]]{{stage short|50%}}

{{Requested books}}

== Puzzles ==

* [[Puzzles]] {{stage short|50%}}
* [[Rubik Puzzles]]{{stage short|25%}}
* [[How to solve the Rubik's Cube]]{{stage short|25%}}

{{Requested books}}

== Sports ==

* [[Baseball]]{{stage short|25%}}
* [[Basketball]]{{stage short|25%}}
* [[Cricket]]{{stage short|25%}}
* [[Fencing]]{{stage short|25%}}
* [[Canne de Combat]]{{stage short|25%}}
* [[Fishing]]{{stage short|25%}}
* [[Folkstyle Wrestling]] {{stage short|50%}}
* [[Football (Soccer)]] {{stage short|100%}}
* [[Table Tennis]]{{stage short|25%}}
* [[Tennis]]{{stage short|25%}}
* [[Ultimate Frisbee]]{{stage short|25%}}
* [[Hiking in the Canadian Rockies]] {{stage short|50%}}

{{Requested books}}

== Video Games ==

* See [[Wikibooks:Electronic games bookshelf|Electronic games bookshelf]]

{{Associated Wikimedia|Games
|Commons category    = Games 
|Wikinews portal     = Games 
|Wikinews category   = Games 
|Wikipedia           = Game
|Wikipedia portal    = Sports and games
|Wikiquote           = 
|Wikiquote category  = Games 
|Wikisource          = 
|Wikisource category = 
|Wikiversity         = 
|Wikiversity school  = 
|Wiktionary          = game 
|Wiktionary appendix = 
|Wiktionary category = Games 
}}

{{Associated Wikimedia|Athletics
|Commons category    = Athletics
|Wikinews portal     = Sports
|Wikinews category   = Athletics
|Wikipedia           = Athletics
|Wikipedia portal    = Sports and games
|Wikiquote           = Sports
|Wikiquote category  = Sports
|Wikisource          = 
|Wikisource category = Sports
|Wikiversity         = 
|Wikiversity school  = 
|Wiktionary          = athletics
|Wiktionary appendix = 
|Wiktionary category = 
}}

[[Category:Wikibooks bookshelves|Games bookshelf]]

[[de:Regal:Sport]]</text>
      <sha1>rtnzf198qdp3xbv34onv6y5namf9qgt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMapLegend3</title>
    <ns>10</ns>
    <id>200412</id>
    <redirect title="Template:False Friends of the Slavist/MapLegend3" />
    <revision>
      <id>1546738</id>
      <timestamp>2009-06-24T14:04:18Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMapLegend3]] to [[Template:False Friends of the Slavist/MapLegend3]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/MapLegend3]]</text>
      <sha1>3f49yw6kapxb6bpth18gd3sjw61dy77</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMapLegend</title>
    <ns>10</ns>
    <id>200413</id>
    <redirect title="Template:False Friends of the Slavist/MapLegend" />
    <revision>
      <id>1546743</id>
      <timestamp>2009-06-24T14:06:26Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMapLegend]] to [[Template:False Friends of the Slavist/MapLegend]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/MapLegend]]</text>
      <sha1>567l7g4z7yqtcfawfkf86a5siozeckf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMapConstructor</title>
    <ns>10</ns>
    <id>200414</id>
    <redirect title="Template:False Friends of the Slavist/MapConstructor" />
    <revision>
      <id>1546746</id>
      <timestamp>2009-06-24T14:08:29Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMapConstructor]] to [[Template:False Friends of the Slavist/MapConstructor]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/MapConstructor]]</text>
      <sha1>g3okqbp6m1njfwk38j2ur4svs4rgx72</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMap no3 cross</title>
    <ns>10</ns>
    <id>200415</id>
    <redirect title="Template:False Friends of the Slavist/Map no3 cross" />
    <revision>
      <id>1546750</id>
      <timestamp>2009-06-24T14:11:03Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMap no3 cross]] to [[Template:False Friends of the Slavist/Map no3 cross]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Map no3 cross]]</text>
      <sha1>ei9o25613kapfpii7pnu707e09boy46</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMap no2 cross</title>
    <ns>10</ns>
    <id>200416</id>
    <redirect title="Template:False Friends of the Slavist/Map no2 cross" />
    <revision>
      <id>1546754</id>
      <timestamp>2009-06-24T14:13:17Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMap no2 cross]] to [[Template:False Friends of the Slavist/Map no2 cross]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Map no2 cross]]</text>
      <sha1>mk2kfip3m7vljgq4tffoe4rxx1gfd40</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMap no1 cross</title>
    <ns>10</ns>
    <id>200417</id>
    <redirect title="Template:False Friends of the Slavist/Map no1 cross" />
    <revision>
      <id>1546757</id>
      <timestamp>2009-06-24T14:14:33Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMap no1 cross]] to [[Template:False Friends of the Slavist/Map no1 cross]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Map no1 cross]]</text>
      <sha1>kkwn58z7nblllro1jpzwnzrmdmpl4zw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMap no cross</title>
    <ns>10</ns>
    <id>200418</id>
    <redirect title="Template:False Friends of the Slavist/Map no cross" />
    <revision>
      <id>1546761</id>
      <timestamp>2009-06-24T14:16:24Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMap no cross]] to [[Template:False Friends of the Slavist/Map no cross]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Map no cross]]</text>
      <sha1>0ijvwti7tsyqihg6tmeelmnlnah1qis</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-by</title>
    <ns>10</ns>
    <id>200419</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-by" />
    <revision>
      <id>1546764</id>
      <timestamp>2009-06-24T14:18:08Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-by]] to [[Template:False Friends of the Slavist/Wiki-by]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-by]]</text>
      <sha1>lwzc4rj0y00tr6bly6x02154vnjgmqc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-bg</title>
    <ns>10</ns>
    <id>200420</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-bg" />
    <revision>
      <id>1546768</id>
      <timestamp>2009-06-24T14:19:36Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-bg]] to [[Template:False Friends of the Slavist/Wiki-bg]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-bg]]</text>
      <sha1>go6hn11bcilsd03vqdndvpb8yxnxrfm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-by</title>
    <ns>10</ns>
    <id>200421</id>
    <redirect title="Template:False Friends of the Slavist/Lang-by" />
    <revision>
      <id>1546771</id>
      <timestamp>2009-06-24T14:21:05Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-by]] to [[Template:False Friends of the Slavist/Lang-by]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-by]]</text>
      <sha1>b4pfwui4bks7vtozujzghxdqnxer5i9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-bg</title>
    <ns>10</ns>
    <id>200422</id>
    <redirect title="Template:False Friends of the Slavist/Lang-bg" />
    <revision>
      <id>1546774</id>
      <timestamp>2009-06-24T14:22:43Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-bg]] to [[Template:False Friends of the Slavist/Lang-bg]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-bg]]</text>
      <sha1>0pymxccosud05dxy7xm74ncrkac587s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-by</title>
    <ns>10</ns>
    <id>200423</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-by" />
    <revision>
      <id>1546778</id>
      <timestamp>2009-06-24T14:24:14Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-by]] to [[Template:False Friends of the Slavist/Jaz-by]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-by]]</text>
      <sha1>fuuzewa2qln5mxtq1z9o4wv5xdenk5p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-bg</title>
    <ns>10</ns>
    <id>200424</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-bg" />
    <revision>
      <id>1546782</id>
      <timestamp>2009-06-24T14:25:42Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-bg]] to [[Template:False Friends of the Slavist/Jaz-bg]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-bg]]</text>
      <sha1>sbgw48r89bx9qpnzkcxki9eyhdtinbw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-bih</title>
    <ns>10</ns>
    <id>200425</id>
    <redirect title="Template:False Friends of the Slavist/Flag-bih" />
    <revision>
      <id>1546786</id>
      <timestamp>2009-06-24T14:27:52Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-bih]] to [[Template:False Friends of the Slavist/Flag-bih]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-bih]]</text>
      <sha1>hvm3rmjjlvvndcvv31a7cmhvfd5x3e3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-bih</title>
    <ns>10</ns>
    <id>200426</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-bih" />
    <revision>
      <id>1546789</id>
      <timestamp>2009-06-24T14:31:31Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-bih]] to [[Template:False Friends of the Slavist/Jaz-bih]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-bih]]</text>
      <sha1>r627094m4baj9ju3bt7ul19mebrz8vl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-bih</title>
    <ns>10</ns>
    <id>200427</id>
    <redirect title="Template:False Friends of the Slavist/Lang-bih" />
    <revision>
      <id>1546795</id>
      <timestamp>2009-06-24T14:33:36Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-bih]] to [[Template:False Friends of the Slavist/Lang-bih]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-bih]]</text>
      <sha1>thtz4lkdkdokohx62yb3bhjgs24hlpc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Linear Algebra/Propositions</title>
    <ns>0</ns>
    <id>200429</id>
    <revision>
      <id>1811021</id>
      <parentid>1784731</parentid>
      <timestamp>2010-06-01T19:11:44Z</timestamp>
      <contributor>
        <username>Thenub314</username>
        <id>38087</id>
      </contributor>
      <comment>adding noincludes for print version</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{navigation|Book=Linear Algebra
|current=Propositions
|previous=Appendix
|next=Quantifiers}}
&lt;/noinclude&gt;
{{anchor|prop}}The point at issue in an argument is the
'''proposition'''.
{{anchor|thm}}Mathematicians usually write the point in full before the proof
and label it either '''Theorem''' for major points, '''Corollary'''
for points that follow immediately from a prior one, or '''Lemma'''
for results chiefly used to prove other results. 

The statements expressing propositions can be complex, with many subparts.
The truth or falsity of the entire proposition depends both on the
truth value of the parts, and on the words used to
assemble the statement from its parts.

===Not===
For example, where &lt;math&gt; P &lt;/math&gt; is a proposition,
&quot;it is not the case that &lt;math&gt; P &lt;/math&gt;&quot; is true provided that &lt;math&gt; P &lt;/math&gt; is
false.
Thus, &quot;&lt;math&gt; n &lt;/math&gt; is not prime&quot; is true only when &lt;math&gt; n &lt;/math&gt; is the
product of smaller integers.

{{anchor|Venn}}We can picture the &quot;not&quot; operation with a
'''Venn diagram'''.
&lt;center&gt;
[[Image:Linalg_venn_not.png|x200px]]
&lt;/center&gt;
Where the box encloses all natural numbers, and inside the circle are
the primes, the shaded area holds numbers satisfying &quot;not &lt;math&gt; P &lt;/math&gt;&quot;.

To prove that a &quot;not &lt;math&gt; P &lt;/math&gt;&quot; statement holds, show that &lt;math&gt; P &lt;/math&gt; is false.

===And===
Consider the statement form &quot;&lt;math&gt; P &lt;/math&gt; and &lt;math&gt; Q &lt;/math&gt;&quot;.
For the statement to be true both halves must hold:
&quot;&lt;math&gt; 7 &lt;/math&gt; is prime and so is &lt;math&gt; 3 &lt;/math&gt;&quot; is true, while
&quot;&lt;math&gt; 7 &lt;/math&gt; is prime and &lt;math&gt; 3 &lt;/math&gt; is not&quot; is false.

Here is the Venn diagram for &quot;&lt;math&gt; P &lt;/math&gt; and &lt;math&gt; Q &lt;/math&gt;&quot;.
&lt;center&gt;
[[Image:Linalg_venn_and.png|x200px]]

&lt;/center&gt;

To prove &quot;&lt;math&gt; P &lt;/math&gt; and &lt;math&gt; Q &lt;/math&gt;&quot;, prove that each half holds.

===Or===
A &quot;&lt;math&gt; P &lt;/math&gt; or &lt;math&gt; Q &lt;/math&gt;&quot; is true when either half holds:
&quot;&lt;math&gt; 7 &lt;/math&gt; is prime or &lt;math&gt; 4 &lt;/math&gt; is prime&quot; is true, while &quot;&lt;math&gt; 7 &lt;/math&gt; is not prime
or &lt;math&gt; 4 &lt;/math&gt; is prime&quot; is false.
We take &quot;or&quot; inclusively so that if both halves are true
&quot;&lt;math&gt; 7 &lt;/math&gt; is prime or &lt;math&gt; 4 &lt;/math&gt; is not&quot; then the statement as a whole is true.
(In everyday speech, sometimes &quot;or&quot; is meant in an exclusive way&amp;mdash; &quot;Eat
your vegetables or no dessert&quot; does not intend both halves to hold&amp;mdash; but
we will not use &quot;or&quot; in that way.)

The Venn diagram for &quot;or&quot; includes all of both circles.
&lt;center&gt;
[[Image:Linalg_venn_and.png|x200px]]
&lt;/center&gt;

To prove &quot;&lt;math&gt; P &lt;/math&gt; or &lt;math&gt; Q &lt;/math&gt;&quot;, show that in all cases at least one
half holds (perhaps sometimes one half and sometimes the other,
but always at least one).

===If-then===
{{anchor|implication}}An &quot;if &lt;math&gt; P &lt;/math&gt; then &lt;math&gt; Q &lt;/math&gt;&quot; statement (sometimes written
&quot;&lt;math&gt;P&lt;/math&gt; materially implies &lt;math&gt;Q&lt;/math&gt;&quot; or just
&quot;&lt;math&gt; P &lt;/math&gt; implies &lt;math&gt; Q &lt;/math&gt;&quot; or &quot;&lt;math&gt; P\implies Q&lt;/math&gt;&quot;) is true unless &lt;math&gt; P &lt;/math&gt;
is true while &lt;math&gt; Q &lt;/math&gt; is false.
Thus &quot;if &lt;math&gt; 7 &lt;/math&gt; is prime then &lt;math&gt; 4 &lt;/math&gt; is not&quot; is true
while &quot;if &lt;math&gt; 7 &lt;/math&gt; is prime then &lt;math&gt; 4 &lt;/math&gt; is also prime&quot; is false.
(Contrary to its
use in casual speech, in mathematics &quot;if &lt;math&gt; P &lt;/math&gt; then &lt;math&gt; Q &lt;/math&gt;&quot;
does not connote that
&lt;math&gt; P &lt;/math&gt; precedes &lt;math&gt; Q &lt;/math&gt; or causes &lt;math&gt; Q &lt;/math&gt;.)

{{anchor|vacuous}}More subtly, in mathematics &quot;if &lt;math&gt; P &lt;/math&gt; then &lt;math&gt; Q &lt;/math&gt;&quot; is
true when &lt;math&gt; P &lt;/math&gt; is false:
&quot;if &lt;math&gt; 4 &lt;/math&gt; is prime then &lt;math&gt; 7 &lt;/math&gt; is prime&quot; and
&quot;if &lt;math&gt; 4 &lt;/math&gt; is prime then &lt;math&gt; 7 &lt;/math&gt; is not&quot; are both true statements,
sometimes said to be '''vacuously true'''.
We adopt this convention because we want statements like &quot;if
a number is a perfect square then it is not prime&quot; to be true, for
instance when the number is &lt;math&gt; 5 &lt;/math&gt; or when the number is &lt;math&gt; 6 &lt;/math&gt;.

The diagram
&lt;center&gt;
[[Image:Linalg_venn_ifthen.png|x200px]]
&lt;/center&gt;
shows that &lt;math&gt; Q &lt;/math&gt; holds whenever &lt;math&gt; P &lt;/math&gt; does (another phrasing is
&quot;&lt;math&gt; P &lt;/math&gt; is sufficient to give &lt;math&gt; Q &lt;/math&gt;&quot;).
Notice again that if &lt;math&gt; P &lt;/math&gt; does not hold, &lt;math&gt; Q &lt;/math&gt; may or may not
be in force.

There are two main ways to establish an implication.
The first way is direct: assume that &lt;math&gt; P &lt;/math&gt; is true and, using that
assumption, prove &lt;math&gt; Q &lt;/math&gt;.
For instance,
to show &quot;if a number is divisible by 5 then twice that
number is divisible by 10&quot;, assume that the number is &lt;math&gt; 5n &lt;/math&gt; and
deduce that &lt;math&gt; 2(5n)=10n &lt;/math&gt;.
{{anchor|contrapositive}}The second way is indirect: prove the
'''contrapositive'''
statement: &quot;if &lt;math&gt; Q &lt;/math&gt; is false then &lt;math&gt; P &lt;/math&gt; is false&quot;
(rephrased, &quot;&lt;math&gt; Q &lt;/math&gt; can only be false when &lt;math&gt; P &lt;/math&gt; is also false&quot;).
As an example, to show &quot;if a number is prime then it
is not a perfect
square&quot;, argue that if it were a square &lt;math&gt; p=n^2 &lt;/math&gt; then it could be
factored &lt;math&gt; p=n\cdot n &lt;/math&gt; where &lt;math&gt; n&lt;p &lt;/math&gt; and so wouldn't be prime
(of course &lt;math&gt; p=0 &lt;/math&gt; or &lt;math&gt; p=1 &lt;/math&gt; don't give &lt;math&gt; n&lt;p &lt;/math&gt; but they
are nonprime by definition).

Note two things about this statement form.

First, an &quot;if &lt;math&gt; P &lt;/math&gt; then &lt;math&gt; Q &lt;/math&gt;&quot; result can sometimes be improved
by weakening &lt;math&gt; P &lt;/math&gt; or strengthening &lt;math&gt; Q &lt;/math&gt;.
Thus, &quot;if a number is divisible by &lt;math&gt; p^2 &lt;/math&gt; then its square is also
divisible by &lt;math&gt; p^2 &lt;/math&gt;&quot; could be upgraded either by relaxing its
hypothesis: &quot;if a number is divisible by &lt;math&gt; p &lt;/math&gt; then its square
is divisible by &lt;math&gt; p^2 &lt;/math&gt;&quot;, or by tightening its conclusion:  &quot;if
a number is divisible by &lt;math&gt; p^2 &lt;/math&gt; then its square is divisible by
&lt;math&gt; p^4 &lt;/math&gt;&quot;.

Second,
after showing &quot;if &lt;math&gt; P &lt;/math&gt; then &lt;math&gt; Q &lt;/math&gt;&quot;, a good next step is to look into
whether there are cases where &lt;math&gt; Q &lt;/math&gt; holds but &lt;math&gt; P &lt;/math&gt; does not.
The idea is to better understand the relationship between &lt;math&gt; P &lt;/math&gt; and
&lt;math&gt; Q &lt;/math&gt;, with an eye toward strengthening the proposition.

===Equivalence===
An if-then statement
cannot be improved when not only does &lt;math&gt; P &lt;/math&gt; imply &lt;math&gt; Q &lt;/math&gt;, but
also &lt;math&gt; Q &lt;/math&gt; implies &lt;math&gt; P &lt;/math&gt;.
Some ways to say this are:
&quot;&lt;math&gt; P &lt;/math&gt; if and only if
&lt;math&gt; Q &lt;/math&gt;&quot;, &quot;&lt;math&gt; P &lt;/math&gt; iff &lt;math&gt; Q &lt;/math&gt;&quot;, &quot;&lt;math&gt; P &lt;/math&gt; and &lt;math&gt; Q &lt;/math&gt; are logically
equivalent&quot;, &quot;&lt;math&gt; P &lt;/math&gt; is necessary and sufficient to give &lt;math&gt; Q &lt;/math&gt;&quot;,
&quot;&lt;math&gt; P\iff Q &lt;/math&gt;&quot;.
For example, &quot;a number is divisible by a prime if and only if that number
squared is divisible by the prime squared&quot;.

The picture here shows that &lt;math&gt; P &lt;/math&gt; and &lt;math&gt; Q &lt;/math&gt; hold in exactly the
same cases.
&lt;center&gt;
[[Image:Linalg_venn_equiv.png|x200px]]
&lt;/center&gt;
Although in simple arguments a chain like
&quot;&lt;math&gt; P &lt;/math&gt; if and only if &lt;math&gt;R&lt;/math&gt;, which holds if and only if &lt;math&gt;S&lt;/math&gt; ...&quot;
may be practical, typically we show equivalence by showing the
&quot;if &lt;math&gt; P &lt;/math&gt; then &lt;math&gt; Q &lt;/math&gt;&quot; and &quot;if &lt;math&gt; Q &lt;/math&gt;
then &lt;math&gt; P &lt;/math&gt;&quot; halves separately.
&lt;noinclude&gt;
{{navigation|Book=Linear Algebra
|current=Propositions
|previous=Appendix
|next=Quantifiers}}

{{BookCat}}
&lt;/noinclude&gt;</text>
      <sha1>isupesf1tsby9u1tmdootrievbmkywi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Mater1</title>
    <ns>2</ns>
    <id>200430</id>
    <revision>
      <id>1546813</id>
      <timestamp>2009-06-24T14:53:13Z</timestamp>
      <contributor>
        <username>Mater1</username>
        <id>246535</id>
      </contributor>
      <minor />
      <comment>Created page with 'my name is john im in to anciant Greece mothology'</comment>
      <text xml:space="preserve">my name is john im in to anciant Greece mothology</text>
      <sha1>0jrtbrfizxvao9xzy2xt135jgkfocbm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Linear Algebra/Quantifiers</title>
    <ns>0</ns>
    <id>200432</id>
    <revision>
      <id>1811022</id>
      <parentid>1784733</parentid>
      <timestamp>2010-06-01T19:12:05Z</timestamp>
      <contributor>
        <username>Thenub314</username>
        <id>38087</id>
      </contributor>
      <comment>adding noincludes for print version</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{navigation|Book=Linear Algebra
|current=Quantifiers
|previous=Propositions
|next=Techniques of Proof}}&lt;/noinclude&gt;

Compare these two statements about natural numbers:
&quot;there is an &lt;math&gt; x &lt;/math&gt; such that &lt;math&gt; x &lt;/math&gt; is
divisible by &lt;math&gt; x^2 &lt;/math&gt;&quot; is true, while
&quot;for all numbers &lt;math&gt; x &lt;/math&gt;, that &lt;math&gt; x &lt;/math&gt; is divisible by &lt;math&gt; x^2 &lt;/math&gt;&quot; is false.
{{anchor|quant}}We call the &quot;there is&quot; and &quot;for all&quot; prefixes '''quantifiers'''.

===For all===
The &quot;for all&quot; prefix is the '''universal quantifier''',
symbolized &lt;math&gt; \forall &lt;/math&gt;.

Venn diagrams aren't very helpful with quantifiers, but in a sense the
box we draw to border the diagram shows the universal quantifier since
it dilineates the universe of possible members.
&lt;center&gt;
[[Image:Linalg_venn_forall.png|x200px]]
&lt;/center&gt;

To prove that a statement holds in all cases,
we must show that it holds in each case.
Thus, to prove &quot;every number divisible by &lt;math&gt; p &lt;/math&gt; has its
square divisible by &lt;math&gt; p^2 &lt;/math&gt;&quot;, take a single number of the form
&lt;math&gt; pn &lt;/math&gt; and square it &lt;math&gt; (pn)^2=p^2n^2 &lt;/math&gt;.
This is a &quot;typical element&quot; or &quot;generic element&quot; proof.

This kind of argument requires that we are careful to not assume
properties for that element
other than those in the hypothesis&amp;mdash; for instance,
this type of wrong argument is a common mistake:
&quot;if &lt;math&gt; n &lt;/math&gt; is divisible by a prime, say &lt;math&gt; 2 &lt;/math&gt;, so that &lt;math&gt; n=2k &lt;/math&gt;
then &lt;math&gt; n^2=(2k)^2=4k^2 &lt;/math&gt; and the square of the number is divisible
by the square of the prime&quot;.
That is an argument about the case &lt;math&gt; p=2 &lt;/math&gt;, but it isn't a proof for
general &lt;math&gt; p &lt;/math&gt;.

===There exists===
We will also use the
'''existential quantifier''', symbolized
&lt;math&gt; \exists &lt;/math&gt; and read &quot;there exists&quot;.

As noted above, Venn diagrams are not much help with quantifiers, but a picture
of &quot;there is a number such that &lt;math&gt; P &lt;/math&gt;&quot; would show both that there can be
more than one and that not all numbers need satisfy &lt;math&gt; P &lt;/math&gt;.
&lt;center&gt;
[[Image:Linalg_venn_thereexists.png|x200px]]
&lt;/center&gt;

An existence proposition can be proved by producing something satisfying
the property: once, to settle the question of primality of
&lt;math&gt; 2^{2^5}+1 &lt;/math&gt;, Euler produced its divisor &lt;math&gt; 641 &lt;/math&gt;.
But there are proofs
showing that something exists without saying how to find it;
Euclid's argument given in the next subsection
shows there are infinitely many primes without naming them.
In general, while demonstrating existence is better than nothing,
giving an example is better, and an
exhaustive list of all instances is great.
Still, mathematicians take what they can get.

Finally,
along with &quot;Are there any?&quot; we often ask &quot;How many?&quot;
That is why the issue of uniqueness often arises in conjunction
with questions of existence.
Many times the two arguments are simpler if separated, so note that just as
proving something exists does not show it is unique,
neither does proving something is unique show that it exists.
(Obviously &quot;the natural number with more factors than any other&quot;
would be unique, but in fact no such number exists.)
&lt;noinclude&gt;
{{navigation|Book=Linear Algebra
|current=Quantifiers
|previous=Propositions
|next=Techniques of Proof}}

{{BookCat}}
&lt;/noinclude&gt;</text>
      <sha1>8u66kqqbnr7le7zj6gsx78ex87u54kg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Linear Algebra/Techniques of Proof</title>
    <ns>0</ns>
    <id>200433</id>
    <revision>
      <id>2274005</id>
      <parentid>2274001</parentid>
      <timestamp>2012-02-24T23:00:03Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">&lt;noinclude&gt;{{navigation|Book=Linear Algebra
|current=Techniques of Proof
|previous=Quantifiers
|next=Sets, Functions, Relations}}&lt;/noinclude&gt;

===Induction===
Many proofs are iterative,
&quot;Here's why the statement is true for for the case of the number &lt;math&gt; 1 &lt;/math&gt;,
it then follows for &lt;math&gt; 2 &lt;/math&gt;, and from there to &lt;math&gt; 3 &lt;/math&gt;, and so on ...&quot;.
These are called proofs by '''induction'''.
Such a proof has two steps.
{{anchor|base step}}In the '''base step'''
the proposition is established for some first
number, often &lt;math&gt; 0 &lt;/math&gt; or &lt;math&gt; 1 &lt;/math&gt;.
{{anchor|inductive step}}Then in the '''inductive step'''
we assume that the proposition
holds for numbers up to some &lt;math&gt; k &lt;/math&gt;
and deduce that it then holds for the next number &lt;math&gt;k+1&lt;/math&gt;.

Here is an example.

&lt;blockquote&gt;
We will prove that &lt;math&gt; 1+2+3+\dots+n=n(n+1)/2 &lt;/math&gt;.

For the base step we must show that the formula holds when &lt;math&gt; n=1 &lt;/math&gt;.
That's easy, the sum of the first &lt;math&gt; 1 &lt;/math&gt; number does indeed equal
&lt;math&gt; 1(1+1)/2 &lt;/math&gt;.

For the inductive step, assume that the formula holds
for the numbers &lt;math&gt; 1,2,\ldots,k &lt;/math&gt;.
That is, assume all of these instances of the formula.

:&lt;math&gt;\begin{array}{rl}
1o
&amp;=1(1+1)/2  \\
\text{and}\quad 1+2
&amp;=2(2+1)/2  \\
\text{and}\quad  1+2+3
&amp;=3(3+1)/2  \\
&amp;\vdots    \\
\text{and}\quad 1+\dots+k
&amp;=k(k+1)/2
\end{array}&lt;/math&gt;

From this assumption we will deduce that
the formula therefore also holds in the &lt;math&gt; k+1 &lt;/math&gt; next case.
The deduction is  straightforward algebra.

:&lt;math&gt;
1+2+\cdots+k+(k+1)
=
\frac{k(k+1)}{2}+(k+1)
=
\frac{(k+1)(k+2)}{2}
&lt;/math&gt;

&lt;/blockquote&gt;

We've shown in the base case that the above proposition holds for &lt;math&gt; 1 &lt;/math&gt;.
We've shown in the inductive step
that if it holds for the case of &lt;math&gt; 1 &lt;/math&gt; then it also holds for &lt;math&gt; 2 &lt;/math&gt;;
therefore it does hold for &lt;math&gt;2&lt;/math&gt;.
We've also shown in the inductive step that
if the statement holds for the cases of &lt;math&gt; 1 &lt;/math&gt; and &lt;math&gt; 2 &lt;/math&gt;
then it also holds for the next case &lt;math&gt; 3 &lt;/math&gt;, etc.
Thus it holds for any natural number greater than or equal to &lt;math&gt; 1 &lt;/math&gt;.

Here is another example.

&lt;blockquote&gt;
We will prove that every integer greater than &lt;math&gt; 1 &lt;/math&gt; is a product
of primes.

The base step is easy: &lt;math&gt; 2 &lt;/math&gt; is the product of a single prime.

For the inductive step assume that each of &lt;math&gt; 2, 3,\ldots ,k &lt;/math&gt; is a
product of primes, aiming to show &lt;math&gt; k+1 &lt;/math&gt; is also a product of
primes.
There are two possibilities:
(i) if &lt;math&gt; k+1 &lt;/math&gt; is not divisible by a number smaller than itself then it
is a prime and so is the product of primes,
and (ii) if &lt;math&gt; k+1 &lt;/math&gt; is divisible then its
factors can be written as a product of primes (by the inductive hypothesis)
and so &lt;math&gt; k+1 &lt;/math&gt; can be rewritten as a product of primes.
That ends the proof.

(''Remark.''
The Prime Factorization Theorem of Number Theory says that
not only does a factorization exist, but that it is unique.
We've shown the easy half.)
&lt;/blockquote&gt;

There are two things to note about the &quot;next number&quot; in an induction
argument.

For one thing, while induction works on the integers, it's no good on the
reals.
There is no &quot;next&quot; real.

The other thing is that we sometimes use induction to go down, say, from
&lt;math&gt; 10 &lt;/math&gt; to &lt;math&gt; 9 &lt;/math&gt; to &lt;math&gt; 8 &lt;/math&gt;, etc., down to &lt;math&gt; 0 &lt;/math&gt;.
So &quot;next number&quot; could mean &quot;next lowest number&quot;.
Of course, at the end we have not shown the fact for all natural numbers, only
for those less than or equal to &lt;math&gt; 10 &lt;/math&gt;.

===Contradiction===
Another technique of proof is
to show something is true by showing it can't be false.

&lt;blockquote&gt;
The classic example is Euclid's, that there are
infinitely many primes.

Suppose there are only finitely many primes &lt;math&gt; p_1,\dots,p_k &lt;/math&gt;.
Consider &lt;math&gt; p_1\cdot p_2\dots p_k +1 &lt;/math&gt;.
None of the primes on this supposedly exhaustive list divides that number
evenly, each leaves a remainder of &lt;math&gt; 1 &lt;/math&gt;.
But every number is a product of primes so this can't be.
Thus there cannot be only finitely many primes.
&lt;/blockquote&gt;

Every proof by contradiction has the same form: '''assume''' that '''the false''' proposition '''is'''
'''true''' and '''derive''' some '''contradiction''' to known facts.
This kind of logic is known as Aristotelian Logic, or Term Logic

&lt;blockquote&gt;
Another example is this proof that
&lt;math&gt; \sqrt{2} &lt;/math&gt; is not a rational number.

Suppose that  &lt;math&gt; \sqrt{2}=m/n &lt;/math&gt;.

:&lt;math&gt;
2n^2=m^2
&lt;/math&gt;

Factor out the &lt;math&gt; 2 &lt;/math&gt;'s:
&lt;math&gt; n=2^{k_n}\cdot \hat{n} &lt;/math&gt;
and
&lt;math&gt; m=2^{k_m}\cdot \hat{m} &lt;/math&gt;
and rewrite.

:&lt;math&gt;
2\cdot (2^{k_n}\cdot \hat{n})^2
=
(2^{k_m}\cdot \hat{m})^2
&lt;/math&gt;

The Prime Factorization Theorem says that there must be the same number of
factors of &lt;math&gt; 2 &lt;/math&gt; on both sides, but there are an odd number
&lt;math&gt; 1+2k_n &lt;/math&gt; on the left and an even number &lt;math&gt; 2k_m &lt;/math&gt; on the right.
That's a contradiction, so a rational with a square of
&lt;math&gt; 2 &lt;/math&gt; cannot be.
&lt;/blockquote&gt;

Both of these examples aimed to prove something doesn't exist.
A negative proposition often suggests a proof by contradiction.
&lt;noinclude&gt;
{{navigation|Book=Linear Algebra
|current=Techniques of Proof
|previous=Quantifiers
|next=Sets, Functions, Relations}}

{{BookCat}}
&lt;/noinclude&gt;</text>
      <sha1>avj9lef349d7ngmhj7nkh0j25dtbger</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-cz</title>
    <ns>10</ns>
    <id>200434</id>
    <redirect title="Template:False Friends of the Slavist/Flag-cz" />
    <revision>
      <id>1546830</id>
      <timestamp>2009-06-24T15:02:28Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-cz]] to [[Template:False Friends of the Slavist/Flag-cz]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-cz]]</text>
      <sha1>57b5xnvvfnepat9hyeyrdptfidr6l6y</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-hr</title>
    <ns>10</ns>
    <id>200435</id>
    <redirect title="Template:False Friends of the Slavist/Flag-hr" />
    <revision>
      <id>1546836</id>
      <timestamp>2009-06-24T15:04:11Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-hr]] to [[Template:False Friends of the Slavist/Flag-hr]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-hr]]</text>
      <sha1>3cjzqfigsmrl3gldx954ra33wpkffmv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Jpfranzen</title>
    <ns>3</ns>
    <id>200436</id>
    <revision>
      <id>1546908</id>
      <parentid>1546838</parentid>
      <timestamp>2009-06-24T15:27:46Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <comment>/* Non-commercial use files */ found some possible alternatives</comment>
      <text xml:space="preserve">Welcome, Jpfranzen!
{| style=&quot;background:white; border:1px solid #abd5f5;; padding:0px; border-spacing:0px; color: #000000;&quot;
 ! style=&quot;background:#d0e5f5; color: #000000;&quot; | [[Wikibooks:Welcome|Getting started]] with Wikibooks
 |-
 | style=&quot;padding:5px;&quot; |
* Wikibooks is a collection of open-source textbooks. Find out [[WB:WIW|what this means]].
* To sign your name (on discussion pages), use four tildes, like this: &amp;#126;&amp;#126;&amp;#126;&amp;#126; 
* Learn how to [[Using Wikibooks|use Wikibooks]] and learn more about the community.
* [[WB:CCO|Explore]], [[Wikibooks:Be bold|be bold]], and have fun!
 |}

Come introduce yourself in the [[Wikibooks:Reading room/General|general reading room]] or your project in the [[Wikibooks:Reading room/Projects|project reading room]].  If you have any questions, you can ask in the [[Wikibooks:Reading room/Assistance|assistance reading room]] or contact me personally.

== Non-commercial use files ==

You recently uploaded the same file twice under [[:File:Computerslease.jpg]] and [[:File:Computerlease.jpg]]. Unfortunately that image cannot be used on Wikibooks because its license does not permit commercial uses. You can read [[Wikibooks:Media]] for information on Wikibooks licensing requirements for uploaded files. --&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 15:05, 24 June 2009 (UTC)

Here's some alternatives on flickr I found that don't seem to have this issue:

* http://www.flickr.com/photos/eurleif/255241547/sizes/l/
* http://www.flickr.com/photos/36144637@N00/159627089/sizes/l/
* http://www.flickr.com/photos/mumpfpuffel/3232054252/sizes/l/
* http://www.flickr.com/photos/pete/152018285/sizes/o/

--&lt;span style=&quot;font: bold 10pt 'courier new', comic, sans, ms;&quot;&gt;[[User:Darklama|&lt;font color=&quot;midnightblue&quot;&gt;dark&lt;/font&gt;]][[User_talk:Darklama|&lt;font color=&quot;green&quot;&gt;lama&lt;/font&gt;]]&lt;/span&gt; 15:27, 24 June 2009 (UTC)</text>
      <sha1>e2xuxfazp7bdl1cdotz2t7ivs38vftn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-ka</title>
    <ns>10</ns>
    <id>200437</id>
    <redirect title="Template:False Friends of the Slavist/Flag-ka" />
    <revision>
      <id>1546841</id>
      <timestamp>2009-06-24T15:06:06Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-ka]] to [[Template:False Friends of the Slavist/Flag-ka]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-ka]]</text>
      <sha1>kamcqdw2b32gfzju2zx26z09eqb8qh2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-lso</title>
    <ns>10</ns>
    <id>200438</id>
    <redirect title="Template:False Friends of the Slavist/Flag-lso" />
    <revision>
      <id>1546844</id>
      <timestamp>2009-06-24T15:06:56Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-lso]] to [[Template:False Friends of the Slavist/Flag-lso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-lso]]</text>
      <sha1>q6wk9b0kds8xn8520x573qq55uap55s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-mk</title>
    <ns>10</ns>
    <id>200439</id>
    <redirect title="Template:False Friends of the Slavist/Flag-mk" />
    <revision>
      <id>1546846</id>
      <timestamp>2009-06-24T15:07:33Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-mk]] to [[Template:False Friends of the Slavist/Flag-mk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-mk]]</text>
      <sha1>ov6ke3yfpfc64v0qf2kvmowrd6gzic0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-pl</title>
    <ns>10</ns>
    <id>200440</id>
    <redirect title="Template:False Friends of the Slavist/Flag-pl" />
    <revision>
      <id>1546848</id>
      <timestamp>2009-06-24T15:08:01Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-pl]] to [[Template:False Friends of the Slavist/Flag-pl]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-pl]]</text>
      <sha1>lledg1otksjt4gh6aw0yuruv7dxppan</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-rs</title>
    <ns>10</ns>
    <id>200441</id>
    <redirect title="Template:False Friends of the Slavist/Flag-rs" />
    <revision>
      <id>1546850</id>
      <timestamp>2009-06-24T15:08:30Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-rs]] to [[Template:False Friends of the Slavist/Flag-rs]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-rs]]</text>
      <sha1>6bldzgstou8vai3g1qbip5su0b5dnz4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-rus</title>
    <ns>10</ns>
    <id>200442</id>
    <redirect title="Template:False Friends of the Slavist/Flag-rus" />
    <revision>
      <id>1546852</id>
      <timestamp>2009-06-24T15:09:00Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-rus]] to [[Template:False Friends of the Slavist/Flag-rus]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-rus]]</text>
      <sha1>fl6xcigl1tpkobulf17lvlrqzi9ex73</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-sk</title>
    <ns>10</ns>
    <id>200443</id>
    <redirect title="Template:False Friends of the Slavist/Flag-sk" />
    <revision>
      <id>1546854</id>
      <timestamp>2009-06-24T15:09:37Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-sk]] to [[Template:False Friends of the Slavist/Flag-sk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-sk]]</text>
      <sha1>s5ob7yli19ok66hv2yrla3wlwc4dyky</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-slo</title>
    <ns>10</ns>
    <id>200444</id>
    <redirect title="Template:False Friends of the Slavist/Flag-slo" />
    <revision>
      <id>1546856</id>
      <timestamp>2009-06-24T15:10:10Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-slo]] to [[Template:False Friends of the Slavist/Flag-slo]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-slo]]</text>
      <sha1>qqof5579vyu6cju6ip424ixatqx6pgn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-ua</title>
    <ns>10</ns>
    <id>200445</id>
    <redirect title="Template:False Friends of the Slavist/Flag-ua" />
    <revision>
      <id>1546858</id>
      <timestamp>2009-06-24T15:10:36Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-ua]] to [[Template:False Friends of the Slavist/Flag-ua]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-ua]]</text>
      <sha1>ekoi4esmx40hgezkxlswezxfdkw6nin</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-uso</title>
    <ns>10</ns>
    <id>200446</id>
    <redirect title="Template:False Friends of the Slavist/Flag-uso" />
    <revision>
      <id>1546860</id>
      <timestamp>2009-06-24T15:11:01Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-uso]] to [[Template:False Friends of the Slavist/Flag-uso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-uso]]</text>
      <sha1>aejtsbznbwlfn32jpwv6d34917ja1l0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFFlag-yu</title>
    <ns>10</ns>
    <id>200447</id>
    <redirect title="Template:False Friends of the Slavist/Flag-yu" />
    <revision>
      <id>1546862</id>
      <timestamp>2009-06-24T15:11:25Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFFlag-yu]] to [[Template:False Friends of the Slavist/Flag-yu]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Flag-yu]]</text>
      <sha1>lzvvng4mn1ipzqd8zthfnrfwruox94q</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-cz</title>
    <ns>10</ns>
    <id>200448</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-cz" />
    <revision>
      <id>1546878</id>
      <timestamp>2009-06-24T15:21:18Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-cz]] to [[Template:False Friends of the Slavist/Jaz-cz]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-cz]]</text>
      <sha1>5th44e0k7dmsakew94ocvxnlllqu1gc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-hr</title>
    <ns>10</ns>
    <id>200449</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-hr" />
    <revision>
      <id>1546881</id>
      <timestamp>2009-06-24T15:21:53Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-hr]] to [[Template:False Friends of the Slavist/Jaz-hr]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-hr]]</text>
      <sha1>160v0s3nk5qgpryr6bxdh6bjqb0iqnv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-ka</title>
    <ns>10</ns>
    <id>200450</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-ka" />
    <revision>
      <id>1546885</id>
      <timestamp>2009-06-24T15:22:20Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-ka]] to [[Template:False Friends of the Slavist/Jaz-ka]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-ka]]</text>
      <sha1>n1etezz8pta6tquhlymkmbyza78u4g3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-lso</title>
    <ns>10</ns>
    <id>200451</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-lso" />
    <revision>
      <id>1546887</id>
      <timestamp>2009-06-24T15:22:47Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-lso]] to [[Template:False Friends of the Slavist/Jaz-lso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-lso]]</text>
      <sha1>93kgsupl7vjgd72c69g7ocyxezy5kzw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-mk</title>
    <ns>10</ns>
    <id>200452</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-mk" />
    <revision>
      <id>1546889</id>
      <timestamp>2009-06-24T15:23:14Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-mk]] to [[Template:False Friends of the Slavist/Jaz-mk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-mk]]</text>
      <sha1>gz631id59emz6x550x80pjbrzkb2403</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-pl</title>
    <ns>10</ns>
    <id>200453</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-pl" />
    <revision>
      <id>1546891</id>
      <timestamp>2009-06-24T15:23:42Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-pl]] to [[Template:False Friends of the Slavist/Jaz-pl]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-pl]]</text>
      <sha1>3eh57z8ccut8sez2v4wy1325u41udsg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-rus</title>
    <ns>10</ns>
    <id>200454</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-rus" />
    <revision>
      <id>1546893</id>
      <timestamp>2009-06-24T15:24:11Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-rus]] to [[Template:False Friends of the Slavist/Jaz-rus]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-rus]]</text>
      <sha1>87uf0to31c75aohkdk65vvkmt5vno7s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-sk</title>
    <ns>10</ns>
    <id>200455</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-sk" />
    <revision>
      <id>1546897</id>
      <timestamp>2009-06-24T15:24:44Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-sk]] to [[Template:False Friends of the Slavist/Jaz-sk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-sk]]</text>
      <sha1>38nku8o5c0q2dcihkqgeuaoiv2177l0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-slo</title>
    <ns>10</ns>
    <id>200456</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-slo" />
    <revision>
      <id>1546899</id>
      <timestamp>2009-06-24T15:25:16Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-slo]] to [[Template:False Friends of the Slavist/Jaz-slo]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-slo]]</text>
      <sha1>dac4hitgrhzsdmi1tda6isfg3407ae0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-ua</title>
    <ns>10</ns>
    <id>200457</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-ua" />
    <revision>
      <id>1546902</id>
      <timestamp>2009-06-24T15:25:44Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-ua]] to [[Template:False Friends of the Slavist/Jaz-ua]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-ua]]</text>
      <sha1>a9m8odfjcj0tsugyhulcirrwdcgh6b5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-uso</title>
    <ns>10</ns>
    <id>200458</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-uso" />
    <revision>
      <id>1546904</id>
      <timestamp>2009-06-24T15:26:06Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-uso]] to [[Template:False Friends of the Slavist/Jaz-uso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-uso]]</text>
      <sha1>h6pfc2fh2ubc3x8dia1hi0brndlk2ln</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFJaz-yu</title>
    <ns>10</ns>
    <id>200459</id>
    <redirect title="Template:False Friends of the Slavist/Jaz-yu" />
    <revision>
      <id>1546906</id>
      <timestamp>2009-06-24T15:26:29Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFJaz-yu]] to [[Template:False Friends of the Slavist/Jaz-yu]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Jaz-yu]]</text>
      <sha1>2kcu4kmjcy0zlsfbuncsl7jq1xiweut</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Linear Algebra/Sets, Functions, Relations</title>
    <ns>0</ns>
    <id>200460</id>
    <revision>
      <id>2415020</id>
      <parentid>2414999</parentid>
      <timestamp>2012-10-04T23:15:15Z</timestamp>
      <contributor>
        <username>InverseHypercube</username>
        <id>434331</id>
      </contributor>
      <comment>/* Functions */</comment>
      <text xml:space="preserve">&lt;noinclude&gt;__NOTOC__
{{navigation|Book=Linear Algebra
|current=Sets, Functions, Relations
|previous=Techniques of Proof
|next=Licensing And History}}&lt;/noinclude&gt;

===Sets===
Mathematicians work with collections called '''sets'''.
A set can be given as a listing between curly braces as in
&lt;math&gt; \{ 1,4,9,16 \} &lt;/math&gt;, or, if that's
unwieldy, by using set-builder notation as in
&lt;math&gt; \{x\,\big|\, x^5-3x^3+2=0 \} &lt;/math&gt; (read &quot;the set of all &lt;math&gt; x &lt;/math&gt;
such that \ldots&quot;).
We name sets with capital roman letters as with the primes
&lt;math&gt; P=\{2,3,5,7,11,\ldots\,\} &lt;/math&gt;, except for a few special sets such as the
real numbers &lt;math&gt; \mathbb{R} &lt;/math&gt;,
and the complex numbers &lt;math&gt; \mathbb{C} &lt;/math&gt;.
{{anchor|element}}To denote that something is an '''element''' (or '''member''') of a set we
use &quot;&lt;math&gt; {}\in {} &lt;/math&gt;&quot;,
so that &lt;math&gt; 7\in\{3,5,7\} &lt;/math&gt; while &lt;math&gt; 8\not\in\{3,5,7\} &lt;/math&gt;.

What distinguishes a set from any other type of collection is
the Principle of Extensionality, that two sets with the same elements
are equal.
Because of this principle,
in a set repeats collapse &lt;math&gt; \{7,7\}=\{7\} &lt;/math&gt; and order doesn't
matter &lt;math&gt; \{2,\pi\}=\{\pi,2\} &lt;/math&gt;.

{{anchor|subset}}We use &quot;&lt;math&gt; \subset &lt;/math&gt;&quot; for the subset
relationship: &lt;math&gt; \{2,\pi\}\subset\{2,\pi,7\} &lt;/math&gt;
and &quot;&lt;math&gt; \subseteq &lt;/math&gt;&quot; for subset or equality
(if &lt;math&gt; A &lt;/math&gt; is a subset of &lt;math&gt; B &lt;/math&gt; but &lt;math&gt; A\neq
B &lt;/math&gt; then &lt;math&gt; A &lt;/math&gt; is a '''proper subset'''
of &lt;math&gt; B &lt;/math&gt;).
These symbols may be flipped, for instance
&lt;math&gt; \{ 2,\pi,5\}\supset\{2,5\} &lt;/math&gt;.

Because of Extensionality, to prove that two sets are equal &lt;math&gt; A=B &lt;/math&gt;,
just show that they have the same members.
{{anchor|mutual inclusion}}Usually we show mutual inclusion,
that both &lt;math&gt; A\subseteq B &lt;/math&gt; and &lt;math&gt; A\supseteq B &lt;/math&gt;.

===Set operations===
Venn diagrams are handy here.
For instance, &lt;math&gt; x\in P &lt;/math&gt; can be pictured
&lt;center&gt;
[[Image:Linalg_venn_xinP.png|x200px]]
&lt;/center&gt;
and &quot;&lt;math&gt; P\subseteq Q &lt;/math&gt;&quot; looks like this.
&lt;center&gt;
[[Image:Linalg_venn_ifthen.png|x200px]]
&lt;/center&gt;

Note that this is a repeat of the diagram for &quot;if \ldots then ...&quot;
propositions.
That's because &quot;&lt;math&gt; P\subseteq Q &lt;/math&gt;&quot; means
&quot;if &lt;math&gt; x\in P &lt;/math&gt; then &lt;math&gt; x\in Q &lt;/math&gt;&quot;.

In general, for every propositional logic operator there is an associated set
operator.
{{anchor|complement}}For instance, the '''complement''' of &lt;math&gt; P &lt;/math&gt; is
&lt;math&gt; P^{\text{comp}}=\{x\,\big|\, \text{not }(x\in P)\} &lt;/math&gt;

&lt;center&gt;
[[Image:Linalg_venn_not.png|x200px]]
&lt;/center&gt;

the '''union''' is
&lt;math&gt; P\cup Q=\{x\,\big|\,(x\in P) \text{ or }(x\in Q)\} &lt;/math&gt;
&lt;center&gt;
[[Image:Linalg_venn_or.png|x200px]]
&lt;/center&gt;

and the '''intersection''' is
&lt;math&gt; P\cap Q=\{x\,\big|\, (x\in P)\text{ and }(x\in Q)\}. &lt;/math&gt;
&lt;center&gt;
[[Image:Linalg_venn_and.png|x200px]]
&lt;/center&gt;

{{anchor|empty}}}}When two sets share no members their intersection
is the '''empty set''' &lt;math&gt; \{\} &lt;/math&gt;,
symbolized &lt;math&gt; \varnothing &lt;/math&gt;.
Any set has the empty set for a subset, by the &quot;vacuously true&quot;
property of the definition of implication.

===Sequences===
We shall also use collections where order does matter and where repeats do
not collapse.
These are '''sequences''', denoted with angle brackets:
&lt;math&gt; \langle  2,3,7 \rangle \neq\langle 2,7,3 \rangle  &lt;/math&gt;.
{{anchor|ordered pair}}A sequence of length &lt;math&gt; 2 &lt;/math&gt; is sometimes called an
'''ordered pair''' and written with parentheses: &lt;math&gt; (\pi,3) &lt;/math&gt;.
We also sometimes say &quot;ordered triple&quot;, &quot;ordered &lt;math&gt; 4 &lt;/math&gt;-tuple&quot;, etc.
The set of ordered &lt;math&gt; n &lt;/math&gt;-tuples of elements of a set &lt;math&gt; A &lt;/math&gt; is denoted
&lt;math&gt; A^n &lt;/math&gt;.
Thus the set of pairs of reals is &lt;math&gt; \mathbb{R}^2 &lt;/math&gt;.

===Functions===
We first see functions in elementary Algebra, where they are
presented as formulas (e.g., &lt;math&gt; f(x)=16x^2-100 &lt;/math&gt;), but
progressing to more advanced Mathematics reveals more general
functions&amp;mdash; trigonometric ones,
exponential and
logarithmic ones, and even constructs like absolute value that involve
piecing together parts&amp;mdash; and we see that functions aren't
formulas, instead the key idea is that a function associates with its
input &lt;math&gt; x &lt;/math&gt; a single output &lt;math&gt; f(x) &lt;/math&gt;.

{{anchor|function}}Consequently, a '''function''' or '''map''' is defined
to be a set of ordered pairs &lt;math&gt; (x,f(x)\,) &lt;/math&gt;
such that &lt;math&gt; x &lt;/math&gt; suffices to determine &lt;math&gt; f(x) &lt;/math&gt;, that is:
if &lt;math&gt; x_1=x_2 &lt;/math&gt; then &lt;math&gt; f(x_1)=f(x_2) &lt;/math&gt;
(this requirement is referred to by saying a
function is '''well-defined''').\footnote{More on this is in the section
on isomorphisms}

{{anchor|argument}}Each input &lt;math&gt; x &lt;/math&gt; is one of the function's
'''arguments''' and each output &lt;math&gt; f(x) &lt;/math&gt; is a '''value'''.
{{anchor|domain}}The set of all arguments is &lt;math&gt; f &lt;/math&gt;'s
'''domain''' and the set of output values is its '''range'''.
{{anchor|codomain}}Usually we don't need know what is and is not in the range and we instead
work with a superset of the range, the '''codomain'''. The notation
for a function &lt;math&gt; f &lt;/math&gt; with domain &lt;math&gt; X &lt;/math&gt; and
codomain &lt;math&gt; Y &lt;/math&gt; is &lt;math&gt; f:X\to Y &lt;/math&gt;.
&lt;center&gt;
[[Image:Linalg_domain_range_codomain.png|x200px]]
&lt;/center&gt;
{{anchor|image}}We sometimes instead use the notation &lt;math&gt;
x\stackrel{f}{\longmapsto} 16x^2-100 &lt;/math&gt;, read &quot;&lt;math&gt; x &lt;/math&gt;
maps under &lt;math&gt; f &lt;/math&gt; to &lt;math&gt; 16x^2-100 &lt;/math&gt;&quot;, or &quot;&lt;math&gt;
16x^2-100 &lt;/math&gt; is the &quot;''image''' of &lt;math&gt; x &lt;/math&gt;'. 

Some maps, like &lt;math&gt; x\mapsto \sin(1/x) &lt;/math&gt;, can be thought of as
combinations of simple maps, here, &lt;math&gt; g(y)=\sin(y) &lt;/math&gt; applied
to the image of &lt;math&gt; f(x)=1/x &lt;/math&gt;. {{anchor|composition}}The
'''composition''' of &lt;math&gt; g:Y\to Z &lt;/math&gt; with &lt;math&gt;f:X\to Y&lt;/math&gt;, 
is the map sending &lt;math&gt; x\in X &lt;/math&gt; to &lt;math&gt; g(\, f(x)\,)\in Z &lt;/math&gt;.
It is denoted &lt;math&gt; g\circ f:X\to Z &lt;/math&gt;.
This definition only makes sense if the range of &lt;math&gt; f &lt;/math&gt; is a
subset of the domain of &lt;math&gt; g &lt;/math&gt;.

{{anchor|identity}}Observe that the '''identity map'''
&lt;math&gt; \mbox{id}:Y\to Y &lt;/math&gt; defined by
&lt;math&gt; \mbox{id}(y)=y &lt;/math&gt; has the property that for any &lt;math&gt; f:X\to Y &lt;/math&gt;,
the composition &lt;math&gt; \mbox{id}\circ f &lt;/math&gt; is equal to &lt;math&gt; f &lt;/math&gt;.
So an identity map plays the same role with respect to function composition
that the number &lt;math&gt; 0 &lt;/math&gt; plays in real number addition, or that the number
&lt;math&gt; 1 &lt;/math&gt; plays in multiplication.

{{anchor|left inverse}}In line with that analogy, define a
'''left inverse''' of a map &lt;math&gt; f:X\to Y &lt;/math&gt; to be a
function &lt;math&gt; g:\text{range}(f)\to X &lt;/math&gt; such that
&lt;math&gt; g\circ f &lt;/math&gt; is the identity map on &lt;math&gt; X &lt;/math&gt;.
{{anchor|right inverse}}Of course, a '''right inverse''' of &lt;math&gt; f &lt;/math&gt; is a
&lt;math&gt; h:Y\to X &lt;/math&gt; such that &lt;math&gt; f\circ h &lt;/math&gt; is the identity.

{{anchor|inverse}}A map that is both a left and right inverse of &lt;math&gt; f &lt;/math&gt;
is called simply an '''inverse'''.
An inverse, if one exists, is unique because if both &lt;math&gt; g_1 &lt;/math&gt; and
&lt;math&gt; g_2 &lt;/math&gt; are inverses of &lt;math&gt; f &lt;/math&gt; then
&lt;math&gt; g_1(x)=g_1\circ  (f\circ g_2) (x)
= (g_1\circ f) \circ g_2(x)
=g_2(x) &lt;/math&gt;
(the middle equality comes from the associativity of function composition),
so we often call it &quot;the&quot; inverse, written &lt;math&gt; f^{-1} &lt;/math&gt;.
For instance, the inverse of the function &lt;math&gt; f:\mathbb{R}\to \mathbb{R} &lt;/math&gt;
given by &lt;math&gt; f(x)=2x-3 &lt;/math&gt; is the function &lt;math&gt; f^{-1}:\mathbb{R}\to \mathbb{R} &lt;/math&gt;
given by &lt;math&gt; f^{-1}(x)=(x+3)/2 &lt;/math&gt;.

The superscript &quot;&lt;math&gt; f^{-1} &lt;/math&gt;&quot; notation for function inverse can be
confusing&amp;mdash; it doesn't mean &lt;math&gt; 1/f(x) &lt;/math&gt;.
It is used because it fits into a larger scheme.
Functions that have the same codomain as domain can be iterated,
so that where &lt;math&gt;f:X\to X&lt;/math&gt;, we can consider
the composition of &lt;math&gt;f&lt;/math&gt; with itself: &lt;math&gt; f\circ f &lt;/math&gt;,
and &lt;math&gt; f\circ f\circ f &lt;/math&gt;, etc.

Naturally enough, we
write &lt;math&gt;f\circ f&lt;/math&gt; as &lt;math&gt; f^2 &lt;/math&gt; and
&lt;math&gt;f\circ f\circ f&lt;/math&gt; as &lt;math&gt; f^3 &lt;/math&gt;, etc.
Note that the familiar exponent rules for real numbers obviously hold:
&lt;math&gt; f^i\circ f^j=f^{i+j} &lt;/math&gt; and &lt;math&gt; (f^i)^j=f^{i\cdot j} &lt;/math&gt;.
The relationship with the prior paragraph is that, where &lt;math&gt; f &lt;/math&gt; is invertible,
writing &lt;math&gt; f^{-1} &lt;/math&gt; for the inverse
and &lt;math&gt; f^{-2} &lt;/math&gt; for the inverse of &lt;math&gt; f^2 &lt;/math&gt;, etc., gives that
these familiar exponent rules continue to hold, once
&lt;math&gt; f^0 &lt;/math&gt; is defined to be the identity map.

{{anchor|onto}}If the codomain &lt;math&gt; Y &lt;/math&gt; equals the range of &lt;math&gt; f &lt;/math&gt; then
we say that the function is '''onto''' (or '''surjective''').
A function has a right inverse if and only if it is onto
(this is not hard to check).
{{anchor|injective}}If no two arguments share an image, if
&lt;math&gt; x_1\neq x_2 &lt;/math&gt; implies  that &lt;math&gt; f(x_1)\neq f(x_2) &lt;/math&gt;, then the function is
'''one-to-one''' (or '''injective'''). A function has a left inverse if and only if it is
one-to-one (this is also not hard to check).

{{anchor|bijection}}By the prior paragraph, a map has an inverse if and only if it is both
onto and one-to-one; such a function is a
'''correspondence'''.
It associates one and only one element of the domain with each element of the
range (for example, finite sets must have the same number of elements to be
matched up in this way).
Because a composition of one-to-one maps is one-to-one, and a composition
of onto maps is onto, a composition of correspondences is a
correspondence.

We sometimes want to shrink the domain of a function.
For instance, we may take the function &lt;math&gt; f:\mathbb{R}\to \mathbb{R} &lt;/math&gt; given by
&lt;math&gt; f(x)=x^2 &lt;/math&gt; and, in order to have an inverse, limit input arguments to
nonnegative reals &lt;math&gt; \hat{f}:\mathbb{R}^+\to \mathbb{R} &lt;/math&gt;.
{{anchor|restriction}}Technically, &lt;math&gt; \hat{f} &lt;/math&gt; is a different function than &lt;math&gt; f &lt;/math&gt;; we call it
the '''restriction''' of
&lt;math&gt; f &lt;/math&gt; to the smaller domain.

A final point on functions: neither &lt;math&gt; x &lt;/math&gt; nor &lt;math&gt; f(x) &lt;/math&gt; need be a number.
As an example, we can think of &lt;math&gt; f(x,y)=x+y &lt;/math&gt; as a function that
takes the ordered pair &lt;math&gt; (x,y) &lt;/math&gt; as its argument.

===Relations===
Some familiar operations are obviously functions:
addition maps &lt;math&gt; (5,3) &lt;/math&gt; to &lt;math&gt; 8 &lt;/math&gt;.
But what of &quot;&lt;math&gt; &lt; &lt;/math&gt;&quot; or &quot;&lt;math&gt; = &lt;/math&gt;&quot;?
We here take the approach of rephrasing &quot;&lt;math&gt; 3&lt;5 &lt;/math&gt;&quot; to &quot;&lt;math&gt; (3,5) &lt;/math&gt; is
in the relation &lt;math&gt; &lt; &lt;/math&gt;&quot;.
{{anchor|binary}}That is, define a '''binary relation''' on a set &lt;math&gt; A &lt;/math&gt; to be
a set of ordered pairs of elements of &lt;math&gt; A &lt;/math&gt;.
For example, the &lt;math&gt; &lt; &lt;/math&gt; relation is the set
&lt;math&gt;  \{(a,b)\,\big|\, a&lt;b\} &lt;/math&gt;; some elements of that set are
&lt;math&gt; (3,5) &lt;/math&gt;, &lt;math&gt; (3,7) &lt;/math&gt;, and &lt;math&gt; (1,100) &lt;/math&gt;.

Another binary relation on the natural numbers is equality; this relation is
formally written as the set
&lt;math&gt; \{\ldots,(-1,-1),(0,0),(1,1),\ldots\} &lt;/math&gt;.

Still another example is &quot;closer than &lt;math&gt; 10 &lt;/math&gt;&quot;, the set
&lt;math&gt; \{(x,y)\,\big|\, |x-y|&lt;10 \} &lt;/math&gt;.
Some members of that relation are &lt;math&gt; (1,10) &lt;/math&gt;, &lt;math&gt; (10,1) &lt;/math&gt;,
and &lt;math&gt; (42,44) &lt;/math&gt;.
Neither &lt;math&gt; (11,1) &lt;/math&gt; nor &lt;math&gt; (1,11) &lt;/math&gt; is a member.

Those examples illustrate the generality of the definition.
All kinds of relationships (e.g., &quot;both numbers
even&quot; or &quot;first number is the second with the digits reversed&quot;)
are covered under the definition.

===Equivalence Relations===
We shall need to say, formally, that two objects are alike in some way.
While these alike things aren't identical, they are related
(e.g., two integers that &quot;give the same remainder when divided by &lt;math&gt; 2 &lt;/math&gt;&quot;).

A binary relation &lt;math&gt; \{(a,b),\ldots \} &lt;/math&gt;
is an '''equivalence relation'''when it satisfies
&lt;ol type=1 start=1&gt;
&lt;li&gt; {{anchor|reflexivity}}'''reflexivity''': any object is related to itself;
&lt;li&gt; {{anchor|symmetry}}'''symmetry''': if &lt;math&gt; a &lt;/math&gt; is related to &lt;math&gt; b &lt;/math&gt; then
&lt;math&gt; b &lt;/math&gt; is related to &lt;math&gt; a &lt;/math&gt;;
&lt;li&gt; {{anchor|transitivity}}'''transitivity''':
if &lt;math&gt; a &lt;/math&gt; is related to &lt;math&gt; b &lt;/math&gt; and &lt;math&gt; b &lt;/math&gt; is
related to &lt;math&gt; c &lt;/math&gt; then &lt;math&gt; a &lt;/math&gt; is related to &lt;math&gt; c &lt;/math&gt;.
&lt;/ol&gt;
(To see that these conditions formalize being the same, read them again,
replacing &quot;is related to&quot; with &quot;is like&quot;.)

Some examples (on the integers): &quot;&lt;math&gt; = &lt;/math&gt;&quot; is an equivalence relation,
&quot;&lt;math&gt; &lt; &lt;/math&gt;&quot; does not satisfy symmetry,
&quot;same sign&quot; is a equivalence, while &quot;nearer than &lt;math&gt; 10 &lt;/math&gt;&quot; fails transitivity.

===Partitions===
In &quot;same sign&quot; &lt;math&gt; \{ (1,3),(-5,-7),(-1,-1),\ldots\} &lt;/math&gt;
there are two kinds of pairs, the first with both numbers positive
and the second with both negative.
So integers fall into exactly one of two classes, positive or negative.

A '''partition''' of a set &lt;math&gt; S &lt;/math&gt; is a collection of subsets
&lt;math&gt; \{S_1,S_2,\ldots\} &lt;/math&gt; such that
every element of &lt;math&gt; S &lt;/math&gt; is in one and only one &lt;math&gt; S_i &lt;/math&gt;:
&lt;math&gt; S_1\cup S_2\cup \ldots{} = S &lt;/math&gt;, and
if &lt;math&gt; i &lt;/math&gt; is not equal to &lt;math&gt; j &lt;/math&gt; then
&lt;math&gt; S_i\cap S_j=\varnothing &lt;/math&gt;.
Picture &lt;math&gt; S &lt;/math&gt; being decomposed into distinct parts.
&lt;center&gt;
[[Image:Linalg_partition.png|x200px]]
&lt;/center&gt;
Thus, the first paragraph says &quot;same sign&quot; partitions
the integers into the positives and the negatives.

Similarly, the equivalence relation &quot;=&quot; partitions the integers into
one-element sets.

Another example is the fractions.
Of course, &lt;math&gt;2/3&lt;/math&gt; and &lt;math&gt;4/6&lt;/math&gt; are equivalent fractions.
That is, for the set
&lt;math&gt;S=\{n/d\,\big|\, n,d\in\mathbb{Z}\text{ and }d\neq 0\}&lt;/math&gt;,
we define two elements &lt;math&gt;n_1/d_1&lt;/math&gt; and &lt;math&gt;n_2/d_2&lt;/math&gt;
to be equivalent if &lt;math&gt;n_1d_2=n_2d_1&lt;/math&gt;.
We can check that this is an equivalence relation, that is, that
it satisfies the above three conditions.
With that, &lt;math&gt;S&lt;/math&gt; is divided up into parts.
&lt;center&gt;
[[Image:Linalg_partition_2.png|x200px]]
&lt;/center&gt;

Before we show that equivalence relations always give rise to
partitions, we first illustrate the argument.
Consider the relationship between two integers of &quot;same parity&quot;,
the set &lt;math&gt; \{ (-1,3),(2,4),(0,0),\ldots\} &lt;/math&gt;
(i.e., &quot;give the same remainder when divided by &lt;math&gt; 2 &lt;/math&gt;&quot;).
We want to say that the natural numbers split into two pieces,
the evens and the odds, and inside a piece each member has the same
parity as each other.
So for each &lt;math&gt; x &lt;/math&gt; we define the set of numbers associated with
it: &lt;math&gt; S_x=\{y\,\big|\, (x,y)\in\text{same parity}\} &lt;/math&gt;.
Some examples are
&lt;math&gt; S_1=\{\ldots,-3,-1,1,3,\ldots\} &lt;/math&gt;, and
&lt;math&gt; S_4=\{\ldots,-2,0,2,4,\ldots\} &lt;/math&gt;, and
&lt;math&gt; S_{-1}=\{\ldots,-3,-1,1,3,\ldots\} &lt;/math&gt;.
These are the parts, e.g., &lt;math&gt; S_1 &lt;/math&gt; is the odds.



{{anchor|equiv partitions}}}}&lt;b&gt;Theorem&lt;/b&gt;
An equivalence relation induces a partition on the underlying set.

{{TextBox|1=
;Proof:
Call the set &lt;math&gt; S &lt;/math&gt; and the relation &lt;math&gt; R &lt;/math&gt;.
In line with the illustration in the paragraph above,
for each &lt;math&gt; x\in S &lt;/math&gt; define &lt;math&gt; S_x=\{y\,\big|\, (x,y)\in R\} &lt;/math&gt;.

Observe that, as &lt;math&gt; x &lt;/math&gt; is a member if &lt;math&gt; S_x &lt;/math&gt;,
the union of all these sets is &lt;math&gt; S &lt;/math&gt;.
So we will be done if we show that distinct parts are disjoint:
if &lt;math&gt; S_x\neq S_y &lt;/math&gt; then &lt;math&gt; S_x\cap S_y=\varnothing &lt;/math&gt;.
We will verify this through the contrapositive, that is,
we wlll assume that &lt;math&gt; S_x\cap S_y\neq\varnothing &lt;/math&gt; in order to
deduce that &lt;math&gt; S_x=S_y &lt;/math&gt;.

Let &lt;math&gt; p &lt;/math&gt; be an element of the intersection.
Then by definition of &lt;math&gt;S_x&lt;/math&gt; and &lt;math&gt;S_y&lt;/math&gt;, the two
&lt;math&gt; (x,p) &lt;/math&gt; and
&lt;math&gt; (y,p) &lt;/math&gt; are members of &lt;math&gt;R&lt;/math&gt;, and by symmetry of this relation
&lt;math&gt; (p,x) &lt;/math&gt; and
&lt;math&gt; (p,y) &lt;/math&gt; are also members of &lt;math&gt; R &lt;/math&gt;.
To show that &lt;math&gt; S_x=S_y &lt;/math&gt; we will show each is a subset of the other.

Assume that &lt;math&gt; q\in S_x &lt;/math&gt; so that &lt;math&gt; (q,x)\in R &lt;/math&gt;.
Use transitivity along with
&lt;math&gt; (x,p)\in R &lt;/math&gt; to conclude that &lt;math&gt; (q,p) &lt;/math&gt; is also an element of &lt;math&gt; R &lt;/math&gt;.
But &lt;math&gt; (p,y)\in R &lt;/math&gt; so another use of transitivity gives that
&lt;math&gt; (q,y)\in  R &lt;/math&gt;.
Thus &lt;math&gt; q\in S_y &lt;/math&gt;.
Therefore &lt;math&gt; q\in S_x &lt;/math&gt; implies &lt;math&gt; q\in S_y &lt;/math&gt;,
and so &lt;math&gt; S_x\subseteq S_y &lt;/math&gt;.

The same argument in the other direction gives the other inclusion, and
so the two sets are equal, completing the contrapositive argument.
}}

{{anchor|equiv classes}}}}We call each part of a partition an '''equivalence class'''
(or informally, &quot;part&quot;).

{{anchor|representitive}}We somtimes pick a single element of each equivalence class to be the
'''class representative'''.
&lt;center&gt;
[[Image:Linalg_partition_3.png|x200px]]
&lt;/center&gt;
Usually when we pick representatives we have some natural scheme in mind.
{{anchor|natural}}In that case we call them the '''canonical''' representatives.

An example is the simplest form of a fraction.
We've defined &lt;math&gt; 3/5 &lt;/math&gt; and &lt;math&gt; 9/15 &lt;/math&gt; to be equivalent fractions.
In everyday work we often use the &quot;simplest form&quot; or &quot;reduced form&quot;
fraction as the class representatives.
&lt;center&gt;
[[Image:Linalg_partition_4.png|x200px]]
&lt;/center&gt;
&lt;noinclude&gt;
{{navigation|Book=Linear Algebra
|current=Sets, Functions, Relations
|previous=Techniques of Proof
|next=Licensing And History}}

{{BookCat}}
&lt;/noinclude&gt;</text>
      <sha1>03gq4fnuc9ftohqc191e988r9i2zwtk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Harv</title>
    <ns>10</ns>
    <id>200461</id>
    <redirect title="Template:Harvard citation" />
    <revision>
      <id>1777450</id>
      <parentid>1546937</parentid>
      <timestamp>2010-04-27T03:43:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:Harv]]&quot;: shortcut to protected page ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Harvard citation]]</text>
      <sha1>dn9qlg927pkdnmfh95oeycbtkzo47bk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Harvard citation</title>
    <ns>10</ns>
    <id>200462</id>
    <revision>
      <id>1546940</id>
      <parentid>1546939</parentid>
      <timestamp>2009-06-24T16:32:44Z</timestamp>
      <contributor>
        <username>Mike.lifeguard</username>
        <id>55262</id>
      </contributor>
      <minor />
      <comment>1 revision from [[:w:Template:Harvard citation]]</comment>
      <text xml:space="preserve">&lt;includeonly&gt;&lt;cite class=&quot;inline&quot;&gt;({{#ifeq:{{{Ref|}}}|none
  |{{#if:{{{5|}}}
       |{{{1|}}} et al. {{{5|}}}
       |{{#if:{{{4|}}}
          |{{{1|}}}, {{{2|}}} &amp;amp; {{{3|}}} {{{4|}}}
          |{{#if:{{{3|}}}
             |{{{1|}}} &amp;amp; {{{2|}}} {{{3|}}}
             |{{{1|}}} {{{2|}}}
           }}
        }}
     }}
  |[[#{{#if:{{{Ref|}}}
       |{{{Ref}}}
       |CITEREF{{{1|}}}{{{2|}}}{{{3|}}}{{{4|}}}{{{5|}}}
       }}|{{#if:{{{5|}}}
          |{{{1|}}} et al. {{{5|}}}
          |{{#if:{{{4|}}}
             |{{{1|}}}, {{{2|}}} &amp;amp; {{{3|}}} {{{4|}}}
             |{{#if:{{{3|}}}
                |{{{1|}}} &amp;amp; {{{2|}}} {{{3|}}}
                |{{{1|}}} {{{2|}}}
             }}
           }}
    }}]]
}}{{#if:{{{loc|}}}
  |, {{{loc|}}}
  |{{#if:{{{p|}}}
     |, p.&amp;nbsp;{{{p|}}}
     |{{#if:{{{pp|}}}
        |, pp.&amp;nbsp;{{{pp|}}}
      }}
   }}
}})&lt;/cite&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{pp-template|small=yes}}
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>naaw82kpebj77yp483vjujg7s073v11</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Harvard citation/doc</title>
    <ns>10</ns>
    <id>200463</id>
    <revision>
      <id>1918003</id>
      <parentid>1918002</parentid>
      <timestamp>2010-08-20T18:45:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>/* Use with {{Citation}} */ fixed link</comment>
      <text xml:space="preserve">{{documentation subpage}}
&lt;!-- EDIT TEMPLATE DOCUMENTATION BELOW THIS LINE --&gt;
==Harvard citation templates==
The  templates for using Harvard citations are:
*{{tlx|Harvard citation}} or {{tlx|harv}} for a basic Harvard citation
*{{tlx|Harvard citation no brackets}} or {{tlx|harvnb}} for a Harvard citation with no brackets
*{{tlx|Harvard citation text}} or {{tlx|harvtxt}} for a Harvard citation with the name outside the brackets
*{{tlx|Harvard citations}} or {{tlx|harvs}} for multiple Harvard citations and other more complicated features. 
*{{tlx|citation}}  for formatting the reference.

This page describes the first 3; for the others see their documentation pages. 
==Usage==

: &lt;tt&gt;&lt;nowiki&gt;{{&lt;/nowiki&gt;Harvard citation |''Last name of author(s)''|''Year''| loc = ''Location in the text''}}&lt;/tt&gt;

Instead of using the optional loc parameter, you may also use one of the following parameters:

*&lt;tt&gt;p = ''page''&lt;/tt&gt;
*&lt;tt&gt;pp = ''pages''&lt;/tt&gt;

; Notes
*The abbreviation ''Harv'' may be used.
*The first parameter is the author's last name.
*Up to four authors can be given as parameters (see the examples). If there are more than 4 authors only the first 4 should be listed; listing more will cause odd things to happen.
*The next parameter is the year of publication.
*The year and author name(s) must not have extra space before and after, else the generated links will not work. (BUG)
*The &quot;loc = &quot; parameter is the location of the cited material within the reference. This parameter is optional.
*The parameter ''p'' is an optional page parameter; thus &quot;&lt;tt&gt;&lt;nowiki&gt;{{Harv|Smith|2006| p=25}}&lt;/nowiki&gt;&lt;/tt&gt;&quot; yields &quot;{{Harv|Smith|2006|p=25}}&quot;.
*The parameter ''pp'' is an optional page range parameter; thus &quot;&lt;tt&gt;&lt;nowiki&gt;{{Harv|Smith|2006| pp=25&amp;amp;ndash;26}}&lt;/nowiki&gt;&lt;/tt&gt;&quot; yields &quot;{{Harv|Smith|2006|pp=25–26}}&quot;.
*If ''Ref''=''none'', then no hyperlink is created.
*To avoid the brackets surrounding the citation, use {{tlx|Harvard citation no brackets}} or {{tlx|Harvnb}}.
*To use the author name(s) in the text, use {{tlx|Harvard citation text}} or {{tlx|Harvtxt}}.
*For more complicated Harvard citations with multiple links use {{tlx|Harvard citations}} or its abbreviation {{tlx|harvs}}.
*For authors who have published more than one work in the same year, the standard way to differentiate such works is to put a lowercase letter after the year (e.g. year=2006a and year=2006b).

Editors editing this template are requested to make parallel changes to the other versions.

==Examples==

:{| class=&quot;wikitable&quot;
|-
! Markup !! Result
|-
| &lt;tt&gt;&lt;nowiki&gt;{{Harv |Smith|2006| loc=&amp;amp;sect;8.5}}&lt;/nowiki&gt;&lt;/tt&gt;
| {{Harvard citation |Smith|2006| loc=&amp;sect;8.5}}
|-
| &lt;tt&gt;&lt;nowiki&gt;{{Harv |Smith|2006| p=25}}&lt;/nowiki&gt;&lt;/tt&gt;
| {{Harv |Smith|2006 |p=25}}
|-
| &lt;tt&gt;&lt;nowiki&gt;{{Harv |Smith|2006| pp=25&amp;amp;ndash;26}}&lt;/nowiki&gt;&lt;/tt&gt;
| {{Harv |Smith|2006| pp=25–26}}
|-
| &lt;tt&gt;&lt;nowiki&gt;{{Harv |Smith|2006| pp=25&amp;amp;ndash;26 | Ref=none}}&lt;/nowiki&gt;&lt;/tt&gt;
| {{Harv |Smith|2006| pp=25–26 | Ref=none}}
|-
| &lt;tt&gt;&lt;nowiki&gt;{{Harv |Smith|Jones|2006| p=25}}&lt;/nowiki&gt;&lt;/tt&gt;
| {{Harv |Smith|Jones|2006| p=25}}
|-
| &lt;tt&gt;&lt;nowiki&gt;{{Harv |Smith|Jones|Brown|2006| p=25}}&lt;/nowiki&gt;&lt;/tt&gt;
| {{Harv |Smith|Jones|Brown|2006| p=25}}
|-
| &lt;tt&gt;&lt;nowiki&gt;{{Harv |Smith|Jones|Brown|Black|2006| p=25}}&lt;/nowiki&gt;&lt;/tt&gt;
| {{Harv |Smith|Jones|Brown|Black|2006| p=25}}
|-
| &lt;tt&gt;&lt;nowiki&gt;{{Harvnb |Smith|2006| p=25}}&lt;/nowiki&gt;&lt;/tt&gt;
| {{Harvnb |Smith|2006| p=25}}
|-
| &lt;tt&gt;&lt;nowiki&gt;{{Harvtxt |Smith|2006| p=25}}&lt;/nowiki&gt;&lt;/tt&gt;
| {{Harvtxt |Smith|2006| p=25}}
|}

==Recommended style==
The recommended Harvard referencing style potentially uses all four templates. Each automatically generates a hypertext link based on the name(s) and date. Here is an example
:;Markup
:: &lt;tt&gt;&lt;nowiki&gt;Some works on gravitation are so massive they warp spacetime themselves {{Harv|Misner|Thorne|Wheeler|1973}}; yet {{Harvtxt|Einstein|1915}} presented essential equations with notable brevity. The essential ingredients are the curvature tensor and the stress-energy tensor ({{Harvnb|Einstein|1915|loc=p.&amp;amp;nbsp;844}}; {{Harvnb|Misner|Thorne|Wheeler|1973|loc=p.&amp;amp;nbsp;41}}).&lt;/nowiki&gt;&lt;/tt&gt;
:;Result
:: Some works on gravitation are so massive they warp spacetime themselves {{Harv|Misner|Thorne|Wheeler|1973}}; yet {{Harvtxt|Einstein|1915}} presented essential equations with notable brevity. The two ingredients are the curvature tensor and the stress-energy tensor ({{Harvnb|Einstein|1915|loc=p.&amp;nbsp;844}}; {{Harvnb|Misner|Thorne|Wheeler|1973|loc=p.&amp;nbsp;41}}).
In short:
# For a single work with no author in the text (the most common case), use {{tlx|Harv}}.
# For a single work with the author named in the text, use {{tlx|Harvtxt}}.
# For multiple works at the same point, use explicit parentheses and {{tlx|Harvnb}} separated by semicolons.
# For anything more complicated use {{tlx|Harvs}}.

==&lt;nowiki&gt;#CITEREF&lt;/nowiki&gt;==

More exotic Harvard citations can be constructed using the {{tlx|harvs}} template. If even this is not enough, then as a last resort one can use &lt;nowiki&gt;#CITEREF&lt;/nowiki&gt; as in the following example:
:&lt;nowiki&gt;[[w:Property (T)|]] was introduced by [[w:David Kazhdan|]] ([[w:Property T#CITEREFKazhdan1967|1967]]).&lt;/nowiki&gt;
which produces
:[[w:Property (T)|Property]] was introduced by [[w:David Kazhdan|David Kazhdan]] ([[w:Property T #CITEREFKazhdan1967|1967]])
with a link to the author, and a link to a citation on a different page.
&lt;nowiki&gt;#CITEREF&lt;/nowiki&gt; should be followed by the last names of up to 4 authors and the year (with no spaces),
and if the link is to a different page it should be preceded by the name of the page (with spaces allowed). The [[Template:Citation|citation template]] marks the reference using &lt;nowiki&gt;#CITEREF&lt;/nowiki&gt;; see the source of
[[Template:Citation/core]] for details.

==Use with &lt;nowiki&gt;{{Citation}}&lt;/nowiki&gt;==
The {{tlx|Citation}} template can be used to format the citations in the ''References'' section. 
Links from the Harvard citation to the Citation are provided using a &lt;code&gt;#CITEREF&lt;/code&gt; link. The {{tlx|Harvard citation}} template creates a link &lt;code&gt;#CITEREF&lt;/code&gt; followed by the concatenation of the author names and the year. {{tlx|Citation}} creates an [[w:HTML element#Links and anchors|anchor]] &lt;code&gt;&lt;nowiki&gt;&lt;a name=&quot;CITEREF&quot;&gt;&lt;/a&gt;&lt;/nowiki&gt;&lt;/code&gt; followed by the concatenation of the following parameters:
*'''last''' or '''last1''' or '''surname''' or '''surname1''' or '''author''' or '''author1''' or '''authors''',
*'''last2''' or '''surname2''' or '''author2''',
*'''last3''' or '''surname3''' or '''author3''',
*'''last4''' or '''surname4''' or '''author4''',
*'''editor-last''' or '''editor-surname''' or '''editor1-last''' or '''editor1-surname''' or '''editor''' or '''editors''',
*'''editor2-last''' or '''editor2-surname''',
*'''editor3-last''' or '''editor3-surname''',
*'''editor4-last''' or '''editor4-surname''',
*'''year''' or '''date'''.

For example &lt;tt&gt;&lt;nowiki&gt;{{Harv|Smith|2006| p=25}}&lt;/nowiki&gt;&lt;/tt&gt; produces a link &lt;code&gt;#CITEREFSmith2006&lt;/code&gt; and &lt;code&gt;&lt;nowiki&gt;{{Citation|last=Smith|first=John|year=2006|title=My Life}}&lt;/nowiki&gt;&lt;/code&gt;
produces an anchor &lt;code&gt;&lt;nowiki&gt;CITEREFSmith2006&lt;/nowiki&gt;&lt;/code&gt;.

==References==
*{{Citation
 | last=Smith
 | first=John
 | year=2006
 | title=My Life
}}
*{{Citation
 | last=Smith
 | first=John
 | last2=Jones
 | first2=Jack
 | year=2006
 |title=Our life together
}}
*{{Citation
 | author1=Smith
 | author2=Jones
 | author3=Brown
 | year=2006
 | title=Three's a crowd
}}
*{{Citation
 | author1=Smith
 | author2=Jones
 | author3=Brown
 | author4=Black
 | year=2006
 | title=All together now
}}
*{{Citation
 | last=Misner
 | first=Charles W.
 | last2=Thorne
 | first2=Kip S.
 | first3=John Archibald
 | last3=Wheeler
 | title=Gravitation
 | publisher=W. H. Freeman
 | location = San Francisco
 | year = 1973 
 | month = September 
 | id = ISBN 0-7167-0344-0 }} 
*{{Citation
 | last =Einstein
 | first =Albert
 | title =Die Feldgleichungen der Gravitation (The Field Equations of Gravitation)
 | journal =Koniglich Preussische Akademie der Wissenschaften
 | pages =844–847
 | year =1915
}}

&lt;includeonly&gt;
&lt;!-- ADD CATEGORIES BELOW THIS LINE --&gt;
[[Category:Citation templates|{{PAGENAME}}]]

&lt;!-- ADD INTERWIKIS BELOW THIS LINE --&gt;
[[fr:Template:Référence Harvard]]
[[ja:Template:Harv]]
&lt;/includeonly&gt;
&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>ib258wxurcpb376s5zxaiw1s85viiky</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Harvard citation no brackets</title>
    <ns>10</ns>
    <id>200464</id>
    <revision>
      <id>1778301</id>
      <parentid>1778294</parentid>
      <timestamp>2010-04-27T13:58:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:Harvard citation no brackets]]&quot;: High-impact page ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#ifeq:{{{Ref|}}}|none
  |{{#if:{{{5|}}}
       |{{{1|}}} et al. {{{5|}}}
       |{{#if:{{{4|}}}
          |{{{1|}}}, {{{2|}}} &amp;amp; {{{3|}}} {{{4|}}}
          |{{#if:{{{3|}}}
             |{{{1|}}} &amp;amp; {{{2|}}} {{{3|}}}
             |{{{1|}}} {{{2|}}}
           }}
        }}
     }}
  | [[#&lt;!--
  --&gt;{{#if:{{{Ref|}}}&lt;!--
     --&gt;|{{{Ref}}}&lt;!--
     --&gt;|CITEREF{{{1|}}}{{{2|}}}{{{3|}}}{{{4|}}}{{{5|}}}&lt;!--
   --&gt;}}&lt;!--
  --&gt;|{{#if:{{{5|}}}&lt;!--
       --&gt;|{{{1|}}} et al. {{{5|}}}&lt;!--
       --&gt;|{{#if:{{{4|}}}&lt;!--
          --&gt;|{{{1|}}}, {{{2|}}} &amp;amp; {{{3|}}} {{{4|}}}&lt;!--
          --&gt;|{{#if:{{{3|}}}&lt;!--
             --&gt;|{{{1|}}} &amp;amp; {{{2|}}} {{{3|}}}&lt;!--
             --&gt;|{{{1|}}} {{{2|}}}&lt;!--
           --&gt;}}&lt;!--
        --&gt;}}&lt;!--
     --&gt;}}&lt;!--
 --&gt;]]
}}{{#if:{{{loc|}}}
  |, {{{loc|}}}
  |{{#if:{{{p|{{{page|}}}}}}
     |, p.&amp;nbsp;{{{p|{{{page}}}}}}
     |{{#if:{{{pp|{{{pages|}}}}}}
        |, pp.&amp;nbsp;{{{pp|{{{pages}}}}}}
      }}
   }}
}}&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>l3vy6ynrnvzftgpr3vqjnylchrn8xuc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Harvard citation text</title>
    <ns>10</ns>
    <id>200465</id>
    <revision>
      <id>1782135</id>
      <parentid>1778323</parentid>
      <timestamp>2010-04-28T01:58:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>includeonlys</comment>
      <text xml:space="preserve">&lt;includeonly&gt;{{#ifeq:{{{Ref|}}}|none
  |{{#if:{{{5|}}}
       |{{{1|}}} et al. ({{{5|}}}
       |{{#if:{{{4|}}}
          |{{{1|}}}, {{{2|}}} &amp;amp; {{{3|}}} ({{{4|}}}
          |{{#if:{{{3|}}}
             |{{{1|}}} &amp;amp; {{{2|}}} ({{{3|}}}
             |{{{1|}}} ({{{2|}}}
           }}
        }}
     }}
  | [[#&lt;!--
  --&gt;{{#if:{{{Ref|}}}&lt;!--
     --&gt;|{{{Ref}}}&lt;!--
     --&gt;|CITEREF{{{1|}}}{{{2|}}}{{{3|}}}{{{4|}}}{{{5|}}}&lt;!--
   --&gt;}}&lt;!--
  --&gt;|{{#if:{{{5|}}}&lt;!--
       --&gt;| {{{1|}}} et al. ({{{5|}}}&lt;!--
       --&gt;| {{#if:{{{4|}}}&lt;!--
          --&gt;| {{{1|}}}, {{{2|}}} &amp;amp; {{{3|}}} ({{{4|}}}&lt;!--
          --&gt;| {{#if:{{{3|}}}&lt;!--
             --&gt;| {{{1|}}} &amp;amp; {{{2|}}} ({{{3|}}}&lt;!--
             --&gt;| {{{1|}}} ({{{2|}}}&lt;!--
           --&gt;}}&lt;!--
        --&gt;}}&lt;!--
     --&gt;}}&lt;!--
--&gt;{{#if:{{{loc|}}}||
     {{#if:{{{p|}}}||
        {{#if:{{{pp|}}}||)}}
     }}
   }}]]
}}{{#if:{{{loc|}}}
  |, {{{loc|}}})
  |{{#if:{{{p|}}}
     |, p.&amp;nbsp;{{{p|}}})
     |{{#if:{{{pp|}}}
        |, pp.&amp;nbsp;{{{pp|}}})
      }}
   }}
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>pyjqq7sj9bi604jrtb6d33hagqco18u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Harvnb</title>
    <ns>10</ns>
    <id>200466</id>
    <redirect title="Template:Harvard citation no brackets" />
    <revision>
      <id>1778302</id>
      <parentid>1546960</parentid>
      <timestamp>2010-04-27T13:59:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:Harvnb]]&quot;: redirect to protected page ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">#REDIRECT[[Template:Harvard citation no brackets]]</text>
      <sha1>3shv1t0unnkqbpog36jda0nnq7r7rca</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Harvtxt</title>
    <ns>10</ns>
    <id>200467</id>
    <redirect title="Template:Harvard citation text" />
    <revision>
      <id>1546962</id>
      <parentid>1546961</parentid>
      <timestamp>2009-06-24T16:32:48Z</timestamp>
      <contributor>
        <username>Mike.lifeguard</username>
        <id>55262</id>
      </contributor>
      <minor />
      <comment>1 revision from [[:w:Template:Harvtxt]]</comment>
      <text xml:space="preserve">#REDIRECT[[Template:Harvard citation text]]</text>
      <sha1>hbwn9ici76yofcshs6ak2hb8bucmpko</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Italiclink</title>
    <ns>10</ns>
    <id>200468</id>
    <revision>
      <id>1565233</id>
      <parentid>1546964</parentid>
      <timestamp>2009-07-09T21:54:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">''{{#if: {{{1|}}} 
  | {{#switch:{{#ifeq:{{substr|{{{1}}}|0|7}}|http://|1}}{{#ifeq:{{substr|{{{1}}}|0|6}}|ftp://|1}}{{#ifeq:{{substr|{{{1}}}|0|8}}|https://|1}}
  | 1=[{{{1}}} {{{2|}}}]
  | [[{{{1}}}|{{{2|{{{1}}}}}}]]
}}
  | &lt;span&gt;{{{2|}}}&lt;/span&gt;
}}''&lt;noinclude&gt;[[Category:Text formatting templates|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>3m9ejhpu4rndqdijvpjv3rf9hktg1pg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Pp-meta</title>
    <ns>10</ns>
    <id>200469</id>
    <revision>
      <id>2322602</id>
      <parentid>2308602</parentid>
      <timestamp>2012-05-06T15:05:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>previous images</comment>
      <text xml:space="preserve">{{#ifeq:{{#switch:{{lc:{{{type}}}}}
  |move=&lt;!--
 --&gt;{{#ifeq:
      {{#switch:{{lc:{{{demolevel|undefined}}}}}
        |semi
        |autoconfirmed=autoconfirmed
        |administrator
        |full
        |sysop=sysop
        |undefined={{PROTECTIONLEVEL:move}}
        |#default=&lt;!--fallback value: null
   --&gt;}}
      |sysop|yes|no
    }}
  |create=&lt;!--
 --&gt;{{#if:
      {{#switch:{{lc:{{{demolevel|undefined}}}}}
        |semi
        |autoconfirmed=autoconfirmed
        |administrator
        |full
        |sysop=sysop
        |undefined={{PROTECTIONLEVEL:create}}
        |#default=&lt;!--fallback value: null
   --&gt;}}
      |yes|no
    }}
  |#default&lt;!--includes all other types--&gt;=&lt;!--
 --&gt;{{#if:
      {{#switch:{{lc:{{{demolevel|undefined}}}}}
        |semi
        |autoconfirmed=autoconfirmed
        |administrator
        |full
        |sysop=sysop
        |undefined={{PROTECTIONLEVEL:edit}}
        |#default=&lt;!--fallback value: null
   --&gt;}}
      |{{#ifeq:{{#switch:{{lc:{{{disallowlevel|}}}}}
            |semi
            |autoconfirmed=autoconfirmed
            |administrator
            |full
            |sysop=sysop
            |#default=&lt;!--fallback value: null--&gt;}}
         |{{#switch:{{lc:{{{demolevel|undefined}}}}}
            |semi
            |autoconfirmed=autoconfirmed
            |administrator
            |full
            |sysop=sysop
            |undefined={{PROTECTIONLEVEL:edit}}
            |#default=&lt;!--fallback value: null--&gt;}}
         |no|yes
       }}
      |no}}
}}|yes|{{#ifeq:{{lc:{{{small|}}}}}|yes|
&lt;div class=&quot;metadata topicon&quot; id=&quot;protected-icon&quot;&gt;[[File:{{{image|{{#switch:{{lc:{{{type}}}}}
 |full=Padlock.svg
 |semi=Padlock-silver.svg
 |move=Padlock-olive.svg
 |indef=Padlock-red.svg
 |office=Padlock-black.svg
 |create=Padlock-skyblue.svg
 |#default=Transparent.gif
}}}}}|22px|link={{{icon-link|Wikibooks:Protection policy#{{lc:{{{type}}}}}}}}|{{{icon-text|This {{pagetype|subjectspace=yes}} is {{#switch:{{lc:{{{type}}}}}
 |semi=semi-
 |move=move-
 |indef=permanently&lt;nowiki&gt; &lt;/nowiki&gt;
 |create=creation-
 |office=&lt;!--null, but should this have a special tag?--&gt;
 |full
 |#default=&lt;!--null--&gt;
}}protected{{#ifeq:{{lc:{{{type}}}}}|indef||{{#if:{{{expiry|}}}|&lt;nowiki&gt; &lt;/nowiki&gt;until {{#time:F j, Y|{{{expiry}}}}}}}}}{{#if:{{{icon-reason|}}}|&lt;nowiki&gt; &lt;/nowiki&gt;{{{icon-reason}}}}}.}}}]]&lt;/div&gt;
|&lt;!-- else, not small --&gt;
{{mbox 
| demospace = {{{demospace|}}}
| type = protection
| image = [[File:{{{image|{{#switch:{{lc:{{{type}}}}}
 |full=Padlock.svg
 |semi=Padlock-silver.svg
 |move=Padlock-olive.svg
 |indef=Padlock-red.svg
 |office=Padlock-black.svg
 |create=Padlock-skyblue.svg
 |#default=Transparent.gif
}}}}}|40px|{{{icon-text|This page is {{#switch:{{lc:{{{type}}}}}
 |semi=semi-
 |move=move-
 |indef=permanently&lt;nowiki&gt; &lt;/nowiki&gt;
 |create=creation-
 |office=&lt;!--null, but should this have a special tag?--&gt;
 |full
 |#default=&lt;!--null--&gt;
}}protected.}}}|link=]]
| text = '''{{{reason-text|{{#switch:{{lc:{{{type}}}}}
 |full=This page is currently protected from editing
 |semi=Editing of this {{pagetype|subjectspace=yes}} by new or unregistered users is currently disabled
 |move=This {{pagetype|subjectspace=yes}} is currently protected from page moves
 |indef=This page is protected from editing ''indefinitely''
 |office=This {{pagetype|subjectspace=yes}} is currently protected from editing
 |create=Re-creation of this {{pagetype|subjectspace=yes}} has been disabled
}}{{#ifeq:{{lc:{{{type}}}}}|indef||{{#if:{{{expiry|}}}|&amp;#32;until {{#time:F j, Y|{{{expiry}}}}}}}}}{{{reason&lt;includeonly&gt;|&lt;/includeonly&gt;}}}.}}}'''&lt;br /&gt; {{{explanation-text|{{#ifeq:{{lc:{{{dispute}}}}}|yes|This protection is '''not''' an endorsement of the {{#ifeq:{{{type}}}|move|[{{fullurl:Special:Log|type=move&amp;page={{FULLPAGENAMEE}}}} current title]|[{{fullurl:{{FULLPAGENAMEE}}|action=history}} current version]}}.}} See the [{{fullurl:Special:Log|type=protect&amp;page={{FULLPAGENAMEE}}}} protection log] for more details. {{#switch:{{lc:{{{type}}}}}
 |full|indef=Please discuss any changes on the [[{{TALKPAGENAME}}|discussion page]]; you may use the {{tlx|editprotected}} template to ask an [[Wikibooks:Administrators|administrator]] to make the edit if it is supported by consensus. {{#ifeq:{{NAMESPACE}}|{{ns:8}}&lt;!--MediaWiki--&gt;||You may also [[Wikibooks:Reading room/Administrative Assistance|request]] that this page be unprotected.}}
 |semi=If you cannot edit this {{pagetype|subjectspace=yes}} and you wish to make a change, you can {{#ifeq:{{NAMESPACE}}|{{TALKSPACE}}||[[Template:Editsemiprotected|request an edit]], [[{{TALKPAGENAME}}|discuss changes on the discussion page]],}} [[Wikibooks:Reading room/Administrative Assistance|request unprotection]], [[Special:Userlogin|log in]], or &lt;span class=&quot;plainlinks&quot;&gt;[http://en.wikibooks.org/w/index.php?title=Special:Userlogin&amp;type=signup &lt;span style=&quot;color:#002bb8;&quot; title=&quot;Sign in / create account&quot;&gt;create an account&lt;/span&gt;].
 |move=The page may still be edited but cannot be moved until unprotected. Please discuss any suggested moves on the [[{{TALKPAGENAME}}|discussion page]].  You can also [[Wikibooks:Reading room/Administrative Assistance|request]] that the page be unprotected.  
 |office=If you are able to edit this page, please discuss all changes and additions on the [[{{TALKPAGENAME}}|discussion page]] first.
 |create=Please see the {{#if:{{{rfd|}}}|'''[[{{{rfd}}}|deletion discussion]]''' or the}} [{{fullurl:Special:Log|type=delete&amp;page={{FULLPAGENAMEE}}}} deletion log] for details of why this page was deleted. If you would like to create a page at this title, you must first [[Wikibooks:Reading room/Administrative Assistance|request]] for it to be unprotected, or contact the administrator who deleted the page for the deleted material to be restored. If unsuccessful, you can make a [[WB:RFU|request for undeletion]].
}}}}}
}}
}}|}}&lt;!--End if small--&gt;&lt;includeonly&gt;{{#ifeq:{{lc:{{{categories|no}}}}}|no||{{{categories|}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;

{{documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>io8uv2gepc0uxu8h9ujzh0gshqkywno</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Medical Physiology/Cellular Physiology/Cell structure and Function</title>
    <ns>0</ns>
    <id>200470</id>
    <revision>
      <id>2707647</id>
      <parentid>2626886</parentid>
      <timestamp>2014-09-30T13:15:44Z</timestamp>
      <contributor>
        <ip>165.138.39.201</ip>
      </contributor>
      <comment>/* Golgi apparatus */</comment>
      <text xml:space="preserve">==Cell Anatomy==
Cells differ tremendously in morphology, but the following illustration shows the main features of a typical mammalian cell:


[[Image:Cell structure.png|||432px|Cell Structure]]

The following table summarizes the various parts and their functions. We will then look at the various parts in more detail.

&lt;table cellpadding='10' border='1'&gt;
&lt;tr&gt;&lt;th&gt;Structure&lt;/th&gt;&lt;th&gt;Characteristics&lt;/th&gt;&lt;th&gt;Function&lt;/th&gt;&lt;/tr&gt;
&lt;tr valign='top'&gt;
&lt;td&gt;Microvilli (not shown)&lt;/td&gt;
&lt;td&gt;Extensive folding of the cell membrane found in certain cells with an absorptive capacity&lt;/td&gt;
&lt;td&gt;Increase surface area for absorption.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr valign='top'&gt;
&lt;td&gt;Cell Membrane&lt;/td&gt;
&lt;td&gt;Double layer of Phospholipid molecules studded with Proteins&lt;/td&gt;
&lt;td&gt;Acts as barrier to cell. Proteins serve many functions including transportation of ions and other molecules.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr valign='top'&gt;
&lt;td&gt;Centrioles&lt;/td&gt;
&lt;td&gt;Bundles of microtubules&lt;/td&gt;
&lt;td&gt;Important in Cell Division&lt;/td&gt;
&lt;/tr&gt;

&lt;tr valign='top'&gt;
&lt;td&gt;Lyosomes, peroxyosomes, secretory vesicles&lt;/td&gt;
&lt;td&gt;Vesicles with Bilayer Phospholipid membrane&lt;/td&gt;
&lt;td&gt;Lyosomes contain digestive enzymes; Peroxyiosomes contain enzymes essential for cell function; Secretory vesicles store enzymes etc. for secretion to exterior of cell&lt;/td&gt;
&lt;/tr&gt;

&lt;tr valign='top'&gt;
&lt;td&gt;Mitochondria&lt;/td&gt;
&lt;td&gt;Double walled organule with a central matrix&lt;/td&gt;
&lt;td&gt;Produces most of the cells ATP&lt;/td&gt;
&lt;/tr&gt;

&lt;tr valign='top'&gt;
&lt;td&gt;Ribosomes&lt;/td&gt;
&lt;td&gt;Specialized protein that translates mRNA into polypeptides&lt;/td&gt;
&lt;td&gt;Protein Synthesis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign='top'&gt;
&lt;td&gt;Rough and Smooth Endoplastic Reticulum&lt;/td&gt;
&lt;td&gt;Bi-phospholipid membrane continuous with nuclear membrane, and studded with ribosomes&lt;/td&gt;
&lt;td&gt;Rough ER modifies proteins; smooth ER synthesizes fatty acids, steroids and lipids&lt;/td&gt;
&lt;/tr&gt;



&lt;tr valign='top'&gt;
&lt;td&gt;Golgi Apparatus&lt;/td&gt;
&lt;td&gt;Modifies and packages proteins, especially those for excretion.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr valign='top'&gt;
&lt;td&gt;Microtubules and Microfillaments&lt;/td&gt;
&lt;td&gt;Protein fibers (actin) and protein tubules.&lt;/td&gt;
&lt;td&gt; Cell skeleton. Also important in transport of substances within cell&lt;/td&gt;
&lt;/tr&gt;

&lt;tr valign='top'&gt;
&lt;td&gt;Nucleus and Nucleolus&lt;/td&gt;
&lt;td&gt;Two layer outer membrane with numerous pores, encloses cells DNA.&lt;/td&gt;
&lt;td&gt;Directs all functions of Cell. Nucleolus is a collection of proteins and RNA stored for ribosome production.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt; 
===Cell Membrane===
The cell membrane is compose of almost entirely proteins and lipids. It is about '''55% protein''' by weight, '''25% phospholipids''' and '''17% cholesterol''' and other '''lipids''', and '''3% carbohydrate'''. Phospholipids have a '''phophate hydrophillic''' end, and a '''fatty acid hydrophobic end'''. 

              |G|
              |L|
              |Y|---Fatty Acid
 Phosphate----|C|
              |E|
              |R|---Fatty Acid
              |O|
              |L|
 Hydrophilic        Hydrophobic

The hydrophopic parts oppose one another, and the hydrophillic parts are exposed to the intra- and the extracellular fluid. The membrane itself is water insolouble and is only permeable to fat soluble substances. However numerous channels allow passage of water and other substances into the cell. 

[[File:Cell membrane3.png]]

The proteins are anatomically classified into '''integral''' and '''peripheral''' proteins.
Difference between integral &amp; peripheral proteins:
Integral proteins penetrate the membrane, and peripheral proteins are just attached to one side. Integral proteins can act as channels or pores and others act as carriers and transporters of various substances. Peripheral proteins serve a number of functions, and in many cases serve to activate the integral proteins. Some of the proteins are enzymes, others serve as '''second messengers'''. This will be looked at in some detail in the chapter on membrane dynamics. 

Cholesterol is found in varying amounts in the membrane. It tends to be found between the triglyceride 'stalks' of the phospholipids, and serves to make the membrane less porous.

Most proteins and many lipids are '''glycoprotins''' or '''glycolipids''', and the -ve carbohydrate end of the molecule is presented to the extracellular fluid. This carbohydrate layer is sreferred to as the '''Glycocalyx''' of the cell. These carbohydrates serve several important functions&quot;
*Many have a negative electrical charge which repels other negatively charged ions.
*They serve to attach cells to one another, and to the basement membrane
*Many act as receptor sites for hormones such as Insulin
*They enter into immune reactions

====Cell Membrane Proteins====
Cell membrane proteins may be functionally classified into four groups:
*'''Structural Proteins''': On the interior of the cell these serve as anchors for the actin and tubulin microfibrils. (''see below''). On the exterior they serve to bind cells together into tissues (see  ''Cell Junctions and Tissues'')
*'''Enzymes''': In the small intestine, many of the digestive enzymes are embedded in the cell wall.  ''(see Digestion'')
*'''Receptors''': These act as receptors for the messenger system of the cell. For example Insulin exerts its effects on the cell by binding onto a special receptor (see ''Membrane Dynamics'').
*'''Transporters''': these serve to transport molecules in and out of the cell. They may be either channels, or carriers. This is discussed further in ''Membrane Dynamics''.

===Cell Cytoplasm===
The cytoplasm is filled with dispersed particles and organules. The liquid portion of the cytoplasm is called cytosol, and contains dissolved ions, proteins and glucose. Also found are neutral fat globules and glycogen.

It also contains the important organules: '''endoplasmic reticulum''' and '''ribosomes'''; '''golgi apparatus'''; '''lysosomes'''; '''proxiosomes'''; and '''secretory granules'''.

===Ribosomes===
These are the sites of the manufacture of proteins from a mRNA template. They are complex structures made up of '''ribosomal RNA''' and proteins. The are composed of a large and a small subunit which 'clamp' onto the messanger RNA that they 'translate'. Most ribosomes can be found lining the endoplasmic reticulum, but the cytoplasm also contains many free ribosomes.

This will be discussed in further detail under the &quot;Protein Manufacture&quot; section.

===Endoplasmic reticulum===
This membranous sac is a complex series of tubules, continuous with the nuclear membrane. It is sub-classified as a rough, or granular ER, and a smooth or agranular ER. The rough Endoplasmic reticulum is lined with ribosomes and modifies and packages proteins that have been produced by the ribosome. In skeletal and cardiac muscle it is known as the '''sarcoplasmic reticulum'''. The smooth ER synthesize fatty substances and is the site of detoxification processes.

===Golgi apparatus===
The Golgi apparatus is a series of stacked membrane enclosed sacs, usually six or more.  It is a polarized structure with a '''cis''' and a '''trans''' side. The cis side faces the endoplasmic reticulum and the trans side the cell membrane. Its job is to process and package substances, both protein and non-protein, from the endoplasmic reticulum. The Golgi apparatus modifies the oligo-saccharide attachments of the glyco-proteins that have been initially prepared in the ER.

Membranous protein containing vesicles pinch FRIED CHICKEN IS DELICIOUS off from the endoplasmic reticulum and are transported across to the cis Golgi apparatus. Substances are exchanged between one layer of the Golgi apparatus and another by a similar process. The vesicles that pinch off from the trans side shuttle to lyosomes or to the cell exterior. Those destined for the cell exterior are follow either '''consitutive''' or '''non-constitutive''' (also known as '''regulated''') pathways. Those following consitutive pathways are immediately secreted; those following a non-constitutive pathway either form an '''excretory vesicle''', or are shunted to an existing vesicle, where further processing may be carried out.

[[File:Golgi secretions.png]]

The destination of Golgi vesicles, indeed the destination of all vesicles is under the control of special proteins attached to the vesicle called '''SNARES''' (for '''S'''oluble '''N'''-ethylmalemite-sensitive factor '''A'''ttachment '''RE'''ceptors). These SNARES are either v-SNARES (for vesicle) or t-SNARES (for target), and they interact in a lock-and-key fashion. 35 different SNARE proteins have been identified in humans.

The process involved in protein synthesis is extremely complex, with plenty of places where errors can creep in. The quality control process starts with the DNA where damaged DNA is either repaired or bypassed; the mRNAs are checked during the translation process; and the ER and GA are particularly important in quality control, weeding out substandard or damaged proteins.

===Lyosomes===
Lyosomes are large somewhat irregular membrane surrounded structures found in the cytoplasm.The contents of the Lyosome are acidic in nature, and contain numerous enzymes for breaking down substrates. The act as the digestive system of the cell. The following enzymes are present in most lyosomes.

&lt;table cellpadding='10' border='1' rules='rows'&gt;
&lt;caption&gt;&lt;b&gt;Lyosomal Enzymes&lt;/b&gt;&lt;/caption&gt;
&lt;tr&gt;&lt;th&gt;Enzyme&lt;/th&gt;&lt;th&gt;Substrate&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Deoxyribonucleases&lt;/td&gt;&lt;td&gt;DNA&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ribonucleases&lt;/td&gt;&lt;td&gt;RNA&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Phosphatases&lt;/td&gt;&lt;td&gt;Phosphates&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Glycosidases&lt;/td&gt;&lt;td&gt;Carbohydrates, polysaccharides, andglycosides&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Arylsulfatases&lt;/td&gt;&lt;td&gt;Sulphate Esters&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Collagenase&lt;/td&gt;&lt;td&gt;Proteins&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Cathepsins&lt;/td&gt;&lt;td&gt;Proteins&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

'''Clinical Note:''' If an enzyme is congenitally absent, then the lyosome will become engorged on the substrate particular to the missing enzyme. These result in the rare '''Lyosomal Storage Diseases'''. An example of a Lyosomal Storage Disease is '''Tay-Sachs'''. In Tay-Sachs disease an enzyme that breaks down '''gangliosides''', a lipoprotein found in neural tissue, is missing, and gangliosides accumulate in the cells of the brain resulting in mental retardation and blindness. About 1 in 30 American Jews carry the gene for Tay-Sachs.

===Peroxiosomes===
Peroxiosomes are membrane surrounded vesicles with a matrix that contains numerous enzymes which catalyse a variety of anabolic and catabolic reactions. The membrane of the peroxiosome have numerous protein carriers that are concerned with transport of substrates in and out of the matrix of the peroxiosome.

===Secretory Vesicles===
The Golgi apparatus will also package enzymes or hormones for later release. These are stored in the cell as secretory vesicles, awaiting a suitable trigger for release. These comprise a non-constitutive secretion, and in many cases the Golgi apparatus provides the vesicle with a '''pro-hormone''' or '''pro-enzyme''' that is further processed in the secretory vesicle.  

[[File:Lipid vesicles.svg|thumb|Schematic of lipid vesicles. The vesicles enclose a cargo (represented by green dots) that could be neurotransmitters, dye, drugs, nanoparticles, etc.]]

&lt;br clear='all'&gt;

===Microfilaments and Microtubules===

Cells contain an extensive network of microtubules and microfilaments which act as both a '''cyto-skeleton''' and a means for transport of substances. 
====microfilaments====
Right under the cell membrane and attached to it is a framework of '''microfilaments''' made up of actin strands. Actin easily polymerizes and de-polymerizes into longer or shorter strands. It is a very common molecule and is usually found in a double stranded helical form.

[[File:Actin strand.png]]

Numerous proteins embedded in the cell wall which attach actin to the cell membrane have been identified.

====Microtubules====
'''Microtubles''' are made up of α-tubulin and β-tubulin molecules. These arrange themselves in strands, and usually 13 strands complete the tubule. Microtubules usually function for transport in cells. They are particullarly numerous in the long axons of nerve cells.

[[File:Microtubules.png|300px]]

====Molecular Motors====
'''Mollecular motors''' move 'cargo' around within cells. They are ATPases. They attach their cargo to their 'tail', and their 'head' will 'walk' down the actin strand or the microtubule. The ATPase that walks on Actin is from the '''myosin''' group, and those that walk down microtubules is from the '''kinesin''' group. Muscle is a special, highly developed example of actin-myosin molecular motors.

The following illustration shows a myosin molecule, with cargo attached walking down an actin strand. Power is supplied by converting ATP to ADP.
[[File:Actin kinesin walking.png]]
====cilia====
A highly specialized example of a molecular motor is the cilia which is found in the repiratory system, where it wafts mucous to the exterior, and in the fallopian tubes, where they waft along the ova to the uterus. The cilia is anchored in the cell membrane and sends its finger like projection upwards. Thes contain nine paired microtubules, with a central pair as shown in the accompanying electron microscope image. They beat backwards and forwards. The 'efficient' stroke is made with a stiff flagellum, the inefficient stroke with a relaxed flagellum.
[[File:Bronchiolar area cilia cross-sections 2.jpg|thumb|Cross section of Cilia from bronchus]]

[[File:Cillia1.png|500px]]

[[File:Cilia Flow.jpg|200px]]





&lt;br clear='all' /&gt;

===Nucleus===
The Nucleus of the cell directs all the activities of the cell. It contains the cells DNA made up into various genes, and is the site of manufacture of mRNA. We will look at all this in further detail when we look at: 
*Gene Expression
*Protein Manufacture
*Cell replication

The membrane of the nucleus is in fact a double layer of phospholipid membrane with numerous pores. Each pore is guarded by numerous protein complexes which  makes it functionally smaller than it apears on EM. Even so the pores can let through molecules of a molecular weight of up to 45,000. The interior of the cell membrane is also continuous with the endoplasmic reticulum.
[[File:Nucleus&amp;Nucleolus.gif|thumb|showing large nucleolus made up of ribosomal proteins and ribosomal DNA. The cell pores are clearly visible as well as the endoplasmic reticulum.]]

[[File:Nuclear membrane.png|400px]]
&lt;br clear='all' /&gt;

===Mitochondria===
[[File:Mitochondria, mammalian lung - TEM.jpg|thumb|mitochondria from the human lung showing christae and granules]]
'''Mitochondria''' (sing. mitochondrion) are known as the powerhouses of the cell, producing the majority - about 95% - of the ATP that is used in cell metabolism. We will look at this in greater detail in the section on ATP and Oxidative Phosphorylation.

Mitochondria come in various shapes and sizes -from round or spheroid to sausage or obloid in shape. The more active a cell is the more mitochondria they have. 

They have a double bilayer membrane, an outer and in inner membrane. The inner membrane is is folded into '''cristae''', and the walls of these cristae are studded with enzyme rich proteins which are involved in the production of ATP. Between the two membranes is the gel of the outer matrix - rich in enzymes for the processing of high energy hydrogen to ATP. In the inner space is the inner matrix which contains numerous enzymes involved in the breakdown of Glucose, fats and proteins for energy.

Mitochondria have several anomolies. They are self replicating and in fact have their own unique DNA.  When a mitochondria replicates, a new one buds off from an old one, similar in fashion to the way a bacteria replicates. This process is under the control of the mitochondria's own DNA. Most of the proteins and enzymes of mitochondria - over 98% - are in fact manufactured by the cells DNA, but many of the enzymes and proteins involved in oxidation and phosphorylation are manufactured by the mitochondria's DNA.

The mitochondrial DNA is not stored in a nucleus, but is in the form of a double circular molecule containing 16,569 base pairs (compared with over a billion base pairs in the cells nucleus). This is similar to the way DNA is stored in bacteria. There are other features similar to bacteria which has led to the postulation that  mitochondria evolved from an '''aerobic bacterium''' that got ingested by a '''eukaryotic''' cell and then learned to live in '''symbiosis''' with it.

[[File:Animal mitochondrion diagram en.svg|400px]]

====Mitochondrial DNA signature====
Sperm contain four mitochondria which are carried with the sperms tail. These are shed when the sperms head fuses with the ovum. This means that all mitochondrial DNA is descended from the female line. Mitochondrial DNA also has few of the reparative mechanisms of eukaryotic DNA, which means that the mutation rate is much faster than inn eukaryotic cells. This has allowed paleo-geneticists to trace the ancestry of humans, and show that we had a common female ancestor about 60 million years ago. In passing it should be noted that a similar analysis of the Y chromosome shows we have a common male ancestor about 60,000 years ago.

===Centrioles===
[[File:Spindle centriole - embryonic brain mouse - TEM.jpg|thumb|Transmission electron microscope image of a thin section cut through the developing brain tissue (telencephalic hemisphere) of an 11.5 day mouse embryo. This high magnification image of &quot;Embryonic brain 80445&quot; show a spindle centriole and some spindle microtubules visible in the cytoplasm of a mitotic cell at the luminal surface of the telencephalon.]]
Near the nucleus are found the centrioles, two structures usually at right angles to each other made up of microtubules. These are important in cell-division. They will be studied further when we look at cell replication. 

&lt;br clear='all' /&gt;

{{BookCat}}</text>
      <sha1>ikc36k84bemfz4d2yt7ufjfej6p0di4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Pan Seared Pork Chops</title>
    <ns>102</ns>
    <id>200471</id>
    <revision>
      <id>2688227</id>
      <parentid>1751269</parentid>
      <timestamp>2014-08-03T15:27:55Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added appropriate cats. Minor text adjustments.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 4 thick cut bone-in pork rib chops
* 1/2 cup [[Cookbook:Chop Rub|Chop Rub]]
* Cider vinegar, as needed
* 1 tbsp olive oil

== Procedure ==
#Brush pork chops with cider vinegar. Season each pork chop with Rub, pressing on lightly.
#Heat oil in a very large oven proof (cast iron or stainless steel) skillet over medium high heat. Add pork chops and brown for 3 minutes per side.
#Insert an oven-safe probe thermometer into one pork chop and place pan in a 350° oven and bake until internal temperature reaches 145°.
#Remove and let rest for 5 minutes; serve.

[[Category:Pork recipes]]
[[Category:Pan fried recipes]]
[[Category:Main course recipes]]</text>
      <sha1>nxkq6lanq76apcyywe6vqz0r11f1gg1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Barcode.jpg</title>
    <ns>6</ns>
    <id>200472</id>
    <revision>
      <id>1547049</id>
      <parentid>1547037</parentid>
      <timestamp>2009-06-24T18:16:40Z</timestamp>
      <contributor>
        <username>Dal308</username>
        <id>113428</id>
      </contributor>
      <text xml:space="preserve">== Summary ==
({{Information |Description=picture of a barcode|Source=Flicker.com |Date=6-24-09 |Author=Katie Dureault  |Permission= Free to Share — to copy, distribute and transmit the work |other_versions= CC Attribution 2.5 Generic }}) 

== Licensing: ==
{{cc-by-2.5}}</text>
      <sha1>qjaqjl4bntuuld760jn83nd9vbkzpdu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Stata/Navigation</title>
    <ns>10</ns>
    <id>200473</id>
    <revision>
      <id>2190572</id>
      <parentid>1753091</parentid>
      <timestamp>2011-10-18T16:04:59Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>More accurate title</comment>
      <text xml:space="preserve">&lt;div class=&quot;noprint&quot; style=&quot;background-color: #efe; border: 1px solid #8b8; padding: 0.5em; font-size: small; text-align: left; float: right; clear: right; width: 25%; margin: 0.5em&quot;&gt;
'''[[Stata]]'''&lt;br /&gt;
----
* '''Basics'''
** [[Stata/Introduction|Introduction]]
** [[Stata/Settings|Settings]]
** [[Stata/Documentation|Documentation]]
** [[Stata/Probability_Function|Probability Function]]
** [[Stata/Random_Number_Generation|Random Number Generation]]
** [[Stata/Data_Management|Data Management]]
** [[Stata/Graphics|Graphics]]
** [[Stata/Programming|Programming]]
** [[Stata/Mata|Mata]]
** [[Stata/Natural_Language_Processing|Natural Language Processing]]  
** [[Stata/Publication_Quality_Ouput|Publication Quality Output]]
** [[Stata/Descriptive_Statistics|Descriptive Statistics]]
* '''Methods'''
** [[Stata/Maximum_Likelihood|Maximum Likelihood]]
** [[Stata/Bayesian_Methods|Bayesian Methods]]
** [[Stata/Bootstrap|Bootstrap]]
** [[Stata/Non_Parametric|Non Parametric]]
** [[Stata/Matching|Matching]]
** [[Stata/Quantile_Regression|Quantile Regression]]
* '''Topics''' 
** [[Stata/Linear_Models|Linear Models]]
** [[Stata/Binomial_Outcome Models|Binomial Outcome Models]]
** [[Stata/Multinomial_Models|Multinomial Models]]
** [[Stata/Count_Data Models|Count Data Models]]
** [[Stata/Tobit_and_Selection_Models|Tobit and Selection Models]]
** [[Stata/Duration_Analysis|Duration Analysis]]
** [[Stata/Multilevel_Modeling|Multilevel Modeling]]
** [[Stata/Time_Series|Time Series]]
** [[Stata/Spatial_econometrics|Spatial Econometrics]]
** [[Stata/Factor Analysis|Factor Analysis]]  
* [[Stata/Problems|Problems]]

----
&lt;small&gt;[http://en.wikibooks.org/w/index.php?title=Template:Stata/Navigation&amp;action=edit edit this box]&lt;/small&gt;
&lt;/div&gt;&lt;noinclude&gt;[[Category:Exclude in print]]&lt;/noinclude&gt;{{BookCat}}</text>
      <sha1>ctz9v5vhui6mnnts5vruagbl0ek7q2f</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Chipotle Lime Hot Wings</title>
    <ns>102</ns>
    <id>200477</id>
    <revision>
      <id>2689996</id>
      <parentid>2682996</parentid>
      <timestamp>2014-08-09T02:32:40Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>/* Procedure */ added chicken wing cat.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 24 wingettes
* Salt and black pepper
* 1/4 cup [[Cookbook:Smoky Chipotle Hot Sauce|Smoky Chipotle Hot Sauce]]
* 6 tbsp butter, melted
* 3 tbsp freshly squeezed lime juice
* 3 cloves garlic, minced
* Oil for deep frying

== Procedure ==
#Heat oil to 350°. Meanwhile, sprinkle wingettes with kosher salt and black pepper. Fry in batches for 12 minutes. Drain on a cooling rack.
#Combine remaining ingredients in a bowl large enough to toss wingettes. Add wingettes and toss to coat. Serve.

[[Category:Chicken wing recipes]]
[[Category:Chile recipes]]
[[Category:Lime recipes]]
[[Category:Deep fried recipes]]
[[Category:Southwestern recipes]]
[[Category:Main course recipes]]</text>
      <sha1>5kn9w40y3c5m9p4ho5fmfcyl9ia1tu9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Haskell/Overview</title>
    <ns>1</ns>
    <id>200478</id>
    <revision>
      <id>2264978</id>
      <parentid>2141372</parentid>
      <timestamp>2012-02-13T12:23:01Z</timestamp>
      <contributor>
        <username>WillNess</username>
        <id>292560</id>
      </contributor>
      <comment>fix code</comment>
      <text xml:space="preserve">How do you do things that require state? Like simulations? [[Special:Contributions/82.169.255.79|82.169.255.79]] ([[User talk:82.169.255.79|talk]]) 19:04, 24 June 2009 (UTC)

The Quicksort alogrithm's ''intent'' can be elegantly expressed in Haskell with the help of list comprehensions: &lt;br&gt;
&lt;code&gt;
  qsort []     = [] 
  qsort (x:xs) = qsort [y|y&lt;-xs,y&lt;x] ++ [x] ++ qsort [y|y&lt;-xs,y&gt;=x]
&lt;/code&gt;
Note that because of excessive copying and concatenation of lists this code can be rather slow, depending on the implementation. But more importantly, the above code is not ''in-place'', which is an essential characteristic of ''genuine'' quicksort. Haskell's data is immutable though, but at least the list's double-traversal can be eliminated with
&lt;code&gt;
 qsort []     = [] 
 qsort (x:xs) = let (a,b)=part xs in qsort a ++ x : qsort b
   where
     part [] = ([],[])
     part (y:ys) | y &lt; x     = (y:a,b) 
                 | otherwise = (a,y:b) where (a,b) = part ys
&lt;/code&gt;
to make it a little bit less hideously inefficient.
[[User:WillNess|WillNess]] ([[User talk:WillNess|talk]]) 17:23, 21 May 2010 (UTC)

: Just hazily wondering... but is it really worth it to optimize the sample implementations in this &quot;Overview&quot; page at the cost of clarity and elegance, given that its main point is demonstrating to the readers in a clear way what the language looks like? --[[User:Duplode|Duplode]] ([[User talk:Duplode|talk]]) 17:00, 23 May 2010 (UTC)

:: Don't know. That's why I put it here, hoping for someone wiser than me to make a judgment. It's just that I've seen the list-comprehension variant above mentioned as an example of how Haskell makes it very easy to write terribly inefficient code. I was also hoping that the simplified code I've put on the page itself be sufficiently clear and easy for a beginner to read. The original code makes double traverse of the list structure for no other reason than to be visually appealing. Maybe that's ''exactly'' a kind of example that beginners ought ''not'' to see at all. Would appreciate any feedback. [[User:WillNess|WillNess]] ([[User talk:WillNess|talk]]) 11:30, 30 June 2010 (UTC)

: awwghh, how embarrassing. The function &lt;code&gt;part&lt;/code&gt; is of course, Data.List.''partition'', reinvented. [[User:WillNess|WillNess]] ([[User talk:WillNess|discuss]] • [[Special:Contributions/WillNess|contribs]]) 08:23, 17 May 2011 (UTC)

Putting back the original concise &lt;code&gt;qsort&lt;/code&gt; to the content page. The one-traversal code itself had a space leak anyway (explained in Bird's [http://www.amazon.com/Introduction-Functional-Programming-using-Haskell/dp/0134843460 IntroFunPro], pg. 248):
&lt;code&gt;
 -- space leak fixed as per Bird
 qsort []     = [] 
 qsort (x:xs) = part xs [] []
   where
     part []      a b  = qsort a ++ x : qsort b
     part (y:ys)  a b  | y &lt; x = part ys (y:a) b
                       | True  = part ys a (y:b)
&lt;/code&gt;
[[User:WillNess|WillNess]] ([[User talk:WillNess|talk]]) 20:16, 25 August 2010 (UTC)

Just for reference, with primes wheel optimization, double primes feed for drastically reduced memory consumption, and a better adjusted folding tree structure, the '''''real''''' primes code is:

&lt;code&gt;
  primes = 2:3:5:7: gaps 11 wheel (join $ roll 11 wheel primes')
   where
    primes' = 11: gaps 13 (tail wheel) (join $ roll 11 wheel primes')
    join ((x:xs): ~(ys:zs:t))  = x : union xs (union ys zs)    
                                       `union` join (pairs t)  
    pairs ((x:xs):ys:t)        = (x : union xs ys) : pairs t
    gaps k ws@(w:t) xs@(x:u) | k==x  = gaps (k+w) t u 
                             | True  = k : gaps (k+w) t xs  
    roll k ws@(w:t) ps@(p:u) | k==p  = scanl (\c d-&gt;c+p*d) (p*p) ws 
                                         : roll (k+w) t u 
                             | True  = roll (k+w) t ps    
    wheel = 2:4:2:4:6:2:6:4:2:4:6:6:2:6:4:2:6:4:6:8:4:2:4:2:
            4:8:6:4:6:2:4:6:2:6:6:4:2:4:6:2:6:4:2:4:2:10:2:10:wheel
&lt;/code&gt;

More at [http://www.haskell.org/haskellwiki/Prime_numbers Prime numbers] page on haskellwiki. [[User:WillNess|WillNess]] ([[User talk:WillNess|discuss]] • [[Special:Contributions/WillNess|contribs]]) 19:19, 24 March 2011 (UTC)

== The external link to Hope is broken ==

At the end of the page is a link to a content management system Hope (http://hope.bringert.net/about). Either the server of Hope is broken, or the project is dead. I tried to google it, but the only link I found leads to the same URL. Any ideas?</text>
      <sha1>8m6z23dfuo4nt5u8nj3ia3sjk5f52lg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-cz</title>
    <ns>10</ns>
    <id>200480</id>
    <redirect title="Template:False Friends of the Slavist/Lang-cz" />
    <revision>
      <id>1547128</id>
      <timestamp>2009-06-24T19:13:28Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-cz]] to [[Template:False Friends of the Slavist/Lang-cz]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-cz]]</text>
      <sha1>cuveiykodk3tu2aji072ik90lzl48av</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-hr</title>
    <ns>10</ns>
    <id>200481</id>
    <redirect title="Template:False Friends of the Slavist/Lang-hr" />
    <revision>
      <id>1547130</id>
      <timestamp>2009-06-24T19:13:57Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-hr]] to [[Template:False Friends of the Slavist/Lang-hr]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-hr]]</text>
      <sha1>5i6d2njtup6n2oo9hbsaal9paeeapno</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-ka</title>
    <ns>10</ns>
    <id>200482</id>
    <redirect title="Template:False Friends of the Slavist/Lang-ka" />
    <revision>
      <id>1547133</id>
      <timestamp>2009-06-24T19:14:23Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-ka]] to [[Template:False Friends of the Slavist/Lang-ka]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-ka]]</text>
      <sha1>47culx1iiii0bklz84tq1xz34gf1v9e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-lso</title>
    <ns>10</ns>
    <id>200483</id>
    <redirect title="Template:False Friends of the Slavist/Lang-lso" />
    <revision>
      <id>1547135</id>
      <timestamp>2009-06-24T19:14:47Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-lso]] to [[Template:False Friends of the Slavist/Lang-lso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-lso]]</text>
      <sha1>ndu68zunflkuakocn9khfetjqrpgrve</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-mk</title>
    <ns>10</ns>
    <id>200484</id>
    <redirect title="Template:False Friends of the Slavist/Lang-mk" />
    <revision>
      <id>1547137</id>
      <timestamp>2009-06-24T19:15:16Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-mk]] to [[Template:False Friends of the Slavist/Lang-mk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-mk]]</text>
      <sha1>2bvfv1dk4pyfckxnww9jcg910kx5l7e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-pl</title>
    <ns>10</ns>
    <id>200485</id>
    <redirect title="Template:False Friends of the Slavist/Lang-pl" />
    <revision>
      <id>1547139</id>
      <timestamp>2009-06-24T19:15:47Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-pl]] to [[Template:False Friends of the Slavist/Lang-pl]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-pl]]</text>
      <sha1>56liftw3bersom0lhczgt53ynf20qjn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-rus</title>
    <ns>10</ns>
    <id>200486</id>
    <redirect title="Template:False Friends of the Slavist/Lang-rus" />
    <revision>
      <id>1547141</id>
      <timestamp>2009-06-24T19:16:16Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-rus]] to [[Template:False Friends of the Slavist/Lang-rus]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-rus]]</text>
      <sha1>8qwz1d2z233pmavgt3miixvotw59qlr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-sk</title>
    <ns>10</ns>
    <id>200487</id>
    <redirect title="Template:False Friends of the Slavist/Lang-sk" />
    <revision>
      <id>1547144</id>
      <timestamp>2009-06-24T19:16:39Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-sk]] to [[Template:False Friends of the Slavist/Lang-sk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-sk]]</text>
      <sha1>rxia4zy5fpx094dwjxnfc4p0nkhx3zo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-slo</title>
    <ns>10</ns>
    <id>200488</id>
    <redirect title="Template:False Friends of the Slavist/Lang-slo" />
    <revision>
      <id>1547147</id>
      <timestamp>2009-06-24T19:17:07Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-slo]] to [[Template:False Friends of the Slavist/Lang-slo]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-slo]]</text>
      <sha1>7jge3m0gfvnwosve0yatnrkt2ab9kaz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Settings</title>
    <ns>0</ns>
    <id>200490</id>
    <revision>
      <id>2384717</id>
      <parentid>2384716</parentid>
      <timestamp>2012-07-27T21:13:59Z</timestamp>
      <contributor>
        <username>Ak5791</username>
        <id>697256</id>
      </contributor>
      <comment>/* User-written ado files */</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;

== Text Editor ==

* Stata 11 includes a do-file editor with syntax highlighting.
* If you are not using Stata 11, you may want to use an external text editor with syntax highlighting.  The list of external text editors are described here (http://fmwww.bc.edu/repec/bocode/t/textEditors.html)

==  Customize Stata ==

=== Memory ===

Stata loads the data in memory. If you are dealing with large datasets, you may have the following error message : &lt;tt&gt; no room for more observations &lt;/tt&gt;. In that case, you just need to increase the amount of memory used by Stata. The maximum depends on your computer. 
 . set mem 100m * gives 100 megabyte
 . set mem 1g * gives 1 gigabyte

In Stata 12, these commands are not necessary because memory is managed automatically. Stata will inform you of this change any time you run the &lt;tt&gt; set mem &lt;/tt&gt; command, using this message:

    '''set memory''' ignored.
        Memory no longer needs to be set in modern Statas; memory adjustments are performed on the fly automatically.


If you want to know more, just type '''mem'''
&lt;pre&gt;
. mem
Total memory:   105M
Memory in use:    6k   0%
Room for 867k more observations
Room for 570k more variables (4 byte)
&lt;/pre&gt;

=== Profile.do ===
 
* profile.do is executed each time you open Stata. It is a simple do-file which should be located in the same directory as the .exe (Windows) or .app (Mac OS) file. You can define your ado files directory and store them in profile.do
&lt;pre&gt;
*! profile.do
sysdir set PERSONAL &quot;/Applications/Stata/ado/personal/&quot;
sysdir set PLUS &quot;/Applications/Stata/ado/plus/&quot;
sysdir set OLDPLACE &quot;/Applications/Stata/ado/oldplace/&quot;

set mem 100m
set more on, permanently
&lt;/pre&gt;


=== System Parameters ===

* '''query''' gives all the system parameter
* '''help limits''' gives all the limits (ie maximum number of observations, maximum number of variable, maximum length of a string, etc). 
* '''sysdir''' gives all the ado directories : 
&lt;pre&gt;
. sysdir
   STATA:  /Applications/Stata/
 UPDATES:  /Applications/Stata/ado/updates/
    BASE:  /Applications/Stata/ado/base/
    SITE:  /Applications/Stata/ado/site/
    PLUS:  /Applications/Stata/ado/plus/
PERSONAL:  /Applications/Stata/ado/personal/
OLDPLACE:  /Applications/Stata/ado/oldplace/
&lt;/pre&gt;

* '''about''' gives information about your version of Stata
&lt;pre&gt;
. about

Intercooled Stata 9.2 for Macintosh
Born 20 Jul 2007
Copyright (C) 1985-2007

Single-user Stata for Macintosh perpetual license:
       Serial number: --------
         Licensed to: --------
&lt;/pre&gt;

== User-written ado files ==

* [http://ideas.repec.org/s/boc/bocode.html SSC website] : a website that includes user-written Stata commands.
* '''ssc whatsnew''' : a command showing what's new in SSC 
* '''ssc des''' : a command describing a user written command.  
 . ssc des ivreg2 
* '''ssc install''' : a command to install new commands from SSC 
 . ssc install ivreg2
* '''ssc des a''' : a command describing all the SSC commands which names begins with 'a'

If you want to find new ado files, just use the findit command. For instance if you want to find new command about poverty, type : 

 . findit poverty

{{Stata/Navbar|Introduction|Documentation}}</text>
      <sha1>fd0wk4zpn1e4fggdo9jes9f02oto2tg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-uso</title>
    <ns>10</ns>
    <id>200491</id>
    <redirect title="Template:False Friends of the Slavist/Lang-uso" />
    <revision>
      <id>1547152</id>
      <timestamp>2009-06-24T19:17:52Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-uso]] to [[Template:False Friends of the Slavist/Lang-uso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-uso]]</text>
      <sha1>izlyo0v53gn89w056xf5c8cmnx9woaa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-yu</title>
    <ns>10</ns>
    <id>200492</id>
    <redirect title="Template:False Friends of the Slavist/Lang-yu" />
    <revision>
      <id>1547155</id>
      <timestamp>2009-06-24T19:18:21Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFLang-yu]] to [[Template:False Friends of the Slavist/Lang-yu]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-yu]]</text>
      <sha1>bokornh8ex3gaueo1atvoo9y3d1ss9k</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Data Management</title>
    <ns>0</ns>
    <id>200493</id>
    <revision>
      <id>2607657</id>
      <parentid>2193098</parentid>
      <timestamp>2014-02-08T23:56:35Z</timestamp>
      <contributor>
        <username>Bequw</username>
        <id>97998</id>
      </contributor>
      <comment>+note about storage sizes</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;

== Read and import data ==

Usually, data are loaded into memory using the &lt;code&gt;use&lt;/code&gt; command. The &lt;code&gt;clear&lt;/code&gt; option makes it sure that the current database in memory will be removed without saving the last changes.

&lt;pre width = 80&gt;
use &quot;W:\Data\…\table.dta&quot; , clear	
&lt;/pre&gt;

The &lt;code&gt;cd&lt;/code&gt; command allows to specify a working directory and makes it easier to load tables into memory.
 
&lt;pre width = 80&gt;
cd &quot;W:\Data\&quot; 
use table, clear
&lt;/pre&gt;

Stata9 users can import Stata10 datasets using the &lt;code&gt;use10&lt;/code&gt; command.

&lt;pre width = 80&gt;
use10 table, clear
&lt;/pre&gt;

Some example datasets are stored in the Stata directory. They can be loaded into memory using the &lt;code&gt;sysuse&lt;/code&gt; command.

&lt;pre width = 80&gt;
. sysuse cancer, clear
. sysuse smoking, clear
. sysuse auto, clear
. sysuse jspmix, clear
&lt;/pre&gt;

You can import a Comma Separated Value (CSV) format using '''insheet'''

&lt;pre width = 80&gt;
insheet using &quot;W:\Data\…\table.csv&quot;, delim(&quot;;&quot;)	
&lt;/pre&gt;

=== See also ===

* 'webuse' for internet data
* 'xmluse' for xml files
* 'infile' for text files 
* 'input' for entering data from keyboard
* 'infix' 
* 'fdause' for SAS xport data
* If none of these command works, you may use '''Stat/Transfer'''
* '''FTRANS''': module to batch convert file formats

== Save and export data ==

* save
 save table, replace

If you use Stata10 you can export to Stata9 format using '''saveold'''
 saveold table, replace

* outsheet : export to tab delimited or csv format. 
 outsheet using &quot;W:\Data\…\table.csv&quot;, replace comma		

See also
* outfile 
* xmlsave
* fdasave

== Append and merge ==

The standard Stata command is &lt;code&gt;merge&lt;/code&gt;. However, the user-written command &lt;code&gt;mmerge&lt;/code&gt; is safer and gives a better output. This command may be installed using &lt;code&gt;ssc install mmerge&lt;/code&gt; command or using &lt;code&gt;findit mmerge&lt;/code&gt;.

* dmerge
* joinby merge all possible pairs between the datasets

* '''append''' if you have two datasets with the same variable but different observations, you can make one dataset using the '''append''' command.

 use data_1, clear
 append data_2
 br 

== Describe a datasets ==

* des
* des, s
* codebook
* codebook2

== Detect missing values ==

* tabmiss
* npresent
* nmissing

You can convert missing values to values using the '''mvencode''' command. 
 mvencode exg ga dvg verts eco dr dvd fn reg mnr div, mv(0) override

== Variables ==

Very often you have to convert variable from a string to a numerical format. There are several way to do it. If you already have numeric values in your string variable, you should use '''destring'''. Otherwise you  should use the '''encode''' command. '''Encode''' will automatically create a numerical variable and will use as a value label the string values of the previous variable. 
	

* gen
* egen
* replace
* recode
* drop
* keep
* rename

'vallist' gives the list of all categories of a categorical variable in Stata. 
 vallist codep

== Dealing with labels ==

* lab var
* lab list
* lab define
* lab value


== Expand ==

* You can expand a dataset (ie multiplying observations by a given factor) using the '''expand''' command. 
This is useful for generating panel data models. In the first example, we draw 10 observations in a standard normal distribution and we replicate each observation once. 

&lt;pre&gt;
clear
set obs 10
gen u = invnorm(uniform())
expand 2
sort u
br 
&lt;/pre&gt;

It is also possible to pass an integer variable as an argument to '''expand'''.
&lt;pre&gt;
clear
set obs 10
gen u = uniform()
gen var = 1 + int(10 * uniform())
expand var
sort u 
br
&lt;/pre&gt;

&lt;pre&gt;
clear
set obs 10
gen u = invnorm(uniform())
expandcl 2 , gen(cl)
&lt;/pre&gt;

==Data Storage types==
All numeric types in Stata are normal &quot;signed&quot; quantities except that the highest 27 values are reserved for the &quot;missing&quot; types (., .a, .b, ..., .z). The storage size of the each variable is as follows:

{| class=&quot;wikitable&quot;
|-
! Variable !! Size (in bytes)
|-
| byte || 1
|-
| int || 2
|-
| long || 4
|-
| float || 4
|-
| double || 8
|-
| string || 1 per-letter (therefore only ASCII characters, not full Unicode/UTF-8)
|}

{{Stata/Navbar|Random Number Generation|Graphics}}</text>
      <sha1>hf5l11jqh5bgredt640lfgaiqvk8oaw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Graphics</title>
    <ns>0</ns>
    <id>200494</id>
    <revision>
      <id>1748659</id>
      <parentid>1748658</parentid>
      <timestamp>2010-04-01T14:02:12Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>/* Maps */ http://www.stata.com/support/faqs/graphics/spmap.html</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;


== References == 

* [http://www.ats.ucla.edu/stat/Stata/library/GraphExamples/default.htm  UCLA Stata Graph Gallery]
* [http://www.stata.com/bookstore/vgsg.html A visual guide to Stata Graphics]
** [http://www.stata.com/bookstore/pdf/vgsg2-ch1.pdf The 1st chapter]

== Scatter Plots ==

&lt;pre&gt;
. clear
. set obs 100
obs was 0, now 100
. gen id = _n 
. gen a = invnorm(uniform())
. gen b = invnorm(uniform()) + a
. gen c = invnorm(uniform()) - 2*a
. sc b c a, msymbol(sh oh) mcolor(cranberry green)
&lt;/pre&gt;

&lt;pre&gt;
clear
set obs 100

gen x = invnorm(uniform())
gen y = invnorm(uniform()) + x

tw (sc y x)(lfit y x)
tw (sc y x, msymbol(X))(lfit y x)
tw (sc y x, msymbol(D))(lfit y x)
tw (sc y x, msymbol(T))(lfit y x)
tw (sc y x, msymbol(S))(lfit y x)
tw (sc y x, msymbol(+))(lfit y x)
tw (sc y x, msymbol(p))(lfit y x)
tw (sc y x, msymbol(oh))(lfit y x)
tw (sc y x, msymbol(sh))(lfit y x)
&lt;/pre&gt;

== Standard Error Bar Chart ==

Standard Error Bar Chart are very useful to displain confidence interval.

&lt;pre&gt;
. clear
. set obs 100
obs was 0, now 100
. gen id = _n
. expand 10
(900 observations created)
. gen u = id/30 + invnorm(uniform())
. collapse (mean) mean = u (sd) sd = u, by(id) 
. local s = invnorm(.975) * 97,5 percentile of the normal distribution
. serrbar mean sd id , scale(`s')
&lt;/pre&gt;

== Setting for Graphics ==

* the list of symbols : 
 . palette symbolpalette 


''query graphics'' gives all the settings.

 . query graphics
     Graphics settings
         set graphics        on
         set scheme          vg_s2c
         set printcolor      automatic  may be automatic, asis, gs1, gs2, gs3
         set copycolor       automatic  may be automatic, asis, gs1, gs2, gs3
         set macgphengine    quartz     may be quartz or quickdraw
         set piccomments     on


* The scheme defines the general appearance of the graph.
* You can download more scheme on the Visual Guide to Stata Graphics website : 

 . net from http://www.stata-press.com/data/vgsg2/
 . net install vgsg2

== Exporting/Saving graphics ==

You can export a graph to png, jpg, ps or pdf format by using once the graph is done the '''graph export''' command.

 . tw sc y x 
 . gr export graph.png, replace

See '''h gr export''' to see the list of all available graph devices.

You can also store a graph in the Stata graph format using the '''graph save''' command. This format can only be read by Stata.

== Maps ==

* tmap
* spmap (http://www.stata.com/support/faqs/graphics/spmap.html)


{{Stata/Navbar|Data|Programming}}</text>
      <sha1>aymr4qi6046w25c1rmq6uq9ky2dnpby</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Programming</title>
    <ns>0</ns>
    <id>200495</id>
    <revision>
      <id>2616161</id>
      <parentid>2574146</parentid>
      <timestamp>2014-03-12T15:58:16Z</timestamp>
      <contributor>
        <username>Bequw</username>
        <id>97998</id>
      </contributor>
      <comment>/* Shell programs calling Stata */ +1 more example</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;

== Macros == 

Stata includes 2 types of macros, local and global. 

== Programs ==

* A program in Stata is a kind of function. It takes arguments and produces a result. 

* which checks if a program already exists
&lt;pre&gt;
. which hello
/Applications/Stata/ado/personal/hello.ado
&lt;/pre&gt;

&lt;pre&gt;
which hello
cap program drop hello  
program define hello
	di &quot;say hello&quot;
end
hello
program drop hello
&lt;/pre&gt;

A program can also return an r-class object
&lt;pre&gt;
. clear
. set obs 100
obs was 0, now 100
. gen u=invnorm(uniform())
. *** rclass
. program example, rclass
  1.  return scalar x=1
  2. end
. example
. ret list
scalars:
                 r(x) =  1

&lt;/pre&gt;

=== Passing argument to a program ===

By default arguments are called using macros `1', `2',…,`N'. Here is an example of how it works. The program is very simple and just display the arguments if any. 

&lt;pre&gt;
. cap program drop tester

. program tester
  1.  di &quot;argument 1 is |`1'|&quot;
  2.  di &quot;argument 2 is |`2'|&quot;
  3.  di &quot;argument 3 is |`3'|&quot;
  4.  di &quot;argument 4 is |`4'|&quot;
  5. end

. 
. tester
argument 1 is ||
argument 2 is ||
argument 3 is ||
argument 4 is ||

. tester a b c
argument 1 is |a|
argument 2 is |b|
argument 3 is |c|
argument 4 is ||

. tester ab cd ee pei 
argument 1 is |ab|
argument 2 is |cd|
argument 3 is |ee|
argument 4 is |pei|
&lt;/pre&gt;

== Personal ado-files ==

The best practice is to store your personal ado-files in the personal directory. 

&lt;pre&gt;
. personal dir
your personal ado-directory is /Applications/Stata/ado/personal/
&lt;/pre&gt;

== Help files ==

Help files are using a specific mark up language. You can open an help file in your text editor and see the syntax.

== Unix-like function ==

* '''rmdir''' remove a directory
* '''mkdir''' create a new directory
* '''erase''' erase a file 
 erase temp.dta
* '''shell''' or '''!''' execute a unix/dos command. For instance in a unix environment (Mac/Linux), one can use the '''iconv''' command line to change the encoding from macroman to latin1 : 
 ! iconv -f latin1 -t macroman dataxmlWin.xml &gt; dataxmlMac.xml
* type print a file in the result window.
 type textfile.txt
* '''copy''' will copy a file to disk
 copy http://en.wikibooks.org/wiki/Stata wikibook.txt
* filefilter replace a character by another one in a text file. The following command remove quotes from temp1.txt and replace them with a &quot;-&quot;.
 filefilter temp1.txt temp2.txt, from(&quot;\Q&quot;) to(&quot;-&quot;) replace
* tmpdir gives the temporary working directory

=== Encoding problems ===

Sometimes, you need to convert the encoding of a dataset from '''latin1''' to '''macroman'''. You can use the unix '''iconv''' command.

&lt;pre&gt;
cap prog drop win2mac
prog define win2mac
	args basewin 
	use `basewin', clear
	xmlsave dataxmlWin, doctype(dta) replace
	! iconv -f latin1 -t macroman dataxmlWin.xml &gt; dataxmlMac.xml
	xmluse dataxmlMac.xml, doctype(dta)
end
&lt;/pre&gt;

== Shell programs calling Stata ==
For ongoing projects one may want to embed Stata scripts into an automated workflow. This section will show you how to run Stata do files from the command-line. For these examples you will have to include the folder of your Stata executable into your PATH environment variable. Depending on your &quot;flavor&quot; of Stata (SE, MP, IC, Small) your Stata executable may also have a slightly different name. 

If you just call Stata with the do-file as its only argument, such as:
 StataSE myscript.do
Then Stata will open in normal (interactive) mode and do one of two things depending on your user preferences. It may execute the script (running -do myscript.do-) or open the do-file editor (-doedit myscript.do-). To set this preference open the do-file editor and then go to Edit, Preferences, and set the option for &quot;Edit do-files opened from Windows instead of executing them&quot;.

Alternatively, you can call Stata in background (batch) mode, such as:
 StataSE /e do myscript.do
This will execute your script, keep the Stata window minimized, and automatically log everything to myscript.log in the current working directory (there is no way to turn off this automatic logging in batch mode). 

Calling shell commands (!/shell/winexec) in batch mode will not work from Window&lt;ref&gt;http://www.stata.com/statalist/archive/2010-01/msg00537.html&lt;/ref&gt;. Programs that rely on these commands will also not work in this setting. Examples include: dirlist&lt;ref&gt;http://www.stata.com/statalist/archive/2011-07/msg00559.html&lt;/ref&gt; and parallel.

By default, Stata will inherit the working directory from the Shell. For example:
 cd /myproject/
 Stata /e do code/myscript.do
Stata will run with the working directory as /myproject. The log file will be there as well so this is a way to have your log files end up in a different directory than you do files.

==References==
&lt;references/&gt;

{{Stata/Navbar|Graphics|Mata}}</text>
      <sha1>3igjawgxyjs6bz99h83925zp1canrts</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Bootstrap</title>
    <ns>0</ns>
    <id>200496</id>
    <revision>
      <id>1547343</id>
      <parentid>1547167</parentid>
      <timestamp>2009-06-24T20:46:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Added navigation bar.</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;


== Bootstrap/Resampling Methods ==

* bs 
* bstrap
* bstat
* bsample


{{Stata/Navbar|Bayesian Methods|Non Parametric}}</text>
      <sha1>hmhoa9jpd9fql1emzfjw1vnt7um1eob</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Binomial Outcome Models</title>
    <ns>0</ns>
    <id>200497</id>
    <revision>
      <id>1932374</id>
      <parentid>1629693</parentid>
      <timestamp>2010-09-13T13:38:46Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>/* Binomial outcome models */ glm logit probit</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;

== References ==

* [http://stata.com/bookstore/regmodcdvs.html ''Regression Models for Categorical Dependent Variables''] Long and Freese. Example datasets and programs are available on [http://www.stata-press.com/data/regmodcdvs2.html this webpage]

== Binomial outcome models ==

* The logit model can be estimated using '''logit''' or '''glm''' and the probit model with '''probit''' or '''glm'''. 

&lt;pre&gt;
. clear
. set obs 10000
obs was 0, now 10000 
. gen u = invnorm(uniform())
. gen x = invnorm(uniform())
. gen ystar = x + u
. gen y = (ystar &gt; 0)
. eststo clear 
. eststo : qui : reg ystar x
(est1 stored)
. eststo : qui : glm y x, family(binomial) link(logit)
(est2 stored)
. eststo : qui : logit y x
(est3 stored)
. eststo : qui : glm y x, family(binomial) link(probit)
(est4 stored)
. eststo : qui : probit y x
(est5 stored)
. esttab , se
&lt;/pre&gt;


=== Scobit ===

* Scobit (Skewed logistic regression) was developped by Jonathan Nagler 1994 (American Journal of Political Science). The idea is two estimate a skewness parameter of the underlying distribution.

&lt;pre&gt;
. global N = 2000 
. global alpha = 1
. clear
. set obs $N
obs was 0, now 2000
. gen u = ln(uniform()^(-1/$alpha) - 1)
. gen x = uniform()
. global beta = 2 
. gen y = ($beta * x + u &gt; 0)

.  
. scobit y x 

Fitting logistic model:

Iteration 0:   log likelihood =  -1190.598
Iteration 1:   log likelihood = -1126.9573
Iteration 2:   log likelihood = -1125.9604
Iteration 3:   log likelihood = -1125.9597
Iteration 4:   log likelihood = -1125.9597

Fitting full model:

Iteration 0:   log likelihood = -1125.9597  
Iteration 1:   log likelihood = -1125.9459  
Iteration 2:   log likelihood = -1125.8543  
Iteration 3:   log likelihood = -1125.8241  
Iteration 4:   log likelihood = -1125.8008  
Iteration 5:   log likelihood = -1125.7376  
Iteration 6:   log likelihood =  -1125.731  
Iteration 7:   log likelihood =  -1125.724  
Iteration 8:   log likelihood = -1125.7185  
Iteration 9:   log likelihood = -1125.7158  
Iteration 10:  log likelihood = -1125.7144  
Iteration 11:  log likelihood =  -1125.714  
Iteration 12:  log likelihood = -1125.7139  
Iteration 13:  log likelihood = -1125.7139  

Skewed logistic regression                      Number of obs     =       2000
                                                Zero outcomes     =        565
Log likelihood = -1125.714                      Nonzero outcomes  =       1435

------------------------------------------------------------------------------
           y |      Coef.   Std. Err.      z    P&gt;|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           x |   4.290739   7.563589     0.57   0.571    -10.53362     19.1151
       _cons |   1.737008   4.256165     0.41   0.683    -6.604923    10.07894
-------------+----------------------------------------------------------------
    /lnalpha |  -1.068748   1.993377    -0.54   0.592    -4.975694    2.838198
-------------+----------------------------------------------------------------
       alpha |   .3434382   .6846017                      .0069037    17.08495
------------------------------------------------------------------------------
Likelihood-ratio test of alpha=1:   chi2(1) =     0.49    Prob &gt; chi2 = 0.4832

note: Likelihood-ratio tests are recommended for inference with scobit models.
&lt;/pre&gt;</text>
      <sha1>72p4db9lckdeat1l2wwc9p8imkb60n9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Linear Models</title>
    <ns>0</ns>
    <id>200499</id>
    <revision>
      <id>2190451</id>
      <parentid>2061573</parentid>
      <timestamp>2011-10-18T16:00:00Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>/* References */ 2 columns</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;

== References ==

* [http://www.ats.ucla.edu/stat/stata/topics/regression.htm UCLA Computing STATA Regression page]

== Simple Linear Model ==

We generate a simple fake data set : 
&lt;pre&gt;
clear
set obs 1000
gen u = invnorm(uniform())
gen x = invnorm(uniform()) 
gen y = 1 + x + u
&lt;/pre&gt;

&lt;pre&gt;
reg y x
eret list /*gives the list of all stored results */
predict yhat /*gives the predicted value of y*/
predict res, res /*gives the residuals*/
&lt;/pre&gt;

'''leanout''' is a prefix which simplifies the output&lt;ref&gt;Nathaniel Beck &quot;leanout: A prefix to regress (and similar
commands) to produce less output that is more useful&quot; Stata Journal, forthcoming http://politics.as.nyu.edu/docs/IO/2576/sj_driver.pdf&lt;/ref&gt;. This command does not display useless ancillary statistics and focus and confidence intervals rather than null hypothesis testing.

&lt;pre&gt;
ssc install leanout
leanout : reg y x 
&lt;/pre&gt;

== Performing multiple regression on the same subsample == 

Sometimes you want to perform multiple regressions on the same subsample. This is not obvious since when one of the variable of the model is missing the observation is dropped. One way to be sure that you use the same subsample is to use the 'e(sample)' command which returns the list of all used observations. In the example below qui store the result of 'e(sample)' in variables 'samp1' and 'samp2' and we perform the model conditionning on 'samp1==1 &amp; samp2 == 1'. Thus we are sure that both estimation are done using the same observations.  

&lt;pre width=80&gt; 
. clear
. set obs 1000
. gen u = invnorm(uniform())
. gen x = invnorm(uniform())
. gen y1 = 1 + x + u if uniform() &lt; .8
. gen y2 = 1 + x + u if uniform() &lt; .9 
. qui reg y1 x
. gen samp1 = e(sample)
. ta samp1 
. qui reg y2 x
. gen samp2 = e(sample)
. ta samp2
. eststo clear
. eststo : qui : reg y1 x if samp1 &amp; samp2 
. eststo : qui : reg y2 x if samp1 &amp; samp2
. esttab ,  star(* 0.1 ** 0.05 *** 0.01) se
&lt;/pre&gt;

== Instrumental Variables ==

Here is a data generating process for an instrumental variable setting. 
'''u''' is correlated with '''x''' which gives endogeneity. 
'''z''' is independant of '''u''' and correlated with '''x''', which makes it eligible as a valid instrument for x.

&lt;pre&gt;
clear
set obs 1000
gen u = invnorm(uniform())
gen z = invnorm(uniform())
gen x = invnorm(uniform()) + z + u
gen y = 1 + 2*x + u
&lt;/pre&gt;

It easy to see that the standard least square estimate is biased and the IV estimate is unbiased.

&lt;pre&gt;
eststo clear
eststo : reg y x 
eststo : ivreg y (x=z)
esttab , se
&lt;/pre&gt;

You can perform an overidentification test using '''overid''' or '''ivreg2'''

&lt;pre&gt;
clear
set obs 1000
gen u = invnorm(uniform())
gen z1 = invnorm(uniform())
gen z2 = invnorm(uniform())
gen x = invnorm(uniform()) + z1 - 2*z2 + u
gen y = 2*x + u

ivreg y (x=z1 z2)
overid
ivreg2 y (x=z1 z2)
&lt;/pre&gt;

== Seemingly Unrelated Equations ==

&lt;pre width=80&gt;
. clear
. set obs 1000
. local s11 = 1
. local s12 = .5 
. local s22 = 1
. local s13 = .5
. local s23 = .5
. local s33 = 1 
. forvalues k = 1/3{
  2.  tempvar u`k'
  3.  gen `u`k'' = invnorm(uniform())
  4.  }
. gen eta1 = `s11' * `u1'
. gen eta2 = `s12' * `u1' + `s22' * `u2'
. gen eta3 = `s13' * `u1' + `s23' * `u2' + `s33' * `u3' 
. gen x = invnorm(uniform()) 
. forvalues k=1/3{
  2.  gen z`k' = invnorm(uniform())
  3.  }
. gen y1 = 1 + 2*x + z1 + eta1 
. gen y2 = - 1 + x + z2 + eta2 
. gen y3 = 4 + z3 + eta3
. global eq1 =  &quot;y1 x z1&quot;
. global eq2 =  &quot;y2 x z2&quot;
. global eq3 =  &quot;y3 x z3&quot; 
. reg $eq1
. reg $eq2
. reg $eq3
. sureg (toto1 : $eq1) (toto2 : $eq2) (toto3 : $eq3)
&lt;/pre&gt;

== Linear Panel Data ==

* xtset
* xtreg 
* xtabond
* xtabond2
* ivreg2
* xtivreg2
* ivendog 
* ivhettest
* overid : overidentification test
* xtoverid : overidentification test
* xttest2 
* ivgmm0
* xtarsim
* xtdpd
* xtdpdsys

=== Random effect estimator ===

We assume &lt;math&gt;y_{it} = 1 + x_{it} + z_{i} + f_{i} + u_{it}&lt;/math&gt;. With f independant of x and z and u independant of x and z.
&lt;pre&gt;
. clear
. set obs 1000
. gen id = _n
. gen f = invnorm(uniform())
. gen z = uniform()
. expand 10
. gen u = invnorm(uniform())
. gen x = uniform()
. gen y = 1 + x + z + f + u
. eststo clear
. eststo : qui : reg y x z
. eststo : qui : reg y x z, robust
. eststo : qui : reg y x z, cluster(id)
. eststo : qui : xtreg y x z, i(id) re
. eststo : qui : xtreg y x z, i(id) mle
. eststo : qui : xtmixed y x z || id : , mle
. esttab * , se  
&lt;/pre&gt;

=== Dynamic Linear Panel Data ===

Layard and Nickel unemployment dataset.

&lt;pre&gt;
. use http://fmwww.bc.edu/ec-p/data/macro/abdata.dta, clear
(Layard &amp; Nickell, Unemployment in Britain, Economica 53, 1986 from Ox dist)
&lt;/pre&gt;

You can also generate fake data :
&lt;pre&gt;
clear
	set obs 10000
	set seed 123456
	gen id = _n
	gen f= invnorm(uniform())
	forvalues t=1/5{
		gen u`t' = invnorm(uniform())
		}
	gen y1 = f/.3 + u1 
	forvalues t=2/5{
		local z=`t'-1
		gen y`t' =  .7 * y`z' +  f +  u`t'
	}
save wide, replace
reshape long y, i(id) j(year)
drop u* f
tsset siren an 
save long, replace
&lt;/pre&gt;

It is easy to see that standard random effect and fixed effect models are biased but instrumented random and fixed effect are unbiased : 
&lt;pre&gt;
eststo clear
eststo : qui : xtreg y l.y, re 
eststo : qui : xtreg y l.y, fe 
eststo : qui : xtivreg y (l.y= l2.d.y) , re 
eststo : qui : xtivreg y (l.y= l2.y) , fd 
esttab  ,se
&lt;/pre&gt;

&lt;pre&gt;
eststo clear
eststo : qui : xi : xtabond2 y l.y, gmmstyle(l.y, lag(2 .) equation(level))  nomata  robust
eststo : qui : xi : xtabond2 y l.y, gmmstyle(l.y, lag(2 .) equation(level))  ivstyle( , e(diff)) nomata  robust
eststo : qui : xi : xtabond2 y l.y, iv(l.y l2.y l3.y, equation(diff))   nomata  robust
esttab , se
&lt;/pre&gt;

== References ==

{{reflist|2}}

{{Stata/Navbar|Descriptive Statistics|Maximum Likelihood}}</text>
      <sha1>i27nk52kla1avbhlyvf6u156jtykcv9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Non Linear Panel Data</title>
    <ns>0</ns>
    <id>200500</id>
    <revision>
      <id>1754335</id>
      <parentid>1547346</parentid>
      <timestamp>2010-04-11T10:20:56Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;
== Non linear panel data ==

* xtlogit


{{Stata/Navbar|Linear Models|Time Series}}</text>
      <sha1>aia7vc2wfc53y7weo0nn0ml46mpn6na</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFLang-ua</title>
    <ns>10</ns>
    <id>200502</id>
    <redirect title="Template:False Friends of the Slavist/Lang-ua" />
    <revision>
      <id>1548668</id>
      <parentid>1547185</parentid>
      <timestamp>2009-06-26T00:53:17Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <minor />
      <comment>fix double redirect</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Lang-ua]]</text>
      <sha1>7h1i72rknvbfafpyeyf2gjwhc8twzn9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Publication Quality Ouput</title>
    <ns>0</ns>
    <id>200503</id>
    <revision>
      <id>1932667</id>
      <parentid>1932656</parentid>
      <timestamp>2010-09-14T11:29:39Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>/* Export to LaTeX */ modl</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;



== Weaving ==

Weaving is an integration of statistical program with a publishing software. You have in the same file your code and your text. Weaving is intended to improve reproducibility standards (see [http://www.econ.uiuc.edu/~roger/repro.html Roger Koenker's webpage]). 

* [http://ideas.repec.org/c/boc/bocode/s457021.html Ben Jann's texdoc] provides weaving capabilities for Stata and LaTeX

== Export to [[LaTeX]] ==

* '''eststo''', '''esttab''', '''estadd''' and '''estout''' are the best solution to print and export to latex the estimation results&lt;ref&gt;Visit the website http://repec.org/bocode/e/estout/&lt;/ref&gt;. 
** '''eststo''' is a prefix command which stores estimation results.
** '''estout''' prints the results. It includes many options and is difficult to use.
** '''esttab''' is a wrapper for '''estout''' which includes less options and is easier to use.
** '''estadd''' allows to store more statistics.
&lt;pre width = 80&gt;
sysuse auto, clear
eststo clear
eststo A: quietly logit foreign weight
eststo B: quietly logit foreign weight mpg 
estadd lrtest A
esttab, scalars(lrtest_chi2 lrtest_df lrtest_p)
eststo clear
&lt;/pre&gt;
* outreg 
* outreg2
* '''modl''' :
&lt;pre width = 80&gt;
clear
set obs 100

gen u = invnorm(uniform())
gen x1 = invnorm(uniform())
gen x2 = invnorm(uniform())
gen y = 1 + x1 + x2 + u

qui : reg y x1
modl 1 ,Base model
qui : reg y x1 x2
modl 2 ,Full model
modltbl se 1 2 
&lt;/pre&gt;
* outtex
* sutex
* tabout
* latab
* latabstat
* listtex

== Export to a spreadsheet (Excel) ==

* outreg
* outsheet

== Export to a text format ==

* '''outsheet'''

== References ==

{{reflist}}


{{Stata/Navbar|Natural Language Processing|}}</text>
      <sha1>0kg4s9bt9tgb9ozgrd0mlhcqw11rcih</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Matching</title>
    <ns>0</ns>
    <id>200504</id>
    <revision>
      <id>1629085</id>
      <parentid>1547344</parentid>
      <timestamp>2009-09-13T08:40:17Z</timestamp>
      <contributor>
        <username>PAC</username>
        <id>244523</id>
      </contributor>
      <minor />
      <comment>psmatch</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;


== Matching Analysis ==

* psmatch2
* nnmatch


 . net from http://leuven.economists.nl/stata


{{Stata/Navbar|Non Parametric|Quantile Regression}}</text>
      <sha1>cei136mvio1p2qrnft06aviwldq0xvf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMapLegend2</title>
    <ns>10</ns>
    <id>200505</id>
    <redirect title="Template:False Friends of the Slavist/MapLegend2" />
    <revision>
      <id>1547197</id>
      <timestamp>2009-06-24T19:33:24Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMapLegend2]] to [[Template:False Friends of the Slavist/MapLegend2]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/MapLegend2]]</text>
      <sha1>j71j6wc6ksotuw76geaptu7kwcxgti3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Pan Broil</title>
    <ns>102</ns>
    <id>200506</id>
    <revision>
      <id>2686970</id>
      <parentid>1750413</parentid>
      <timestamp>2014-07-31T22:15:46Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>16549</id>
      </contributor>
      <minor />
      <comment>Koavf moved page [[Cookbook:Pan broil]] to [[Cookbook:Pan Broil]]</comment>
      <text xml:space="preserve">{{technique}}

Pan broiling is when an item, usually meat, is placed in a dry pan and cooked over high heat. Meats that are good for pan broiling include [[Cookbook:Beef|beef]], [[Cookbook:Pork|pork]], and [[cookbook:fish|fish]].</text>
      <sha1>pt8qx0yypoqbs1i8z14bavs0s5uzu19</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:SAS/Navigation</title>
    <ns>10</ns>
    <id>200508</id>
    <revision>
      <id>1753140</id>
      <parentid>1629522</parentid>
      <timestamp>2010-04-08T17:00:59Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>reorganization</comment>
      <text xml:space="preserve">&lt;div class=&quot;noprint&quot; style=&quot;background-color: #efe; border: 1px solid #8b8; padding: 0.5em; font-size: small; text-align: left; float: right; clear: right; width: 25%; margin: 0.5em&quot;&gt;
'''[[SAS]]'''&lt;br /&gt;
----
* '''SAS Basics'''
** [[SAS/Introduction|Introduction]]
** [[SAS/Basics|Basics]]
** [[SAS/Settings|Settings]]
** [[SAS/Documentation|Documentation]]
** [[SAS/Math_Functions|Math Functions]]
** [[SAS/String_Functions|String Functions]]
** [[SAS/Data_Management|Data Management]]
** [[SAS/Graphics|Graphics]]
** [[SAS/Programming|Programming]]
** [[SAS/IML|IML]]
** [[SAS/Publication_Quality_Ouput|Publication Quality Output]]
** [[SAS/Descriptive_Statistics|Descriptive Statistics]]
* '''Methods'''
** [[SAS/Maximum_Likelihood|Maximum Likelihood]]
** [[SAS/Method_of_Moment|Method of Moments]]
* '''Topics''' 
** [[SAS/Linear_Models|Linear Models]]
** [[SAS/Binomial_Outcome Models|Binomial Outcome Models]]
** [[SAS/Multinomial_Models|Multinomial Models]]
** [[SAS/Duration_Analysis|Duration Analysis]]
** [[SAS/Factor Analysis|Factor Analysis]]  


----
&lt;small&gt;[http://en.wikibooks.org/w/index.php?title=Template:SAS/Navigation&amp;action=edit edit this box]&lt;/small&gt;
&lt;/div&gt;&lt;noinclude&gt;[[Category:Exclude in print]]&lt;/noinclude&gt;{{BookCat}}</text>
      <sha1>orel0e5ap98ahy6r5pu7lgwqx5qx74z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMapLegend4</title>
    <ns>10</ns>
    <id>200509</id>
    <redirect title="Template:False Friends of the Slavist/MapLegend4" />
    <revision>
      <id>1547219</id>
      <timestamp>2009-06-24T19:42:28Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMapLegend4]] to [[Template:False Friends of the Slavist/MapLegend4]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/MapLegend4]]</text>
      <sha1>5dtkb7ffvbe5apj57raja4yp3jovq3h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Beetstra</title>
    <ns>2</ns>
    <id>200510</id>
    <revision>
      <id>2096105</id>
      <parentid>1547220</parentid>
      <timestamp>2011-05-16T09:52:36Z</timestamp>
      <contributor>
        <username>Beetstra</username>
        <id>53192</id>
      </contributor>
      <comment>typo</comment>
      <text xml:space="preserve">&lt;div style=&quot;margin-top:.5em; margin-bottom:.5em; border:1px solid #8DB9F6; background-color:#E9F2FE; padding:.5em&quot;&gt;&lt;div align=center&gt;
Hi, and welcome to my user page.

I am Dirk Beetstra, my main projects are [[:w:en:Main page|en.wikipedia]] and [[:m:Main page|meta.wikimedia]]

My main edits here will concern editors who have been performing the same (or similar) edits on more than one wikipedia.

'''If you want to contact me quickly, leave a message [[:w:en:User talk:Beetstra|on en.wikipedia]] or [[:m:User talk:Beetstra|on meta.wikimedia]]!'''

'''For justification of my edits, please see the header of my talkpage.'''

&lt;/div&gt;
&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;(Global) rights:
* [[:m:Global rollback]]
&lt;br/&gt;
General links:
* [[:m:External links policy|meta external links policy]]
* [[:m:External links policy/Local policies and pages|matrix of local policies and pages ]]
&lt;div align=center&gt;
[[aa:User:Beetstra]]
[[af:User:Beetstra]]
[[als:User:Beetstra]]
[[am:User:Beetstra]]
[[ar:User:Beetstra]]
[[de:User:Beetstra]]
[[en:User:Beetstra]]
[[as:User:Beetstra]]
[[ast:User:Beetstra]]
[[ay:User:Beetstra]]
[[az:User:Beetstra]]
[[be:User:Beetstra]]
[[bg:User:Beetstra]]
[[bn:User:Beetstra]]
[[bo:User:Beetstra]]
[[bs:User:Beetstra]]
[[cs:User:Beetstra]]
[[cs:User:Beetstra]]
[[cy:User:Beetstra]]
[[da:User:Beetstra]]
[[el:User:Beetstra]]
[[eo:User:Beetstra]]
[[es:User:Beetstra]]
[[et:User:Beetstra]]
[[eu:User:Beetstra]]
[[fa:User:Beetstra]]
[[fi:User:Beetstra]]
[[fr:User:Beetstra]]
[[fy:User:Beetstra]]
[[ga:User:Beetstra]]
[[gl:User:Beetstra]]
[[gn:User:Beetstra]]
[[gu:User:Beetstra]]
[[he:User:Beetstra]]
[[hi:User:Beetstra]]
[[hr:User:Beetstra]]
[[hy:User:Beetstra]]
[[ia:User:Beetstra]]
[[id:User:Beetstra]]
[[is:User:Beetstra]]
[[it:User:Beetstra]]
[[ja:User:Beetstra]]
[[ka:User:Beetstra]]
[[kk:User:Beetstra]]
[[km:User:Beetstra]]
[[kn:User:Beetstra]]
[[ko:User:Beetstra]]
[[ks:User:Beetstra]]
[[ku:User:Beetstra]]
[[ky:User:Beetstra]]
[[la:User:Beetstra]]
[[ln:User:Beetstra]]
[[lo:User:Beetstra]]
[[lt:User:Beetstra]]
[[lv:User:Beetstra]]
[[hu:User:Beetstra]]
[[mi:User:Beetstra]]
[[mk:User:Beetstra]]
[[ml:User:Beetstra]]
[[mn:User:Beetstra]]
[[mr:User:Beetstra]]
[[ms:User:Beetstra]]
[[mt:User:Beetstra]]
[[my:User:Beetstra]]
[[na:User:Beetstra]]
[[nah:User:Beetstra]]
[[nds:User:Beetstra]]
[[ne:User:Beetstra]]
[[nl:User:Beetstra]]
[[no:User:Beetstra]]
[[oc:User:Beetstra]]
[[om:User:Beetstra]]
[[pa:User:Beetstra]]
[[pl:User:Beetstra]]
[[ps:User:Beetstra]]
[[pt:User:Beetstra]]
[[qu:User:Beetstra]]
[[ro:User:Beetstra]]
[[ru:User:Beetstra]]
[[sa:User:Beetstra]]
[[si:User:Beetstra]]
[[sk:User:Beetstra]]
[[sl:User:Beetstra]]
[[sq:User:Beetstra]]
[[sr:User:Beetstra]]
[[sv:User:Beetstra]]
[[sw:User:Beetstra]]
[[ta:User:Beetstra]]
[[te:User:Beetstra]]
[[tg:User:Beetstra]]
[[th:User:Beetstra]]
[[tk:User:Beetstra]]
[[tl:User:Beetstra]]
[[tr:User:Beetstra]]
[[tt:User:Beetstra]]
[[ug:User:Beetstra]]
[[uk:User:Beetstra]]
[[ur:User:Beetstra]]
[[uz:User:Beetstra]]
[[vi:User:Beetstra]]
[[vo:User:Beetstra]]
[[xh:User:Beetstra]]
[[yo:User:Beetstra]]
[[za:User:Beetstra]]
[[zh:User:Beetstra]]
[[zu:User:Beetstra]]

[[zea:User:Beetstra]]
&lt;/div&gt;&lt;/div&gt;</text>
      <sha1>c2uwggjomywvqx5zaxsjba59tiocdd9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Beetstra</title>
    <ns>3</ns>
    <id>200511</id>
    <revision>
      <id>1547222</id>
      <timestamp>2009-06-24T19:43:25Z</timestamp>
      <contributor>
        <username>Beetstra</username>
        <id>53192</id>
      </contributor>
      <comment>start</comment>
      <text xml:space="preserve">&lt;div style=&quot;margin-top:.5em; margin-bottom:.5em; border:1px solid #8DB9F6; background-color:#E9F2FE; padding:.5em&quot;&gt;&lt;div align=center&gt;
Hi, and welcome to my talk page.

I am Dirk Beetstra, my main projects are [[:w:en:User:Beetstra]] and [[:m:User:Beetstra]]

My main edits here will concern editors who were performing the same (or similar) edits on more than one wikipedia.

'''If you want to contact me quickly:&lt;br/&gt;
leave a message [[:w:en:User talk:Beetstsra|on en.wikipedia]] or [[:m:User talk:Beetstra|on meta.wikimedia]]&lt;br/&gt;
contact me [irc://chat.freenode.net:8001/wikipedia-spam-t on IRC]'''
&lt;/div&gt;
----
'''My edits here'''
* My edits here will mainly be due to removal of '''unwanted external links''' and '''vandalism'''.  Generally the edits I revert have been performed on a (large) number of wikimedia projects, or the info I remove has been added ('pushed') to a (large) number of wikimedia projects (hence regarding edits that were very similar in nature), and is considered ''generaly'' unhelpful.  

* If the removal concerns '''external links''', then the removal may very well precede or follow meta blacklisting, and the removal is to prevent further disruption.

* I will be able to provide ''evidence'' of the wide scale disruption that has been performed by the editor whose edits I revert.

* Please note that the info on a singular wiki may seem appropriate, but the user I am handling is probably performing their edits on a large number of wikis.  If you feel the edit is here appropriate, or even wanted, just revert me.

Terms I use in my edit summaries:
* 'cross-wiki spam' or 'xwiki spam' -&gt; a user has been adding the link(s) I am removing/reverting edit on a large number of wikipedia.  The link may already be blacklisted on meta (see [[:m:Talk:Spam blacklist]]).

'''My tools'''
* I have [[:m:Global rollback]].  If I use it on this wiki, I will probably be reverting something cross-wiki.

*I am a 'bot' operator (software automatically processing wikimedia edits), running a number of bots on IRC, and some on en.wikipedia and meta.wikimedia.  The majority of these bots concern 'conflict of interest' and link additions.  These bots report to IRC and in that way provide me with information about cross-wiki aspects of certain editors.

'''General links'''
* [[:m:External_links_policy|meta external links policy]]
* [[:m:External_links_policy/Local_policies_and_pages|matrix of local policies and pages ]]

&lt;div align=center&gt;
For more information, see my meta userpage: [[:m:User:Beetstra]].
&lt;/div&gt;&lt;/div&gt;</text>
      <sha1>px1rwpig73m5bkzv5divobb7whvpshy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMapLegend5</title>
    <ns>10</ns>
    <id>200512</id>
    <redirect title="Template:False Friends of the Slavist/MapLegend5" />
    <revision>
      <id>1547230</id>
      <timestamp>2009-06-24T19:46:37Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMapLegend5]] to [[Template:False Friends of the Slavist/MapLegend5]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/MapLegend5]]</text>
      <sha1>8jjlboauaz1is59bqj60za9f8z5o9b8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Mendelivia</title>
    <ns>2</ns>
    <id>200513</id>
    <revision>
      <id>1547246</id>
      <parentid>1547233</parentid>
      <timestamp>2009-06-24T19:52:48Z</timestamp>
      <contributor>
        <username>Mendelivia</username>
        <id>34305</id>
      </contributor>
      <text xml:space="preserve">Hi, I am very keen on the concept of Wikibooks and Wikipedia, and in the open-source concept in general.  I am, however, not very adept at editing Wikibook and Wikipedia articles.

I live in the United Kingdom, although I did live and work abroad for a few years.</text>
      <sha1>qzcdr4wgs1y4ve0hrk9jyr1y2qxgnsc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMapLegend6</title>
    <ns>10</ns>
    <id>200514</id>
    <redirect title="Template:False Friends of the Slavist/MapLegend6" />
    <revision>
      <id>1547238</id>
      <timestamp>2009-06-24T19:49:10Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMapLegend6]] to [[Template:False Friends of the Slavist/MapLegend6]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/MapLegend6]]</text>
      <sha1>1f1h0lwvt3hli7ebx7nd7ubbuiprifw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMapLegend7</title>
    <ns>10</ns>
    <id>200515</id>
    <redirect title="Template:False Friends of the Slavist/MapLegend7" />
    <revision>
      <id>1547243</id>
      <timestamp>2009-06-24T19:51:20Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMapLegend7]] to [[Template:False Friends of the Slavist/MapLegend7]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/MapLegend7]]</text>
      <sha1>11734qay8uwt4axvo568rk797ve4t2a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMap no4 cross</title>
    <ns>10</ns>
    <id>200516</id>
    <redirect title="Template:False Friends of the Slavist/Map no4 cross" />
    <revision>
      <id>1547249</id>
      <timestamp>2009-06-24T19:53:33Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMap no4 cross]] to [[Template:False Friends of the Slavist/Map no4 cross]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Map no4 cross]]</text>
      <sha1>2wewdbw6zr0dw4ad012l9qi2ewast6j</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMap no5 cross</title>
    <ns>10</ns>
    <id>200517</id>
    <redirect title="Template:False Friends of the Slavist/Map no5 cross" />
    <revision>
      <id>1547251</id>
      <timestamp>2009-06-24T19:54:14Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMap no5 cross]] to [[Template:False Friends of the Slavist/Map no5 cross]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Map no5 cross]]</text>
      <sha1>5dpjzjemigl1htpuz046qxjroqrelh9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMap no6 cross</title>
    <ns>10</ns>
    <id>200518</id>
    <redirect title="Template:False Friends of the Slavist/Map no6 cross" />
    <revision>
      <id>1547254</id>
      <timestamp>2009-06-24T19:54:48Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMap no6 cross]] to [[Template:False Friends of the Slavist/Map no6 cross]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Map no6 cross]]</text>
      <sha1>nzzxb1247bh2k64dcbn3wx10vld6nvh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFMap no7 cross</title>
    <ns>10</ns>
    <id>200519</id>
    <redirect title="Template:False Friends of the Slavist/Map no7 cross" />
    <revision>
      <id>1547258</id>
      <timestamp>2009-06-24T19:55:41Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFMap no7 cross]] to [[Template:False Friends of the Slavist/Map no7 cross]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Map no7 cross]]</text>
      <sha1>qkjhkp4qiqbxvv7qmabk6btmx7fpmet</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFNavTab</title>
    <ns>10</ns>
    <id>200520</id>
    <redirect title="Template:False Friends of the Slavist/NavTab" />
    <revision>
      <id>1547260</id>
      <timestamp>2009-06-24T19:56:52Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFNavTab]] to [[Template:False Friends of the Slavist/NavTab]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/NavTab]]</text>
      <sha1>8nuq9sdjd4zbialfqnxwm0yy9r626o7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect</title>
    <ns>10</ns>
    <id>200521</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect" />
    <revision>
      <id>1547264</id>
      <timestamp>2009-06-24T19:58:36Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect]] to [[Template:False Friends of the Slavist/TalkRedirect]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect]]</text>
      <sha1>fkbd1wu8nnfph99azdg21fr8tbc8ttn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Cappucino Mousse</title>
    <ns>102</ns>
    <id>200522</id>
    <revision>
      <id>2694632</id>
      <parentid>1699264</parentid>
      <timestamp>2014-08-25T22:44:19Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added chocolate, mousse and refrigerated cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1/2 cup espresso, cooled
* 2 cups heavy cream, beaten to soft peaks
* 1/3 cup sugar
* 2 tbsp chocolate syrup
* Pinch of salt

== Procedure ==
#Combine all ingredients except cream. Gently fold in cream. Chill for 20 minutes; serve.

[[Category:Dessert recipes]]
[[Category:Chocolate recipes]]
[[Category:Mousse recipes]]
[[Category:Refrigerated recipes]]</text>
      <sha1>mk1zqk47amskip3vc2v0tb5s8998agf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Documentation</title>
    <ns>0</ns>
    <id>200523</id>
    <revision>
      <id>2193112</id>
      <parentid>1808583</parentid>
      <timestamp>2011-10-18T16:57:19Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <minor />
      <comment>/* Video */ typo</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;

* [http://stata.com/ Stata]'s website includes a huge quantity of resources including 
** a [http://www.stata.com/bookstore/ bookstore] 
*** [http://www.stata.com/bookstore/pdf/vgsg2-ch1.pdf Mitchell's introduction to Stata Graphics]
** [http://www.stata-journal.com/ The Stata Journal]
* The [http://www.ats.ucla.edu/stat/stata/ UCLA Stata computing page] includes many tutorials.
** [http://www.ats.ucla.edu/stat/Stata/library/GraphExamples/default.htm UCLA Stata Graph Gallery]
* [http://ideas.repec.org/s/boc/bocode.html Statistical Software Component]
* [http://www.jourdan.ens.fr/~bozio/documents/stata.pdf Antoine Bozio's introduction to Stata (in French)]
* [http://leuven.economists.nl/stata/stataintro.pdf Edwin Leuven's Introduction to Stata]

== Video == 

* [http://sproul4121a.ucr.edu/StataInstall.mov 'Installing Commands from the Command Line in Stata']

== Blog ==

* [http://codeandculture.wordpress.com/tag/stata/ Gabriel Rossman]


{{Stata/Navbar|Settings|Probability Function}}</text>
      <sha1>o8a9w69wmpo4g02z92ic4oj415jxvqs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Dry Rub Barbecue Ribs</title>
    <ns>102</ns>
    <id>200524</id>
    <revision>
      <id>2681916</id>
      <parentid>1716643</parentid>
      <timestamp>2014-07-16T17:24:17Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added barbecue and main course cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 slab pork spareribs
* 6 tbsp [[Cookbook:Barbecue Rub|Barbecue Rub]]
* 2 tbsp Worcestershire sauce
* 1/4 cup cider vinegar
* 2 tbsp honey
* Dry applewood chunks

== Procedure ==
#Combine liquid ingredients and place in a spray bottle. Spray liberally onto one side of ribs. 
#Coat moistened side of ribs with Rub. Refrigerate for at least 1 hour.
#Place applewood in the firebox of a 250° smoker '''''or''''' the coal area of a 250° charcoal grill set for indirect heat.
#Place ribs in smoker or grill and cook, spraying often with remaining mixture, for 5-6 hours.
#Remove and place on a medium high charcoal grill, seasoned side down, spraying constantly until well browned. Remove and let rest for 5 minutes and serve.

[[Category:Pork recipes]]
[[Category:Barbecue recipes]]
[[Category:Main course recipes]]</text>
      <sha1>gv1aox427p1x1i3joxifl6qozipqnoa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Quantile Regresion</title>
    <ns>0</ns>
    <id>200525</id>
    <redirect title="R Programming/Quantile Regression" />
    <revision>
      <id>1547315</id>
      <timestamp>2009-06-24T20:30:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[R Programming/Quantile Regresion]] to [[R Programming/Quantile Regression]]: Fixed spelling.</comment>
      <text xml:space="preserve">#REDIRECT [[R Programming/Quantile Regression]]</text>
      <sha1>3zv2gmc1ox5kjb7hab0d0p76gkdpafq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Stata/Templates</title>
    <ns>14</ns>
    <id>200526</id>
    <revision>
      <id>1547329</id>
      <timestamp>2009-06-24T20:38:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">This category contains templates used in the [[Stata]] book.

{{BookCat}}</text>
      <sha1>3v5m77xox1fq2oleiy8yf3cggp58ilx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Stata</title>
    <ns>14</ns>
    <id>200527</id>
    <revision>
      <id>1568015</id>
      <parentid>1547331</parentid>
      <timestamp>2009-07-13T20:58:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Business software]]
[[Category:Scientific software]]</text>
      <sha1>mm9bmcccmrotni29jihcs5mpvnrotjd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Stata/Navbar</title>
    <ns>10</ns>
    <id>200528</id>
    <revision>
      <id>1547333</id>
      <timestamp>2009-06-24T20:41:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Navigation bar for [[Stata]]</comment>
      <text xml:space="preserve">{| cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; style=&quot;width:100%; border: 1px solid black;&quot; class=&quot;noprint&quot;
| style=&quot;width:33%; background-color:#ffffe0;&quot; | {{#if: {{{1|}}}| [[../{{{1}}}{{!}}Previous: {{{1}}}]] }}
| style=&quot;width:33%; background-color:#ffffe0; text-align:center;&quot; | [[Stata|Index]]
| style=&quot;width:33%; background-color:#ffffe0; text-align:right;&quot; | {{#if: {{{2|}}}| [[../{{{2}}}{{!}}Next: {{{2}}}]] }}
|}{{BookCat}}</text>
      <sha1>iu6g848kclnidft2s78sc74he4mz87f</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:SAS</title>
    <ns>14</ns>
    <id>200529</id>
    <revision>
      <id>1568014</id>
      <parentid>1547351</parentid>
      <timestamp>2009-07-13T20:57:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Business software]]
[[Category:Scientific software]]</text>
      <sha1>mm9bmcccmrotni29jihcs5mpvnrotjd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:168.13.63.67</title>
    <ns>3</ns>
    <id>200530</id>
    <revision>
      <id>1547354</id>
      <timestamp>2009-06-24T21:01:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/168.13.63.67|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 21:01, 24 June 2009 (UTC)}}</text>
      <sha1>nkleiqvzqpgy5q71nfbe5ceell7eqhk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:68.48.204.139</title>
    <ns>3</ns>
    <id>200531</id>
    <revision>
      <id>1547356</id>
      <timestamp>2009-06-24T21:03:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/68.48.204.139|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 21:03, 24 June 2009 (UTC)}}</text>
      <sha1>fp78chykknm9h92dv26w3wvyhw07b69</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:114.59.143.54</title>
    <ns>3</ns>
    <id>200532</id>
    <revision>
      <id>1547361</id>
      <parentid>1547358</parentid>
      <timestamp>2009-06-24T21:09:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Notification regarding [[:Science Expansion]]. using [[User:Mike.lifeguard/Twinkle Speedy documentation|TW]]</comment>
      <text xml:space="preserve">== Join Us! ==

{{#ifeq:&quot;{{NAMESPACE}}&quot;| &quot;User talk&quot;|
Hello and '''[[Wikibooks:Welcome, newcomers|welcome]]''' to [[Wikibooks]], a collection of open-content textbooks!

You should consider [[Special:Userlogin|creating an account or logging in]]. It's free and requires no personal information. Here are some advantages:

* A username of your choice.
* Greater security and privacy, as your IP address will be hidden from most users.
* Your own personal user page and talk page.
* [[Special:Contributions/{{PAGENAME}}|Your contributions]] will directly attributed to you.
* The use of your own [[Help:Watching pages|watchlist]] to monitor pages that you are interested in.
* Your opinions carry greater weight in the [[Wikibooks:Decision making|decision making process]].
* You become a recognized member of the Wikibooks community.

We hope that you choose to become a Wikibookian and [[Special:Userlogin|create an account]].

Feel free to ask any questions on my talk page or in the [[Wikibooks:Reading room|Reading room]].
Be sure to sign your talk page comments with four tildes (&lt;nowiki&gt;~~~~&lt;/nowiki&gt;).

| {{#if:  | |&lt;!-- this is so if anyone tries to use it where it doesn't go they will know. --&gt;
{{mbox|type=warning|This template must only be used on '''User [[Help:Talk page|discussion]]''' pages.}} }} }}--[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 21:06, 24 June 2009 (UTC)

==[[Science Expansion]]==
{{mbox|type=notice|msg=
[[Science Expansion|This page]] appears to have been created in error (due to a test, or some kind of [[Help:Editing|misplaced edit]]). It might be a [[Help:Stub|stub]], if so, please use [[{{TALKPAGENAME:Science Expansion}}|the discussion page]] as to explain what this page is about. If it evolves into a [[WB:WIW|legitimate Wikibooks module]], you may remove the tag. If not fixed, explained, or improved, it will automatically be considered a candidate for [[Wikibooks:Deletion policy#Speedy deletions|speedy deletion]] in 7 days. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 21:08, 24 June 2009 (UTC)
}}</text>
      <sha1>5iimkyn3yvzy9mmwfc7zp9w0fsa6t81</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:114.58.59.240</title>
    <ns>3</ns>
    <id>200533</id>
    <revision>
      <id>1547362</id>
      <timestamp>2009-06-24T21:09:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Join Us!</comment>
      <text xml:space="preserve">== Join Us! ==

{{#ifeq:&quot;{{NAMESPACE}}&quot;| &quot;User talk&quot;|
Hello and '''[[Wikibooks:Welcome, newcomers|welcome]]''' to [[Wikibooks]], a collection of open-content textbooks!

You should consider [[Special:Userlogin|creating an account or logging in]]. It's free and requires no personal information. Here are some advantages:

* A username of your choice.
* Greater security and privacy, as your IP address will be hidden from most users.
* Your own personal user page and talk page.
* [[Special:Contributions/{{PAGENAME}}|Your contributions]] will directly attributed to you.
* The use of your own [[Help:Watching pages|watchlist]] to monitor pages that you are interested in.
* Your opinions carry greater weight in the [[Wikibooks:Decision making|decision making process]].
* You become a recognized member of the Wikibooks community.

We hope that you choose to become a Wikibookian and [[Special:Userlogin|create an account]].

Feel free to ask any questions on my talk page or in the [[Wikibooks:Reading room|Reading room]].
Be sure to sign your talk page comments with four tildes (&lt;nowiki&gt;~~~~&lt;/nowiki&gt;).

| {{#if:  | |&lt;!-- this is so if anyone tries to use it where it doesn't go they will know. --&gt;
{{mbox|type=warning|This template must only be used on '''User [[Help:Talk page|discussion]]''' pages.}} }} }}--[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 21:09, 24 June 2009 (UTC)</text>
      <sha1>5u2e7rhblyi8som1dvsxmt4q0np6k65</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:68.199.108.147</title>
    <ns>3</ns>
    <id>200535</id>
    <revision>
      <id>1547376</id>
      <timestamp>2009-06-24T22:35:37Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>joins us &amp; thanks</comment>
      <text xml:space="preserve">==Join Us==
{{joinus}}
==Thanks==
Thanks for your work on [[Adventist Youth Honors Answer Book/Outreach/Christian Grooming &amp; Manners]].  When I saw that you had changed the wording of requirement 4a, I went back and checked the official NAD requirements, which matched the requirement as it was before your change.  Then I checked the GC's version and saw that your change adopts their version.  OK!  These are close enough to being the same that I am not inclined to fork the honor into a GC vs NAD version, which is my usual approach for showing multiple versions of an honor's requirements.  Let's just leave it the way you have it, as I kind of like the GC version better anyway. Thanks again! --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 22:35, 24 June 2009 (UTC)</text>
      <sha1>2w8maude8hs1z2nbqsawuyjey4j1xvk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-bg</title>
    <ns>10</ns>
    <id>200536</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-bg" />
    <revision>
      <id>1547383</id>
      <timestamp>2009-06-24T22:48:46Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-bg]] to [[Template:False Friends of the Slavist/TalkRedirect-bg]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-bg]]</text>
      <sha1>7yqgsbp8kfwi47m2j6trwv8tly82ple</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-bih</title>
    <ns>10</ns>
    <id>200537</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-bih" />
    <revision>
      <id>1547385</id>
      <timestamp>2009-06-24T22:49:35Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-bih]] to [[Template:False Friends of the Slavist/TalkRedirect-bih]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-bih]]</text>
      <sha1>rhxj6tyltouhfwnjh5r0y0prb95pqdl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-by</title>
    <ns>10</ns>
    <id>200538</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-by" />
    <revision>
      <id>1547388</id>
      <timestamp>2009-06-24T22:50:14Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-by]] to [[Template:False Friends of the Slavist/TalkRedirect-by]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-by]]</text>
      <sha1>fkppm6mhx9ct1uy2sy9vxoc9a3og2vv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-cz</title>
    <ns>10</ns>
    <id>200539</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-cz" />
    <revision>
      <id>1547390</id>
      <timestamp>2009-06-24T22:50:43Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-cz]] to [[Template:False Friends of the Slavist/TalkRedirect-cz]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-cz]]</text>
      <sha1>7nmk9g00kokz7j5k4j0xki7xv696ed5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-hr</title>
    <ns>10</ns>
    <id>200540</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-hr" />
    <revision>
      <id>1547392</id>
      <timestamp>2009-06-24T22:51:13Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-hr]] to [[Template:False Friends of the Slavist/TalkRedirect-hr]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-hr]]</text>
      <sha1>133leuy7y0q4hyek5bfp7qos5ezg4mh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-ka</title>
    <ns>10</ns>
    <id>200541</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-ka" />
    <revision>
      <id>1547394</id>
      <timestamp>2009-06-24T22:51:44Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-ka]] to [[Template:False Friends of the Slavist/TalkRedirect-ka]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-ka]]</text>
      <sha1>ke0ddiwok46kxc5ec7uz5xsktiw210n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-lso</title>
    <ns>10</ns>
    <id>200542</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-lso" />
    <revision>
      <id>1547397</id>
      <timestamp>2009-06-24T22:52:10Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-lso]] to [[Template:False Friends of the Slavist/TalkRedirect-lso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-lso]]</text>
      <sha1>9pus0md0c7xhnpgczarygsvjnoaxa41</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-mk</title>
    <ns>10</ns>
    <id>200543</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-mk" />
    <revision>
      <id>1547399</id>
      <timestamp>2009-06-24T22:52:41Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-mk]] to [[Template:False Friends of the Slavist/TalkRedirect-mk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-mk]]</text>
      <sha1>acqnvnhvr9vz9w2uz9wzriezkilqfvs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-pl</title>
    <ns>10</ns>
    <id>200544</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-pl" />
    <revision>
      <id>1547401</id>
      <timestamp>2009-06-24T22:53:04Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-pl]] to [[Template:False Friends of the Slavist/TalkRedirect-pl]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-pl]]</text>
      <sha1>8zwkystl6u9gnne4t69lbnmkzcmdbvx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-rus</title>
    <ns>10</ns>
    <id>200545</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-rus" />
    <revision>
      <id>1547403</id>
      <timestamp>2009-06-24T22:53:29Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-rus]] to [[Template:False Friends of the Slavist/TalkRedirect-rus]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-rus]]</text>
      <sha1>7kl0hglbqbqx0q2be7r4nls3hf4bqmp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-sk</title>
    <ns>10</ns>
    <id>200546</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-sk" />
    <revision>
      <id>1547407</id>
      <timestamp>2009-06-24T22:55:40Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-sk]] to [[Template:False Friends of the Slavist/TalkRedirect-sk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-sk]]</text>
      <sha1>myv2xodllnfwa8gmylqsqigs1lljdy5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-slo</title>
    <ns>10</ns>
    <id>200547</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-slo" />
    <revision>
      <id>1547410</id>
      <timestamp>2009-06-24T22:56:11Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-slo]] to [[Template:False Friends of the Slavist/TalkRedirect-slo]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-slo]]</text>
      <sha1>9h133fz3aka44ms7r4gueajdgso9c1f</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-ua</title>
    <ns>10</ns>
    <id>200548</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-ua" />
    <revision>
      <id>1547412</id>
      <timestamp>2009-06-24T22:56:52Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-ua]] to [[Template:False Friends of the Slavist/TalkRedirect-ua]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-ua]]</text>
      <sha1>qjccjte9q39gxsi0vjyr8emzm1uvplv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-uso</title>
    <ns>10</ns>
    <id>200549</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-uso" />
    <revision>
      <id>1547414</id>
      <timestamp>2009-06-24T22:57:27Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-uso]] to [[Template:False Friends of the Slavist/TalkRedirect-uso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-uso]]</text>
      <sha1>9tma91oyaqbg7nvqgxk1yuzl5jrjg86</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-yu</title>
    <ns>10</ns>
    <id>200550</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-yu" />
    <revision>
      <id>1547416</id>
      <timestamp>2009-06-24T22:58:07Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-yu]] to [[Template:False Friends of the Slavist/TalkRedirect-yu]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-yu]]</text>
      <sha1>db2ghcc2pxljw2owyo4zkenos2mj1u4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Languages/Manx Gaelic</title>
    <ns>111</ns>
    <id>200551</id>
    <revision>
      <id>1547441</id>
      <timestamp>2009-06-24T23:20:57Z</timestamp>
      <contributor>
        <username>MacTire02</username>
        <id>109116</id>
      </contributor>
      <comment>Created page with ' Unlike Irish, Manx Gaelic uses the traditional English alphabet with the exception of the letters 'x' and 'z'.  Hmm. I spy a couple of problems with that sentence. Firstly, Manx...'</comment>
      <text xml:space="preserve"> Unlike Irish, Manx Gaelic uses the traditional English alphabet with the exception of the letters 'x' and 'z'.

Hmm. I spy a couple of problems with that sentence. Firstly, Manx uses the same alphabet as Irish AND English - the Latin or Roman alphabet. If it is orthography that this sentence is implying then Manx shares some features with both Welsh and English, but that is nothing to do with alphabet and everything to do with orthography. Manx also uses the letters Ç, Ê and Ï (albeit the latter two in older examples), neither of which are available in ANY British Isles language. This sentence needs to be rewritten. --[[User:MacTire02|MacTire02]] ([[User talk:MacTire02|talk]]) 23:20, 24 June 2009 (UTC)</text>
      <sha1>iqizx7xd0bcyc40ssjszp2ns61xo1pa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Lysimachia quadrifolia</title>
    <ns>110</ns>
    <id>200552</id>
    <revision>
      <id>1876101</id>
      <parentid>1547491</parentid>
      <timestamp>2010-07-07T18:37:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Lysimachia quadrifolia&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Whorled Loosestrife
|binomial =Lysimachia quadrifolia
|image1 =Lysimachia quadrifolia_4319.JPG
|caption1 =Front view of the flower.
|image2 =Lysimachia quadrifolia 4325.JPG
|caption2=Flower from a different angle.
|image3=Lysimachia quadrifolia.jpg
|caption3=Whole plant
|description =Whorled Loosestrife is a weedy plant that most people would pull up without giving a second thought.  But if you see this plant in bloom, take a close look at the flowers.  They have five yellow pointed petals making the flower look like a star.  At the center of the flower is a tube called a ''style''.  It is surrounded by red triangles, one per petal.  Each flower grows at the end of a little stem called a petiole ('''peh'''-tee-ole) which attaches to the main stem.  Lots of things attach to the main stem at this point - not only four (sometimes five) flowers, but usually four (sometimes five) leaves as well.  It almost looks like the flowers are there to light up the plant's surroundings, as if they were the light fixtures in a parking lot or at a ball field.
|facts = The genus name of Whorled Loosestrife is ''Lysimachia'' ('''lie'''-sih-'''mock'''-ee-yuh).  It is named after Lysimachus, one of Alexander the Great's generals.  He was said to have fed a member of the genus to a bull to calm it down.  The colonists must have heard this legend, because they used to feed this plant to their oxen to make them work together peacefully.
}}</text>
      <sha1>mvn75noe3e4vfvbgqrewlopo40r93ue</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:1983</title>
    <ns>3</ns>
    <id>200554</id>
    <revision>
      <id>1889893</id>
      <parentid>1547524</parentid>
      <timestamp>2010-07-16T00:22:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>non-free rationale needed for your images</comment>
      <text xml:space="preserve">== [[:File:Iges-settings.png]] is missing a [[Wikibooks:Media#Non-free use|fair use rationale]]==
{{mbox|type=warning|msg=
'''Thanks for uploading [[:File:Iges-settings.png]].''' The [[w:Wikimedia Foundation|Wikimedia Foundation]] is very careful about what Wikibooks includes because of [[w:United States copyright law|copyright law]], and requires that we maintain a strict [[Wikibooks:Copyright|copyright policy]]. [[:File:Iges-settings.png]] and other files you uploaded may soon be deleted unless a [[Wikibooks:Media#Non-free use|rationale]] for a fair use claim is provided.

In order to upload fair use material, specific rationale must be provided as to why fair use media is necessary, and how there are no free alternatives. Images or other media that do not have such rationale will likely be deleted as a copyright violation. If the information of a fair use media component could be duplicated by a free alternative, that media may not be uploaded. Please edit image descriptions pages directly to add {{tlx|fair use rationale}}; there's no need to upload the image again. If you have any questions, feel free to contact me, or [[WB:HELP|ask another Wikibookian]].

See {{UserImages2}} for a complete list of your uploads which may get deleted soon.&lt;br/&gt;Thank you. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 00:40, 25 June 2009 (UTC)}}


== [[:File:Maya-shelves-editor.png]] is missing a [[Wikibooks:Media#Non-free use|non-free use rationale]]==
{{tmbox|type=delete|text='''Thanks for uploading [[:File:Maya-shelves-editor.png]].''' The [[w:Wikimedia Foundation|Wikimedia Foundation]] is very careful about what Wikibooks includes because of [[w:United States copyright law|copyright law]], and requires that we maintain a strict [[Wikibooks:Copyright|copyright policy]]. [[:File:Maya-shelves-editor.png]] and other files you uploaded may soon be deleted unless a [[Wikibooks:Media#Non-free use|rationale]] for a non-free use claim is provided.

In order to upload fair use material, specific rationale must be provided as to why non-free use media is necessary, and how there are no free alternatives. Images or other media that do not have such rationale will likely be deleted as a copyright violation. If the information of a non-free use media component could be duplicated by a free alternative, that media may not be uploaded. Please edit image descriptions pages directly to add {{tlx|non-free use rationale}}; there's no need to upload the image again. If you have any questions, feel free to contact me, or [[WB:HELP|ask another Wikibookian]].

See {{UserImages2}} for a complete list of your uploads which may get deleted soon.&lt;br/&gt;Thank you. &amp;ndash;&amp;nbsp;[[User:Adrignola|Adrignola]]&amp;nbsp;&lt;small&gt;[[User talk:Adrignola|talk]]&lt;/small&gt; 00:22, 16 July 2010 (UTC)}}</text>
      <sha1>repaxwivkmmj1o4xnf7vqjeyki2ojtu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Lotus corniculatus</title>
    <ns>110</ns>
    <id>200555</id>
    <revision>
      <id>1876102</id>
      <parentid>1547527</parentid>
      <timestamp>2010-07-07T18:37:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Lotus corniculatus&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Birdsfoot Trefoil
|binomial =Lotus corniculatus
|image1 =Lotus-corniculatus-030605-800.jpg
|caption1 =Flower
|image2=Karringtand.jpg
|caption2=Whole plant
|image3 =Lotus corniculatus W.jpg
|caption3=Orange variety
|description =Birdsfoot Trefoil is a clover-like plant with oddly-shaped yellow flowers.  The plant doesn't get more than a couple of feet high, and usually is a high as the other plants it grows among.  It was brought to North America as a pasture crop because it can be grazed close to the ground and still survive.  The leaves usually appear in fives, even though the name suggests that there would only be three (''Trefoil'' means three leaves).  It was so named because three of the five leaves are held higher than the other two.
|facts = The &quot;Birdsfoot&quot; part of the name comes from the shape of the seed stalk.
}}</text>
      <sha1>fdau3budl2ypjgnppdawac0qrjz6wu7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Daphnep</title>
    <ns>3</ns>
    <id>200556</id>
    <revision>
      <id>1600684</id>
      <parentid>1547532</parentid>
      <timestamp>2009-08-04T23:34:35Z</timestamp>
      <contributor>
        <username>Mike.lifeguard</username>
        <id>55262</id>
      </contributor>
      <minor />
      <comment>Abusing multiple accounts: spam</comment>
      <text xml:space="preserve">{{mbox|type=warning|msg='''You have been indefinitely [[Wikibooks:Blocking policy|blocked]] from editing Wikibooks. This was done in accordance with policy because of your disruptive edits.

Please note that page blanking, addition of random text or spam, deliberate misinformation, privacy violations, [[Wikibooks:No personal attacks|personal attacks]], and repeated, blatant violations of our [[Wikibooks:Neutral point of view|neutral point of view]] policy are considered [[Wikibooks:vandalism|vandalism]]. If you wish to make useful contributions, you are welcome to come back after the block expires.&lt;br&gt;To request to be unblocked, add {{tlx|unblock|reason}} to [[Special:MyTalk|your user talk page]], which you can still edit.&lt;br/&gt;&amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 23:34, 4 August 2009 (UTC)}}</text>
      <sha1>l07hlxndvfr68zsydwjq7k1q8qzhuhb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-bih</title>
    <ns>10</ns>
    <id>200558</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-bih" />
    <revision>
      <id>1547540</id>
      <timestamp>2009-06-25T00:56:43Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-bih]] to [[Template:False Friends of the Slavist/Wiki-bih]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-bih]]</text>
      <sha1>kyn3q4082exxue65hz91rhq1qrtm14q</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-cz</title>
    <ns>10</ns>
    <id>200559</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-cz" />
    <revision>
      <id>1547543</id>
      <timestamp>2009-06-25T00:57:15Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-cz]] to [[Template:False Friends of the Slavist/Wiki-cz]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-cz]]</text>
      <sha1>iv4quhtxu6l77hx81ojl9v344dqcrx5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-hr</title>
    <ns>10</ns>
    <id>200560</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-hr" />
    <revision>
      <id>1547545</id>
      <timestamp>2009-06-25T00:57:44Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-hr]] to [[Template:False Friends of the Slavist/Wiki-hr]]</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-hr]]</text>
      <sha1>o4oijxe3s5oom05t2mnq1zj37v23dwg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-ka</title>
    <ns>10</ns>
    <id>200561</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-ka" />
    <revision>
      <id>1547547</id>
      <timestamp>2009-06-25T00:58:12Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-ka]] to [[Template:False Friends of the Slavist/Wiki-ka]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-ka]]</text>
      <sha1>8vgba2yxi8vwx00ympci2226oi3d7q4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-lso</title>
    <ns>10</ns>
    <id>200562</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-lso" />
    <revision>
      <id>1547550</id>
      <timestamp>2009-06-25T00:58:43Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-lso]] to [[Template:False Friends of the Slavist/Wiki-lso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-lso]]</text>
      <sha1>7av5gvbdncz9wtt8m3qoyu584t85akg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-mk</title>
    <ns>10</ns>
    <id>200563</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-mk" />
    <revision>
      <id>1547552</id>
      <timestamp>2009-06-25T00:59:14Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-mk]] to [[Template:False Friends of the Slavist/Wiki-mk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-mk]]</text>
      <sha1>h01oc0b03pk7kjp5ttbtg4znvuw80md</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-pl</title>
    <ns>10</ns>
    <id>200564</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-pl" />
    <revision>
      <id>1547554</id>
      <timestamp>2009-06-25T00:59:39Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-pl]] to [[Template:False Friends of the Slavist/Wiki-pl]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-pl]]</text>
      <sha1>aph75t3u73wwqnon3mptx6j6phmbia0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-rs</title>
    <ns>10</ns>
    <id>200565</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-rs" />
    <revision>
      <id>1547557</id>
      <timestamp>2009-06-25T01:00:12Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-rs]] to [[Template:False Friends of the Slavist/Wiki-rs]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-rs]]</text>
      <sha1>pk92t2hzoxnx0qnshchye031s671wxq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-rus</title>
    <ns>10</ns>
    <id>200566</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-rus" />
    <revision>
      <id>1547559</id>
      <timestamp>2009-06-25T01:00:47Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-rus]] to [[Template:False Friends of the Slavist/Wiki-rus]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-rus]]</text>
      <sha1>01veh4sw0gfz9slzrfc1a411yxl1wqv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-sk</title>
    <ns>10</ns>
    <id>200567</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-sk" />
    <revision>
      <id>1547566</id>
      <timestamp>2009-06-25T01:02:35Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-sk]] to [[Template:False Friends of the Slavist/Wiki-sk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-sk]]</text>
      <sha1>jx1ii59azf1b7dt9fxcqw7neelonmw1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-slo</title>
    <ns>10</ns>
    <id>200568</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-slo" />
    <revision>
      <id>1547571</id>
      <timestamp>2009-06-25T01:03:10Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-slo]] to [[Template:False Friends of the Slavist/Wiki-slo]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-slo]]</text>
      <sha1>a9avnodnjgwkrc8ap8y40skpmgg9few</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-ua</title>
    <ns>10</ns>
    <id>200569</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-ua" />
    <revision>
      <id>1547578</id>
      <timestamp>2009-06-25T01:04:12Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-ua]] to [[Template:False Friends of the Slavist/Wiki-ua]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-ua]]</text>
      <sha1>t7c0232uv7k9cjp2xynfuj4attwkps7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-uso</title>
    <ns>10</ns>
    <id>200570</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-uso" />
    <revision>
      <id>1547584</id>
      <timestamp>2009-06-25T01:04:59Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-uso]] to [[Template:False Friends of the Slavist/Wiki-uso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-uso]]</text>
      <sha1>tgxshnqu73h200l15ste3jr209gf374</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-yu</title>
    <ns>10</ns>
    <id>200571</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-yu" />
    <revision>
      <id>1547589</id>
      <timestamp>2009-06-25T01:05:35Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-yu]] to [[Template:False Friends of the Slavist/Wiki-yu]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-yu]]</text>
      <sha1>6u2xd8oc91ej2b11gsnyw2tchs28j4a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:GrantsDotGov.jpg</title>
    <ns>6</ns>
    <id>200572</id>
    <revision>
      <id>2359674</id>
      <parentid>1547704</parentid>
      <timestamp>2012-06-05T14:24:00Z</timestamp>
      <contributor>
        <username>Mabdul</username>
        <id>173174</id>
      </contributor>
      <comment>replace PD-self with a more correct non free rationale</comment>
      <text xml:space="preserve">== Licensing: ==
{{non-free web screenshot}}
{{Non-free use rationale
|module      = Directing_Technology/Grants
|copyrights  = www.grants.gov
|source      = self taken screenshot of www.grants.gov
|not free    = there is no free equivalent of this page
|rationale   = to give a visual explanation of the search function of that page.
}}</text>
      <sha1>t7w8axr3f0fswj37sga3q5q0z5ll9zb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:222.153.235.180</title>
    <ns>3</ns>
    <id>200573</id>
    <revision>
      <id>1547741</id>
      <timestamp>2009-06-25T02:23:40Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/222.153.235.180|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 02:23, 25 June 2009 (UTC)}}</text>
      <sha1>ekbci000q0pyjcx7k6ygpbannkasvh5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Meteorman7228</title>
    <ns>3</ns>
    <id>200574</id>
    <revision>
      <id>1547833</id>
      <parentid>1547823</parentid>
      <timestamp>2009-06-25T03:29:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Meteorman7228!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 03:29, 25 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>6pumeqzencxolxn0pkgaj3mdfml0l9b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Meteorman7228</title>
    <ns>2</ns>
    <id>200575</id>
    <revision>
      <id>1547818</id>
      <timestamp>2009-06-25T03:16:08Z</timestamp>
      <contributor>
        <username>Meteorman7228</username>
        <id>214098</id>
      </contributor>
      <comment>Created page with 'i am from wikipedia for more info see that page'</comment>
      <text xml:space="preserve">i am from wikipedia for more info see that page</text>
      <sha1>cvivg08dw2gss9u0wdvcqsvztdbpmvf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Trifolium aureum</title>
    <ns>110</ns>
    <id>200579</id>
    <revision>
      <id>1876071</id>
      <parentid>1547829</parentid>
      <timestamp>2010-07-07T18:33:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Trifolium aureum&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Hop Clover
|binomial =Trifolium aureum
|image1 =Trifolium aureum W.jpg
|caption1 =Flower
|image2=Trifolium aureum eF.jpg
|caption2=Flower, stem, and leaves
|image3 =Trifolium aureum.jpg
|caption3=Colony
|description =Hop clover is a low plant with a yellow flower head.  The flower itself looks much like any other clover flower, only it is yellow.  The leaves are sessile ('''sess'''-ile) meaning they are attached directly to the plant's main stem without a stalk.  It does not grow much taller than about a foot high.  When the flower gets old, it turns brown and paper-like.  
|facts = Hop Clover was brought to North America in 1800 to be used as a pasture crop.  It grows on both the east and west coasts of the United States, but is absent from the middle part of the country.
}}</text>
      <sha1>6si9ozbt9xy86gopiv1esli1mc3jp0z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:202.59.29.82</title>
    <ns>3</ns>
    <id>200580</id>
    <revision>
      <id>1547832</id>
      <timestamp>2009-06-25T03:28:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Notification regarding [[:Snowboarding]]. using [[User:Mike.lifeguard/Twinkle Speedy documentation|TW]]</comment>
      <text xml:space="preserve">

==[[Snowboarding]]==
{{mbox|type=notice|msg=
[[Snowboarding|This page]] appears to have been created in error (due to a test, or some kind of [[Help:Editing|misplaced edit]]). It might be a [[Help:Stub|stub]], if so, please use [[{{TALKPAGENAME:Snowboarding}}|the discussion page]] as to explain what this page is about. If it evolves into a [[WB:WIW|legitimate Wikibooks module]], you may remove the tag. If not fixed, explained, or improved, it will automatically be considered a candidate for [[Wikibooks:Deletion policy#Speedy deletions|speedy deletion]] in 7 days. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 03:28, 25 June 2009 (UTC)
}}</text>
      <sha1>sbme0tns26g7ns0gryaz4nbmtmmgzai</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Verbascum thapsus</title>
    <ns>110</ns>
    <id>200581</id>
    <revision>
      <id>2470264</id>
      <parentid>1876068</parentid>
      <timestamp>2012-12-30T08:31:03Z</timestamp>
      <contributor>
        <username>Meisam</username>
        <id>91236</id>
      </contributor>
      <minor />
      <comment>[[:commons:COM:FR|File renamed]]: [[File:Dsc00601.jpg]] → [[File:Cirque de Mafate, Réunion - 2.jpg]] Change from completely meaningless names into suitable names, according to what the image displays</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Common Mullein
|binomial =Verbascum thapsus
|image1 =Starr 040723-0267 Verbascum thapsus.jpg
|caption1 =Flower
|image2=Starr 040723-0126 Verbascum thapsus.jpg
|caption2=Second year plant
|image3 =Cirque de Mafate, Réunion - 2.jpg
|caption3=First year plant
|description =Common Mullein is a tall plant that lives for two years.  During the first year it forms a bunch of leaves forming a circle around the plant's root.  In the second year, it sends up a tall stem, sometimes over six feet tall.  The stem is covered with flowers, but only a few of them are in bloom at a time.  The flowers are yellow with five rounded petals.  The leaves are covered with a very soft, velvety hair which leads to one of its many nicknames, &quot;lamb's ear.&quot;  If you find one of these plants, do take the time to feel the soft leaves.
|facts = Common Mullein has many medical uses, and has been found to be particularly effective for easing coughs.  It can also be used to make a dye, and the stems have been used as torches.
}}</text>
      <sha1>8jjal106acj4b2iac6ncrk0syysztaf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Hemerocallis</title>
    <ns>110</ns>
    <id>200582</id>
    <revision>
      <id>1876117</id>
      <parentid>1547842</parentid>
      <timestamp>2010-07-07T18:39:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Hemerocallis&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Day Lily
|binomial =Hemerocallis
|image1 =Daylily (Hemerocallis fulva) v2.jpg
|caption1 =Orange flower
|image2=Colpfl17a.jpg
|caption2=Yellow flower
|image3 =Hemerocallis thunbergii2.UME.jpg
|caption3=Several Daylilies in a garden
|description =The Daylily produces huge yellow or orange flowers, depending on the variety.  Each flower looks like it has six petals, but really, it only has three true petals.  The other three are called tepals ('''tee'''-pulls).  The leaves are long and slender.  Daylilies belong to a large category of plant called monocots ('''Mah'''-no-kots).  Monocots often have long slender leaves, and the veins in these leaves will always run in the same direction and do not branch.  The flowers of most monocots almost always have either three or six petals.  If a plant is not a monocot, it's a dicot ('''die'''-cot).  So even if you can't tell anything else about a plant, you should be able to tell if it's a monocot or a dicot by looking at the leaf veins and counting the petals.  
|facts = The Daylily is an edible plant.  The Chinese use the flowers as an ingredient in hot and sour soups.
}}</text>
      <sha1>pkgqd1ir0zdei0upivs4qwx2zj17s1b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Linaria vulgaris</title>
    <ns>110</ns>
    <id>200583</id>
    <revision>
      <id>1876104</id>
      <parentid>1547847</parentid>
      <timestamp>2010-07-07T18:38:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Linaria vulgaris&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Butter and Eggs
|binomial =Linaria vulgaris
|image1 =Linaria vulgaris 20050825 976.jpg
|caption1 =Flowers
|image2=Linaria vulgaris.jpg
|caption2=Growing in a field
|image3 =Linaria vulgaris 03 ies.jpg
|caption3=Leaves
|description =Butter and Eggs is a beautiful yellow and orange flower.  The orange part looks like the yolk of an egg, and the yellow part is about the same color as butter.  These flowers have an odd shape.  The orange lip is closed, so the flower can only be pollinated by strong insects such as honey bees or bumble bees.  Butter and Eggs grows between one and three feet high, and has long narrow leaves.
|facts = While most commonly found as a weed, Butter and Eggs is sometimes grown for flower shops. The flowers last a long time in a vase. Like snapdragons, they are often grown in children's gardens for the &quot;snapping&quot; flowers which can be made to &quot;talk&quot; by squeezing them at the base of the flower.  Try it!
}}</text>
      <sha1>tb6dzwrslh62fcgxqaamo4wp3qn93z7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Informatics Practices for Class XI (CBSE)/SQL Functions and Grouping</title>
    <ns>0</ns>
    <id>200586</id>
    <revision>
      <id>1565464</id>
      <parentid>1547877</parentid>
      <timestamp>2009-07-10T01:26:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">== Functions ==

===Syntax===

Function names are case insensitive. You can write them as you prefer:

 SELECT database() -- ok
 SELECT DataBase() -- ok
 SELECT DATABASE() -- ok

If the IGNORE_SPACE SQL_MODE is not set, you can not put a space between the function name and the first parenthesis. It would return a 1064 error. IGNORE_SPACE is usually 0. The reason is that the parser is faster if that flag is disabled. So:

 SELECT DATABASE () -- usually not accepted
 SELECT DATABASE() -- always works fine

However, this restriction only applies to the native MySQL functions. UDFs and stored functions may be written with a space after the name.

You can't use a value calculated in the SELECT clause as a constraint in the WHERE clause (its a chicken &amp; egg problem); the WHERE clause is what determines the values in the SELECT clause. What you want is the HAVING clause which is applied *after* all matching rows have been found.

=== General functions ===

Type-indipendent functions.


'''BENCHMARK(times, espression)'''

Executes espression n times and returns how time it spent. Useful to find bottlenecks in SQL expressions.

 BENCHMARK(10000, CAST(666 AS TEXT))

'''CAST(value AS type)'''

Returns value converted in the specified type.

'''CHARSET(string)'''

Returns the CHARACTER SET used by string.

'''COALESCE(value, ...)'''

Returns the first argument which is not NULL. If all arguments are NULL, returns NULL. There must be at least one argument.

'''COERCIBILITY(string)'''

'''COLLATION(string)'''

Returns the COLLATION used by the string.

'''CONNECTION_ID()'''

Returns the id of the current thread.

'''CONVERT(value, type)'''

Returns value converted to the specified type.

 SELECT CONVERT ('666', UNSIGNED INTEGER)

'''CONVERT(string USING charset)'''

Converts the passed string to the specified CHARACTER SET.

 SELECT CONVERT ('This is a text' USING utf8)

'''CURRENT_USER()'''

Returns the username and the hostname used in the current connection.

 SELECT CURRENT_USER()
 SELECT CURRENT_USER -- it's correct

'''DATABASE()'''

Returns the current database's name, set with the USE command.

 SELECT DATABASE()

'''FOUND_ROWS()'''

After a SELECT with a LIMIT clause and the SQL_CALC_FOUND_ROWS keyword, you can run another SELECT with the FOUND_ROWS() function. It returns the number of rows found by the previous query if it had no LIMIT clause.

 SELECT SQL_CALC_FOUND_ROWS * FROM stats ORDER BY id LIMIT 10 OFFSET 50
 SELECT FOUND_ROWS() AS n

'''GREATEST(value1, value2, ...)'''

Returns the greatest argument passed.

'''IF(val1, val2, val3)'''

If val1 is TRUE, returns val2. If val1 is FALSE or NULL, returns val3.

'''IFNULL(val1, val2)'''

If val1 is NULL, returns val2; else, returns val1.

'''ISNULL(value)'''

If the value passed is NULL returns 1, else returns 0.

'''INTERVAL(val1, val2, val3, ...)'''

'''NULLIF(val1, val2)'''

If val1 = val2, returns NULL; else, returns val1.

'''LEAST(value1, value2, ...)'''

Returns the minimum argument passed.

=== Date and time ===

 SELECT * FROM mytable
  WHERE datetimecol &gt;= (CURDATE() - INTERVAL 1 YEAR)  AND
  datetimecol &lt; (CURDATE() - INTERVAL 1 YEAR) INTERVAL 1 DAY;

 SELECT IF(DAYOFMONTH(CURDATE()) &lt;= 15,
  DATE_FORMAT(CURDATE(), '%Y-%m-15'),
  DATE_FORMAT(CURDATE() + INTERVAL 1 MONTH, '%Y-%m-15')) AS next15
 FROM table;

 SELECT YEAR('2002-05-10'), MONTH('2002-05-10'), DAYOFMONTH('2002-05-10')

 SELECT PurchaseDate FROM table WHERE YEAR(PurchaseDate) &lt;= YEAR(CURDATE())

 SELECT columns FROM table
 WHERE start_time &gt;= '2004-06-01 10:00:00' AND end_time &lt;= '2004-06-03 18:00:00'

 SELECT * FROM t1
 WHERE DATE_FORMAT(datetime_column, '%T') BETWEEN 'HH:MM:SS' AND 'HH:MM:SS'

 SELECT Start_time, End_time FROM Table
 WHERE Start_time &gt;= NOW() - INTERVAL 4 HOUR
 
 SELECT NOW() + INTERVAL 60 SECOND

 SELECT UNIX_TIMESTAMP('2007-05-01'); -- 1177970400
 SELECT FROM_UNIXTIME(1177970400); -- 2007-05-01 00:00:00

===Aggregate functions===

====COUNT(field)====

If * is given, instead of the name of a field, COUNT() returns the number of rows found by the query. It's commonly used to get the number of rows in a table.

 SELECT COUNT(*) FROM `antiques`

If the DISTINCT keyword is used, identical rows are counted only once.

 SELECT COUNT(DISTINCT *) FROM `antiques`

If a field name is given, returns the number of non-NULL values.

 SELECT COUNT(`cost`) FROM `antiques`

If a field name is given and the DISTINCT keyword is given, returns the number of non-NULL values, and identical values are counted only once.

 SELECT COUNT(DISTINCT `cost`) FROM `antiques`

You can count non-NULL values for an expression:

 SELECT COUNT(`longitude` + `latitude`) FROM `cities`

This returns the number of rows where longitude and latitude are both non-NULL.

====MAX(field)====

MAX() can be used to get the maximum value for an expression in the rows matching to a query. If no row matches the query, returns NULL.

 SELECT MAX(`cost`) FROM `antiques`
 SELECT MAX(LENGTH(CONCAT(`first_name`, ' ', `last_name`))) FROM `subscribers`

====MIN(field)====

MAX() can be used to get the minimum value for an expression in the rows matching to a query. If no row matches the query, returns NULL.

 SELECT MIN(`cost`) FROM `antiques`

====AVG(field)====

MAX() can be used to get the average value for an expression in the rows matching to a query. If no row matches the query, returns NULL.

 SELECT AVG(`cost`) FROM `antiques`

====SUM(field)====

SUM() can be used to get the sum of the values for an expression in the rows matching to a query. If no row matches the query, returns NULL.

If SUM(SELECTED expr) is used, identical values are added only once. SUM(DISTINCT) has been added in MySQL 5.1.

 SELECT SUM(`cost`) FROM `antiques`

==== Aggregate bit functions ====

General syntax:

 FUNCTION_NAME(''expression'')

These functions calculate ''expression'' for each row of the resultset and permorm the calculation between all the ''expression''s. These are bitwise functions. The precision used is 64 bit.

'''AND'''

 SELECT BIT_AND(ip) FROM log

'''OR'''

 SELECT BIT_OR(ip) FROM log

(returns 0 if there are no rows)

'''XOR'''

 SELECT BIT_XOR(ip) FROM log

(returns 0 if there are no rows)

{{BookCat}}</text>
      <sha1>aybfwxaoejqt6mwxlxhiv712lfmivcz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Informatics Practices for Class XI (CBSE)/Joins and Subqueries</title>
    <ns>0</ns>
    <id>200587</id>
    <revision>
      <id>1565461</id>
      <parentid>1547879</parentid>
      <timestamp>2009-07-10T01:25:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">=== Joins ===
The Most important aspect of SQL is its relational features. You can query, compare and calculate two different tables having entirely different structure. Joins and subselects are the two methods to join tables. Both methods of joining tables should give the same results. The natural join is faster on most SQL platforms.

In the following example a student is trying to learn what the numbers are called in hindi.

 CREATE TABLE english (Tag int, Inenglish varchar(255));
 CREATE TABLE hindi (Tag int, Inhindi varchar(255));

 INSERT INTO english (Tag, Inenglish) VALUES (1, 'One');
 INSERT INTO english (Tag, Inenglish) VALUES (2, 'Two');
 INSERT INTO english (Tag, Inenglish) VALUES (3, 'Three');

 INSERT INTO hindi (Tag, Inhindi) VALUES (2, 'Do');
 INSERT INTO hindi (Tag, Inhindi) VALUES (3, 'Teen');
 INSERT INTO hindi (Tag, Inhindi) VALUES (4, 'Char');

&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;select * from english&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;select * from hindi&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Tag&lt;/td&gt;&lt;td&gt;Inenglish &lt;/td&gt;&lt;td&gt;	Tag &lt;/td&gt;&lt;td&gt;Inhindi &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;1 &lt;/td&gt; &lt;td&gt;One &lt;/td&gt; &lt;td&gt; 2 &lt;/td&gt; &lt;td&gt;	Do &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;2 &lt;/td&gt; &lt;td&gt;Two &lt;/td&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Teen &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Three &lt;/td&gt;&lt;td&gt; 4 &lt;/td&gt; &lt;td&gt; Char &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

====Cartesian join====
A Cartesian join is when you join every row of one table to every row of another table.

 SELECT * FROM english, hindi

It is also called Cross Join and may be written in this way:

 SELECT * FROM english CROSS JOIN hindi

&lt;table&gt;
&lt;tr&gt;&lt;td&gt;Tag&lt;/td&gt;&lt;td&gt;Inenglish&lt;/td&gt;&lt;td&gt;Tag &lt;/td&gt; &lt;td&gt;Inhindi &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;1 &lt;/td&gt; &lt;td&gt;One &lt;/td&gt; &lt;td&gt;2 &lt;/td&gt; &lt;td&gt; Do &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; 2 &lt;/td&gt; &lt;td&gt;Two &lt;/td&gt; &lt;td&gt;2 &lt;/td&gt; &lt;td&gt;	Do &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt;3 &lt;/td&gt; &lt;td&gt; Three &lt;/td&gt; &lt;td&gt; 2 &lt;/td&gt; &lt;td&gt; Do &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 1 &lt;/td&gt; &lt;td&gt; One &lt;/td&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Teen &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 2 &lt;/td&gt; &lt;td&gt; Two &lt;/td&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Teen &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Three &lt;/td&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Teen &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 1 &lt;/td&gt; &lt;td&gt; One &lt;/td&gt; &lt;td&gt; 4 &lt;/td&gt; &lt;td&gt; Char &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 2 &lt;/td&gt; &lt;td&gt; Two  &lt;/td&gt; &lt;td&gt; 4 &lt;/td&gt; &lt;td&gt; Char &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Three &lt;/td&gt; &lt;td&gt; 4 &lt;/td&gt; &lt;td&gt; Char &lt;/td&gt; &lt;/tr&gt;
&lt;/table&gt;

====Inner Join====

 SELECT hindi.Tag, english.Inenglish, hindi.Inhindi
 FROM english, hindi
 WHERE english.Tag = hindi.Tag
&lt;!-- Say why we don't see the word JOIN please--&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt;Tag &lt;/td&gt; &lt;td&gt;Inenglish&lt;/td&gt; &lt;td&gt;Inhindi &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 2 &lt;/td&gt; &lt;td&gt; Two &lt;/td&gt; &lt;td&gt; Do &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Three &lt;/td&gt; &lt;td&gt; Teen &lt;/td&gt; &lt;/tr&gt;
&lt;/table&gt;

You can also write the same query as
 SELECT hindi.Tag, english.Inenglish, hindi.Inhindi
 FROM english INNER JOIN hindi
 ON english.Tag = hindi.Tag

Natural Joins using &quot;using&quot;
(Compatible: MySQL 4+; but changed in MySQL 5)
The following statement using &quot;USING&quot; method will display the same results.

 SELECT hindi.tag, hindi.Inhindi, english.Inenglish
 FROM hindi NATURAL JOIN english
 USING (Tag)

====Outer Joins====
&lt;table&gt;
&lt;tr&gt;&lt;td&gt; Tag &lt;/td&gt; &lt;td&gt; Inenglish &lt;/td&gt; &lt;td&gt;Tag &lt;/td&gt; &lt;td&gt;Inhindi&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt; &lt;td&gt;1 &lt;/td&gt;&lt;td&gt; One&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;		
&lt;tr&gt; &lt;td&gt;2 &lt;/td&gt;&lt;td&gt; Two &lt;/td&gt; &lt;td&gt; 2 &lt;/td&gt; &lt;td&gt;Do &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Three &lt;/td&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Teen &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt; 4 &lt;/td&gt; &lt;td&gt; Char &lt;/td&gt; &lt;/tr&gt;
&lt;/table&gt;

==== LEFT JOIN / LEFT OUTER JOIN ====
The syntax is as follows:
 SELECT field1, field2 FROM table1 LEFT JOIN table2 ON field1=field2

 SELECT e.Inenglish as English, e.Tag, '--no row--' as Hindi
 FROM english AS e LEFT JOIN hindi AS h
 ON e.Tag=h.Tag 
 WHERE h.Inhindi IS NULL

 English  tag   Hindi
 One      1     --no row-

====Right Outer Join====
 SELECT '--no row--' AS English, h.tag, h.Inhindi AS Hindi
 FROM english AS e RIGHT JOIN hindi AS h
 ON e.Tag=h.Tag
 WHERE e.Inenglish IS NULL

English   tag     Hindi
--no row--   4      Char

* Make sure that you have the same name and same data type in both tables.
* The keywords LEFT and RIGHT are not absolute, they only operate within the context of the given statement: we can reverse the order of the tables and reverse the keywords, and the result would be the same.
* If the type of join is not specified as inner or outer then it will be executed as an INNER JOIN.

==== Full Outer Join ====

As for v5.1, MySQL does not provide FULL OUTER JOIN. You may emulate this using a series of UNIONed SELECT statements.

==== Multiple joins ====

It is possible to join more than just two tables:
 SELECT ... FROM a JOIN (b JOIN c on b.id=c.id) ON a.id=b.id

Here is an example from ''Savane'':
 mysql&gt; SELECT group_type.type_id, group_type.name, COUNT(people_job.job_id) AS count 
        FROM group_type
         JOIN (groups JOIN people_job ON groups.group_id = people_job.group_id) 
         ON group_type.type_id = groups.type
        GROUP BY type_id ORDER BY type_id
 +---------+--------------------------------------+-------+
 | type_id | name                                 | count |
 +---------+--------------------------------------+-------+
 |       1 | Official GNU software                |   148 |
 |       2 | non-GNU software and documentation   |   268 |
 |       3 | www.gnu.org portion                  |     4 |
 |       6 | www.gnu.org translation team         |     5 |
 +---------+--------------------------------------+-------+
 4 rows in set (0.02 sec)

===Subqueries===
(Compatible: Mysql 4.1 and later...'''''Bold text''''')

* SQL subqueries let you use the results of one query as part of another query. 
* Subqueries are often natural ways of writing a statement.
* Let you break a query into pieces and assemble it.
* Allow some queries that otherwise can't be constructed. Without using a subquery, you have to do it in two steps.
* Subqueries always appear as part of the WHERE (or HAVING) clause.
* Only one field can be in the subquery SELECT. It means Subquery can only produce a single column of data as its result.
* ORDER BY is not allowed; it would not make sense.
* Usually refer to name of a main table column in the subquery.
* This defines the current row of the main table for which the subquery is being run. This is called an outer reference.

For e.g. If RepOffice= OfficeNbr from Offices table, list the offices where the sales quota for the office exceeds the sum of individual salespersons' quotas
 SELECT City FROM Offices WHERE Target &gt; ???
??? is the sum of the quotas of the salespeople, i.e.
 SELECT SUM(Quota)
 FROM SalesReps 
 WHERE RepOffice = OfficeNbr
We combine these to get
 SELECT City FROM Offices 
 WHERE Target &gt; (SELECT SUM(Quota) FROM SalesReps 
 WHERE RepOffice = OfficeNbr)

Display all customers with orders or credit limits &gt; $50,000.
Use the DISTINCT word to list the customer just once.
 SELECT DISTINCT CustNbr 
 FROM Customers, Orders 
 WHERE CustNbr = Cust AND (CreditLimit&gt;50000 OR Amt&gt;50000);

{{BookCat}}</text>
      <sha1>saq24tl8ti9z5mudz427bzz016wvdhy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Multinomial Ordered Models</title>
    <ns>0</ns>
    <id>200588</id>
    <revision>
      <id>1655475</id>
      <parentid>1650042</parentid>
      <timestamp>2009-11-12T12:20:21Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>move to mulitinomial models</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;


== References ==

{{reflist}}</text>
      <sha1>fjy47q7npzevmluspc9snhs09bki8n2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Spanish/Lessons/Introducci?n a la gram?tica</title>
    <ns>1</ns>
    <id>200590</id>
    <revision>
      <id>1547898</id>
      <timestamp>2009-06-25T08:25:56Z</timestamp>
      <contributor>
        <ip>216.175.104.78</ip>
      </contributor>
      <comment>plural form missing &quot;s&quot;</comment>
      <text xml:space="preserve">== plural form missing &quot;s&quot; ==

plural unas unas niñas some girl
plural unas unas niñas some girls</text>
      <sha1>0ivoxjlt36refeyrimcyx3q7byreqy6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Linear Algebra/Quotient Space</title>
    <ns>1</ns>
    <id>200591</id>
    <revision>
      <id>1547909</id>
      <timestamp>2009-06-25T10:44:38Z</timestamp>
      <contributor>
        <ip>195.116.242.254</ip>
      </contributor>
      <comment>Created page with 'DO THE PROOF!!!!!!!!!!!!!!!!!!!!!!!!'</comment>
      <text xml:space="preserve">DO THE PROOF!!!!!!!!!!!!!!!!!!!!!!!!</text>
      <sha1>11pl5c3wcpnhm942j8apx4qiuuwwv2x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Nataraja87</title>
    <ns>3</ns>
    <id>200595</id>
    <revision>
      <id>1547915</id>
      <timestamp>2009-06-25T10:56:39Z</timestamp>
      <contributor>
        <username>Swift</username>
        <id>33592</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Nataraja87!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, [[User:Swift|Swift]] ([[User talk:Swift|talk]]) 10:56, 25 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;
== Japanese ==
I noticed your work on the [[Japanese]] wikibook. I just wanted to make a quick note on the kanji order images. These are organised by the [[commons:Commons:Stroke Order Project|Commons:Stroke Order Project]] and if we ever get around to it, this will be solved by somehow making &lt;code&gt;*-jorder*.gif&lt;/code&gt; versions of these. Please feel free to focus your efforts where you best see fit, but note that delving into the stroke order mess is a big task... --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 10:56, 25 June 2009 (UTC)</text>
      <sha1>gn9i98husvwc0jk8hb7406ncmv5zoxx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Embedded Control Systems Design/A design example 1</title>
    <ns>1</ns>
    <id>200596</id>
    <revision>
      <id>1547928</id>
      <parentid>1547927</parentid>
      <timestamp>2009-06-25T11:02:10Z</timestamp>
      <contributor>
        <username>Stef.lievens</username>
        <id>189810</id>
      </contributor>
      <minor />
      <text xml:space="preserve">The reason for the update of the &quot;OLD version&quot; is because there was a lot of unnecessary information.
Following information is not wanted (no extra knowledge about how to design a system):
*technical information
*repeating something available on wikiPEDIA
*excessive summation of examples

Also, the structure wasn't up to date. The new structure uses the 5 phases as given in the chapter Design Process.

Also added information of the system complexity and design context

SUGGESTION:
* The design example should be moved to a more appropriate place within the wikibook. (i.e. an appendix??)
* Information on how/why the given subsystems are chosen = reason why those, and not other subsystems. However this is certainly not an easy task.</text>
      <sha1>3zdroei8n1z8y2tdjebobtdg1xk23dd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:76.104.213.84</title>
    <ns>3</ns>
    <id>200597</id>
    <revision>
      <id>1547923</id>
      <timestamp>2009-06-25T11:00:57Z</timestamp>
      <contributor>
        <username>Swift</username>
        <id>33592</id>
      </contributor>
      <comment>Welcome.</comment>
      <text xml:space="preserve">{{#ifeq:&quot;{{NAMESPACE}}&quot;| &quot;User talk&quot;|
Hello and '''[[Wikibooks:Welcome, newcomers|welcome]]''' to [[Wikibooks]], a collection of open-content textbooks!

You should consider [[Special:Userlogin|creating an account or logging in]]. It's free and requires no personal information. Here are some advantages:

* A username of your choice.
* Greater security and privacy, as your IP address will be hidden from most users.
* Your own personal user page and talk page.
* [[Special:Contributions/{{PAGENAME}}|Your contributions]] will directly attributed to you.
* The use of your own [[Help:Watching pages|watchlist]] to monitor pages that you are interested in.
* Your opinions carry greater weight in the [[Wikibooks:Decision making|decision making process]].
* You become a recognized member of the Wikibooks community.

We hope that you choose to become a Wikibookian and [[Special:Userlogin|create an account]].

Feel free to ask any questions on my talk page or in the [[Wikibooks:Reading room|Reading room]].
Be sure to sign your talk page comments with four tildes (&lt;nowiki&gt;~~~~&lt;/nowiki&gt;).

| {{#if:  | |&lt;!-- this is so if anyone tries to use it where it doesn't go they will know. --&gt;
{{mbox|type=warning|This template must only be used on '''User [[Help:Talk page|discussion]]''' pages.}} }} }}

Finally, I just wanted to give my personal thanks for your valuable contributions to the [[Japanese]] wikibook.

--[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 11:00, 25 June 2009 (UTC)</text>
      <sha1>julgaqlqo6bfnwey1w6yzioc26g71y9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:24.82.211.23</title>
    <ns>3</ns>
    <id>200599</id>
    <revision>
      <id>1547925</id>
      <timestamp>2009-06-25T11:01:41Z</timestamp>
      <contributor>
        <username>Swift</username>
        <id>33592</id>
      </contributor>
      <comment>Welcome.</comment>
      <text xml:space="preserve">{{#ifeq:&quot;{{NAMESPACE}}&quot;| &quot;User talk&quot;|
Hello and '''[[Wikibooks:Welcome, newcomers|welcome]]''' to [[Wikibooks]], a collection of open-content textbooks!

You should consider [[Special:Userlogin|creating an account or logging in]]. It's free and requires no personal information. Here are some advantages:

* A username of your choice.
* Greater security and privacy, as your IP address will be hidden from most users.
* Your own personal user page and talk page.
* [[Special:Contributions/{{PAGENAME}}|Your contributions]] will directly attributed to you.
* The use of your own [[Help:Watching pages|watchlist]] to monitor pages that you are interested in.
* Your opinions carry greater weight in the [[Wikibooks:Decision making|decision making process]].
* You become a recognized member of the Wikibooks community.

We hope that you choose to become a Wikibookian and [[Special:Userlogin|create an account]].

Feel free to ask any questions on my talk page or in the [[Wikibooks:Reading room|Reading room]].
Be sure to sign your talk page comments with four tildes (&lt;nowiki&gt;~~~~&lt;/nowiki&gt;).

| {{#if:  | |&lt;!-- this is so if anyone tries to use it where it doesn't go they will know. --&gt;
{{mbox|type=warning|This template must only be used on '''User [[Help:Talk page|discussion]]''' pages.}} }} }} --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 11:01, 25 June 2009 (UTC)</text>
      <sha1>5cvpeq2izj2d0wrd1sjr853m8djc7du</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Thermochap/Sandbox/Shrink Me</title>
    <ns>2</ns>
    <id>200600</id>
    <revision>
      <id>1651658</id>
      <parentid>1651653</parentid>
      <timestamp>2009-11-03T15:58:22Z</timestamp>
      <contributor>
        <username>Thermochap</username>
        <id>87911</id>
      </contributor>
      <comment>/* See Also */</comment>
      <text xml:space="preserve">[[Image:Deepzoom.png|thumb|350px|right|Atom clusters with blood cell &amp; Andromeda galaxy in background.]]

This is a sandbox page to explore the '''justaposition of worlds''' on two or more size scales.

The image at right is an example of the range of objects that might be seen with a very tiny camera.  If we could pan back to see the pico-human who is taking this photograph, then this would be an example of two-world juxtaposition.

== Introduction ==

Modern technology is giving us unprecedented understanding of, and access to, processes on size-scales ranging from that of humans to that of atoms. As a result, thoughts about changing perspective are increasingly both fun and of potentially practical value.

Put another way, now it is not only fun to imagine what it would be like to take a shrinking pill like Alice in Wonderland. The prospect of building a 12&quot; globe with a 3D model of every house visible on Google Earth is moving into technological range, as is the possibility of finding robotic or perhaps even biological inhabitants that might be inclined to take advantage of such emerging real estate.

== Examples ==

=== Models ===

==== The meter &amp;hArr; millimeter model ====

This takes objects which are a meter in size down to a millimeter.  Hence size is divided by a factor of 1000.

Imagine, for example, that your living room floor were covered by a 1/1000 model of a present day city.  What would that city look like to you?

:If ordinary humans can resolve a tenth of a millimeter with one's naked eye, they might only be able to resolve a tenth of a &quot;milli-world meter&quot; i.e. objects that are about four &quot;milli-world inches&quot; across.  That means that you might be able to see a milli-human's hand, but you probably couldn't see what they were doing with their fingers.  [[User:Thermochap|Thermochap]] ([[User talk:Thermochap|talk]]) 18:24, 26 June 2009 (UTC)

Conversely, what would your coffee table look like to the milli-residents of this city?  How about a piece of pollen blown in through an open window, or a skin cell shed when you scraped your hand on the edge of the desk? 

In a related vein, how would your milli-cars work differently than do normal cars?  Would seat belts be as important?  Could they be powered by miniature internal combustion engines, or would some other kind of engine make more sense?  How would the milli-mileage of these milli-cars compare to that of an ordinary-sized car?

==== The meter &amp;hArr; micron model ====

This shrinks objects which are a meter in size down to only a micron in size.  Hence distances are multiplied by 10&lt;sup&gt;-6&lt;/sup&gt;.

:The smallest things ordinary folks could see in this model might be 100 &quot;micro-world meters&quot; across. [[User:Thermochap|Thermochap]] ([[User talk:Thermochap|talk]]) 16:06, 26 June 2009 (UTC)

Imagine for example that your living room floor were shrunk to milli-world size, so that the city-model in your living room now existed on the micro-world scale.  What would that micro-world city look like to normal people?  How big would the micro-worlder's &quot;micro-planet earth&quot; be?

:I guess from below that the micro-planet earth would be about 41.8 feet in diameter.  Isn't that about as big as a small house? [[User:Thermochap|Thermochap]] ([[User talk:Thermochap|talk]]) 22:59, 25 June 2009 (UTC)

Conversely, how would un-shrunk humans look to the micro-humans living in this shrunken town?  What would one of their big toes look like?  Would one of their fingerprints look like a maze in which you could get lost?  

Similarly, how big would atoms look to these micro-humans?  Would they be big enough to see with the naked eye?  Could modern 3D printers or [http://en.wikipedia.org/wiki/Rapid_prototyping rapid prototyping devices] make physical models for normal-sized people whose atom-scale structure would let us pretend that we were micro-humans too?

Could the micro-cars in this shrunken city similarly run on an internal combustion engine, or would something else be needed?  How would their micro-mileage compare?  Would speed limits be the same, and how might seatbelts for these micro-cars be redesigned?  How about micro-airplanes, and micro-parachutes?

==== The one-foot-diameter globe ====

[[File:3quarter globe.jpg|right|thumb|What's it like to live here?]]

Here the scale factor takes the earth's diameter (4.18&amp;times;10&lt;sup&gt;7&lt;/sup&gt; feet) down to one foot.  This requires multiplication by a factor of 2.39&amp;times;10&lt;sup&gt;-8&lt;/sup&gt;, and may be useful e.g. for building [http://en.wikipedia.org/wiki/Solar_system_model scale model solar systems] on the size scale of cities.

You probably already know what such a globe would look like to you, as well as what the tiny cities and city streets would look like to the naked eye.  Finding the street on which you live might be tough!

:The smallest thing ordinary folk might be able to see with their naked eye in this model might be about 0.1 milli-meter or 10&lt;sup&gt;-4&lt;/sup&gt;&amp;times;4.18&amp;times;10&lt;sup&gt;7&lt;/sup&gt; ~ 4180 &quot;globe-world meters&quot; or 4180/1609 ~ 2.6 &quot;globe-world miles&quot; across. [[User:Thermochap|Thermochap]] ([[User talk:Thermochap|talk]]) 16:11, 26 June 2009 (UTC)

Conversely, however, what would your finger look like to the Nanoworld-2 residents of such a globe?  What would the cells in your finger look like?  What would the molecules in the cell membrane surfaces of your finger look like?  What would the atoms that make up those molecules look like?  Would residents of these cities be able to see anything ''inside'' the atoms that make up those molecules?

How might residents of those shrunken cities power their automobiles?  Would their airplanes have wings, or something else?  Would the plumbing in their homes still work, or would that too have to be redesigned?

=== Media ===

==== Fiction ====

* [http://books.google.com/books?id=emISbmWjamwC Gulliver's Travels] by Jonathan Swift, 1727
* [http://books.google.com/books?id=tLhfenynsWoC The Nutcracker and the Mouse King] by E. T. Hoffman, 1816 (Amazon)
* [http://books.google.com/books?id=CLoNAAAAYAAJ Alice's Adventures in Wonderland] by Lewis Carroll, 1865
* [http://books.google.com/books?id=4843AAAAIAAJ Mr. Tompkins in Wonderland] by George Gamow, 1940 (Amazon)
* Engines of Creation by K. Eric Drexler, 1987 (Amazon)
* [http://books.google.com/books?id=lYiE4mplneAC Two Bad Ants] by Chris Van Allsburg, Houghton Mifflin, Boston, 1988 (Amazon)
* [http://books.google.com/books?id=o3rXIRFTa64C Alice in QuantumLand] by Robert Gilmore, 1995 (Amazon)
* [http://books.google.com/books?id=rX6K6MvOGzMC The New World of Mr. Tompkins] by Gamow and Stammard, 1999 (Amazon)
* Shrinking Mouse by Pat Hutchins, Scholastic, New York, 2000 (Amazon)

==== Movies and videos ====

* The Incredible Shrinking Man, 1957 (Amazon)
* Fantastic Voyage, 1966 (Amazon)
* Willie Wonka and the Chocolate Factory, 1971
* The Incredible Shrinking Woman, 1982 (Amazon)
* Inner Space, 1987
* Honey - I Shrunk the Kids, 1989 (Amazon)
* Honey - I Blew Up the Kid, 1992
* Honey - We Shrunk Ourselves, 1997 (Amazon)
* A Bug's Life, 1998 (Amazon)
* The [http://multimedia.mcb.harvard.edu/media.html inner life of a cell] [http://www.youtube.com/watch?v=BVvvx5HGpLg video].

== Effects of Size ==

=== Talking about size ===

&lt;center&gt;
{| class=&quot;wikitable&quot;  border = &quot;1&quot; 
|+ Useful numbers for [[:Image:Shapeclass.png|equidimensional]] (e.g. spherical) solid or liquid objects on selected size scales.
|- becolor=&quot;#efefef&quot;
|- 
!Name of scale !! Minimum&lt;br&gt;diameter!!Min. volume&lt;br&gt; in [&amp;Aring;&lt;sup&gt;3&lt;/sup&gt;]!! Number of atoms at&lt;br&gt;7&amp;times;10&lt;sup&gt;22&lt;/sup&gt; [atoms/cc] !! Min. surface&lt;br&gt;area in [&amp;Aring;&lt;sup&gt;2&lt;/sup&gt;]!!  # surface atoms at&lt;br&gt;10&lt;sup&gt;15&lt;/sup&gt; [atoms/cm&lt;sup&gt;2&lt;/sup&gt;] !! Max. fraction of&lt;br&gt; atoms on surface !! Example
|- align=&quot;center&quot;
|'''Milliworld-2''' || 1[cm]=10&lt;sup&gt;8&lt;/sup&gt;[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;24&lt;/sup&gt; || 30&amp;times;10&lt;sup&gt;21&lt;/sup&gt; + || &amp;pi;&amp;times;10&lt;sup&gt;16&lt;/sup&gt; || 3&amp;times;10&lt;sup&gt;15&lt;/sup&gt; + || 0.0000001 || sugar cube
|- align=&quot;center&quot;
|'''Milliworld-1''' || 1[mm]=10&lt;sup&gt;7&lt;/sup&gt;[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;21&lt;/sup&gt; || 30 quintillion + || &amp;pi;&amp;times;10&lt;sup&gt;14&lt;/sup&gt; || 30 trillion + || 0.000001 || flea
|- align=&quot;center&quot;
|'''Microworld-3''' || 100[&amp;mu;m]=10&lt;sup&gt;6&lt;/sup&gt;[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;18&lt;/sup&gt; || 30 quadrillion + || &amp;pi;&amp;times;10&lt;sup&gt;12&lt;/sup&gt; || 300 billion + || 0.00001 || sand grain
|- align=&quot;center&quot;
|'''Microworld-2''' || 10[&amp;mu;m]=10&lt;sup&gt;5&lt;/sup&gt;[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;15&lt;/sup&gt; || 30 trillion + || &amp;pi;&amp;times;10&lt;sup&gt;10&lt;/sup&gt; || 3 billion + || 0.0001 || pollen
|- align=&quot;center&quot;
|'''Microworld-1''' || 1[&amp;mu;m]=10&lt;sup&gt;4&lt;/sup&gt;[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;12&lt;/sup&gt; || 30 billion + || &amp;pi;&amp;times;10&lt;sup&gt;8&lt;/sup&gt; || 30 million + || 0.001 || cell
|- align=&quot;center&quot;
|'''Nanoworld-3''' || 100[nm]=1000[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;9&lt;/sup&gt; || 30 million + || &amp;pi;&amp;times;10&lt;sup&gt;6&lt;/sup&gt; || 300 thousand + || 0.01 || organelle
|- align=&quot;center&quot;
|'''Nanoworld-2''' || 10[nm]=100[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;6&lt;/sup&gt; || 30 thousand + || &amp;pi;&amp;times;10&lt;sup&gt;4&lt;/sup&gt; || 3 thousand + || 0.1 || virus
|- align=&quot;center&quot;
|'''Nanoworld-1''' || 1[nm]=10[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;3&lt;/sup&gt; || 30 + || &amp;pi;&amp;times;10&lt;sup&gt;2&lt;/sup&gt; || 30 + || 1 || buckyball
|- align=&quot;center&quot;
|'''Picoworld-3''' || 1[Ångström]|| (&amp;pi;/6) || 1 + || &amp;pi; || 1 + || 1 || atom
|-
|}
&lt;/center&gt;

=== How physical interactions change ===

This table shows how different physical properties take on importance in different ways, according to your size.

&lt;center&gt;
{| class=&quot;wikitable&quot;  border = &quot;1&quot;
|+ The shift in emphasis on various processes depend on the size-scale of one's world.
|- becolor=&quot;#efefef&quot;
|- align=&quot;center&quot;
!Effect\Size-Range !! MacroWorld!! MicroWorld !! NanoWorld 
|- align=&quot;center&quot;
|'''Tides &amp; Coriolis''' || Weak || Negligible || What's that? 
|- align=&quot;center&quot;
|'''Gravity &amp; inertia''' || Important || Weak || Negligible
|- align=&quot;center&quot;
|'''Electrostatics''' || Distracting || Scary || Off the charts
|- align=&quot;center&quot;
|'''Touch''' || Extra || Manageable&lt;ref name=&quot;fishpole&quot;&gt;The quartz fishpole balance method developed by Oliver Lowry at WUSM in the early 1940's relied on the reliability of touch exchanges for manipulating picogram sized objects in the presence of ionized air to minimize electrostatic effects.&lt;/ref&gt; || Extreme
|- align=&quot;center&quot;
|'''Terminal velocity''' || High || Slow || Nearly zero
|- align=&quot;center&quot;
|'''Heat/Brownian motion''' || Signals random motion || Jostles || Careens &amp; jiggles
|- align=&quot;center&quot;
|'''Atoms near surface''' || Few || Many || Most
|- align=&quot;center&quot;
|'''Energies''' || Allowed in bands || Odd states are important || Discrete values only
|- align=&quot;center&quot;
|'''Slow spins''' || No limit || Slow in steps || Disallowed
|- align=&quot;center&quot;
|'''Electrons''' || Shocking || Polarizing || Fuzzy 
|- align=&quot;center&quot;
|'''Measurements''' || Possible? || Intrusive || Perturbing
|-
|}
&lt;/center&gt;

=== How what we find in nature changes ===

Assuming that you have a way to see as you shrink, how would the world change as you shrunk to the size of an atom while sitting at your desk? How would it change if you were standing on your lawn? How would it change if you were standing in a forest, or sitting on a beach?

=== How mechanisms for ''imaging'' change ===

&lt;center&gt;
{| class=&quot;wikitable sortable&quot;  border = &quot;1&quot;
|+ Properties of various types of [http://en.wikipedia.org/wiki/File:Light_spectrum.png electromagnetic radiation] whose speed in vacuo is ~300,000,000 [m/s].
|- becolor=&quot;#efefef&quot;
|- align = &quot;center&quot;
!Radiation type !! Frequency in [Hz]!! Wavelength in [m] !! Photon energy in [eV] !! Conveyance 
|- align = &quot;center&quot;
|AC outlet || 60 cycles per second || 5000000&amp;rArr;5000km || 0.000000000000248&amp;rArr;248feV || power cord
|- align = &quot;center&quot;
|Audio signal (C6) || 1046.5 Hertz || 286000&amp;rArr;286km || 0.00000000000432&amp;rArr;4.32peV  || twisted pair
|- align = &quot;center&quot;
|AM radio || 1120000&amp;rArr;1120kHz|| 268 meters || 0.000000005&amp;rArr;5neV || shielded wires 
|- align = &quot;center&quot;
|FM radio || 90700000&amp;rArr;90.7MHz || 3.2 meters  || 0.000000376&amp;rArr;376neV || [http://en.wikipedia.org/wiki/Coaxial_cable coaxial cable]
|- align = &quot;center&quot;
|Microwaves || 2450000000&amp;rArr;2.45GHz || 0.120000000&amp;rArr;120mm || 0.000010000&amp;rArr;10&amp;mu;eV || [http://en.wikipedia.org/wiki/Waveguide_(electromagnetism) waveguides]
|- align = &quot;center&quot;
|Infrared Light || 30000000000000&amp;rArr;30THz ||  0.000010000&amp;rArr;10&amp;mu;m  || 0.124000000&amp;rArr;124meV  || alkali halide optics
|- align = &quot;center&quot;
|&lt;span style=&quot;color:Red;&quot;&gt;Red light&lt;/span&gt; || 440000000000000&amp;rArr;&lt;span style=&quot;color:Red;&quot;&gt;440THz&lt;/span&gt; || 0.000000680&amp;rArr;&lt;span style=&quot;color:Red;&quot;&gt;680nm&lt;/span&gt; || &lt;span style=&quot;color:Red;&quot;&gt;182&lt;/span&gt; electron Volts || fiber optics
|- align = &quot;center&quot;
|&lt;span style=&quot;color:Green;&quot;&gt;Green light&lt;/span&gt; || 560000000000000&amp;rArr;&lt;span style=&quot;color:Green;&quot;&gt;560THz&lt;/span&gt; || 0.000000540&amp;rArr;&lt;span style=&quot;color:Green;&quot;&gt;540nm&lt;/span&gt; || &lt;span style=&quot;color:Green;&quot;&gt;2.32&lt;/span&gt; electron Volts ||  fiber optics
|- align = &quot;center&quot;
|&lt;span style=&quot;color:Blue;&quot;&gt;Blue light&lt;/span&gt; || 630000000000000&amp;rArr;&lt;span style=&quot;color:Blue;&quot;&gt;630THz&lt;/span&gt; || 0.000000470&amp;rArr;&lt;span style=&quot;color:Blue;&quot;&gt;470nm&lt;/span&gt; || &lt;span style=&quot;color:Blue;&quot;&gt;2.61&lt;/span&gt; electron Volts || fiber optics
|- align = &quot;center&quot;
|Ultraviolet Light || 1070000000000000&amp;rArr;1.07PHz || 0.000000280&amp;rArr;280nm || 4.43 electron Volts ||  quartz optics?
|- align = &quot;center&quot;
|X-rays (Cu-K&amp;alpha;) || 1940000000000000000&amp;rArr;1.94EHz  || 0.000000000154&amp;rArr;1.54&amp;Aring; || 8030&amp;rArr;8.03keV ||  ?
|- align = &quot;center&quot;
|Gamma rays || 300000000000000000000&amp;rArr;300EHz || 0.000000000001&amp;rArr;1pm  || 1240000&amp;rArr;1.24MeV  ||  ?  
|- 
|}
&lt;/center&gt;

[[Image:KEvsMOMENTUM.png|thumb|right|250px|Kinetic energy vs. reciprocal wavelength.]]

As you can see from the table above, visible light's wavelength gets a bit large as size scales move below a micron.  As object sizes shrink to that of the illumination's wavelength, ray optics goes out the window and only interference effects remain to give us clues about what's there.

The figure at right shows how the wavelength of anything (Planck's constant divided by momentum) relates to that thing's kinetic energy.  If we want small wavelengths, therefore, we either have to illuminate with high energy photons (like X-rays and gamma-rays) which are difficult to focus and detect, or to illuminate with charged particles.

Charge makes particles easy to focus and detect with help from electric fields.  The particle with the highest charge to mass ratio may turn out to be the electron (shown by the red line in the figure at right).  Electrons thus interact most strongly with matter.  

On the other hand, higher mass particles have shorter wavelengths for a given amount of kinetic energy.  Hence they too come in handy as probes of the very small.

== Development platforms and tools ==

=== Google Earth ===

=== LiveGraphics3D ===

=== The real world ===

We refer here to the challenge of building small agents (e.g. nano-robots) equipped with the following: 

* a central-processing-unit (CPU), 
* some sort of eyes and/or other local sensors, 
* some on-board memory, 
* an ability to move from point to point, 
* a capacity for two-way communication with humans in the larger world, 
* a source of ordered energy and 
* a way to eliminate waste heat.  

What are our prospects for building and integrating each of these components on smaller and smaller size scales?

==== communications ====

==== memory ====

==== logic processors ====

==== sensors ====

Imaging sensors will be limited by the wavelength of the excitations used.  For example, the wavelength of light may be a problem for cameras and image resolutions much smaller than the visible wavelength range of 400-700 nanometers.

==== mobility ====

==== power considerations ====

Do we carry our fuel with us, or plan on finding it on the road?  Also, how do we dump excess heat?  I have a feeling that many biological systems have already figured this stuff out.

==== integrated systems ====

== Calculations ==

== See Also ==

* This [http://en.wikibooks.org/wiki/User:Thermochap/Sandbox scratch space on size-scale awareness].

== Footnotes ==

&lt;references/&gt;</text>
      <sha1>g2145fc8cgd57aa7og1kfnk32u6dqir</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Multinomial Models</title>
    <ns>0</ns>
    <id>200601</id>
    <revision>
      <id>2204083</id>
      <parentid>2204081</parentid>
      <timestamp>2011-10-31T14:49:55Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>/* Rank Ordered Logit Model */ Link to WP</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

== Multinomial Logit ==

* '''mlogit''' package.
* &lt;tt&gt;multinom()&lt;/tt&gt; '''nnet'''
* &lt;tt&gt;multinom()&lt;/tt&gt; '''VGAM'''


== Conditional Logit ==

* &lt;tt&gt;clogit()&lt;/tt&gt; in the '''survival''' package
* '''mclogit''' package.


== Multinomial Probit ==

* '''mprobit''' package &lt;ref&gt; Harry Joe, Laing Wei Chou and Hongbin Zhang (2006). mprobit:
  Multivariate probit model for binary/ordinal response. R package
  version 0.9-2.&lt;/ref&gt;
* [http://imai.princeton.edu/software/MNP.html '''MNP'''] package to fit a multinomial probit.


== Multinomial ordered logit model ==

We consider a [[w:Discrete_choice#K._Ordered_Logit|multinomial ordered logit]] model with unkwnown thresholds. 
First, we simulate fake data. We draw the residuals in a logistic distribution. Then we draw some explanatory variable x and we define ys the latent variable as a linear function of x. Note that we set the constant to 0 because the constant and the thresholds cannot be identified simultanously in this model. So we need to fix one of the parameters. Then, we define thresholds (-1,0,1) and we define our observed variable y using the &lt;code&gt;cut()&lt;/code&gt; function. So y is an ordered multinomial variable. 

&lt;source lang=&quot;rsplus&quot;&gt;
N &lt;- 10000
u &lt;- rlogis(N)
x &lt;- rnorm(N)
ys &lt;- x + u
mu &lt;- c(-Inf,-1,0,1, Inf)
y &lt;- cut(ys, mu)
plot(y,ys)
df &lt;- data.frame(y,x)
&lt;/source&gt;


=== Maximum likelihood estimation ===

This model can be estimated by maximum likelihood using the &lt;code&gt;polr()&lt;/code&gt; function in the '''MASS''' package. Since it is not possible to achieve identification of the constant and the thresholds, '''R''' assumes by default that the constant is equal to 0.

&lt;source lang=&quot;rsplus&quot;&gt;
library(MASS)
fit &lt;- polr(y  ~ x, method = &quot;logistic&quot;, data = df)
summary(fit)
&lt;/source&gt;


=== Bayesian estimation ===

* &lt;tt&gt;bayespolr()&lt;/tt&gt; ('''arm''') performs a bayesian estimation of the multinomial ordered logit

&lt;source lang=&quot;rsplus&quot;&gt;
library(&quot;arm&quot;)
fit &lt;- bayespolr(y ~ x, method = &quot;logistic&quot;, data = df)
summary(fit)
&lt;/source&gt;

== Multinomial ordered probit model ==

We generate fake data by drawing an error term in normal distribution and cutting the latent variables in 4 categories. 

&lt;source lang=&quot;rsplus&quot;&gt;
N &lt;- 1000
u &lt;- rnorm(N)
x &lt;- rnorm(N)
ys &lt;- x + u
mu &lt;- c(-Inf,-1,0,1, Inf)
y &lt;- cut(ys, mu)
plot(y,ys)
df &lt;- data.frame(x,y)
&lt;/source&gt;


=== Maximum likelihood estimation ===

The model can be fitted using maximum likelihood method. This can be done using the &lt;code&gt;polr()&lt;/code&gt; function in the '''MASS''' package with the &lt;code&gt;probit&lt;/code&gt; method.

&lt;source lang=&quot;rsplus&quot;&gt;
library(MASS)
fit &lt;- polr(y  ~ x, method = &quot;probit&quot;, data = df)
summary(fit)
&lt;/source&gt;


=== Bayesian estimation ===

* &lt;tt&gt;bayespolr()&lt;/tt&gt; ('''arm''') performs a bayesian estimation of the multinomial ordered probit


== Rank Ordered Logit Model ==

This model was introduced in econometrics by Beggs, Cardell and Hausman in 1981&lt;ref name = &quot;bch&quot;&gt;Beggs, S., Cardell, S., Hausman, J., 1981. Assessing the potential demand for electric cars. Journal of Econometrics 17 (1),
1–19 (September).&lt;/ref&gt;{{,}}&lt;ref name = &quot;combes&quot; /&gt;. One application is the Combes et alii paper explaining the ranking of candidates to become professor&lt;ref name = &quot;combes&quot;&gt;Pierre-Philippe Combes, Laurent Linnemer, Michael Visser, Publish or peer-rich? The role of skills and networks in hiring economics professors, Labour Economics, Volume 15, Issue 3, June 2008, Pages 423-441, ISSN 0927-5371, 10.1016/j.labeco.2007.04.003. (http://www.sciencedirect.com/science/article/pii/S0927537107000413)&lt;/ref&gt;. Is is also known as Plackett–Luce model in biomedical literature or as [[w:Discrete_choice#J._Exploded_Logit|exploded logit model]] in marketing&lt;ref name = &quot;combes&quot; /&gt;.

== Conditionally Ordered Hierarchical Probit == 

* The Conditionally Ordered Hierarchical Probit can be estimated using the '''anchors''' package developped by Gary King and his coauthors&lt;ref&gt; Jonathan Wand, Gary King, Olivia Lau (2009). anchors:
  Software for Anchoring Vignette Data. Journal of
  Statistical Software, Forthcoming. URL
  http://www.jstatsoft.org/.&lt;/ref&gt;.

== References ==

{{reflist|2}}</text>
      <sha1>rk9nsc3ps62hxcizroskbjoeim28mau</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Count Data Models</title>
    <ns>0</ns>
    <id>200602</id>
    <revision>
      <id>2200503</id>
      <parentid>2147582</parentid>
      <timestamp>2011-10-24T16:19:50Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <minor />
      <comment>/* References */ 2 columns</comment>
      <text xml:space="preserve">{{Wikipedia|Count data}}
&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

== The Poisson model ==
{{Wikipedia|Poisson regression}}

=== Fake data simulations ===

We assume that y follows a poisson distribution with mean exp(1 + 1 * x). We store the data in the &quot;df&quot; dataframe. 

&lt;source lang=&quot;rsplus&quot;&gt;
N &lt;- 1000
x &lt;- rnorm(N)
alpha &lt;- c(1,1)
y &lt;- rpois(N,exp(alpha[1] + alpha[2] * x))
df &lt;- data.frame(x,y)
plot(x,y)
&lt;/source&gt;


=== Maximum likelihood ===

We estimate this simple model using the &lt;tt&gt;glm()&lt;/tt&gt; function with &lt;tt&gt;family = poisson&lt;/tt&gt; as option.
&lt;source lang=&quot;rsplus&quot;&gt;
fit &lt;- glm(y ~ x, family = poisson, data = df)
summary(fit)
&lt;/source&gt;

=== Bayesian estimation ===

The model can also be estimated using bayesian methods with the &lt;code&gt;MCMCpoisson()&lt;/code&gt; function which is provided in the '''MCMCpack'''. 

&lt;source lang=&quot;rsplus&quot;&gt;
library(&quot;MCMCpack&quot;)
posterior &lt;- MCMCpoisson(y ~ x, data = df)
plot(posterior)
summary(posterior)
&lt;/source&gt;

== Overdispersion test == 

* &lt;tt&gt;dispersiontest()&lt;/tt&gt; ('''AER package''') provides a test for equidispersion.

== Zero inflated model ==

See the '''zic''' package&lt;ref&gt; Markus Jochmann (2010). zic: Bayesian Inference for Zero-Inflated Count Models. R package
  version 0.5-3. http://CRAN.R-project.org/package=zic&lt;/ref&gt;

== Bivariate poisson regression ==

* '''bivpois''' package for bivariate poisson regression.

== References == 

* See [http://www.ats.ucla.edu/stat/r/dae/poissonreg.htm UCLA website for an example]
* Zeileis, A., Kleiber, C. and Jackman, S.    [http://cran.r-project.org/web/packages/pscl/vignettes/countreg.pdf Regression Models for Count Data in R]
* Replication files for Cameron and Trivedi's 1998 book&lt;ref&gt;Cameron, A.C. and Trivedi, P.K. (1998). Regression Analysis of Count Data. Cambridge: Cambridge University Press.&lt;/ref&gt; are provided in the AER package&lt;ref&gt;Christian Kleiber and Achim Zeileis (2008). Applied
  Econometrics with R. New York: Springer-Verlag. ISBN
  978-0-387-77316-2. URL
  http://CRAN.R-project.org/package=AER&lt;/ref&gt;. You can simply type '''?CameronTrivedi1998''' and you will find the source code.

{{reflist|2}}</text>
      <sha1>oyiz3w87dddih83ni396vkr12qejipp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Text Processing</title>
    <ns>0</ns>
    <id>200605</id>
    <revision>
      <id>2676765</id>
      <parentid>2619815</parentid>
      <timestamp>2014-06-26T18:39:06Z</timestamp>
      <contributor>
        <username>EtudiantEco</username>
        <id>1133132</id>
      </contributor>
      <comment>/* Computing distance between strings */ mention three more packages, example with adist()</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

This page includes all the material you need to deal with strings in R. The section on regular expressions may be useful to understand the rest of the page, even if it is not necessary if you only need to perform some simple tasks.

This page may be useful to :  
* perform statistical text analysis. 
* collect data from an unformatted text file.
* deal with character variables.

In this page, we learn how to read a text file and how to use R functions for characters. There are two kind of function for characters, simple functions and regular expressions. Many functions are part of the standard R '''base''' package. 
&lt;source lang=&quot;rsplus&quot;&gt;
help.search(keyword = &quot;character&quot;, package = &quot;base&quot;)
&lt;/source&gt;
However, their name and their syntax is not intuitive to all users. Hadley Wickham has developed the
'''stringr''' package which defines functions with similar behaviour but their names are easier to retain and their syntax much more systematic&lt;ref name =&quot;stringr&quot;&gt;Hadley Wickham &quot;stringr: modern, consistent string processing&quot; The R Journal, December 2010, Vol 2/2,  http://journal.r-project.org/archive/2010-2/RJournal_2010-2_Wickham.pdf &lt;/ref&gt;. 

* Keywords : ''text mining'', ''natural language processing''
* See CRAN Task view on Natural Language Processing&lt;ref&gt;http://cran.r-project.org/web/views/NaturalLanguageProcessing.html&lt;/ref&gt;
* See also the following packages '''tm''', '''tau''', '''languageR''', '''scrapeR'''.


== Reading and writing text files ==

'''R''' can read any text file using &lt;code&gt;readLines()&lt;/code&gt; or &lt;code&gt;scan()&lt;/code&gt;.  It is possible to specify the encoding of the imported text file with &lt;code&gt;readLines()&lt;/code&gt;. The entire contents of the text file can be read into an R object (e.g., a character vector). &lt;code&gt;scan()&lt;/code&gt; is more flexible. The kind of data expected can be specified in the second argument (e.g., character(0) for a string).
&lt;source lang=&quot;rsplus&quot;&gt;
text &lt;- readLines(&quot;file.txt&quot;,encoding=&quot;UTF-8&quot;)
scan(&quot;file.txt&quot;, character(0)) # separate each word
scan(&quot;file.txt&quot;, character(0), quote = NULL) # get rid of quotes
scan(&quot;file.txt&quot;, character(0), sep = &quot;.&quot;) # separate each sentence
scan(&quot;file.txt&quot;, character(0), sep = &quot;\n&quot;) # separate each line
&lt;/source&gt;

We can write the content of an R object into a text file using &lt;code&gt;cat()&lt;/code&gt; or &lt;code&gt;writeLines()&lt;/code&gt;. By default &lt;code&gt;cat()&lt;/code&gt; concatenates vectors when writing to the text file. You can change it by adding options &lt;code&gt;sep=&quot;\n&quot;&lt;/code&gt; or &lt;code&gt;fill=TRUE&lt;/code&gt;. The default encoding depends on your computer.

&lt;source lang=&quot;rsplus&quot;&gt;
cat(text,file=&quot;file.txt&quot;,sep=&quot;\n&quot;)
writeLines(text, con = &quot;file.txt&quot;, sep = &quot;\n&quot;, useBytes = FALSE)
&lt;/source&gt;

Before reading a text file, you can look at its properties. &lt;code&gt;nlines()&lt;/code&gt; ('''parser''' package) and &lt;code&gt;countLines()&lt;/code&gt; ('''R.utils''' package) count the number of lines in the file. &lt;code&gt;count.chars()&lt;/code&gt; ('''parser''' package) counts the number of bytes and characters in each line of a file. You can also display a text file using &lt;code&gt;file.show()&lt;/code&gt;.

== Character encoding ==

{{Wikipedia|Character encoding}}

R provides functions to deal with various set of encoding schemes. This is useful if you deal with text file which have been created with another operating system and especially if the language is not English and has many accents and specific characters. For instance, the standard encoding scheme in Linux is &quot;UTF-8&quot; whereas the standard encoding scheme in Windows is &quot;Latin1&quot;.  The &lt;code&gt;Encoding()&lt;/code&gt; functions returns the encoding of a string. &lt;code&gt;iconv()&lt;/code&gt; is similar to the unix command [[w:iconv|iconv]] and converts the encoding. 
* &lt;code&gt;iconvlist()&lt;/code&gt; gives the list of available encoding scheme on your computer.
* &lt;code&gt;readLines()&lt;/code&gt;, &lt;code&gt;scan()&lt;/code&gt; and &lt;code&gt;file.show()&lt;/code&gt; have also an encoding option.
* &lt;code&gt;is.utf8()&lt;/code&gt; ('''tau''') tests if the encoding is &quot;utf8&quot;. 
* &lt;code&gt;is.locale()&lt;/code&gt; ('''tau''') tests if encoding is the same as the default encoding on your computer. 
* &lt;code&gt;translate()&lt;/code&gt; ('''tau''') translates the encoding into the current locale. 
* &lt;code&gt;fromUTF8()&lt;/code&gt; ('''descr''') is less general than &lt;code&gt;iconv()&lt;/code&gt;.
* &lt;code&gt;utf8ToInt()&lt;/code&gt; ('''base''')

=== Example ===

The following example was run under Windows. Thus, the default encoding is &quot;latin1&quot;.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; texte &lt;- &quot;Hé hé&quot;
&gt; Encoding(texte)
[1] &quot;latin1&quot;
&gt; texte2 &lt;-  iconv(texte,&quot;latin1&quot;,&quot;UTF-8&quot;)
&gt; Encoding(texte2)
[1] &quot;UTF-8&quot;
&lt;/source&gt;

== Regular Expressions ==

{{wikibooks|Regular expressions}}
{{wikipedia|Regular expression}}

A regular expression is a specific pattern in a set of strings. For instance, one could have the following pattern : 2 digits, 2 letters and 4 digits. '''R''' provides powerful functions to deal with regular expressions.
Two types of regular expressions are used in '''R'''&lt;ref&gt;In former versions (&lt; 2.10) we had also basic regular expressions in '''R''' : 
* extended regular expressions, used by &lt;code&gt;extended = TRUE&lt;/code&gt; (the default), 
* basic regular expressions, as used by &lt;code&gt;extended = FALSE&lt;/code&gt; (obsolete in '''R 2.10''').
Since basic regular expressions (&lt;code&gt;‘extended = FALSE’&lt;/code&gt;) are now obsolete, the &lt;code&gt;extended&lt;/code&gt; option is obsolete in version 2.11.&lt;/ref&gt; 
* extended regular expressions, used by &lt;code&gt;‘perl = FALSE’&lt;/code&gt; (the default), 
* Perl-like regular expressions used by &lt;code&gt;‘perl = TRUE’&lt;/code&gt;.  
There is a also an option called &lt;code&gt;‘fixed = TRUE’&lt;/code&gt; which can be considered as a literal regular expression. &lt;code&gt;fixed()&lt;/code&gt; ('''stringr''') is equivalent to &lt;code&gt;fixed=TRUE&lt;/code&gt; in the standard regex functions.
These functions are by default case sensitive. This can be changed by specifying the option &lt;code&gt;ignore.case = TRUE&lt;/code&gt;.

If you are not a specialist in regular expression you my find the &lt;code&gt;glob2rx()&lt;/code&gt; useful. This function suggests some regular expression for a specific pattern :
&lt;source lang = &quot;rsplus&quot;&gt;
&gt; glob2rx(&quot;abc.*&quot;)
[1] &quot;^abc\\.&quot;
&lt;/source&gt;

=== Functions which use regular expressions in R ===

* &lt;code&gt;sub()&lt;/code&gt;, &lt;code&gt;gsub()&lt;/code&gt;, &lt;code&gt;str_replace()&lt;/code&gt; ('''stringr''') make some substitutions in a string.
* &lt;code&gt;grep()&lt;/code&gt;, &lt;code&gt;str_extract()&lt;/code&gt; ('''stringr''') extract some value
* &lt;code&gt;grepl()&lt;/code&gt;, &lt;code&gt;str_detect()&lt;/code&gt; ('''stringr''') detect the presence of a pattern.
* see also &lt;code&gt;splitByPattern()&lt;/code&gt; ('''R.utils''')
* See also &lt;code&gt;gsubfn()&lt;/code&gt; in the '''gsubfn''' package.

=== Extended regular expressions (The default) ===

* &lt;code&gt;&quot;.&quot;&lt;/code&gt; stands for any character.
* &lt;code&gt;&quot;[ABC]&quot;&lt;/code&gt; means A,B or C.
* &lt;code&gt;&quot;[A-Z]&quot;&lt;/code&gt; means any upper letter between A and Z. 
* &lt;code&gt;&quot;[0-9]&quot;&lt;/code&gt; means any digit between 0 and 9.

Here is the list of metacharacters  &lt;code&gt;‘$ * + . ? [ ] ^ { } | ( ) \’&lt;/code&gt;. If you need to use one of those characters, precede them with a doubled backslash.

Here are some classes of regular expressions : 
For numbers : 
* &lt;code&gt;&lt;nowiki&gt;‘[:digit:]’&lt;/nowiki&gt;&lt;/code&gt; Digits: &lt;code&gt;‘0 1 2 3 4 5 6 7 8 9’&lt;/code&gt;.
For letters : 
* &lt;code&gt;&lt;nowiki&gt;‘[:alpha:]’&lt;/nowiki&gt;&lt;/code&gt; Alphabetic characters: &lt;code&gt;‘[:lower:]’&lt;/code&gt; and &lt;code&gt;‘[:upper:]’&lt;/code&gt;.
* &lt;code&gt;&lt;nowiki&gt;‘[:upper:]’&lt;/nowiki&gt;&lt;/code&gt; Upper-case letters.
* &lt;code&gt;&lt;nowiki&gt;‘[:lower:]’&lt;/nowiki&gt;&lt;/code&gt; Lower-case letters.
Note that the set of alphabetic characters includes accents such as &lt;code&gt;é è ê&lt;/code&gt; which are very common is some languages like French. Therefore, it is more general than &lt;code&gt;&quot;[A-Za-z]&quot;&lt;/code&gt; which does not include letters with accent.

For other characters : 
* &lt;code&gt;&lt;nowiki&gt;‘[:punct:]’&lt;/nowiki&gt;&lt;/code&gt; Punctuation characters: &lt;code&gt;‘! &quot; # $ % &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \ ] ^ _ ` { | } ~’&lt;/code&gt;.
* &lt;code&gt;&lt;nowiki&gt;‘[:space:]’&lt;/nowiki&gt;&lt;/code&gt; Space characters: tab, newline, vertical tab, form feed, carriage return, and space.
* &lt;code&gt;&lt;nowiki&gt;‘[:blank:]’&lt;/nowiki&gt;&lt;/code&gt; Blank characters: space and tab. 
* &lt;code&gt;&lt;nowiki&gt;‘[:cntrl:]’&lt;/nowiki&gt;&lt;/code&gt; Control characters.  
For combination of other classes : 
* &lt;code&gt;&lt;nowiki&gt;[:alnum:]&lt;/nowiki&gt;&lt;/code&gt; Alphanumeric characters: &lt;code&gt;‘[:alpha:]’&lt;/code&gt; and &lt;code&gt;‘[:digit:]’&lt;/code&gt;.
* &lt;code&gt;&lt;nowiki&gt;‘[:graph:]’&lt;/nowiki&gt;&lt;/code&gt; Graphical characters: &lt;code&gt;‘[:alnum:]’&lt;/code&gt; and &lt;code&gt;‘[:punct:]’&lt;/code&gt;.
* &lt;code&gt;&lt;nowiki&gt;‘[:print:]’&lt;/nowiki&gt;&lt;/code&gt; Printable characters: &lt;code&gt;‘[:alnum:]’&lt;/code&gt;, &lt;code&gt;‘[:punct:]’&lt;/code&gt; and space.
* &lt;code&gt;&lt;nowiki&gt;‘[:xdigit:]’&lt;/nowiki&gt;&lt;/code&gt; Hexadecimal digits: &lt;code&gt;‘0 1 2 3 4 5 6 7 8 9 A B C D E F a b c d e f’&lt;/code&gt;.

You can quantify the number of repetition by adding after the regular expression the following characters : 
* &lt;code&gt;‘?’&lt;/code&gt; The preceding item is optional and will be matched at most once.
* &lt;code&gt;‘*’&lt;/code&gt; The preceding item will be matched zero or more times.
* &lt;code&gt;‘+’&lt;/code&gt; The preceding item will be matched one or more times.
* &lt;code&gt;‘{n}’&lt;/code&gt; The preceding item is matched exactly ‘n’ times.
* &lt;code&gt;‘{n,}’&lt;/code&gt; The preceding item is matched ‘n’ or more times.
* &lt;code&gt;‘{n,m}’&lt;/code&gt; The preceding item is matched at least ‘n’ times, but not more than ‘m’ times.

* &lt;code&gt;^&lt;/code&gt; to force the regular expression to be at the beginning of the string
* &lt;code&gt;$&lt;/code&gt; to force the regular expression to be at the end of the string

If you want to know more, have a look at the 2 following help files : 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt;?regexp # gives some general explanations
&gt;?grep # help file for grep(),regexpr(),sub(),gsub(),etc
&lt;/source&gt;

=== Perl-like regular expressions ===
{{...}}
It is also possible to use &quot;perl-like&quot; regular expressions. You just need to use the option &lt;code&gt;perl=TRUE&lt;/code&gt;. 
 
==== Examples ====
If you want to remove space characters in a string, you can use the &lt;code&gt;\\s&lt;/code&gt; Perl macro.
&lt;source lang = &quot;rsplus&quot;&gt;
sub('\\s', '',x, perl = TRUE)
&lt;/source&gt;

==== See also ====
* [[Perl Programming/Regular Expressions]]

== Concatenating strings ==

* &lt;code&gt;paste()&lt;/code&gt; concatenates strings. 
* &lt;code&gt;str_c()&lt;/code&gt; ('''stringr''') does a similar job.
* &lt;code&gt;cat()&lt;/code&gt; prints and concatenates strings. 

=== Examples ===

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; paste(&quot;toto&quot;,&quot;tata&quot;,sep=' ')
[1] &quot;toto tata&quot;
&gt; paste(&quot;toto&quot;,&quot;tata&quot;,sep=&quot;,&quot;)
[1] &quot;toto,tata&quot;
&gt; str_c(&quot;toto&quot;,&quot;tata&quot;,sep=&quot;,&quot;)
[1] &quot;toto,tata&quot;
&gt; x &lt;- c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;)
&gt; paste(x,collapse=&quot; &quot;)
[1] &quot;a b c&quot;
&gt; str_c(x, collapse = &quot; &quot;)
[1] &quot;a b c&quot;
&gt; cat(c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;), sep = &quot;+&quot;)
a+b+c
&lt;/source&gt;

== Splitting a string ==

* &lt;code&gt;strsplit()&lt;/code&gt; :  Split the elements of a character vector ‘x’ into substrings according to the matches to substring ‘split’ within them. 
* See also &lt;code&gt;str_split()&lt;/code&gt; ('''stringr''').

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; unlist(strsplit(&quot;a.b.c&quot;, &quot;\\.&quot;))
[1] &quot;a&quot; &quot;b&quot; &quot;c&quot;
&lt;/source&gt;

* &lt;code&gt;tokenize()&lt;/code&gt; ('''tau''') split a string into tokens. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; tokenize(&quot;abc defghk&quot;)
[1] &quot;abc&quot;    &quot; &quot;      &quot;defghk&quot;
&lt;/source&gt;

== Counting the number of characters in a string ==
* &lt;code&gt;nchar()&lt;/code&gt; gives the length of a string. 
* See also &lt;code&gt;str_length()&lt;/code&gt; ('''stringr''').

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; nchar(&quot;abcdef&quot;)
[1] 6
&gt; str_length(&quot;abcdef&quot;)
[1] 6
&gt; nchar(NA)
[1] 2
&gt; str_length(NA)
[1] NA
&lt;/source&gt;

== Detecting the presence of a substring ==
=== Detecting a pattern in a string ? ===
* &lt;code&gt;grepl()&lt;/code&gt; returns a logical expression (TRUE or FALSE). 
* &lt;code&gt;str_detect()&lt;/code&gt; ('''stringr''') does a similar job.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; string &lt;- &quot;23 mai 2000&quot;
&gt; string2 &lt;- &quot;1 mai 2000&quot;
&gt; regexp &lt;- &quot;([[:digit:]]{2}) ([[:alpha:]]+) ([[:digit:]]{4})&quot;
&gt; grepl(pattern = regexp, x = string)
[1] TRUE
&gt; str_detect(string, regexp)
[1] TRUE
&gt; grepl(pattern = regexp, x = string2)
[1] FALSE
&lt;/source&gt;
The 1st one is true and the second one is false since there is only one digit in the first number.

=== Counting the occurrence of each pattern in a string ? ===
* &lt;code&gt;textcnt()&lt;/code&gt; ('''tau''') counts the occurrence of each pattern or each term in a text. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; string &lt;- &quot;blabla 23 mai 2000 blabla 18 mai 2004&quot;
&gt; textcnt(string,n=1L,method=&quot;string&quot;)
blabla    mai 
     2      2 
attr(,&quot;class&quot;)
[1] &quot;textcnt&quot;
&lt;/source&gt;

== Extracting the position of a substring or a pattern in a string ==
=== Extracting the position of a substring ? ===
* &lt;code&gt;cpos()&lt;/code&gt; ('''cwhmisc''') returns the position of a substring in a string. 
* &lt;code&gt;substring.location()&lt;/code&gt; ('''cwhmisc''') does the same job but returns the first and the last position.
&lt;source lang=&quot;rsplus&quot;&gt; 
&gt; cpos(&quot;abcdefghijklmnopqrstuvwxyz&quot;,&quot;p&quot;,start=1)
[1] 16
&gt; substring.location(&quot;abcdefghijklmnopqrstuvwxyz&quot;,&quot;def&quot;)
$first
[1] 4

$last
[1] 6
&lt;/source&gt;

=== Extracting the position of a pattern in a string ? ===
* &lt;code&gt;regexpr()&lt;/code&gt; returns the position of the regular expression. &lt;code&gt;str_locate()&lt;/code&gt; ('''stringr''') does the same job. &lt;code&gt;gregexpr()&lt;/code&gt; is similar to &lt;code&gt;regexpr()&lt;/code&gt; but the starting position of every match is returned. &lt;code&gt;str_locate_all()&lt;/code&gt; ('''stringr''') does the same job.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; regexp &lt;- &quot;([[:digit:]]{2}) ([[:alpha:]]+) ([[:digit:]]{4})&quot;
&gt; string &lt;- &quot;blabla 23 mai 2000 blabla 18 mai 2004&quot;
&gt; regexpr(pattern = regexp, text = string)
[1] 8
attr(,&quot;match.length&quot;)
[1] 11
&gt; gregexpr(pattern = regexp, text = string)
[[1]]
[1]  8 27
attr(,&quot;match.length&quot;)
[1] 11 11
&gt; str_locate(string,regexp)
     start end
[1,]     8  18
&gt; str_locate_all(string,regexp)
[[1]]
     start end
[1,]     8  18
[2,]    27  37
&lt;/source&gt;

== Extracting a substring from a string ==
=== Extracting a fixed width substring ? ===
* &lt;code&gt;substr()&lt;/code&gt; takes a sub string. 
* &lt;code&gt;str_sub()&lt;/code&gt; ('''stringr''') is similar.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; substr(&quot;simple text&quot;,1,3)
[1] &quot;sim&quot;
&gt; str_sub(&quot;simple text&quot;,1,3)
[1] &quot;sim&quot;
&lt;/source&gt;

=== Extracting the first word in a string ? ===
* &lt;code&gt;first.word()&lt;/code&gt; First Word in a String or Expression in the '''Hmisc''' package

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; first.word(&quot;abc def ghk&quot;)
[1] &quot;abc&quot;
&lt;/source&gt;

=== Extracting a pattern in a string ? ===
* &lt;code&gt;grep()&lt;/code&gt; returns the value or the position of the regular expression if &lt;code&gt;value=T&lt;/code&gt; and its position if &lt;code&gt;value=F&lt;/code&gt;.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; grep(pattern = regexp, x = string , value = T) 
[1] &quot;23 mai 2000&quot;
&gt; grep(pattern = regexp, x = string2 , value = T) 
character(0)
&gt; grep(pattern = regexp, x = string , value = F) 
[1] 1
&gt; grep(pattern = regexp, x = string2 , value = F) 
integer(0)
&lt;/source&gt;

* &lt;code&gt;str_extract()&lt;/code&gt;, &lt;code&gt;str_extract_all()&lt;/code&gt;, &lt;code&gt;str_match()&lt;/code&gt;, &lt;code&gt;str_match_all()&lt;/code&gt; ('''stringr''') and &lt;code&gt;m()&lt;/code&gt; ('''caroline''' package) are similar to &lt;code&gt;grep()&lt;/code&gt;. &lt;code&gt;str_extract()&lt;/code&gt; and &lt;code&gt;str_extract_all()&lt;/code&gt; return a vector. &lt;code&gt;str_match()&lt;/code&gt; and &lt;code&gt;str_match_all()&lt;/code&gt; return a matrix and &lt;code&gt;m()&lt;/code&gt; a dataframe.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;stringr&quot;)
&gt; regexp &lt;- &quot;([[:digit:]]{2}) ([[:alpha:]]+) ([[:digit:]]{4})&quot;
&gt; string &lt;- &quot;blabla 23 mai 2000 blabla 18 mai 2004&quot;
&gt; str_extract(string,regexp)
[1] &quot;23 mai 2000&quot;
&gt; str_extract_all(string,regexp)
[[1]]
[1] &quot;23 mai 2000&quot; &quot;18 mai 2004&quot;

&gt; str_match(string,regexp)
     [,1]          [,2] [,3]  [,4]  
[1,] &quot;23 mai 2000&quot; &quot;23&quot; &quot;mai&quot; &quot;2000&quot;
&gt; str_match_all(string,regexp)
[[1]]
     [,1]          [,2] [,3]  [,4]  
[1,] &quot;23 mai 2000&quot; &quot;23&quot; &quot;mai&quot; &quot;2000&quot;
[2,] &quot;18 mai 2004&quot; &quot;18&quot; &quot;mai&quot; &quot;2004&quot;
&gt; library(&quot;caroline&quot;)
&gt; m(pattern = regexp, vect = string, names = c(&quot;day&quot;,&quot;month&quot;,&quot;year&quot;), types = rep(&quot;character&quot;,3))
  day month year
1  18   mai 2004
&lt;/source&gt;

== Making some substitution inside a string ==
=== Substituting a pattern in a string ===
* &lt;code&gt;sub()&lt;/code&gt; makes a substitution.
* &lt;code&gt;gsub()&lt;/code&gt; is similar to &lt;code&gt;sub()&lt;/code&gt; but replace all occurrences of the pattern whereas &lt;code&gt;sub()&lt;/code&gt; only replaces the first occurrence. 
* &lt;code&gt;str_replace()&lt;/code&gt; ('''stringr''') is similar.

In the following example, we have a French date. The regular pattern is the following : 2 digits, a blank, some letters, a blank, 4 digits. We capture the 2 digits with the &lt;code&gt;&lt;nowiki&gt;[[:digit:]]{2}&lt;/nowiki&gt;&lt;/code&gt; expression, the letters with &lt;code&gt;&lt;nowiki&gt;[[:alpha:]]+&lt;/nowiki&gt;&lt;/code&gt; and the 4 digits with &lt;code&gt;&lt;nowiki&gt;[[:digit:]]{4}&lt;/nowiki&gt;&lt;/code&gt;. Each of these three substrings is surrounded with parenthesis. The first substring is stored in &lt;code&gt;&quot;\\1&quot;&lt;/code&gt;, the second one in &lt;code&gt;&quot;\\2&quot;&lt;/code&gt; and the 3rd one in &lt;code&gt;&quot;\\3&quot;&lt;/code&gt;.
&lt;source lang=&quot;rsplus&quot;&gt;
string &lt;- &quot;23 mai 2000&quot;
regexp &lt;- &quot;([[:digit:]]{2}) ([[:alpha:]]+) ([[:digit:]]{4})&quot;
sub(pattern = regexp, replacement = &quot;\\1&quot;, x = string) # returns the first part of the regular expression
sub(pattern = regexp, replacement = &quot;\\2&quot;, x = string) # returns the second part
sub(pattern = regexp, replacement = &quot;\\3&quot;, x = string) # returns the third part
&lt;/source&gt;

In the following example, we compare the outcome of &lt;code&gt;sub()&lt;/code&gt; and &lt;code&gt;gsub()&lt;/code&gt;. The first one removes the first space whereas the second one removes all spaces in the text.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; text &lt;- &quot;abc def ghk&quot;
&gt; sub(pattern = &quot; &quot;, replacement = &quot;&quot;,  x = text)
[1] &quot;abcdef ghk&quot;
&gt; gsub(pattern = &quot; &quot;, replacement = &quot;&quot;,  x = text)
[1] &quot;abcdefghk&quot;
&lt;/source&gt;

=== Substituting characters in a string ? ===
* &lt;code&gt;chartr()&lt;/code&gt; substitutes characters in an expression. It stands for &quot;character translation&quot;. 
* &lt;code&gt;replacechar()&lt;/code&gt; ('''cwhmisc''') does the same job ...
* as well as &lt;code&gt;str_replace_all()&lt;/code&gt; ('''stringr''').

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; chartr(old=&quot;a&quot;,new=&quot;o&quot;,x=&quot;baba&quot;)
[1] &quot;bobo&quot;
&gt; chartr(old=&quot;ab&quot;,new=&quot;ot&quot;,x=&quot;baba&quot;)
[1] &quot;toto&quot;
&gt; replacechar(&quot;abc.def.ghi.jkl&quot;,&quot;.&quot;,&quot;_&quot;)
[1] &quot;abc_def_ghi_jkl&quot;
&gt; str_replace_all(&quot;abc.def.ghi.jkl&quot;,&quot;\\.&quot;,&quot;_&quot;)
[1] &quot;abc_def_ghi_jkl&quot;
&lt;/source&gt;

== Converting letters to lower or upper-case ==
* &lt;code&gt;tolower()&lt;/code&gt; converts upper-case characters to lower-case. 
* &lt;code&gt;toupper()&lt;/code&gt; converts lower-case characters to upper-case. 
* &lt;code&gt;capitalize()&lt;/code&gt; ('''Hmisc''') capitalize the first letter of a string 
* See also &lt;code&gt;cap()&lt;/code&gt;, &lt;code&gt;capitalize()&lt;/code&gt;, &lt;code&gt;lower()&lt;/code&gt;, &lt;code&gt;lowerize()&lt;/code&gt; and &lt;code&gt;CapLeading()&lt;/code&gt; in the '''cwhmisc''' package.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; tolower(&quot;ABCdef&quot;)
[1] &quot;abcdef&quot;
&gt; toupper(&quot;ABCdef&quot;)
[1] &quot;ABCDEF&quot;
&gt; capitalize(&quot;abcdef&quot;)
[1] &quot;Abcdef&quot;
&lt;/source&gt;

== Filling a string with some character ==
* &lt;code&gt;padding()&lt;/code&gt; ('''cwhmisc''') fills a string with some characters to fit a given length. See also &lt;code&gt;str_pad()&lt;/code&gt; ('''stringr''').
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;cwhmisc&quot;)
&gt; padding(&quot;abc&quot;,10,&quot; &quot;,&quot;center&quot;) # adds blanks such that the length of the string is 10.
[1] &quot;   abc    &quot;
&gt; str_pad(&quot;abc&quot;,width=10,side=&quot;center&quot;, pad = &quot;+&quot;)
[1] &quot;+++abc++++&quot;
&gt; str_pad(c(&quot;1&quot;,&quot;11&quot;,&quot;111&quot;,&quot;1111&quot;),3,side=&quot;left&quot;,pad=&quot;0&quot;) 
[1] &quot;001&quot;  &quot;011&quot;  &quot;111&quot;  &quot;1111&quot;
&lt;/source&gt;

Note that &lt;code&gt;str_pad()&lt;/code&gt; is very slow. For instance for a vector of length 10,000, we have a very long computing time. &lt;code&gt;padding()&lt;/code&gt;does not seem to handle character vectors but the best solution may be to use the &lt;code&gt;sapply()&lt;/code&gt; and &lt;code&gt;padding()&lt;/code&gt; functions together. 

&lt;source lang = &quot;rsplus&quot;&gt;
&gt;library(&quot;stringr&quot;)
&gt;library(&quot;cwhmisc&quot;)
&gt;a &lt;- rep(1,10^4)
&gt; system.time(b &lt;- str_pad(a,3,side=&quot;left&quot;,pad=&quot;0&quot;))
utilisateur     système      écoulé 
     50.968       0.208      73.322 
&gt; system.time(c &lt;- sapply(a, padding, space = 3, with = &quot;0&quot;, to = &quot;left&quot;))
utilisateur     système      écoulé 
      7.700       0.020      12.206 
&lt;/source&gt;

== Removing leading and trailing spaces ==
* &lt;code&gt;trimws()&lt;/code&gt; ('''memisc''' package) trim leading and trailing white spaces. 
* &lt;code&gt;trim()&lt;/code&gt; ('''gdata''' package) does the same job. 
* See also &lt;code&gt;str_trim()&lt;/code&gt; ('''stringr''')

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;memisc&quot;)
&gt; trimws(&quot;  abc def   &quot;)
[1] &quot;abc def&quot; 
&gt; library(&quot;gdata&quot;)
&gt; trim(&quot; abc def &quot;)
[1] &quot;abc def&quot;
&gt; str_trim(&quot;  abd def  &quot;)
[1] &quot;abd def&quot;
&lt;/source&gt;

== Comparing two strings ==
=== Assessing if they are identical ===
* &lt;code&gt;==&lt;/code&gt; returns TRUE if both strings are the same and false otherwise. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; &quot;abc&quot;==&quot;abc&quot;
[1] TRUE
&gt; &quot;abc&quot;==&quot;abd&quot;
[1] FALSE
&lt;/source&gt;

=== Computing distance between strings ===
Few packages implement the the [[w:Levenshtein distance|Levenshtein distance]] between two strings:

* &lt;code&gt;adist()&lt;/code&gt; in base package '''utils'''
* &lt;code&gt;stringMatch()&lt;/code&gt; in '''MiscPsycho'''
* &lt;code&gt;stringdist()&lt;/code&gt; in '''stringdist'''
* &lt;code&gt;levenshteinDist()&lt;/code&gt; in '''RecordLinkage'''

A benchmark comparing the speed of &lt;code&gt;levenshteinDist()&lt;/code&gt; and &lt;code&gt;stringdist()&lt;/code&gt; is available here: [http://www.markvanderloo.eu/yaRb/2013/09/07/a-bit-of-benchmarking-with-string-distances/].

==== Example with utils ====

&lt;source lang = &quot;rsplus&quot;&gt;
&gt; adist(&quot;test&quot;,&quot;tester&quot;)
[1] 2
&lt;/source&gt;

==== Example with MiscPsycho ====
&lt;code&gt;stringMatch()&lt;/code&gt; ('''MiscPsycho''') computes  If &lt;code&gt;normalize=&quot;YES&quot;&lt;/code&gt; the levenshtein distance is divided by the maximum length of each string.
&lt;source lang = &quot;rsplus&quot;&gt;
&gt; library(&quot;MiscPsycho&quot;)
&gt; stringMatch(&quot;test&quot;,&quot;tester&quot;,normalize=&quot;NO&quot;,penalty=1,case.sensitive = TRUE)
[1] 2
&lt;/source&gt;

==== Approximate matching ====
&lt;code&gt;agrep()&lt;/code&gt; search for approximate matches using the [[w:Levenshtein distance|Levenshtein distance]].
* If 'value = TRUE', this returns the value of the string
* If 'value = FALSE' this returns the position of the string
* ''max'' returns the maximal levenshtein distance.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt;  agrep(pattern = &quot;laysy&quot;, x = c(&quot;1 lazy&quot;, &quot;1&quot;, &quot;1 LAZY&quot;), max = 2, value = TRUE)
[1] &quot;1 lazy&quot;
&gt;  agrep(&quot;laysy&quot;, c(&quot;1 lazy&quot;, &quot;1&quot;, &quot;1 LAZY&quot;), max = 3, value = TRUE)
[1] &quot;1 lazy&quot;
&lt;/source&gt;

== Miscellaneous ==
* &lt;code&gt;deparse()&lt;/code&gt; : Turn unevaluated expressions into character strings.
* &lt;code&gt;char.expand()&lt;/code&gt; ('''base''') expands a string with respect to a target.
* &lt;code&gt;pmatch()&lt;/code&gt; ('''base''') and &lt;code&gt;charmatch()&lt;/code&gt; ('''base''') seek matches for the elements of their first argument among those of their second.
&lt;source lang = &quot;rsplus&quot;&gt;
&gt; pmatch(c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;),table = c(&quot;b&quot;,&quot;c&quot;), nomatch = 0)
[1] 0 1 2 0
&lt;/source&gt;
* &lt;code&gt;make.unique()&lt;/code&gt; makes a character string unique. This is useful if you want to use a string as an identifier in your data.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; make.unique(c(&quot;a&quot;, &quot;a&quot;, &quot;a&quot;))
[1] &quot;a&quot;   &quot;a.1&quot; &quot;a.2&quot;
&lt;/source&gt;

== References ==
{{reflist|2}}</text>
      <sha1>3weosd76m3l4gcwcj8xffizi8yqymf6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Probability Function</title>
    <ns>0</ns>
    <id>200606</id>
    <revision>
      <id>2384718</id>
      <parentid>1623421</parentid>
      <timestamp>2012-07-27T21:35:10Z</timestamp>
      <contributor>
        <username>Ak5791</username>
        <id>697256</id>
      </contributor>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;

The list of probability functions is available by typing in the command editor : 
&lt;pre&gt;
h density functions
&lt;/pre&gt;

== Useful quantiles == 

&lt;pre&gt;

. di invnorm(.975)
1.959964

. di invchi2(1,.95)
3.8414588

&lt;/pre&gt;

== Standard distributions == 

=== Gaussian Distribution ===

&lt;pre&gt;
local q975 = invnormal(.975)
#delimit ; 
tw function  y = normalden(x) , range(-4 4) ||
	, xlabel( , grid)
	xline( -`q975' `q975')
	title(PDF Gaussian with 95 % CI)
	; 
#delimit cr
gr export W:/normal.png, replace
&lt;/pre&gt;

The Gaussian distribution with 90,95 and 99 % confidence intervals. 

&lt;pre&gt;
set scheme s2color
global ub10 = invnorm(.95)
global lb10 = invnorm(.05)
global ub5 = invnorm(.975)
global lb5 = invnorm(.025)
global ub1 = invnorm(.995)
global lb1 = invnorm(.005)
#delimit ;
tw  function y=normden(x), range(-4 $lb5) color(red) recast(area)
      ||  function y=normden(x), range($ub5 4)   color(red) recast(area)
      ||  function y=normden(x), range(-4 4) lstyle(foreground)
      ||,
       ysca(off) xsca(noline)
       legend(off)
        xlabel(-4 &quot;-4 sd&quot; -3 &quot;-3 sd&quot; -2 &quot;-2 sd&quot; -1 &quot;-1 sd&quot; 0 &quot;mean&quot;
                      1  &quot;1 sd&quot;  2  &quot;2 sd&quot;  3  &quot;3 sd&quot;  4  &quot;4 sd&quot;
                      , grid gmin gmax)
              xtitle(&quot;&quot;)
          ;
#delimit cr  
&lt;/pre&gt;

=== Student Distribution ===

&lt;pre&gt;
#delimit ; 
tw function  y = tden(1,x) , range(-4 4) ||
	function y = tden(2,x) , range(-4 4) ||
	function y = tden(5,x) , range(-4 4) ||
	function y = tden(10,x) , range(-4 4) ||
	function y = tden(30,x) , range(-4 4) ||
	function y = normalden(x) , range(-4 4) lw(thick) ||
	, xlabel( , grid)
	legend(cols(5) label(1 &quot;k=1&quot;) label(2 &quot;k=2&quot;) label(3 &quot;k=5&quot;) 
 label(4 &quot;k=10&quot;) label(5 &quot;k=30&quot;) label(6 &quot;Gaussienne&quot;))
	title(PDF Student Distribution)
	; 
#delimit cr
&lt;/pre&gt;
{{Stata/Navbar|Documentation|Random Number Generation}}</text>
      <sha1>gg80tjs09l3oizf0ag4ugusrryb8ajc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Embedded Control Systems Design/Hostile Environment</title>
    <ns>1</ns>
    <id>200607</id>
    <revision>
      <id>1547959</id>
      <parentid>1547958</parentid>
      <timestamp>2009-06-25T11:27:58Z</timestamp>
      <contributor>
        <username>Stef.lievens</username>
        <id>189810</id>
      </contributor>
      <minor />
      <comment>/* Future work */</comment>
      <text xml:space="preserve">=Future work=

A suggestion for future development on the wikibook:
Try to link the terms 'hostile environment' and 'robustness'. The latter being very hard to pin down on 1 definition (even experts don't use the same definitions for robustness on a system level).

Maybe this asks for a new section about robustness alone. Were the difference of robustness on a component level (easy definition) and robustness on a system level (hard, ?variable? definition) is explained...</text>
      <sha1>6w4a8swzeb5n1ne9d21m5tgax8u0qt6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Thermochap/Sandbox/Shrink Me</title>
    <ns>3</ns>
    <id>200608</id>
    <revision>
      <id>1578594</id>
      <parentid>1578553</parentid>
      <timestamp>2009-07-24T17:57:13Z</timestamp>
      <contributor>
        <username>Thermochap</username>
        <id>87911</id>
      </contributor>
      <comment>/* Automatically-generated worlds */</comment>
      <text xml:space="preserve">This is the talk page for shrink me.

== Please start new sections just below this line ==

== Automatically-generated worlds ==

Unfettered exploration of real worlds on multiple size-scales can be done with various types of microscopes, but unfettered exploration of virtual worlds on multiple size-scales might be inherently limited by a system's ability to remember that world's nanoscopic details.  One way around this problem is to find a way to generate interesting substructure automatically, so that the details of every atom position don't have to be memorized.  What are some ways that this might be done?  [[User:Thermochap|Thermochap]] ([[User talk:Thermochap|talk]]) 16:33, 24 July 2009 (UTC)

== See Also ==

== Footnotes ==

&lt;references/&gt;</text>
      <sha1>au4sw77605zbz40q1rhsdw3abmfgtx8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Chipotle Lime Grilled Chicken</title>
    <ns>102</ns>
    <id>200609</id>
    <revision>
      <id>2681208</id>
      <parentid>1703809</parentid>
      <timestamp>2014-07-14T16:35:29Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>/* Procedure */ added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 4 boneless skinless chicken breasts
* 1/2 cup extra-virgin olive oil
* 3 tbsp [[Cookbook:Smoky Chipotle Hot Sauce|Smoky Chipotle Hot Sauce]]
* 1/4 cup freshly squeezed lime juice
* 2 tbsp honey
* 1/2 cup [[Cookbook:Chipotle BBQ Rub|Chipotle BBQ Rub]]

== Procedure ==
#Combine all ingredients except for Rub in a gallon zip-top plastic freezer bag. Add chicken breasts and refrigerate for 45 minutes.
#Remove chicken from bag. Season each with Rub.
#Place on a preheated charcoal grill and cook, turning often, until internal temperature reaches 165°.
#Remove and let rest for 5 minutes and serve.

[[Category:Chicken recipes]]
[[Category:Chile recipes]]
[[Category:Lime recipes]]
[[Category:Grilled recipes]]
[[Category:Southwestern recipes]]
[[Category:Main course recipes]]</text>
      <sha1>q4ran3uwin8h1c9gcm6a2gkrkp21e2d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Chipotle Ketchup</title>
    <ns>102</ns>
    <id>200610</id>
    <revision>
      <id>2681207</id>
      <parentid>2306912</parentid>
      <timestamp>2014-07-14T16:31:30Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>/* Procedure */ added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 36 ounces tomato paste
* 3/4 cup cider vinegar
* 5 chipotles in adobo sauce, puréed
* 1 tbsp salt
* 2 tbsp onion powder
* 2 tbsp garlic powder
* 1/4 cup adobo sauce

== Procedure ==
#Combine all ingredients in a large saucepan and bring to a boil over high heat. Cook, stirring occasionally, for 1/2 hour.
#Refrigerate in a non-reactive container for up to 2 months.

[[Category:Chile recipes]]
[[Category:Tomato recipes]]
[[Category:Sauce recipes]]
[[Category:Boiled recipes]]</text>
      <sha1>l8wajn9loryon9rjbarb3g87ou7y9pi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Directing Technology/Purchase/Learn More About the Bidding Process</title>
    <ns>1</ns>
    <id>200611</id>
    <revision>
      <id>1548003</id>
      <timestamp>2009-06-25T12:57:40Z</timestamp>
      <contributor>
        <ip>208.101.140.94</ip>
      </contributor>
      <comment>Created page with 'John Franzen jpf207@lehigh.edu'</comment>
      <text xml:space="preserve">John Franzen
jpf207@lehigh.edu</text>
      <sha1>f74vhxcxzztqepifxh3czkqe0id0ope</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Mexican Habanero Hot Sauce</title>
    <ns>102</ns>
    <id>200613</id>
    <revision>
      <id>2687706</id>
      <parentid>1736265</parentid>
      <timestamp>2014-08-02T02:16:41Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1/2 cup tomato paste
* 10-15 habaneros, de-stemmed
* 1/4 cup malt vinegar
* Salt to taste
* 5 drops red food coloring

== Procedure ==
#Combine all ingredients in a food processor and pulse until smooth.
#Refrigerate in a non-reactive container for up to 2 months.

[[Category:Chile recipes]]
[[Category:Vinegar recipes]]
[[Category:Refrigerated recipes]]
[[Category:Sauce recipes]]</text>
      <sha1>n00b0wm1uj6e4n1coeptkf39npmsa0r</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Medical Physiology/Cellular Physiology/Cell structure and Function</title>
    <ns>1</ns>
    <id>200615</id>
    <revision>
      <id>1548049</id>
      <timestamp>2009-06-25T14:08:01Z</timestamp>
      <contributor>
        <ip>69.40.253.111</ip>
      </contributor>
      <comment>Created page with 'This chapter is pretty much finished and ready for proofing--~~~~'</comment>
      <text xml:space="preserve">This chapter is pretty much finished and ready for proofing--[[Special:Contributions/69.40.253.111|69.40.253.111]] ([[User talk:69.40.253.111|talk]]) 14:08, 25 June 2009 (UTC)</text>
      <sha1>eoagkb5lr3md4os8yvz0tabtby598nq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Boumphreyfr</title>
    <ns>2</ns>
    <id>200616</id>
    <revision>
      <id>1548052</id>
      <parentid>1548051</parentid>
      <timestamp>2009-06-25T14:10:55Z</timestamp>
      <contributor>
        <username>Boumphreyfr</username>
        <id>232282</id>
      </contributor>
      <text xml:space="preserve">Hi I'm Frank Boumphrey and I am interested in doing books on Medical Physiology and ''regional'' Anatomy--[[User:Boumphreyfr|Boumphreyfr]] ([[User talk:Boumphreyfr|talk]]) 14:10, 25 June 2009 (UTC)</text>
      <sha1>0o4k6hxm0z0il7q5i7g8v6k1hn8x5g3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Audinet sample.jpg</title>
    <ns>6</ns>
    <id>200617</id>
    <revision>
      <id>2360988</id>
      <parentid>1548089</parentid>
      <timestamp>2012-06-08T13:24:36Z</timestamp>
      <contributor>
        <username>Mabdul</username>
        <id>173174</id>
      </contributor>
      <comment>this is an excel screenshot --&gt; non free rationale</comment>
      <text xml:space="preserve">== Summary ==
{{Information |Description=A screenshot of Excel showing a sample PCProfile results for software audit|Source=self taken |Date=2009-06-25 |Author= multiple |Permission=see below}}

== Licensing ==
{{Microsoft screenshot}}
{{Fairuse rationale
|module      = Directing Technology/Maintain/Maintaining Technology
|copyrights  = Microsoft
|not free    = This is a screenshot of a proprietary software
|rationale   = There is no free equivalent for this screenshot
|source      = self taken
}}</text>
      <sha1>axm85qeulydzf9gpcbgeo45kj7l2na8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Lord Spring Onion/Collections/Intermediate Psychology</title>
    <ns>2</ns>
    <id>200618</id>
    <revision>
      <id>1548079</id>
      <timestamp>2009-06-25T14:47:13Z</timestamp>
      <contributor>
        <username>Lord Spring Onion</username>
        <id>176046</id>
      </contributor>
      <comment>Created page with '{{saved_book}}  == Intermediate Psychology == === The textbook for SQA Int 1 &amp; 2 Psychology === :[[Transwiki:Nonverbal communication]]  [[Category:Collections|Intermediate Psycho...'</comment>
      <text xml:space="preserve">{{saved_book}}

== Intermediate Psychology ==
=== The textbook for SQA Int 1 &amp; 2 Psychology ===
:[[Transwiki:Nonverbal communication]]

[[Category:Collections|Intermediate Psychology]]</text>
      <sha1>n8gt430d9zv0mc8fk0dv995bbn1nv0s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Could Sherlock Holmes Have Been a Good Geologist?</title>
    <ns>14</ns>
    <id>200623</id>
    <revision>
      <id>1548134</id>
      <timestamp>2009-06-25T16:30:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Geology]]</text>
      <sha1>clmwhlhawcf06akmq5rjq06q4st95xn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Telecommunications Theory</title>
    <ns>14</ns>
    <id>200624</id>
    <revision>
      <id>1548136</id>
      <timestamp>2009-06-25T16:31:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Telecommunication]]</text>
      <sha1>lzmrycd3s4gx8lyinsgod6gpgwlwkod</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Box templates</title>
    <ns>14</ns>
    <id>200625</id>
    <revision>
      <id>1548166</id>
      <timestamp>2009-06-25T17:12:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">This category contains templates for generic box or block-level elements.

[[Category:Templates]]</text>
      <sha1>f5ijf4gd1w3lu1j9l7e3fa5pqq4ncx7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Code templates</title>
    <ns>14</ns>
    <id>200627</id>
    <revision>
      <id>1549474</id>
      <parentid>1548202</parentid>
      <timestamp>2009-06-27T03:11:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">[[Category:Formatting templates]]</text>
      <sha1>kmlqpu5tsyiwl6fbhvgzpfdwq99ucbh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Introduction to Philosophy</title>
    <ns>14</ns>
    <id>200628</id>
    <revision>
      <id>1548237</id>
      <timestamp>2009-06-25T17:50:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Philosophy]]</text>
      <sha1>bfonuilfqb30graarro9utovszjvl27</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>SAS/Introduction</title>
    <ns>0</ns>
    <id>200629</id>
    <revision>
      <id>2239612</id>
      <parentid>2200773</parentid>
      <timestamp>2011-12-22T08:47:46Z</timestamp>
      <contributor>
        <username>Harshad.wiki</username>
        <id>514725</id>
      </contributor>
      <minor />
      <text xml:space="preserve">&lt;noinclude&gt;{{SAS/Navigation}}&lt;/noinclude&gt;

SAS is a database. As opposed to Relational Databases, SAS is used primarily for batch processing of massive amounts of data. It can be found [http://www.sas.com here]. SAS is the largest privately held software company in the world.

SAS is made up of a number of modules with specialized procedures for analysis relating to various disciplines.  The foundation of the software is the Base/SAS product.  If one is interested in producing Graphical output, it would be necessary to purchase a license to SAS/Graph.  Statistical tools are in SAS/Stat and Economic/time-series procedures are in SAS/ETS.  There are other modules for Executive Information Systems (SAS/EIS), Operational Research (SAS/OR) and many more that could be mentioned.

SAS is fundamentally the premier data analysis software on the market today.  It utilizes a specialized data set table proprietary to SAS, however the SAS System has modules to be able to read and write to many other data base products like Oracle and ODBC compliant products like MS-SQL Server or PROGRESS.

SAS is generally utilized by government organizations and large businesses.  It is also found being used by many colleges and universities.  The greatest use for research is hard to identify, but there has been a great focus of users in the pharmacological research field.  It is also used for analysis and reporting of data in social science fields and engineering companies like electric utilities.

SAS licenses tend to be expensive and complicated, based on the number of users and the number of processors in the host computer.  It runs on server environments and is licencable for workstation users on PCs or other common machines.  It does not run on Macintosh machines, but a special product called JMP, and marketed by SAS Institute is available.  It analyses market data or survey data and notable for it's ability to visualize 'data cloud' arrays.

Dr. Jim Goodnight and a few other individuals were the founders of the product and Mr. Goodnight is CEO of SAS Institute.  The SAS Institute is located in Cary, North Carolina.

Television (60 minutes or 20/20 ) featured SAS in one of their programs.</text>
      <sha1>ooevv7ktixuhz20utu24y8m3382qbse</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:ROOTBOOKNAME</title>
    <ns>10</ns>
    <id>200630</id>
    <revision>
      <id>2005106</id>
      <parentid>2005061</parentid>
      <timestamp>2010-12-17T01:44:43Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>let's try this version after all</comment>
      <text xml:space="preserve">&lt;includeonly&gt;{{#switch:{{ARTICLESPACE:{{{1|{{FULLPAGENAME}}}}}}}|Template=|Category=|User=|=|{{ARTICLESPACE:{{{1|{{FULLPAGENAME}}}}}}}:}}{{BOOKNAME|{{{1|{{FULLPAGENAME}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>q8uoroh26vwids268eyjjweb9hdpw8a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Beygian</title>
    <ns>2</ns>
    <id>200631</id>
    <revision>
      <id>1548258</id>
      <timestamp>2009-06-25T18:12:58Z</timestamp>
      <contributor>
        <username>Beygian</username>
        <id>247068</id>
      </contributor>
      <comment>Created page with 'I am Sadegh Beygian very intrested in science and try to be PROFFESIONAL'</comment>
      <text xml:space="preserve">I am Sadegh Beygian
very intrested in science and try to be PROFFESIONAL</text>
      <sha1>eta4nqf4megj7uws524sezht8ylmwcd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>SAS/Method of Moment</title>
    <ns>0</ns>
    <id>200632</id>
    <revision>
      <id>1548271</id>
      <timestamp>2009-06-25T18:37:58Z</timestamp>
      <contributor>
        <username>PAC</username>
        <id>244523</id>
      </contributor>
      <comment>Created page with '&lt;noinclude&gt;{{SAS/Navigation}}&lt;/noinclude&gt;  * PROC MODEL'</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{SAS/Navigation}}&lt;/noinclude&gt;

* PROC MODEL</text>
      <sha1>9quywaoxw1jscyjz2okh41v5bnq3s9f</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Crawfish Boil</title>
    <ns>102</ns>
    <id>200633</id>
    <revision>
      <id>2681557</id>
      <parentid>1785548</parentid>
      <timestamp>2014-07-15T20:17:15Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <comment>Added appropriate cats. Adjusted text slightly.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 pound (450 g) purged live craw/crayfish
* 1/2 gallon (2 liters) water

'''Boil Seasoning'''
* 2 tbsp cayenne pepper
* 2 tbsp dried dill weed
* 2 tbsp each garlic and onion powder
* 3 tbsp salt
* 2 tbsp paprika
* 2 tbsp black pepper
* 2 tsp cinnamon
* Lemon zest

== Procedure ==
#Bring water to a boil in a stockpot or your tallest pot. Add Seasoning ingredients and stir.
#Add crawfish, making sure to leave any dead ones behind. Cook for 7 minutes.
#Turn off the heat and leave on the burner for 8 minutes.
#Drain through a colander and serve.

Note:  This recipe is for a fairly small amount. 

[[Category:Seafood recipes]]
[[Category:Boiled recipes]]
[[Category:Main course recipes]]
[[Category:Louisiana recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>quxmvab70eznyusy5f2vco79cwwrhdf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>SAS/Documentation</title>
    <ns>0</ns>
    <id>200634</id>
    <revision>
      <id>2575983</id>
      <parentid>1927729</parentid>
      <timestamp>2013-10-30T09:06:34Z</timestamp>
      <contributor>
        <username>Rotlink</username>
        <id>761486</id>
      </contributor>
      <minor />
      <comment>fixing dead links</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{SAS/Navigation}}&lt;/noinclude&gt;


* [http://support.sas.com/onlinedoc/913/docMainpage.jsp SAS online documentation]
** [http://support.sas.com/onlinedoc/913/getDoc/fr/allprods.hlp/a003135046.htm List and help of all SAS procedures]
** [http://support.sas.com/sassamples/graphgallery/ The Graph Gallery]
* [http://www.ats.ucla.edu/stat/sas/ UCLA Stat computing SAS]
* Google Code Search
* [http://archive.is/20121225205015/dataninja.wordpress.com/2005/12/23/introduction-to-sas/ A Brief Introduction to SAS] (10 pages)
* [http://stackoverflow.com/questions/tagged/sas StackOverflow]
* '''(fr)''' [http://olivier.godechot.free.fr/hoprubrique.php?id_rub=27 Olivier Godechot's macros] (mainly for textmining)
* [http://www.sascommunity.org/wiki/Main_Page SAS Community wiki]</text>
      <sha1>4k5v9xukyfiqucshfem4fkggoebg8bl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Nmaniac42/Collections/Japanese Phrase Book</title>
    <ns>2</ns>
    <id>200635</id>
    <revision>
      <id>1548279</id>
      <timestamp>2009-06-25T18:49:49Z</timestamp>
      <contributor>
        <username>Nmaniac42</username>
        <id>188979</id>
      </contributor>
      <comment>Created page with '{{saved_book}}  == Japanese Phrase Book == :[[Japanese Phrasebook/Greetings and farewell]] :[[Japanese Phrasebook/Common phrases]] :[[Japanese Phrasebook/At the hotel]] :[[Japane...'</comment>
      <text xml:space="preserve">{{saved_book}}

== Japanese Phrase Book ==
:[[Japanese Phrasebook/Greetings and farewell]]
:[[Japanese Phrasebook/Common phrases]]
:[[Japanese Phrasebook/At the hotel]]
:[[Japanese Phrasebook/At the bank]]
:[[Japanese Phrasebook/Ticketing]]
:[[Japanese Phrasebook/Asking for directions and time]]

[[Category:Collections|Japanese Phrase Book]]</text>
      <sha1>5fnjpc0samu7k6ubybnr597sdj4ixss</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Fish Sticks</title>
    <ns>102</ns>
    <id>200636</id>
    <revision>
      <id>2682297</id>
      <parentid>1720687</parentid>
      <timestamp>2014-07-18T00:46:20Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 pound cod, haddock, or tilapia fillets, cut in half
* Cornmeal as needed
* Freshly squeezed lemon juice, as needed
* 1 tbsp salt
* 1 tbsp black pepper
* 1 tbsp cayenne pepper
* 2 tbsp smoked paprika
* Oil for deep frying

== Procedure ==
#Combine all dry seasonings. Set aside.
#Dip fish in lemon juice then season with seasoning mixture then dredge in cornmeal.
#Heat oil to 375°. Fry fish in batches for 3 minutes. Drain on a cooling rack.
#Cut into one strip. If inside is underdone, finish in a 350° oven, '''''not''''' in the oil. Serve.

[[Category:Fish recipes]]
[[Category:Deep fried recipes]]
[[Category:Main course recipes]]</text>
      <sha1>5jsyobql3ydhd2xkfgdam1enwo8yupw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Software Engineers Handbook/Language Dictionary/PLI/procedures</title>
    <ns>0</ns>
    <id>200637</id>
    <revision>
      <id>2393558</id>
      <parentid>1573719</parentid>
      <timestamp>2012-08-15T08:23:11Z</timestamp>
      <contributor>
        <ip>15.203.233.84</ip>
      </contributor>
      <comment>/* External Procedures */</comment>
      <text xml:space="preserve">'''Note:''' This article requires basic knowledge of PL/I which can be found in [[Software Engineers Handbook/Language Dictionary/PLI]].

=== Procedures ===

==== Procedures as Subroutines ====

A PL/I programm may contain user defined subroutines:
* The definition of a (internal) subroutine starts with
** The name of the subroutine followed by ':'
** The keyword PROCEDURE (abbreviation: PROC)
** Optionally a parameter-descriptor list in brackets
* The subroutine will be invoked by CALL statements
* The subroutine may be left by optionally return statements
 '''example: proc options ( main );'''
    call proc_1 ( 0 );   /* output: 'zero'                */
    call proc_1 ( 7 );   /* output: 'the number is     7' */
 '''proc_1: proc ( parm );'''
 dcl   parm   bin fixed (15);
    if parm = 0 then
       do;
          put skip list ( 'zero' );
          return;
       end;
    put skip list ( 'the number is' || parm );
 '''end proc_1;'''
 '''end example;'''

==== Procedures as Functions ====

A PL/I programm may contain user defined functions:
* The definition of a (internal) function starts with
** The name of the function followed by ':'
** The keyword PROCEDURE (abbreviation: PROC)
** Optionally a parameter-descriptor list in brackets
** The keyword RETURNS followed by the type of the return value in brackets
* The result of the function may be used in expressions
* The subroutine must have at least one return statements which returns the result
 '''example: proc options ( main );'''
 dcl   number   bin fixed (31);
    put skip list ( hundred ( 0 ) ) ;   /* output:          0 */
    put skip list ( hundred ( 3 ) ) ;   /* output:        300 */
    number = hundred ( 5 ) + 55;
    put skip list ( number );           /* output:        555 */
 '''hundred: proc ( parm ) returns ( bin fixed (31) );'''
 dcl   parm   bin fixed (15);
    if parm = 0 then return ( 0 );
    return ( parm * 100 );
 '''end hundred;'''
 '''end example;'''

=== Changes of Parameter Variables ===

When a procedure is invoked with variables as parameter this parameters may be passed in one of the following ways:
* &quot;By reference&quot; (also known as &quot;by name&quot;) which means changes inside the procedure alters the original variable.
* &quot;By value&quot; (or &quot;as dummy&quot;) which means changes inside the procedure alters only a copy of the original variable.

In PL/I a variable which is
* of simple type, e.g. char, number, ...
* an array of simple type variables
* a structure of simple type variables &lt;sup&gt;[1]&lt;/sup&gt;
is passed by reference if and only if the variable matches exactly the argument definition inside the procedure.
 example: proc options ( main );
 dcl   bifi_15   bin fixed (15);
 dcl   bifi_31   bin fixed (31);
    bifi_15 = 15;
    call change ( bifi_15 );
    put skip list ( bifi_15 );   /* output: 99 */
    bifi_31 = 31;
    call change ( bifi_31 );
    put skip list ( bifi_31 );   /* output: 31 */
 change: proc ( parm_15 );
 dcl   parm_15   bin fixed (15);
    parm_15 = 99;
 end change;
 end example;

==== Asterisk Notation ====

* If the size attribute of the parameter definition is an asterisk every matching variable with any size is passed by reference.
* If the dimension of the parameter definition is an asterisk every matching variable with any dimension is passed by reference.
 example: proc options ( main );
 dcl   a_ch (2)   char (10);
 dcl   b_ch (5)   char (20);
 dcl   v_ch (5)   char (20) varying;
    a_ch (1) = 'BEFORE'
    call change ( a_ch );
    put skip list ( a_ch (1) );   /* output: 'AFTER     ' */
    b_ch (1) = 'BEFORE'
    call change ( b_ch );
    put skip list ( b_ch (1) );   /* output: 'AFTER               ' */
    v_ch (1) = 'BEFORE'
    call change ( v_ch );
    put skip list ( v_ch (1) );   /* output: 'BEFORE' because v_ch-strings are varying */
 change: proc ( ch_array );
 dcl   ch_array (*)   char (*);
    ch_array (1) = 'AFTER';
 end change;
 end example;

=== Locale Variables ===
==== Scope ====

The scope of PL/I variables is confined to procedures in which they are declared.
 outer: proc options ( main );
 dcl   a   char (07)   init ( 'outer A' );
 dcl   b   char (07)   init ( 'outer B' );
    call inner;
    put skip list ( a );
    put skip list ( b );
 inner: proc;
 dcl   b   char (07)   init ( 'inner B' );
 dcl   c   char (07)   init ( 'inner C' );
    put skip list ( b );
    put skip list ( c );
 end inner;
 end outer;
 &amp;nbsp;
 output:
    'inner B'
    'inner C'
    'outer A'
    'outer B'

 outer: proc options ( main );
    call hello;    /* output: 'hello from outer' */
    call inner;    /* output: 'hello from inner' */
 hello: proc;
    put skip list ( 'hello from outer' );
 end hello;
 inner: proc;
    call hello;
 hello: proc;
    put skip list ( 'hello from inner' );
 end hello;
 end inner;
 end outer;

==== Storage Class ====

There are two storage class locale variables may have.&lt;sup&gt;[2]&lt;/sup&gt;

'''Automatic''' storage:
* It's value is lost between successive invocations of the procedure
* If the variable has the INIT attribute initialisation is done every time the procedure is invoced
* The keyword AUTOMATIC may be abbreviated as AUTO
* Locale variables are automatic by default&lt;sup&gt;[3]&lt;/sup&gt;

'''Static''' storage:
* It's value is saved between successive invocations of the procedure
* If the variable has the INIT attribute initialisation is done only once when program starts

 example: proc options ( main );
    call static_memory ( 7 );
    call static_memory ( 0 );   /* output: 7 */
    call   auto_memory ( 7 );
    call   auto_memory ( 0 );   /* output: 1 */
 static_memory: proc ( parm );
 dcl   parm     bin fixed (15);
 dcl   memory   bin fixed (15)   init ( 1 )   '''STATIC''';
    if parm = 0 then
       put skip list ( memory );
    else
       memory = parm;
 end static_memory;
 auto_memory: proc ( parm );
 dcl   parm     bin fixed (15);
 dcl   memory   bin fixed (15)   init ( 1 );
    if parm = 0 then
       put skip list ( memory );
    else
       memory = parm;
 end auto_memory;
 end example;


=== Multiple Entries ===

Procedures may have more than one entry.

 example: proc options ( main );
 dcl   number   bin fixed (15);
    call value_set ( 3 );
    call value_get ( number );
    put skip list ( number );    /* output: 3 */
    call value_calc ( 2 , 1 );
    call value_write;            /* output: 7 */
 '''value_set: PROC ( parm_1 );'''
 dcl   parm_1   bin fixed (15);
 dcl   memory   bin fixed (15)   static;
    memory = parm_1;
    return;
 '''value_get: ENTRY ( parm_1 );'''
 /* do NOT declare parm_1 and memory once again ! */
    parm_1 = memory;
    return;
 '''value_calc: ENTRY ( parm_1 , parm_2 );'''
 dcl   parm_2   bin fixed (15);
    memory = memory * parm_1 + parm_2;
    return;
 '''value_write: ENTRY;'''
    put skip list ( memory );
 '''end value_set;'''
 end example;

=== Multiple Parm Lists ===

Using the attribute '''GENERIC''' procedures may have more than one parm list.
 '''Syntax:'''
    DCL   procname   GENERIC ( procname_1   WHEN ( parm_descriptor_1 ) ,
                               procname_2   WHEN ( parm_descriptor_2 )   );
 '''Meaning at compile time:'''
    WHENEVER   a call of procname is inside the source
       IF      the calling parameters are like parm_descriptor_1 THEN replace procname with procname_1
       ELSE IF the calling parameters are like parm_descriptor_2 THEN replace procname with procname_2
       ELSE    throw compile error

Parm descriptor may contain the attributes of the calling parameters:
 example: proc options ( main );
 dcl   twice   generic ( twice_C   when ( char  ) ,
                         twice_F   when ( fixed )   );
    put skip list ( twice ( 'hello' ) );   /* output: 'hello hello' */
    put skip list ( twice ( 1234321 ) );   /* output: 2468642       */
 twice_C: proc ( parm ) returns ( char (11) );
 dcl   parm   char (05);
    return ( parm || ' ' || parm );
 end twice_C;
 twice_F: proc ( parm ) returns ( bin fixed (31) );
 dcl   parm   bin fixed (31);
    return ( parm + parm );
 end twice_F;
 end example;

Parm descriptor may contain the number of the calling parameters:
 dcl   calc   generic ( calc_with_3_parameters   when ( * , * , * ) ,
                        calc_with_2_parameters   when (   ,   )     ,
                        calc_with_1_parameter    when ( * )           );
 calc_with_3_parameters: proc ( a , b , c );
 ...
 calc_with_2_parameters: proc ( a , b );
 ...
 calc_with_1_parameter:  proc ( a  );
 ...

Parm descriptor may contain the number of dimensions of the calling parameters:
 dcl   calc   generic ( calc_value    when ( ( * )         ) ,
                        calc_vector   when ( ( * , * )     ) ,
                        calc_matrix   when ( ( * , * , * ) )   );
 calc_value: proc ( v );
 dcl   v         char (12);   
 ...
 calc_vector: proc ( v ):
 dcl   v (5)     bit (1);
 ...
 calc_matrix: proc ( v ):
 dcl   v (5,8)   bin fixed (15);
 ...

=== Recursive Procedures ===

A procedure may be invoked recursivly if the RECURSIVE option is specified.
* Every invocation of the procedure has it's own value of the calling parameters
* Every invocation of the procedure has it's own value of local variables which are automatic
* All invocations of the procedure have a common value of local variables which are static
 example: proc options ( main );
 dcl   number   bin fixed (15);
    call test ( 1 );
 test: proc ( level ) '''RECURSIVE''';
 dcl   level   pic   '9';
 dcl   loc_a   pic  '99';
 dcl   loc_s   pic '999'   static;
 dcl   pre     char (09);
    loc_a = level *  11;
    loc_s = level * 111;
    pre = substr ( '         ' , 1 , 3 * level );
    put skip list ( pre || 'Level ' || level || ' started' );
    put skip list ( pre || 'loc_a =  ' || loc_a );
    put skip list ( pre || 'loc_s = '  || loc_s );
    if level &lt; 3 call test ( level + 1 );
    put skip list ( pre || 'loc_a =  ' || loc_a );
    put skip list ( pre || 'loc_s = '  || loc_s );
    put skip list ( pre || 'Level ' || level || ' ended' );
 end test;
 end example;
 &amp;nbsp;
 Output:
    Level 1 started
    loc_a =  11
    loc_s = 111
       Level 2 started
       loc_a =  22
       loc_s = 222
          Level 3 started
          loc_a =  33
          loc_s = 333
          loc_a =  33
          loc_s = 333
          Level 3 ended
       loc_a =  22
       loc_s = 333
       Level 2 ended
    loc_a =  11
    loc_s = 333
    Level 1 ended

=== Entry Variables and Parameters ===

Like other data procedures may be used as variables and parameters.

 example: proc options ( main );
 dcl   e_var   ENTRY;
    e_var = proc_1;
    call e_var;       /* output: 'proc 1' */
    e_var = proc_2;
    call e_var;       /* output: 'proc 2' */
 proc_1: proc;
    put skip list ( 'proc 1' );
 end proc_1;
 proc_2: proc;
    put skip list ( 'proc 2' );
 end proc_2;
 end example;

 example: proc options ( main );
    call list ( 'square' , square_proc );
    call list ( 'cube'   ,   cube_proc );
 list: proc ( title , calc );
 dcl   title   char (*);
 dcl   calc    entry ( bin fixed (15) ) returns ( bin fixed (15) );
 dcl   i       bin fixed (15);
    put skip list ( title || '-table:' );
    do i = 1 to 5;
       put skip list ( i || ':' || calc ( i ) );
    end;
 end list;
 square_proc: proc ( v ) returns ( bin fixed (15) );
 dcl   v   bin fixed (15);
    return ( v * v );
 end square_proc;
 cube_proc: proc ( v ) returns ( bin fixed (15) );
 dcl   v   bin fixed (15);
    return ( v * square_proc ( v ) );
 end cube_proc;
 end example;
 &amp;nbsp;
 Output:
    square-table:
         1:      1
         2:      4
         3:      9
         4:     16
         5:     25
    cube-table:
         1:      1
         2:      8
         3:     27
         4:     64
         5:    125

=== External Procedures ===

A procedure may be ''external'', i.e. the source may be contained in a separate file.&lt;br&gt;
This approach offers the possibility to use this procedure in more than one main program.&lt;br&gt;
Every program or procedure which uses an external procedure must declare this procedure.

 '''Source File of external procedure EXT1:'''
 ext1: proc;
    put skip list ( 'Hello from EXT-1' );
 end ext1;
 &amp;nbsp;
 '''Source File of external procedure EXT2:'''
 ext2: proc ( message );
 dcl   message   char (*);
 dcl   ext1      EXTERNAL ENTRY;   /* declaration of used external procedure */
    put skip list ( 'EXT-2:' );
    put skip list ( message );
    call ext1;
 end EXT2;
 &amp;nbsp;
 '''Source File of MAIN:'''
 example: proc options ( main );
 dcl   ext2      EXT ENTRY ( CHAR (*) );   /* keyword EXTERNAL may be abbreviated */
    call ext2 ( 'Called by Example' );
 end example;
 &amp;nbsp;
 '''Output running example'''
 EXT-2:
 Called by Example
 Hello from EXT-1

==== Static Linking ====

Making a program executable requires two steps:
# Compile the program and all the used external procedures in any order.
# Use the '''linkage editor''' to combine the compile objects to an executable program.

The executable program now contains the binary code of its procedures at linking time,&lt;br&gt;
i.e. if an external procedure is changed and recompiled after linking time this would not change the behaviour of the executable program.

==== Fetched Procedures ==== 

PL/I allows dynamic linking of external procedures,&lt;br&gt;
i.e. a main program may load the last compiled version of a procedure at run time.

The statement '''FETCH ABC''' loads the binary of procedure ABC from auxiliary storage into main storage (unless ABC already exists in main storage).

The statement '''RELEASE ABC''' frees main storage occupied by ABC&lt;sup&gt;[4]&lt;/sup&gt;.

 example: proc options ( main );
 dcl   abc         EXT ENTRY;
 dcl   dfg         EXT ENTRY;
 dcl ( b1 , b2 )   bit (1);
    .....
    if b1 then
       do;
          fetch   abc;
          call    abc;
          release abc;
       end;
    .....
    if b2 then
       do;
          fetch   abc, dfg;
          call    abc;
          call    dfg;
          release abc, dfg;
       end;
 end example;

==== &quot;Pseudo-Fetching&quot; ====

If in the example above both b1 and b2 are true ...
* abc will be released after the first call
* abc will be loaded again before the second call
... which is not very effective.

PL/I has the following properties:
* A procedure will be recognised as to_be_loaded_dynamicly iff the program somewhere contains a fetch or release statement, it is not necessary that this statement will be reached at any time.
* If a procedure recognised as to_be_loaded_dynamicly is invoked at runtime it will be fetched automatically if necessary.

Using this two properties the program above may be rewritten as:
 example: proc options ( main );
 dcl   abc         EXT ENTRY;
 dcl   dfg         EXT ENTRY;
 dcl ( b1 , b2 )   bit (1);
    if 1 &gt; 2 then          /* this will never be true */
       fetch   abc, dfg;   /* but abc and dfg will be MARKED AS TO_BE_LOADED_DYNAMICLY */
    .....
    if b1 then
       do;
       /* COMMENT: IF ABC IS NOT YET IN MAIN STORAGE THEN LOAD IT AUTOMATICALLY */
          call abc;
       end;
    .....
    if b2 then
       do;
       /* COMMENT: IF ABC IS NOT YET IN MAIN STORAGE THEN LOAD IT AUTOMATICALLY */
          call abc;
       /* COMMENT: IF DFG IS NOT YET IN MAIN STORAGE THEN LOAD IT AUTOMATICALLY */
          call dfg;
       end;
 end example;

=== Notes ===
* &lt;sup&gt;[1]&lt;/sup&gt; or an array of structures of simple type variables ...
* &lt;sup&gt;[2]&lt;/sup&gt; there are two more storage class (based and controlled for dynamically allocated storage) which will be explained in [[Software_Engineers_Handbook/Language_Dictionary/PLI/storage_classes|another wikibooks PL/I special]].
* &lt;sup&gt;[3]&lt;/sup&gt; in PL/I default values may be altered using the DEFAULT statement.
* &lt;sup&gt;[4]&lt;/sup&gt; the FREE statement for a fetched procedure will also free the local static variables of this procedure.

{{BookCat}}</text>
      <sha1>9ao8cx0rpdsysnecdkga55k5ljfunbc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Physics with Calculus</title>
    <ns>14</ns>
    <id>200638</id>
    <revision>
      <id>1548315</id>
      <timestamp>2009-06-25T19:25:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Physics]]</text>
      <sha1>9r9ehm8f0t08njgz8erzv7r1jtjzwmt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Technology Planning</title>
    <ns>14</ns>
    <id>200640</id>
    <revision>
      <id>1548323</id>
      <timestamp>2009-06-25T19:27:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Information technology]]</text>
      <sha1>ozk17ycgc64swah26h42wyhhd8j1uq9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>TeX/the</title>
    <ns>0</ns>
    <id>200641</id>
    <revision>
      <id>1548328</id>
      <parentid>1548324</parentid>
      <timestamp>2009-06-25T19:39:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">This command is used to get the value of a counter, eg. \the\exno

{{BookCat}}</text>
      <sha1>8dwq0g3b5juw17iri46n9qqddedn6gf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:72.27.7.131</title>
    <ns>3</ns>
    <id>200646</id>
    <revision>
      <id>1548413</id>
      <parentid>1548381</parentid>
      <timestamp>2009-06-25T20:06:40Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>/* Warning */ new section</comment>
      <text xml:space="preserve">==[[Adventist Youth Honors Answer Book/Nature/Seeds]]==
Hi,

Please don't reword the requirements of an honor, and please do not remove additional answers.  If a requirement asks for ten seeds, but the answers here provide more than that, it's OK.  We are trying to cover as many bases as possible.  If you have questions about this, please post them on [[Talk:Adventist Youth Honors Answer Book/Nature/Seeds|the honor's talk page]].  Thanks! --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 19:57, 25 June 2009 (UTC)

== Warning ==

You need to quit making edits to the honor requirements.  It almost looks as if you are trying to change the answers and questions in such a way to make them look like ''your'' answers so you can turn them in to your instructor.  If you keep doing this, you will be blocked from making further edits. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 20:06, 25 June 2009 (UTC)</text>
      <sha1>pj7wkou2oj40dxkwq96a3jimkblffjq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Deletion templates</title>
    <ns>14</ns>
    <id>200647</id>
    <revision>
      <id>1548507</id>
      <parentid>1548422</parentid>
      <timestamp>2009-06-25T22:03:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">[[Category:Maintenance templates]]</text>
      <sha1>lfh3lbxk3od6ygifvsr4lqfd057nk8i</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:217.219.214.129</title>
    <ns>3</ns>
    <id>200649</id>
    <revision>
      <id>1548444</id>
      <timestamp>2009-06-25T20:46:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/217.219.214.129|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 20:46, 25 June 2009 (UTC)}}</text>
      <sha1>7ctzz204bak310ofgx9fwir4ezjyup6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Namespace-specific templates</title>
    <ns>14</ns>
    <id>200650</id>
    <revision>
      <id>2586629</id>
      <parentid>1548445</parentid>
      <timestamp>2013-12-01T12:42:10Z</timestamp>
      <contributor>
        <username>دالبا</username>
        <id>393521</id>
      </contributor>
      <minor />
      <comment>[[fa:رده:الگوهای مختص به فضای نام]]</comment>
      <text xml:space="preserve">This category is for categories that list templates commonly used in only a specific namespace.

[[Category:Templates|{{PAGENAME}}]]
[[fa:رده:الگوهای مختص به فضای نام]]</text>
      <sha1>0t3ubos8f6vc4hbgdegzx0gpm05jqea</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Bartending/Templates</title>
    <ns>14</ns>
    <id>200651</id>
    <revision>
      <id>1548487</id>
      <timestamp>2009-06-25T21:36:01Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">This category contains templates used in the [[{{ROOTBOOKNAME}}]] book.

{{BookCat}}</text>
      <sha1>alj4u0ntthhue154f7vxdmhh30tyc4p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>National Forensic League</title>
    <ns>0</ns>
    <id>200653</id>
    <redirect title="Lincoln-Douglas Debate/National Forensic League" />
    <revision>
      <id>1548517</id>
      <timestamp>2009-06-25T22:08:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[National Forensic League]] to [[Lincoln-Douglas Debate/National Forensic League]]: Moving into book linking to it.</comment>
      <text xml:space="preserve">#REDIRECT [[Lincoln-Douglas Debate/National Forensic League]]</text>
      <sha1>brqr7vbjyvtzs264w2xs0nzny57ygtm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Lincoln-Douglas Debate</title>
    <ns>14</ns>
    <id>200654</id>
    <revision>
      <id>1548519</id>
      <timestamp>2009-06-25T22:09:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Verbal communication]]</text>
      <sha1>fbxud5xmmz2xr31ulewju34gqhbwh6e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Physics Textbook</title>
    <ns>14</ns>
    <id>200655</id>
    <revision>
      <id>1548531</id>
      <timestamp>2009-06-25T22:14:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category,</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Physics]]</text>
      <sha1>9r9ehm8f0t08njgz8erzv7r1jtjzwmt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Practical Electronics/IC/4014</title>
    <ns>0</ns>
    <id>200657</id>
    <revision>
      <id>1548560</id>
      <parentid>1548546</parentid>
      <timestamp>2009-06-25T22:37:44Z</timestamp>
      <contributor>
        <username>Inductiveload</username>
        <id>30522</id>
      </contributor>
      <text xml:space="preserve">{{Logic_IC
|number = 4014
|logic_type = Sequential
|func_family = Shift register
|description = 8-bit shift register with parallel load.
|pins=16
}}

[[Category:Practical Electronics]]</text>
      <sha1>g2rftk1jrc3lhee4ksfqkp53pwqsu6u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Force and Motion</title>
    <ns>0</ns>
    <id>200658</id>
    <redirect title="General Mechanics/Force and Motion" />
    <revision>
      <id>1548567</id>
      <timestamp>2009-06-25T22:45:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Force and Motion]] to [[General Mechanics/Force and Motion]]: Merging into book.</comment>
      <text xml:space="preserve">#REDIRECT [[General Mechanics/Force and Motion]]</text>
      <sha1>5bx1uhfj6dmbcpobwk5cqrvaj7o8fen</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Class project templates</title>
    <ns>14</ns>
    <id>200661</id>
    <revision>
      <id>1548592</id>
      <timestamp>2009-06-25T23:19:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Templates]]</text>
      <sha1>0t5jiibdq6k1tam9oy4zt1yld5iz80u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics/RectMot</title>
    <ns>10</ns>
    <id>200662</id>
    <redirect title="Template:FHSST Physics/Rectilinear Motion" />
    <revision>
      <id>1548602</id>
      <timestamp>2009-06-25T23:46:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics/RectMot]] to [[Template:FHSST Physics/Rectilinear Motion]]: Naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Rectilinear Motion]]</text>
      <sha1>n69gxjij2uy1ujf59zcf7qso0f4jfny</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics/Mom</title>
    <ns>10</ns>
    <id>200663</id>
    <redirect title="Template:FHSST Physics/Momentum" />
    <revision>
      <id>1548604</id>
      <timestamp>2009-06-25T23:51:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics/Mom]] to [[Template:FHSST Physics/Momentum]]: Naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Momentum]]</text>
      <sha1>ofq813y8miouhvburbc2x3zth6om7fb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Rectilinear Motion:Rectilinear Motion</title>
    <ns>0</ns>
    <id>200664</id>
    <redirect title="FHSST Physics/Rectilinear Motion" />
    <revision>
      <id>1548610</id>
      <timestamp>2009-06-26T00:13:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Rectilinear Motion:Rectilinear Motion]] to [[FHSST Physics/Rectilinear Motion]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Rectilinear Motion]]</text>
      <sha1>kob0bguujymzyqcgvlvkdks7r0753iz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Rectilinear Motion:What is rectilinear motion</title>
    <ns>0</ns>
    <id>200665</id>
    <redirect title="FHSST Physics/Rectilinear Motion/Definition" />
    <revision>
      <id>1548613</id>
      <timestamp>2009-06-26T00:14:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Rectilinear Motion:What is rectilinear motion]] to [[FHSST Physics/Rectilinear Motion/Definition]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Rectilinear Motion/Definition]]</text>
      <sha1>qwyfzo0rp2krxr8p3dzdy7k9giplep7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Rectilinear Motion:Speed and Velocity</title>
    <ns>0</ns>
    <id>200666</id>
    <redirect title="FHSST Physics/Rectilinear Motion/Speed and Velocity" />
    <revision>
      <id>1548616</id>
      <timestamp>2009-06-26T00:15:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Rectilinear Motion:Speed and Velocity]] to [[FHSST Physics/Rectilinear Motion/Speed and Velocity]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Rectilinear Motion/Speed and Velocity]]</text>
      <sha1>a5nd0grxxb97kea5hwfxd6uin0x64pu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Rectilinear Motion:Speed and Velocity</title>
    <ns>1</ns>
    <id>200667</id>
    <redirect title="Talk:FHSST Physics/Rectilinear Motion/Speed and Velocity" />
    <revision>
      <id>1548618</id>
      <timestamp>2009-06-26T00:15:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Rectilinear Motion:Speed and Velocity]] to [[Talk:FHSST Physics/Rectilinear Motion/Speed and Velocity]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Rectilinear Motion/Speed and Velocity]]</text>
      <sha1>93me7hxlsxd63k1vn7u5ou2nb0zzesr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Rectilinear Motion:Graphs</title>
    <ns>0</ns>
    <id>200668</id>
    <redirect title="FHSST Physics/Rectilinear Motion/Graphs" />
    <revision>
      <id>1548621</id>
      <timestamp>2009-06-26T00:17:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Rectilinear Motion:Graphs]] to [[FHSST Physics/Rectilinear Motion/Graphs]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Rectilinear Motion/Graphs]]</text>
      <sha1>9flp2a6hlronz27v442i46x84esmg1r</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Rectilinear Motion:Equations of Motion</title>
    <ns>0</ns>
    <id>200669</id>
    <redirect title="FHSST Physics/Rectilinear Motion/Equations of Motion" />
    <revision>
      <id>1548624</id>
      <timestamp>2009-06-26T00:18:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Rectilinear Motion:Equations of Motion]] to [[FHSST Physics/Rectilinear Motion/Equations of Motion]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Rectilinear Motion/Equations of Motion]]</text>
      <sha1>tletkw1zx5i495sxpbfu3drn79mj74f</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Rectilinear Motion:Important Equations and Quantities</title>
    <ns>0</ns>
    <id>200670</id>
    <redirect title="FHSST Physics/Rectilinear Motion/Summary" />
    <revision>
      <id>1548627</id>
      <timestamp>2009-06-26T00:19:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Rectilinear Motion:Important Equations and Quantities]] to [[FHSST Physics/Rectilinear Motion/Summary]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Rectilinear Motion/Summary]]</text>
      <sha1>o8x72f4uk7pupm1h0rali39orzmw2br</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Momentum:What is Momentum</title>
    <ns>0</ns>
    <id>200671</id>
    <redirect title="FHSST Physics/Momentum/Definition" />
    <revision>
      <id>1548635</id>
      <timestamp>2009-06-26T00:25:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Momentum:What is Momentum]] to [[FHSST Physics/Momentum/Definition]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Momentum/Definition]]</text>
      <sha1>aqpidag1f3j5ve4cuic451wzg9l3iwe</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Momentum:The Momentum of a System</title>
    <ns>0</ns>
    <id>200672</id>
    <redirect title="FHSST Physics/Momentum/System" />
    <revision>
      <id>1548638</id>
      <timestamp>2009-06-26T00:26:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Momentum:The Momentum of a System]] to [[FHSST Physics/Momentum/System]]: Subpage notation and shorter name</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Momentum/System]]</text>
      <sha1>l00ai7prwkb9ohr56ipj6ifdxs0tauh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Momentum:Change in Momentum</title>
    <ns>0</ns>
    <id>200673</id>
    <redirect title="FHSST Physics/Momentum/Change" />
    <revision>
      <id>1548641</id>
      <timestamp>2009-06-26T00:27:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Momentum:Change in Momentum]] to [[FHSST Physics/Momentum/Change]]: Subpage notation and less redundancy</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Momentum/Change]]</text>
      <sha1>ofe94phivv24h5byixi4sx4h4esnfm0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Momentum:What properties does momentum have</title>
    <ns>0</ns>
    <id>200674</id>
    <redirect title="FHSST Physics/Momentum/Properties" />
    <revision>
      <id>1548644</id>
      <timestamp>2009-06-26T00:28:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Momentum:What properties does momentum have]] to [[FHSST Physics/Momentum/Properties]]: Subpage notation and shorter name</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Momentum/Properties]]</text>
      <sha1>nuabk2p0td48ztcxs9bgvt3h2anfzgk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Momentum:Impulse</title>
    <ns>0</ns>
    <id>200675</id>
    <redirect title="FHSST Physics/Momentum/Impulse" />
    <revision>
      <id>1548647</id>
      <timestamp>2009-06-26T00:29:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Momentum:Impulse]] to [[FHSST Physics/Momentum/Impulse]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Momentum/Impulse]]</text>
      <sha1>r9ipmmeaqhd7imnm4tbn0ab956oymfc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Momentum:Impulse</title>
    <ns>1</ns>
    <id>200676</id>
    <redirect title="Talk:FHSST Physics/Momentum/Impulse" />
    <revision>
      <id>1548649</id>
      <timestamp>2009-06-26T00:29:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Momentum:Impulse]] to [[Talk:FHSST Physics/Momentum/Impulse]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Momentum/Impulse]]</text>
      <sha1>awoq6ys1s0cy2n29sj2tpz13zocv3ks</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Momentum:Summary of Important Quantities, Equations and Concepts</title>
    <ns>0</ns>
    <id>200677</id>
    <redirect title="FHSST Physics/Momentum/Summary" />
    <revision>
      <id>1548652</id>
      <timestamp>2009-06-26T00:30:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Momentum:Summary of Important Quantities, Equations and Concepts]] to [[FHSST Physics/Momentum/Summary]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Momentum/Summary]]</text>
      <sha1>tv8gz1xf98yydhhjhp07018etmtqh5s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Practical Electronics/IC/4073</title>
    <ns>0</ns>
    <id>200678</id>
    <revision>
      <id>1548659</id>
      <timestamp>2009-06-26T00:42:29Z</timestamp>
      <contributor>
        <username>Inductiveload</username>
        <id>30522</id>
      </contributor>
      <comment>Created page with '{{Logic_IC |number = 4073 |logic_type = Combinatorial |func_family = Logic |description = Triple 3-Input AND Gate |pins = 14 }}'</comment>
      <text xml:space="preserve">{{Logic_IC
|number = 4073
|logic_type = Combinatorial
|func_family = Logic
|description = Triple 3-Input AND Gate
|pins = 14
}}</text>
      <sha1>a51nuyt9eft233npiyholnuqc0xcrm1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Rosemary Balsamic Chicken Wings</title>
    <ns>102</ns>
    <id>200679</id>
    <revision>
      <id>2689938</id>
      <parentid>1799206</parentid>
      <timestamp>2014-08-08T22:38:40Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 36 chicken wingettes
* 1 cup balsamic vinegar
* 3 sprigs rosemary, finely chopped
* 2 tbsp salt
* 1 tbsp black pepper
* 1 1/2 tbsp cayenne pepper
* 1/4 cup paprika
* 1 tbsp garlic powder
* Cornmeal as needed
* Oil for deep frying

== Procedure ==
#Place chicken in a zip-top plastic bag. Combine remaining ingredients except for oil and cornmeal and refrigerate overnight.
#Heat oil to 350°. Meanwhile, dredge chicken in cornmeal. Fry in batches for 12 minutes. Drain on a cooling rack.
#Rest 5 minutes and serve.

[[Category:Chicken wing recipes]]
[[Category:Rosemary recipes]]
[[Category:Vinegar recipes]]
[[Category:Marinade recipes]]
[[Category:Deep fried recipes]]
[[Category:Appetizer recipes]]
[[Category:Main course recipes]]</text>
      <sha1>3q9sfkybm7yp4ing6ijtrqo04w9q6zs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook talk:Rhubarb Pie</title>
    <ns>103</ns>
    <id>200682</id>
    <revision>
      <id>1548693</id>
      <timestamp>2009-06-26T01:19:14Z</timestamp>
      <contributor>
        <username>JohnnyB256</username>
        <id>247232</id>
      </contributor>
      <comment>suggestion</comment>
      <text xml:space="preserve">Hey there, wikicooks: I have a rhubarb recipe that is simpler and I can personally attest that it is great.[http://allrecipes.com/Recipe/Fresh-Rhubarb-Pie/Detail.aspx]. Maybe you can add this one?</text>
      <sha1>i3z0l55k0rc76kshyuwhte9xi47kodu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:DPL templates</title>
    <ns>14</ns>
    <id>200684</id>
    <revision>
      <id>1549559</id>
      <parentid>1548710</parentid>
      <timestamp>2009-06-27T04:28:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">[[Category:Utility templates]]</text>
      <sha1>cl8dfwfekt4qcjueb6n446qg4fbc0e2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Blender 3D: Noob to Pro/Polygonal Modeling</title>
    <ns>0</ns>
    <id>200685</id>
    <revision>
      <id>1616976</id>
      <parentid>1554863</parentid>
      <timestamp>2009-08-26T20:15:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">As the name suggest, polygonal modeling involves constructing the models out of polygons. Strictly, software packages works only with triangles. Blender could show you quads and some software packages could even let you work with polygons with more than 4 sides (n-gons) but these packages work internally only with triangles. These triangles are hidden so that you could concentrate more on modeling.

While different modelers works differently, they would still follow certain workflows (some call this techniques). These are familiarly called box modeling and polygon-by-polygon modeling (poly-by-poly modeling).

'''Box modeling''' is a top-down approach where modelers start with a primitive (usually a cube (box), hence the box in box modeling). Then from this primitive, the model's form is build up where details are gradually added.

'''Poly-by-poly modeling''' is almost the opposite of box modeling. It is the bottom-up approach where modelers start with a plane or even a vertex. Using extrusion and other tools, more geometries are added. Polygon by polygon the model is gradually build.

None of the two is better than the other but there are instances where one workflow lends much better to the situation. One typical advantage of box modeling is that at early stage, you are able to conceive first the form (the whole) of the model and is better equipped to do general corrections without bothering yet with the details. Poly-by-poly otherwise give you more control on the geometry and is much more easier to use in modeling complex forms like the human ear. Complications do arise when working with the two. In box modeling, it is typically difficult to manage the geometry when adding details. Experience is necessary so as not to create a mess. Poly-by-poly modeling otherwise has its own quirks. Since you are going detail by detail, it is easy to make a mess with the models form (i.e. wrong proportions).

While the two are opposites, they compliment each other beautifully. Most modelers would combine the two workflows in a variety of proportions, combining the strength of each. For example one might model a human body using box modeling while the head and the ears are done using poly-by-poly modeling.

'''Blocking with primitives''' is added to enrich approaches is modeling. It is basically box modeling in conjunction with divide-and-conquer approach. Different parts are modeled separately with their own primitives and later attached with the others to form the whole.

{{BookCat}}</text>
      <sha1>l26odru2xgso1opvi6kyolz5cte44vf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Solidago canadensis</title>
    <ns>110</ns>
    <id>200686</id>
    <revision>
      <id>1876075</id>
      <parentid>1548741</parentid>
      <timestamp>2010-07-07T18:34:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Solidago canadensis&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Goldenrod
|binomial =Solidago
|image1 =Solidago canadensis.jpg
|caption1 =Canadian Goldenrod
|image2=Solidago altissima2.jpg
|caption2=
|image3 =Solidago canadensis 20050815 248.jpg
|caption3=
|description =Goldenrod is a tall flower, growing up to seven feet tall.  The flowers are actually very tiny, only an eighth of an inch across.  However, they are grouped together in large numbers, making them look like one huge flower.  The leaves are long and narrow with no stalks.  The leaves have tiny teeth along the edges.

Many people believe they are allergic to Goldenrod, but actual cases of this are somewhat rare.  Goldenrod blooms at about the same time as ragweed which is a very common cause of hayfever.  Many cases of &quot;Goldenrod allergies&quot; are really ragweed allergies.
|facts = Native Americans brewed a tea from the flowers of the Goldenrod to treat fever and snakebites.
}}</text>
      <sha1>ag6bdrqhsybr5gtecd1ygtiqijq9spk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Impatiens capensis</title>
    <ns>110</ns>
    <id>200687</id>
    <revision>
      <id>1876109</id>
      <parentid>1548754</parentid>
      <timestamp>2010-07-07T18:38:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Impatiens capensis&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Jewelweed
|binomial =Impatiens capensis
|image1 =Impatiens capensis1.JPG
|caption1 =
|image2=Jewel Weed Impatiens capensis Leaves and Flower 2600px.jpg
|caption2=
|image3 =Jewel Weed Impatiens capensis Flower 1950px.jpg
|caption3=
|description =Jewelweed it a medium sized plant with orange or yellow flowers.  The flowers are a little bit odd-shaped, with a spur coming our the back, and curled lips in the front.  It is usually spotted, and is sometimes even called a Spotted Jewelweed.  Another name for it is Touch-me-not.  It got this name because the seed pods will explode when touched even very gently.  This explosion sends seeds flying out everywhere.  

People have used the sap from this plant to treat skin rashes (including rashes caused by poison ivy) for centuries.  However, scientists have done a lot of testing on this plant and have found that it is not really an effective medicine at all.  Rather than depending on Jewelweed to cure poison ivy, it's a much better idea to just learn what poison ivy looks like, be on the lookout for it, and stay away from it.

Jewelweed is a water-loving plant, growing near ditches and streams.
|facts = The species name ''&quot;capensis&quot;'', meaning &quot;of the cape&quot;, is actually incorrect.  A scientist named Nicolaas Meerburgh thought that it was native to the Cape of Good Hope, in southern Africa.
}}</text>
      <sha1>7ocjvyjy6rh90vkqm204fsxxodwkg4m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Lysimachia terrestris</title>
    <ns>110</ns>
    <id>200688</id>
    <revision>
      <id>1876100</id>
      <parentid>1548759</parentid>
      <timestamp>2010-07-07T18:37:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Lysimachia terrestris&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Swamp Candles
|binomial =Lysimachia terrestris
|image1 =Lysimachia terrestris.jpg
|caption1 =Flowers
|image2=Lysimachia terrestris_6846.jpg
|caption2=A colony of Swamp Candles growing at the edge of a pond
|image3 =Lysimachia terrestris_6851.jpg
|caption3=Swamp Candles (yellow) and Pickerelweed (purple)
|description =Swamp Candles are pretty yellow flowers that grow on the edges of ponds.  The flowers look a lot like those of its cousin, [[../Lysimachia quadrifolia|Whorled Loosestrife]].  Sometimes these two plants can cross breed.  Though they both look very similar, the flowers on Swamp Candles grow only at the top of the plant.  If you look closely at the flower of a Swamp Candle, you will notice that each of the five yellow petals as two tiny red dots near the bottom.  All together, there are ten of these red dots forming a circle around the flower's center.
|facts = Swamp Candles can spread very rapidly by sending out underwater stems.
}}</text>
      <sha1>65ycog4rh001rllbj8a5p9ltl79e3bl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Nuphar variegata</title>
    <ns>110</ns>
    <id>200689</id>
    <revision>
      <id>1876093</id>
      <parentid>1548761</parentid>
      <timestamp>2010-07-07T18:36:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Nuphar variegata&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Bullhead Lily
|binomial =Nuphar variegata
|image1 =Nuphar lutea2 ies.jpg
|caption1 =Close-up of the flower
|image2=Nuphar lutea (Detail) 24072005-1.jpg
|caption2=Flower and leaves
|image3 =Nuphar lutea blatt.jpeg
|caption3=Leaves
|description =Bullhead Lily is a yellow flower that grows in the shallow water of ponds.  The leaves are large and heart-shaped, and they float on top of the water.  They are lily pads in every sense of the word!  The inside of the flower is usually a very busy place for insects.  They are there to gather the flower's nectar, and in doing so, they pollinate the flower.  The flowers grows at the end of a stem which pushes the blossom a couple of inches higher than the surface of the water.  The stems can only grow to about 16 inches, so Bullhead Lilies cannot grow in water any deeper than that.
|facts = The seeds of the Bullhead Lily are edible and can be ground into a nutritious flour.  Flour from flowers, right?  The roots are edible too, but in some plants they are very bitter.
}}</text>
      <sha1>h2a2io70e6wfcquccobvac1fh01iv8c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:15sa1898</title>
    <ns>2</ns>
    <id>200690</id>
    <revision>
      <id>1557818</id>
      <parentid>1554646</parentid>
      <timestamp>2009-07-03T20:18:36Z</timestamp>
      <contributor>
        <ip>217.219.214.129</ip>
      </contributor>
      <text xml:space="preserve">==Gholam Ali Nuri==


Gholam ALI Nuri (غلامعلي نوري) Born june,13, 1968 ,Kermanshah ,Iran

Iranian physician &amp; scientist.
His works have been extended in  many
subjects:mathematics,chemistry,physics, persian litrerature,
Quran interpretation,medical practice &amp; philosophy,...
some of his attractive works are brought below for instance:

1- Expression of speed of light by abstract mathematics as following:
c = 670^3-99^3-6^3-3^3 = velocity of light in vacuum = 299792458
Another equality is: square root 2 multiplied by c is an integer number i.e 423970560 =2^8×1656135 .
C= 2^28+(2^24+2^23+2^22)+(2^20+2^19+2^18+2^17)+(2^14+2^13+2^12+2^11)+(2^6+2^3+2^1)

2×9×9×7×9×2×4×5×8 = 9!×9 = 8!×81

&quot; As constant pi(3.1415926...)that can be exhibited by pure math (e.g Wallis formula) speed of the light (as an universal constant) can also be expressed by abstract mathematical series or sequential real numbers&quot; Nuri says.

2-Getting exact percentage&amp; ratio of the Earth‘s hydrosphere versus land (73.33% vs 26.66%)by means of holy Quran(ie total repetitions of the word (بحر = sea) in Quran is 33 times , and total repetitions of the word (بر = land) in Quran is 12 times.Then,33 divided by 12 results in 2.75,the same as hydrosphere/land ratio.

This article, (with new cases)  to be continued in future.</text>
      <sha1>s69ztietphzv70mzvtle0lwpfsea7do</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Summer Flowers of Northern New England/Red and Pink Flowers</title>
    <ns>111</ns>
    <id>200691</id>
    <revision>
      <id>1548770</id>
      <timestamp>2009-06-26T03:21:24Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>Created page with 'To create new pages, paste this text in and fill it in. &lt;pre&gt; {{WJ Flower |common name = |binomial = |image1 = |caption1 = |image2= |caption2= |image3 = |caption3= |description =...'</comment>
      <text xml:space="preserve">To create new pages, paste this text in and fill it in.
&lt;pre&gt;
{{WJ Flower
|common name =
|binomial =
|image1 =
|caption1 =
|image2=
|caption2=
|image3 =
|caption3=
|description =
|facts = 
}}

&lt;/pre&gt;</text>
      <sha1>is5eur0nmzzropeiw6r6vje81igmwzv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Trifolium pratense</title>
    <ns>110</ns>
    <id>200692</id>
    <revision>
      <id>1876070</id>
      <parentid>1548772</parentid>
      <timestamp>2010-07-07T18:33:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Trifolium pratense&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Red Clover
|binomial =Trifolium pratense
|image1 =Red clover closeup.jpg
|caption1 =Close-up of the flower
|image2=Kleebluete001.jpg
|caption2=Red Clover colony
|image3 =Trifolium pratense feuille1.jpg
|caption3=Leaves
|description =Red Clover looks a lot like [[../Trifolium repens|White Clover]], and in fact, sometimes the two cross-breed.  But for the most part, the flower of the red clover is red (or pink), and the flower of the White Clover is white.  If you can't decided if the flower is pink or white, you may be looking at a cross between the two.

The leaves of the Red Clover are a little bigger than the leaves of the White Clover.  They also have a brighter chevron, which is a pattern that looks like a sargeant's stripes.

Like the White Clover, Red Clover was brought to the Americas by the Europeans for use as a pasture crop.  It is also widely used as a source of nectar for honey bees.
|facts = Red Clover has the ability to take nitrogen from the air and put it in the soil.  This is important because even though most plants need nitrogen in the soil, few are able to put it there.
}}</text>
      <sha1>90a0566irkcjq5qtfjz1dkuii4rrn35</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Trifolium arvense</title>
    <ns>110</ns>
    <id>200693</id>
    <revision>
      <id>1876072</id>
      <parentid>1548775</parentid>
      <timestamp>2010-07-07T18:33:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Trifolium arvense&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Rabbit's Foot Clover
|binomial =Trifolium arvense
|image1 =Trifolium arvense 2005.07.11 09.23.43.jpg
|caption1 =Flower
|image2=Trifolium arvense.jpg
|caption2=Whole plant with many flowers and leaves
|image3 =Trifolium arvense var arvense Monacia Corse.jpg
|caption3=Flower and leaf
|description =Rabbit's foot clover is another type of clover with a pinkish flower.  The flower also looks a little bit grey.  It does not grow as tall as most clovers, and the flowers are not very bright.  Because of this, it is often not even noticed. 

The pinkish flowers are very hairy looking, and somewhat longer than they are wide.  Like all clovers, the leafs are divided into three leaflets.  

This is another clover that was brought to the America's as a pasture crop.  It did not grow here before it was imported by the Europeans.

|facts = This plant got the name Rabbit's Foot Clover because of the shape and color of the flower.  It looks just like a rabbit's foot!
}}</text>
      <sha1>t2inowtw0z9skimojgue32rlpkhfqla</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Asclepias syriaca</title>
    <ns>110</ns>
    <id>200694</id>
    <revision>
      <id>1876136</id>
      <parentid>1548914</parentid>
      <timestamp>2010-07-07T18:41:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Asclepias syriaca&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Milkweed
|binomial =Asclepias syriaca
|image1 =Common milkweed-tracy.jpg
|caption1 =Flower cluster
|image2=Seidenpflanze-Samenkapsel.jpg
|caption2=Seed pods
|image3 =Common Milkweed Asclepias syriaca Plant 2000px.jpg
|caption3=Whole plant
|description =Milkweed is a plant that usually grows about three feet tall, but sometimes it can grow as tall as a man.  It produces a round cluster of pink flowers.  Each flower has five petals.  The leaves are a couple of inches wide and about six inches long.  They are also pretty thick.  Every part of the plant will produce a milky sap when broken open.  That's where it gets the name Milkweed.  But don't drink this milk!  It is very bitter, and just slightly poisonous.  Every part of the plant ''other'' than the sap is edible and it actually tastes pretty good!    The sap can be removed from the plant by boiling it in several changes of water.  If you wish to try this, you will need two pots of boiling water - one large, and one small.  When they are both boiling, drop the leaves, flowers, stems, or young seed pods into the smaller pot and let it boil for about a minute.  Then pour most of the water off.  Add more boiling water to the small pot from the large pot and boil for another minute.  Do this about six times.  Then add butter or margarine and enjoy the feast.
|facts = Monarch butterflies live on Milkweed.  The sap does not bother them at all, and in fact, since they eat so much of it, it makes them taste ''terrible'' to birds.  Birds soon learn this and look for their dinner somewhere else!
}}</text>
      <sha1>rvow876gqvrvf66sj23l83t9ya6fey4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Dutch/The numbers/Hover test</title>
    <ns>0</ns>
    <id>200698</id>
    <revision>
      <id>2164314</id>
      <parentid>2164312</parentid>
      <timestamp>2011-09-04T22:02:37Z</timestamp>
      <contributor>
        <ip>91.96.176.230</ip>
      </contributor>
      <text xml:space="preserve">Pick a word at random and say the translation in Dutch, ''then'' hover your mouse over the word and see if your are right.

{|class=&quot;wikitable&quot;
|-
|{{C|7|zeven}}
|{{C|13|dertien}}
|{{C|100|honderd}}
|{{C|52|tweeënvijftig}}
|{{C|12|twaalf}}
|{{C|21|eenentwintig}}
|{{C|6|zes}}
|-
|{{C|9|negen}}
|{{C|90|negentig}}
|{{C|19|negentien}}
|{{C|67|zevenenzestig}}
|{{C|76|zesenzeventig}}
|{{C|25|vijfentwintig}}
|{{C|1345|dertienhonderdvijfenveertig}}
|-
|{{C|82|tweeëntachtig}}
|{{C|23|drieëntwintig}}
|{{C|2|twee}}
|{{C|1|een}}
|{{C|84|vierentachtig}}
|{{C|250|tweehonderdvijftig}}
|{{C|1.000.000|een miljoen}}
|-
|{{C|17|zeventien}}
|{{C|3|drie}}
|{{C|5|vijf}}
|{{C|15|vijftien}}
|{{C|33|drieëndertig}}
|{{C|60|zestig}}
|{{C|88|achtentachtig}}
|-
|{{C|32|tweeëndertig}}
|{{C|4|vier}}
|{{C|41|eenenveertig}}
|{{C|43|drieënveertig}}
|{{C|700|zevenhonderd}}
|{{C|900|negenhonderd}}
|-
|{{C|1000|duizend}}
|{{C|53|drieënvijftig}}
|{{C|81|eenentachtig}}
|{{C|36|zesendertig}}
|{{C|29|negenentwintig}}
|{{C|30|dertig}}
|{{C|11|elf}}
|}

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>i6i8y80irhde4jrdflq3cx2peu8gf8r</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Order of operations/Fractions</title>
    <ns>0</ns>
    <id>200699</id>
    <revision>
      <id>1710229</id>
      <parentid>1548847</parentid>
      <timestamp>2010-02-01T18:16:11Z</timestamp>
      <contributor>
        <ip>205.208.75.179</ip>
      </contributor>
      <text xml:space="preserve">Do the questions very carefully.

# &lt;math&gt;\frac{2}{3}+\frac{5}{6}-\frac{1}{2}=\cdots&lt;/math&gt;
# &lt;math&gt;\frac{3}{5}\times\frac{2}{3}+\frac{5}{12}=\cdots&lt;/math&gt;
# &lt;math&gt;(\frac{7}{15}+\frac{2}{3})-\frac{7}{9}=\cdots&lt;/math&gt;
# &lt;math&gt;2\tfrac{2}{3}\div\frac{4}{5}+1\tfrac{4}{5}=\cdots&lt;/math&gt;
# &lt;math&gt;3\frac{1}{5}\div(\frac{3}{5}+\frac{1}{2})=\cdots&lt;/math&gt;
# &lt;math&gt;(2\tfrac{5}{8}+1\tfrac{5}{12})\times(\frac{5}{6}-\frac{1}{2})=\cdots&lt;/math&gt;
# &lt;math&gt;(1\tfrac{2}{3}+2\tfrac{1}{6})\div11\tfrac{1}{2}=\cdots&lt;/math&gt;
# &lt;math&gt;5\tfrac{3}{5}\div3\tfrac{1}{2}\times2\tfrac{2}{3}=\cdots&lt;/math&gt;
# &lt;math&gt;4\tfrac{3}{7}+5\tfrac{5}{14}-3\tfrac{10}{21}=\cdots&lt;/math&gt;
# &lt;math&gt;3\tfrac{5}{8}\times\frac{3}{58}+3\tfrac{3}{8}=\cdots&lt;/math&gt;
# &lt;math&gt;\frac{5}{6}+2\tfrac{2}{5}\times\frac{8}{9}-1\tfrac{5}{6}=\cdots&lt;/math&gt;
# &lt;math&gt;(2\tfrac{4}{5}-\frac{7}{10})\div2\tfrac{4}{5}=\cdots&lt;/math&gt;
# &lt;math&gt;[\frac{3}{5}+(\frac{7}{10}+\frac{9}{20})]-\!2.75=\cdots&lt;/math&gt;
# &lt;math&gt;\!675\%-4\tfrac{7}{30}+\!2.5=\cdots&lt;/math&gt;
# &lt;math&gt;\!5.3+3\tfrac{3}{5}\times2\tfrac{8}{11}-\!245\%=\cdots&lt;/math&gt;
# &lt;math&gt;\!34.2\times\!24.25+\!7,462.5=\cdots&lt;/math&gt;
# &lt;math&gt;\!127,5\div\!7.5+\!5.74\times\!23.63=\cdots&lt;/math&gt;
# &lt;math&gt;\!44.62-\!1,425\%+\!47.6\div\!0.7=\cdots&lt;/math&gt;
# &lt;math&gt;\frac{13}{25}+[3\tfrac{3}{20}\div4\tfrac{1}{2}-(\frac{4}{7}+\!435\%)]=\cdots&lt;/math&gt;
# &lt;math&gt;(\!3.4-\!36\%)\times6\tfrac{2}{3}+(3\tfrac{3}{8}-2\tfrac{7}{12})=\cdots&lt;/math&gt;
# &lt;math&gt;(4\tfrac{9}{10}\div\frac{7}{15}\times1\tfrac{3}{5})+\!190\%=\cdots&lt;/math&gt;
# &lt;math&gt;\!10\%\times8\tfrac{9}{10}+4\tfrac{1}{10}=\cdots&lt;/math&gt;
# &lt;math&gt;\sqrt{\frac{6}{25}+\frac{2}{5}}+\frac{7}{10}\times1\tfrac{3}{25}=\cdots&lt;/math&gt;
# &lt;math&gt;\sqrt[3]{\frac{5^3}{6^3}}-\frac{1}{2}+\!560\%=\cdots&lt;/math&gt;
# &lt;math&gt;\!43.2-\!13.6+\!47.3\times\!34.2=\cdots&lt;/math&gt;
# &lt;math&gt;[(6\tfrac{1}{2}-3\tfrac{3}{4})\div\frac{14}{15}]+5\tfrac{5}{8}=\cdots&lt;/math&gt;
# &lt;math&gt;3\tfrac{1}{2}\div1\tfrac{2}{5}+\frac{9}{10}\times2\tfrac{2}{5}-\!75\%=\cdots&lt;/math&gt;
# &lt;math&gt;[(3\tfrac{4}{15}+2\tfrac{3}{5})\times(\frac{5}{6}+\frac{1}{3})=\cdots&lt;/math&gt;
# &lt;math&gt;6\tfrac{5}{7}\times\frac{5}{94}+3\tfrac{2}{5}\div\frac{2}{15}=\cdots&lt;/math&gt;
# &lt;math&gt;[(\frac{1}{2}\times\frac{3}{4}+\frac{4}{5}\times\frac{5}{6})]-\frac{1}{2}+\!245\%=\cdots&lt;/math&gt;

[[Category:Mathematics Worksheet]]</text>
      <sha1>mh25xtropyebsomxcb6b2uwwvqnx3zu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Mokuiloik</title>
    <ns>3</ns>
    <id>200700</id>
    <revision>
      <id>1556471</id>
      <parentid>1548851</parentid>
      <timestamp>2009-07-03T02:37:27Z</timestamp>
      <contributor>
        <username>Mike.lifeguard</username>
        <id>55262</id>
      </contributor>
      <minor />
      <comment>{{checkuserblock}}</comment>
      <text xml:space="preserve">{{mbox|type=warning|msg='''You have been indefinitely [[Wikibooks:Blocking policy|blocked]] from editing Wikibooks. This was done in accordance with policy because of your disruptive edits.

Please note that page blanking, addition of random text or spam, deliberate misinformation, privacy violations, [[Wikibooks:No personal attacks|personal attacks]], and repeated, blatant violations of our [[Wikibooks:Neutral point of view|neutral point of view]] policy are considered [[Wikibooks:vandalism|vandalism]]. If you wish to make useful contributions, you are welcome to come back after the block expires.&lt;br&gt;To request to be unblocked, add {{tlx|unblock|reason}} to [[Special:MyTalk|your user talk page]], which you can still edit.&lt;br/&gt;&amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 02:37, 3 July 2009 (UTC)}}</text>
      <sha1>elptm6o0jkuwvnqkd353q38jcpm5usi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Manchu/Lesson 1 - Pronunciation</title>
    <ns>1</ns>
    <id>200701</id>
    <revision>
      <id>1926782</id>
      <parentid>1807195</parentid>
      <timestamp>2010-09-02T17:52:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Adding {{WikiProject Languages}}</comment>
      <text xml:space="preserve">{{WikiProject Languages}} 

Pronounciation as wav files, anyone? --''sigmundur'', [[Special:Contributions/213.100.59.11|213.100.59.11]] ([[User talk:213.100.59.11|talk]]) 10:28, 26 June 2009 (UTC)

== Greeting and question ==

Hi, I'm Eleraama. I plan to study this course to get a basic grasp of Manchu, and so I think this is the perfect opportunity to critique the book from a learner's perspective.
For example, I am uncertain that the discussion of vowel harmony belongs here and not in its own section; having literally just started this course, it's pretty much meaningless to me and looks quite scary. I think it would make a lot more sense if it provided example words or was placed at the end of the first vocabulary section; it's really more a matter of construction than pronunciation (or so it seems to me, with five minutes of Manchu under my belt) --[[User:Eleraama|Eleraama]] ([[User talk:Eleraama|talk]]) 05:30, 25 May 2010 (UTC)</text>
      <sha1>cgq0alacf323byw6yo3fxyklvnckfvl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Sigmundur/monobook.js</title>
    <ns>2</ns>
    <id>200702</id>
    <revision>
      <id>1548869</id>
      <timestamp>2009-06-26T10:42:39Z</timestamp>
      <contributor>
        <username>Sigmundur</username>
        <id>119597</id>
      </contributor>
      <comment>Created page with '/***** InstaView *****/   document.write('&lt;script type=&quot;text/javascript&quot; src=&quot;http://en.wikipedia.org/w/index.php?title=User:Pilaf/instaview.js&amp;action=raw&amp;ctype=text/javascript&amp;d...'</comment>
      <text xml:space="preserve">/***** InstaView *****/
 
document.write('&lt;script type=&quot;text/javascript&quot; src=&quot;http://en.wikipedia.org/w/index.php?title=User:Pilaf/instaview.js&amp;action=raw&amp;ctype=text/javascript&amp;dontcountme=s&quot;&gt;&lt;/script&gt;')
 
InstaView.conf.user.name = 'User Name'
 
/* This is to keep track of who is using InstaView: [[User:Pilaf/instaview.js]] */</text>
      <sha1>nnn7yozpg0w0efl6p57wwrvoyd9p47t</sha1>
      <model>javascript</model>
      <format>text/javascript</format>
    </revision>
  </page>
  <page>
    <title>Talk:Embedded Control Systems Design/Model driven engineering</title>
    <ns>1</ns>
    <id>200703</id>
    <revision>
      <id>1548871</id>
      <parentid>1548870</parentid>
      <timestamp>2009-06-26T10:53:22Z</timestamp>
      <contributor>
        <username>Markus.klotzbuecher</username>
        <id>243976</id>
      </contributor>
      <minor />
      <text xml:space="preserve">==Some suggestions for further improvements:==

* The first sentence of &quot;Standards&quot; seems to suggest that all modeling languages mentioned are incarnations of MDA, which is of course not true.
* in &quot;Discussion&quot;:
** the sentence &quot;The reusability of a model, even within the original platform. Current modeling languages contain flaws, reused code usually requires debugging for a new application.&quot; is not very clear. Suggested improvement: &quot;Reuse of a model is often not possible without modifying the original model and hence having to test it again. This is because current modeling tools and standards fail to enforce strong enough decoupling&quot;
** &quot;The time consumption of the testing period: the process of deriving platform dependent code is time intensive in most domains.&quot;: It is not clear what the testing period has to do with the process of deriving platform dependent code? Maybe this should be split into two points:
*** &quot;Exhaustive testing might still be necessary if the model does not capture enough detail for verification or verification tools are not available&quot;
*** &quot;The time required for defining a transformation to platform dependent code may by far outweigh the time required for performing the transformation manually&quot; 
--[[User:Markus.klotzbuecher|Markus.klotzbuecher]] ([[User talk:Markus.klotzbuecher|talk]]) 10:52, 26 June 2009 (UTC)</text>
      <sha1>fynwiu0biz9ljk905y03iqo09h58w6o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Manchu/Lesson 4 - Numerals</title>
    <ns>1</ns>
    <id>200704</id>
    <revision>
      <id>1926801</id>
      <parentid>1548875</parentid>
      <timestamp>2010-09-02T17:53:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Adding {{WikiProject Languages}}</comment>
      <text xml:space="preserve">{{WikiProject Languages}} 

What a political dialogue, patriotic poetry  (:  maybe a reference would be appropriate, which poem it is, written by whom, when etc. --[[User:Sigmundur|Sigmundur]] ([[User talk:Sigmundur|talk]]) 11:18, 26 June 2009 (UTC)</text>
      <sha1>pj3n96aigtkvtfm5e7q0mqe0kqah7mr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Ratio and Proportion</title>
    <ns>0</ns>
    <id>200705</id>
    <revision>
      <id>1710237</id>
      <parentid>1548882</parentid>
      <timestamp>2010-02-01T18:22:48Z</timestamp>
      <contributor>
        <ip>205.208.75.179</ip>
      </contributor>
      <text xml:space="preserve">This section will help with ratios and proportions. The categories are:

{{stages}}

# [[/Ratio in daily life/|Ratio in daily life]] {{stage|00%|Jun 26, 2009}}
# [[/Equivalent ratios/|Equivalent ratios]] {{stage|00%|Jun 26, 2009}}
# [[/Reverse ratios/|Reverse ratios]] {{stage|00%|Jun 26, 2009}}

[[Category:Mathematics Worksheet]]</text>
      <sha1>16io7vqhxwr4lbw5ry3zzjoy4op8xxj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>WebObjects/Overview/Licensing</title>
    <ns>0</ns>
    <id>200706</id>
    <revision>
      <id>1651167</id>
      <parentid>1650055</parentid>
      <timestamp>2009-11-02T10:21:42Z</timestamp>
      <contributor>
        <username>Thenub314</username>
        <id>38087</id>
      </contributor>
      <comment>Undo revision 1650055 by [[Special:Contributions/Mschrag|Mschrag]] ([[User talk:Mschrag|Talk]]) restoring content.</comment>
      <text xml:space="preserve">The contents of this wikibook are out of date and have now moved to http://wiki.objectstyle.org/confluence/display/WO/Home.

== License == 

As of WebObjects 5.3, the deployment of WebObjects built server applications is now permitted on any platform. The XCode license (within which WebObjects is included) reads:

&lt;blockquote&gt;
D.  WebObjects Software.  Subject to the terms and conditions of this License, you may use, install and permit others to access the WebObjects deployment software included with the Developer Software to deploy application programs developed using Apple’s WebObjects Software.  You may also reproduce and distribute:  (1) over a network, components of the WebObjects deployment software for installation and use by others (“Java Client End Users”) on any remote computer’s volatile memory (e.g. RAM) to enable Java Client functionality for the sole purpose of communicating with Apple’s WebObjects Software that may be installed and executed on the same Apple-labeled computer on which you have installed the Developer Software (the &quot;Licensed System&quot;); and (2) both manually and automatically over a network, components of the WebObjects deployment software for installation and use by Java Client End Users on any remote computer’s non-volatile memory (e.g. ROM) to enable Java Client functionality for the sole purpose of communicating with Apple’s WebObjects Software that may be installed and executed on the Licensed System; provided that all distributions to Java Client End Users are made under terms that are at least as restrictive as those set forth in this License and contain the disclaimers and limitations set forth in Sections 6 and 7 of this License.  Subject to the terms and conditions of this License, you may also deploy server applications built with the WebObjects Software on any platform.
&lt;/blockquote&gt;

Sections 6 and 7 are standard Apple license disclaimers of warranty and limitations of liability clauses. Deployment to other platforms requires WebObjects software be built as Java servlet for deployment on a servlet compatible server such as [[WebObjects/Web Applications/Deployment/Tomcat Deployment|Apache Tomcat]].

{{BookCat}}</text>
      <sha1>a22i12jly2z8anir34sxgruy7nmfc6i</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Spicy Fried Rice</title>
    <ns>102</ns>
    <id>200707</id>
    <revision>
      <id>2690888</id>
      <parentid>2072112</parentid>
      <timestamp>2014-08-12T23:11:29Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Adjusted cats.</comment>
      <text xml:space="preserve">{{recipesummary|Rice recipes|3|15 minutes|2||54 Kcal.}}

{{Recipe}}

==Ingredients==

* 2 tbsp. [[Cookbook:Oil|coconut oil]]
* 1 big [[Cookbook:Onion|onion]], diced
* 3 cloves [[Cookbook:Garlic|garlic]], crushed
* 2 cm [[Cookbook:Ginger|ginger]], minced
* 2 pcs [[Cookbook:Scallion|scallion]], cut 1,5 cm length
* 50 g [[Cookbook:Chile|red chile]], cut 1 cm length
* 1 cup (900 g) [[Cookbook:Basmati rice|basmati rice]]
* 30 g [[Cookbook:Chili powder|Chili powder]]
* 3 Tbsp. light [[Cookbook:Soy sauce|soy sauce]]
* 2 Tbsp. [[Cookbook:Fish sauce|fish sauce]]
* 1 Tbsp. [[Cookbook:Chicken|chicken powder]]
* 1 Tbsp. [[Cookbook:Salt|salt]]
* 1 Tbsp. [[Cookbook:Pepper|pepper]]

==Procedures==

# Heat the oil on non-stick pan, fry the big onion, garlic, red chilli, ginger and scallion. Stir at 30 minutes until it's fragrant. Now add the basmati rice.
# Add the chilli powder, light soy sauce, fish sauce, chicken powder, salt and pepper. Cook until all mixed. Served hot.

[[Category:Fried rice recipes]]
[[Category:Pan fried recipes]]
[[Category:Side dish recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>59igzad5qb1p291jm3t0l3voajy2f97</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>POV-Ray/Set up</title>
    <ns>0</ns>
    <id>200708</id>
    <revision>
      <id>2564122</id>
      <parentid>1980233</parentid>
      <timestamp>2013-10-07T11:56:42Z</timestamp>
      <contributor>
        <username>Ivan Shmakov</username>
        <id>639214</id>
      </contributor>
      <comment>s/[[w:Open source software|open source]]/[[w:freeware|freeware]] with the source available/.</comment>
      <text xml:space="preserve">POV-ray is a [[w:Freeware|freeware]] program with the source code available. For users of the microsoft windows or mac OSX operating system who do not have POV-Ray already installed, you will have to dowload it from the POV-Ray [[http://www.povray.org/ website]].  For users of any major Linux distribution (Ubuntu, Fedora, Debian, etc.) you can obtain it directly from your software repository.

If you already have a copy of povray installed, you may skip this section.

== Installation==
=== For Windows ===
Povray installers can be obtained from the website, [http://povray.org/download/ here]. To install this software, you will need to select either the 32 or 64 bit &quot;binary&quot;, depending on whether you are running windows in 64 or 32 bit mode.

=== For Mac OSX ===
Stuff-it compressed archives of pov-ray can be found on their [http://povray.org/download/ website]. You will need stuff-it expander in order to be able to access the files.

===For Linux ===
Linux users may install this either through the software repository, or via the command line. You must have a connection to your software repository, such as via the internet.
==== Ubuntu/Debian ====

Graphical method: 
:From the title bar select '''System &gt; Administration &gt; Synaptic Package Manager'''.  Enter the administrator password when prompted. In the search box, type &quot;povray&quot;, then select the povray package. Once selected press install. You may be prompted to install supporting software. The software will be downloaded and installed.

Command Line:

: The package may be installed using the installer &quot;aptitude&quot;. Simply type:
 sudo apt install povray

:You may be prompted to confirm the install, after which the package manager will proceed to install POV-Ray. 

:If the packages don't appear in the repositories for your distribution, they are available from the Ubuntu repositories.
 
==== Fedora ====

Povray packages are not available for Fedora due to its non-free license [http://www.redhat.com/archives/fedora-extras-list/2006-February/msg00191.html]. But packages are maintained by the ATrpms 3rd party repository [http://atrpms.net/].

Graphical method:
:From the title bar select '''Applications -&gt; Add remove software''', then search for povray. Select it then select install.

Command Line:
: Simply type:
 sudo yum install povray

You will be prompted to confirm, at which point yum will download and install povray.

{{BookCat}}</text>
      <sha1>cnpjmxjhbkp4gylvt3z1s8b3qzm7kdg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Conlang/Intermediate/Grammar/Nouns</title>
    <ns>1</ns>
    <id>200709</id>
    <revision>
      <id>1866427</id>
      <parentid>1555791</parentid>
      <timestamp>2010-06-28T22:34:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Adding {{WikiProject Languages}}</comment>
      <text xml:space="preserve">{{WikiProject Languages}} 

== Other morphosyntactic alignments ==

Should the &quot;Case&quot; section of this page say something about other morphosyntactic alignments other than nominative/accusative? -- ergative, active, tripartite...?   Or save that exclusively for the Advanced section?  I'm inclined to say a little about it here, with a cross-reference to the appropriate page in the Advanced section. --[[User:Jim Henry|Jim Henry]] ([[User talk:Jim Henry|talk]]) 14:51, 26 June 2009 (UTC)

: I've been wondering about ergative etc.  A similar situation arose over at [[{{BOOKNAME}}/Intermediate/Sounds/Phones#Vowels]], where it only mentioned height and backness.  I didn't want to get into a lot of fancy stuff that feels Advanced, but it didn't seem right that a reader could go through the Intermediate section and then get blown away trying to read discussions of the subject because they haven't been exposed at all to terms like rounding and R-coloring.  So I tried (not, perhaps, as skillfully as I'd like) to touch briefly on each of several such terms, leaving the details for the Advanced section (and I have a list of such things to touch on similarly under consonants, when I find time).

: I'd suggest keeping the detail fairly minimal.  Perhaps a few words about ergative, and mention the names of a few others?  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 16:11, 26 June 2009 (UTC)</text>
      <sha1>i5hz6x72w04ugwnqaypqnnu1vf32fqo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Boston Baked Beans</title>
    <ns>102</ns>
    <id>200710</id>
    <revision>
      <id>2680191</id>
      <parentid>2679033</parentid>
      <timestamp>2014-07-10T13:07:18Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added side dish cat.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 4 cups canned kidney beans, rinsed and drained
* 1/2 cup molasses
* 1/4 cup blackstrap, plus more as needed
* 1/4 cup dark brown sugar
* 2 tbsp dark rum
* 1/2 tsp salt
* 1/2 tsp black pepper
* 1 tbsp dry mustard
* 6 rashers thick cut bacon, sliced (or 5 drops liquid smoke)
* 1 tbsp bacon fat

== Procedure ==
#Cook bacon. Separate from fat and place 1 tbsp fat into a large stainless steel pan. Add kidney beans and sauté over medium high heat. Add rum and tilt to ignite.*
#Add remaining ingredients and bacon and fold to combine. Bake in a 325° oven for 1 1/2 hours, adding blackstrap occasionally to prevent drying.

== Note ==
* If you do not have a gas stove, simply light with a fire stick.

{{wikipedia|Boston baked beans}}


[[Category:Bean recipes]]
[[Category:Molasses recipes]]
[[Category:Bacon recipes]]
[[Category:Baked recipes]]
[[Category:Side dish recipes]]</text>
      <sha1>jpiku1j1jn9h9hqcfdg55dpyl4mrml9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Hickory Maple Glazed Wings</title>
    <ns>102</ns>
    <id>200711</id>
    <revision>
      <id>2690002</id>
      <parentid>2684573</parentid>
      <timestamp>2014-08-09T02:41:17Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>/* Procedure */ added chicken wing cat.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 36 chicken wingettes, '''''or''''' 18 whole chicken wings, tips removed and halved
* 1/4 tsp hickory smoke powder
* 1 tbsp salt
* 1 tbsp black pepper
* [[cookbook:Maple Syrup|Maple syrup]] as needed plus 6 tbsp
* Cornmeal as needed
* 3 tbsp [[Cookbook:Smoky Chipotle Hot Sauce|Smoky Chipotle Hot Sauce]]
* 1 tbsp minced garlic
* 1/2 tbsp finely grated lemon zest
* Oil for deep frying

== Procedure ==
#Season chicken with salt and pepper. Dip chicken in maple syrup then dredge in cornmeal and fry at 350° in batches for 12 minutes. Drain on a cooling rack.
#Combine 6 tbsp maple syrup with remaining ingredients. Add wings and toss to coat. Serve.

[[Category:Chicken wing recipes]]
[[Category:Maple Syrup recipes]]
[[Category:Deep fried recipes]]
[[Category:Appetizer recipes]]
[[Category:Main course recipes]]</text>
      <sha1>olssvkb4nh3b0d74sgixi4je0yo1y5q</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:BOOKTEMPLATE</title>
    <ns>10</ns>
    <id>200712</id>
    <revision>
      <id>1767213</id>
      <parentid>1549543</parentid>
      <timestamp>2010-04-21T16:27:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Using {{documentation}}</comment>
      <text xml:space="preserve">&lt;includeonly&gt;Template:{{ROOTBOOKNAME}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>nkqvx23k322o6mty8cu2rwooytvc8fe</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Spicy Crab Cakes</title>
    <ns>102</ns>
    <id>200713</id>
    <revision>
      <id>2690885</id>
      <parentid>1844586</parentid>
      <timestamp>2014-08-12T23:02:39Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}
__NOTOC__
These crab cakes get an extra kick from cayenne pepper.

=== Ingredients ===
*: 1 pound lump blue crab meat
* 1 tbsp Old Bay
* 1 tbsp cayenne pepper
* 1 1/2 tsp kosher salt
* 1 1/2 tsp black pepper
* 1/2 cup Dijon mustard
* 2 tbsp mayonnaise
* Juice of two lemons
* Oil for deep frying
* Panko breadcrumbs as needed
* 1 egg, beaten

=== Procedure ===
#Combine all ingredients except for oil, panko, and egg. Shape into 4 equal patties.
#Dip into egg then dredge in panko. Fry at 375° just until heated through and golden brown. Serve with chipotle remoulade sauce. (below)

== Chipotle Remoulade ==

===Ingredients===

* 1/4 cup mayonnaise
* 1/4 cup Dijon mustard
* 2 tbsp dill, finely chopped
* 2 tbsp flat-leaf parsley, finely chopped
* 1 tbsp chipotle in adobo sauce puree
* Salt to taste
* Freshly ground black pepper to taste

===Procedure===
#Combine all ingredients in a small bowl.


[[Category:Crab recipes]]
[[Category:Deep fried recipes]]
[[Category:Main course recipes]]
[[Category:Appetizer recipes]]
[[Category:Sauce recipes]]
[[Category: recipes]]</text>
      <sha1>0qslfu3pssyp1wxlkp4drg7j2za8fr0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Thedos</title>
    <ns>2</ns>
    <id>200714</id>
    <revision>
      <id>1549027</id>
      <parentid>1548991</parentid>
      <timestamp>2009-06-26T16:35:39Z</timestamp>
      <contributor>
        <username>Thedos</username>
        <id>247497</id>
      </contributor>
      <minor />
      <comment>Changed my mind about structure</comment>
      <text xml:space="preserve">Stuff I thinking of drafting, that I intend to add to whatever project is appropriate once they are reasonably developed &lt;br&gt;
[[User:Thedos/Math_Study]]&lt;br&gt;
[[User:Thedos/PHP_Programming]]&lt;br&gt;
[[User:Thedos/Air_Power]]&lt;br&gt;
====Other Ideas====
Create a resource (maybe even a seperate wiki) for the sharing of ideas for teaching methods for different subjects- basically lesson plans.&lt;br&gt;
====Why???====
I'm a fairly senior and experienced instructor for a youth organization, and under the (possibly deluded) impression I'm good at teaching.</text>
      <sha1>a0v9re16rr3rymhdhrm344a2fdkgbfr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Blackstar</title>
    <ns>0</ns>
    <id>200715</id>
    <revision>
      <id>2063414</id>
      <parentid>1858184</parentid>
      <timestamp>2011-03-04T17:53:17Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: etc, → etc., using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">BlackStar - Point-to-Point GPS Navigation for BlackBerry

== Introduction ==

Blackstar is a free application that runs on most BlackBerry smartphones.  It allows the user to use the built-in GPS (or an external Bluetooth GPS) to perform point-to-point navigation.  It also has a series of Geocaching-specific enhancements that allow Premium Geocaching members to import Pocket Queries or extract data from bcaching.com.

Project page:  http://www.blackstarnavigation.com

== Installation and support ==

The software may be downloaded from the project page above, or can be installed from Blackberry App World.  

Support is available at the project forums, which can also be found at the project page.

== Getting your first GPS Lock ==

When you start BlackStar, it will attempt to get your location using whatever GPS is set up on your device.  While the lock is being acquired, you'll see a count on the screen.  This is the number of seconds BlackStar has been trying to acquire a GPS lock (not a number of satellites acquired).

Once it accomplishes the lock, it will start showing your GPS coordinates and altitude, along with speed and a compass indicating the direction you are moving (this is not a magnetic compass - it compares your current location to your last few location to interpolate the direction you are moving, so if you slow down too much or stop this compass will just start spinning off in random directions).  

This GPS lock may take some time (several minutes), and generally requires a clear view of the sky.  The GPS can sometimes work indoors, but this isn't generally the case.  Even a heavy tree canopy can interfere with GPS signal, and in large cities the tall buildings can block access to all but a few satellites, making a lock more difficult.  So for best results, go outside and enjoy some fresh air while you wait for your first lock.

If you still don't get a GPS lock, there are several things that can be causing problems.

=== GPS Setup ===
To verify that your GPS is set up properly on your BlackBerry:  
#If you already use other third-party applications that use the GPS like Google Maps, and the GPS is working there, you can skip to &quot;Security&quot;.
#Obviously, your phone needs to be set up with a GPS unit (sorry, Pearl users), and you need to allow third party applications to use it.
#This setup is generally found under Options - look for &quot;Advanced Options&quot; and &quot;GPS&quot;.
##GPS Services must be set to &quot;ON&quot; or &quot;Location ON&quot;.  If you don't have the option to turn this on, you either don't have a GPS on board or your carrier has disabled it - contact your carrier for details or see the NOTE below.
#Try refreshing the GPS from this screen and see if you get a GPS lock (Menu Button, then select &quot;Refresh GPS&quot;).
#For Blackberries that lack a GPS Receiver (like the Pearl) or cases where your carrier has disabled access to the GPS (Like Verizon OS 4.2) you need to use an external Bluetooth GPS receiver.
#If your GPS is not acquiring a lock after this, try a battery pull.

NOTE:  Verizon (and probably other carriers) once had the GPS disabled for BlackBerry devices unless you purchased their Navigation software ($10/month).  Verizon has supposedly removed this lock as of OS 4.5, so if you have a Verizon BlackBerry and you don't pay for TeleNav you'll need to upgrade the OS for BlackStar (or any third-party GPS application) to work with your internal GPS.

=== Security ===
Your GPS may be working fine, but you also need to give BlackStar access to it.  If you still can't see your location in BlackStar after verifying your GPS receiver works, check your application permissions and make sure BlackStar has access to &quot;Location(GPS)&quot; under &quot;Connections&quot;.

From the &quot;Options&quot; menu, go to &quot;Advanced Options&quot; then &quot;Applications&quot;.  Menu-click on BlackStar and select &quot;Edit Permissions&quot;.  If necessary, use the spacebar to open the &quot;Connections&quot; section, and look for &quot;Location(GPS)&quot; and make sure that is set to &quot;ALLOW&quot;.

== Adding/Managing Waypoints ==

Waypoints can generally be added in one of three ways:

=== Entering Directly ===

From the BlackStar main screen, hit the menu key and select &quot;New Waypoint&quot;.  Enter a waypoint name, your desired Lat/Lon, and a description.

If obtaining Lat/Lon from geocaching.com, the data you need will be found by clicking the [Other Conversions] link next to the Lat/Lon degrees listed on the cache's main page.
On the subsequent page under the heading &quot;Older Datum (NAD27)&quot; you'll use the data following DECIMAL.  Which will be in the format XX.XXXX -XX.XXXXX

=== Importing a GPX or LOC file from an SD card ===

If you don't have an SD card for your BlackBerry, get one.  This is just another handy thing you can do with them.

GPX files are frequently used by Premium GeoCaching.com members to download lists of GeoCaches for &quot;paperless&quot; caching.  You can have the GPX file emailed to your BlackBerry and save it to your SD card, or attach your BlackBerry to your desktop and copy it from there.

To import GPX files from the BlackStar main screen, hit [menu], select &quot;List Waypoints&quot;, then select &quot;Import GPX/LOC File&quot;.  Find and select your GPX file and you're good to go.

Be careful with the sizes of these GPX files.  While BlackStar seems to be able to handle a 500-cache query, every time you go to list the caches it'll try to sort them by distance, which means it has to calculate the distance for every cache in your current list.  With 200 or more caches on board, this can be a significant wait.

Special note:  Some companies require non-media files to be encrypted on the SD card.  In this case, you may need to save the GPX file to your &quot;music&quot; or &quot;video&quot; folder - otherwise the BlackBerry will add an extension to the filename and BlackStar can't recognize the file.

=== BCaching.com Import ===

BCaching.com also allows you to store Pocket Queries from Geocaching.com on their site if you are a Premium Geocaching member.  You can even set the Pocket Queries to email directly to your BCaching.com account, meaning you always have a reasonably current list of GeoCaches &quot;on tap&quot; at your BCaching.com account.  This is pretty easy to set up, and you can just create a few automated Pocket Queries that run every day or two and always have lots of current caches ready for &quot;on the spur of the moment&quot; GeoCaching.

You have to set up an account with BCaching (see their site for full details) and enter your BCaching credentials into BlackStar (under &quot;Options&quot; / &quot;bcaching&quot;).

Once this is set up, BlackStar can pull the 20 Geocaches that are closest to your current position from BCaching.  The real beauty of doing it this way is that the distance calculations are done on the BCaching site and are very fast.  So if you keep your BlackStar waypoints list empty, BCaching can have your &quot;nearest 20&quot; loaded up and ready to go very quickly.

You have to have a GPS lock to load the nearest caches from BCaching.  Once you have a lock, go to the Waypoints List and select &quot;Get closest BCaching GPX&quot;.  Wait for the &quot;x caches added, x caches updated&quot; message, exit the Waypoints List and go back in to force BlackStar to sort the new waypoints by distance.

Note:  When you cache this way, you may find it helpful to clear your waypoints list every now and then.  If you're driving around loading more and more caches into BlackStar, you'll find the distance calculations take longer and longer.  20 waypoints load almost instantly.  200 can take a frustrating amount of time.

Tip:  If your Pocket Queries are set to exclude caches you've found, BCaching will have no way of taking them off the list of caches to find.  Be sure your PQ includes found caches so BCaching is aware you've found the cache.  (Personally, I use weekly queries to get new caches, and I have a daily query set up centered at my home coordinates that uploads only &quot;caches I've found&quot; within a 500-mile radius, emailed directly to my BCaching account - this marks caches I've found overnight so they don't show up the next day on BCaching).

== The Hunt ==

Now it's time to go find a GeoCache!

=== Selecting a Waypoint ===

When you open the &quot;list waypoints&quot; screen, it will sort the waypoints by distance from you (if you have a GPS lock).  It will also indicate the approximate direction of each cache.

The direction is based on your current heading (the direction you are currently moving), and not what direction your BlackBerry happens to be pointed.  So if you're standing still, there's a very good chance the directions are going to be pretty much random.  For best results, walk a little distance and make sure the compass indicator is showing your approximate direction of movement before loading up the waypoints screen.

There are several ways to decide which waypoint you want to find next.  Click on one and select &quot;Waypoint Details&quot; to see the description of the Cache.  You can also select &quot;Show all on BBMaps&quot; and you'll see your nearest waypoints on a map (assuming you have BlackBerry Maps installed).

Once you've picked the waypoint you want to go to, click on it and select &quot;Set as Destination&quot;.

=== Navigating to the Waypoint ===

The navigation screen will show you a compass rose with a red arrow pointing to the cache.  As with all directional functions in BlackStar (and most GPS units, for that matter), this direction is interpolated from repeated readings of your location.  In other words, if you stop moving, the BlackBerry has no way of knowing which way is &quot;forward&quot; and the arrow will likely start to spin around.

If you have to drive to the waypoint, or just prefer a map view, there are options on the main menu to see the waypoint in Google Maps or BlackBerry Maps.

=== The Final Hunt ===

Once you reach the vicinity of the waypoint, there are several hunting tips to keep in mind:

# The arrow is (at the risk of sounding repetitive on this point) only accurate when you are moving in a straight line.  If you stop or move in erratic directions, it becomes useless fast.  You can counter this by using one of two techniques.
## Walk briskly in a straight line for at least 10 feet.  This will calibrate the arrow for you.
## Ignore the arrow and look at the &quot;distance to waypoint&quot;.  If the number is getting smaller, you're headed in approximately the right direction.
# The BlackBerry, like all GPS units, is only accurate to about 3 meters or approximately 9 feet under ideal conditions.  Tree canopy, large buildings, and even a heavy cloud cover can interfere with GPS signal reception and increase that error considerably.  Also, the original coordinates may be off due to the same issues.  So once you get to within about 20 feet or so, don't depend on the GPS as much.

=== Found it! ===

Once you've found the cache, you can log it by selecting &quot;Log Cache Online&quot; from the menu.  This will take you to the Geocaching.com mobile site with the log page for your cache preloaded.  You may have to log in to Geocaching.com, of course.

This will not delete the cache from your GPX file or BCaching, so if you load your nearest from BCaching you'll see the same cache all over again.  Keep track of what you've found for the day.  :)

== Miscellaneous helpful hints ==

=== GPS and battery life ===

The GPS is a very power-hungry device, and will drain your battery in a matter of hours.  If you want your BlackBerry to live through a full day of caching, it's helpful to only run the GPS when you need it.  

Once you know approximately where your GeoCache is, turn off BlackStar (and Google Maps or BBMaps) so the GPS can shut down for a while (unless you need it for navigation, of course).  It's nice having an indicator that you are .9 miles from the cache.. .8... .7... etc., but shutting down the GPS until you really need it might mean the difference between finding the cache and running out of juice 200 feet from the cache.

==Frequently Asked Questions==
*[[/FAQ|Frequently Asked Questions and Answers]]

{{Subjects|Computer software}}
{{Alphabetical|B}}
{{status|25%}}</text>
      <sha1>41rl2xsl4ugrvbdtz57o27qic8zhjl9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Thedos/Math Study</title>
    <ns>2</ns>
    <id>200716</id>
    <revision>
      <id>1549043</id>
      <parentid>1549042</parentid>
      <timestamp>2009-06-26T16:55:54Z</timestamp>
      <contributor>
        <username>Thedos</username>
        <id>247497</id>
      </contributor>
      <minor />
      <comment>Confusing line removed</comment>
      <text xml:space="preserve">==Vectors==
Before getting into vectors, it is important to know the difference between a Scalar and a Vector.&lt;br&gt;
A Scalar is a quantity with only a magnitude. For example, the number of fingers I have is a scalar, as is the distance I have walked.&lt;br&gt;
A Vector is a quantity with a magnitude and a direction- for example, Displacement is the direction I have traveled, and the distance.&lt;br&gt;
We represent a vector with an arrow.*add pic when i have the rights&lt;br&gt;
The beginning of the vector is the tail, and the end of the vector (where it points to) is the head. We indicate a vector using the points it goes from and to, for example in our picture our vector goes from point A to point B, so we could write it as &lt;math&gt;\overrightarrow{A B}&lt;/math&gt;. Alternatively, we can indicate it similar to a variable in algebra, as a letter. However, we either bold it or draw a line underneath it to indicate that it is a vector, not an ordinary variable. For example, we could call it &lt;math&gt;\underline{u}&lt;/math&gt;.
===Vector Math===
====Addition====
When adding vectors, we simply join them together, head to tail.&lt;br&gt;
For example,</text>
      <sha1>7kgynofzdyqms5m1jgy6kcop7yfitq1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Κ</title>
    <ns>10</ns>
    <id>200717</id>
    <redirect title="User:Proteins/Κ" />
    <revision>
      <id>1549061</id>
      <timestamp>2009-06-26T17:35:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Κ]] to [[User:Proteins/Κ]]: User template</comment>
      <text xml:space="preserve">#REDIRECT [[User:Proteins/Κ]]</text>
      <sha1>01fl5ghdgumjty83txwntteh2xxmgom</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Tangy Lemon Mousse</title>
    <ns>102</ns>
    <id>200718</id>
    <revision>
      <id>2691544</id>
      <parentid>1888419</parentid>
      <timestamp>2014-08-15T13:20:05Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
*1/2 cup freshly squeezed lemon juice
*2 tsp finely grated lemon zest
*1 cup sugar
*2 cups heavy cream, beaten to soft peaks
*1/4 cup pasteurized egg product, or 2 pasteurized egg yolks, beaten
*Pinch of salt
*1/4 cup butter, melted

== Procedure ==
#Combine all ingredients except for cream. Gently fold in cream. Refrigerate for 20 minutes and serve.

== Warnings ==

The reason I am using pasteurized egg is because I wouldn't want anyone to get sick. You could use regular eggs, but remember there are risks associated with doing so.

[[Category:Dairy recipes]]
[[Category:Egg recipes]]
[[Category:Lemon recipes]]
[[Category:Mousse recipes]]
[[Category:Dessert recipes]]
[[Category:Refrigerated recipes]]</text>
      <sha1>1mvehabs095nenj92e0cd97ldgmv9td</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Sigmundur</title>
    <ns>3</ns>
    <id>200719</id>
    <revision>
      <id>1549076</id>
      <timestamp>2009-06-26T17:52:53Z</timestamp>
      <contributor>
        <username>Swift</username>
        <id>33592</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Sigmundur!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, [[User:Swift|Swift]] ([[User talk:Swift|talk]]) 17:52, 26 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>r1j6of63ck6alf3ir3ng2x36ufxf4np</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Grilled Pork Tenderloin</title>
    <ns>102</ns>
    <id>200720</id>
    <revision>
      <id>2684189</id>
      <parentid>1734750</parentid>
      <timestamp>2014-07-23T23:59:47Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats. Adjusted temp upward to minimum U.S. food safety standards.  Adjusted text a good amount because there was no indication of the size of the expected pork loin in the original recipe.  They can be quite large.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
'''Marinade'''
* 1 pork tenderloin, trimmed, perhaps as much as 2.25 lbs (1 kg)
* 1/4 cup freshly squeezed lime juice
* 1/4 cup honey
* 1 1/2 tsp salt
* 2 tbsp apple cider vinegar
* 1/4 cup apple cider

'''Rub'''
* 2 tbsp paprika
* 1/2 tbsp garlic powder
* 1 1/3 tbsp cayenne pepper
* 1/2 tbsp chipotle powder
* 1/2 tbsp black pepper
* 1/2 tbsp dried rosemary

'''Grill'''
* 4 lbs. natural chunk charcoal
* 1/2 pound soaked applewood chips
* 2 tsp vegetable oil
* 1 sheet newspaper

== Procedure ==
#Combine Marinade ingredients in a small sauce pan. Pour half into a large zip-top plastic bag, reserving the other half, refrigerated. Add pork to the bag, remove extra air, and refrigerate for 24 hours.
#Remove pork from marinade.  Discard the bag and the marinade in the bag. Allow the pork to drain as necessary.
#Combine Rub ingredients and rub all over pork.
#Moisten newspaper with oil and wad up under a large chimney starter with charcoal in it. Light and wait 15 minutes.
#Once charcoal has heated, disperse evenly around bottom of grill. Add soaked chips, replace grate, and place pork in the center. Cover and cook for 1 1/2 minutes (or a bit more, use your judgment).
#Flip to another side and cook 1 1/2 more minutes and repeat until pork has cooked for at least 12 minutes and until the internal temp. reaches at least 145°F (63C).
#Make a large foil pouch (or use a covered dish) and place pork inside. Pour in reserved marinade (warmed to at least 145F) and let rest for 10 minutes. 
#Serve.

[[Category:Pork recipes]]
[[Category:Honey recipes]]
[[Category:Lime recipes]]
[[Category:Vinegar recipes]]
[[Category:Marinade recipes]]
[[Category:Grilled recipes]]
[[Category:Main course recipes]]
[[Category:Spice Mix recipes]]</text>
      <sha1>6yqtah0fdxtywgynmvl8ht4mk8od3dr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Respond Advocate</title>
    <ns>10</ns>
    <id>200722</id>
    <redirect title="Template:Advocate" />
    <revision>
      <id>1549102</id>
      <timestamp>2009-06-26T18:08:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Respond Advocate]] to [[Template:Advocate]]: Make in line with other response template names</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Advocate]]</text>
      <sha1>tgxr9bo43m29but3b8286g3k6ghns5a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Respond Concerns</title>
    <ns>10</ns>
    <id>200723</id>
    <redirect title="Template:Concerns" />
    <revision>
      <id>1549104</id>
      <timestamp>2009-06-26T18:09:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Respond Concerns]] to [[Template:Concerns]]: Make in line with other response template names.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Concerns]]</text>
      <sha1>i4dm0go84zkt4wc7labr5oorxabti3m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Respond Favor</title>
    <ns>10</ns>
    <id>200724</id>
    <redirect title="Template:Favor" />
    <revision>
      <id>1549109</id>
      <timestamp>2009-06-26T18:11:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Respond Favor]] to [[Template:Favor]]: In line with other response templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Favor]]</text>
      <sha1>bkrmax2awyb6wp0oaoy3y7m7ek50i50</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Respond Favour</title>
    <ns>10</ns>
    <id>200725</id>
    <redirect title="Template:Favour" />
    <revision>
      <id>1549113</id>
      <timestamp>2009-06-26T18:12:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Respond Favour]] to [[Template:Favour]]: In line with other response templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Favour]]</text>
      <sha1>r32m9j93v6nne9sm8eg2du2wuzvu26t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Respond Stand Aside</title>
    <ns>10</ns>
    <id>200726</id>
    <redirect title="Template:Stand aside" />
    <revision>
      <id>1549126</id>
      <parentid>1549123</parentid>
      <timestamp>2009-06-26T18:17:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Stand aside]]</text>
      <sha1>d73rfwh1cn9ab5fqx78u7sxaokv9gxf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Stand Aside</title>
    <ns>10</ns>
    <id>200727</id>
    <redirect title="Template:Stand aside" />
    <revision>
      <id>1549125</id>
      <timestamp>2009-06-26T18:17:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Stand Aside]] to [[Template:Stand aside]]: Sentence case.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Stand aside]]</text>
      <sha1>d73rfwh1cn9ab5fqx78u7sxaokv9gxf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Vote/Transwiki</title>
    <ns>10</ns>
    <id>200728</id>
    <redirect title="Template:Trans" />
    <revision>
      <id>1549131</id>
      <timestamp>2009-06-26T18:20:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Vote/Transwiki]] to [[Template:Trans]]: In line with other response templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Trans]]</text>
      <sha1>e55pt8tk24lcs5jh5hi16ptee1zjbab</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Print templates</title>
    <ns>14</ns>
    <id>200729</id>
    <revision>
      <id>1549135</id>
      <timestamp>2009-06-26T18:24:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">The [[Help:Collections|collections extension]] allows substitute templates to be used when creating a PDF, ODT, or Print-on-demand book from a collection of pages. To create a substitute for template SOMETEMPLATE, you would create a template named &quot;PrintSOMETEMPLATE&quot;. The Collections extension will automatically use the Print version when it is creating a collection. For ease of finding such templates, they should be put into this category.

[[Category:Templates]]</text>
      <sha1>cix23qqkv8qorpg7hc5p60zs56dh5xt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Heading templates</title>
    <ns>14</ns>
    <id>200730</id>
    <revision>
      <id>1549149</id>
      <timestamp>2009-06-26T18:29:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Formatting templates]]</text>
      <sha1>kmlqpu5tsyiwl6fbhvgzpfdwq99ucbh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Secrets to Great Ribs</title>
    <ns>102</ns>
    <id>200731</id>
    <revision>
      <id>2687130</id>
      <parentid>1838984</parentid>
      <timestamp>2014-07-31T22:56:23Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>16549</id>
      </contributor>
      <minor />
      <comment>Koavf moved page [[Cookbook:Secrets To Great Ribs]] to [[Cookbook:Secrets to Great Ribs]]</comment>
      <text xml:space="preserve">{{technique}}


If you leave ribs to other people, or don't do ribs at all, this guide will help you start making your own ribs.

== Cooking ==

Never boil ribs! Boil ribs and you lose! Just pretend the ribs were a nice, juicy, ribeye. Then would you boil it? I didn't think so.

If you don't want to have to pay attention to a smoker or a grill all day long, then do it in a 275° oven. Whatever you do, do not BOIL ribs! Just step away from a person that says you should boil ribs. See, since water leaches all the flavor from them, you'll be eating something like wet paper.

If the weather isn't very good for grilling, then just place a roasting rack in a roasting pan and place wood chips under it. Just be sure to open a window and turn on a fan just in case. Also keep a fire extinguisher around.

== Seasoning ==

Rubs are classic rib seasonings. There are some pretty good rubs on this website, but avoid salt-based commercial rubs. If you can't find one that you like, just make your own. Things that work well in rubs include paprika, chipotle powder, garlic, cayenne pepper, brown sugar, chili powder, and smoke powder. Rubs make a nice crust on the surface of the meat, and a good one will make you look like a pro.

== Sauces ==

Don't put a sauce on the meat before you cook it! The sauce will burn and the meat will either be underdone or still tough. Just brush on a sauce generously once it's done cooking, then place it on a grill or under the broiler. Even then, you don't want to use a commercial sugar-based sauce.
If you look at the ingredients, the first thing you'll see is high fructose corn syrup, then tomato, then more sugar, then oil, salt, etc. Homemade sauces are much less sugary and aren't that hard to make.

== Rib Cuts ==

Think all ribs are the same? Wrong. There are 3 different cuts of ribs: baby back/loin/back ribs, spareribs, and St. Louis ribs.

The baby back is a little more tender than the other ribs, takes flavor well, and cooks faster.

The sparerib is a little tougher, has a little cartilage, has a bit more meat on it, and takes longer to cook.

The St. Louis rib is just a sparerib with the tips and cartilage removed.



Hopefully you will get to work on some of your own lip-smacking ribs.</text>
      <sha1>0rqxj6ha8260qpkrbsqugy2x3gyr3nv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Aros/Developer/Docs/building</title>
    <ns>0</ns>
    <id>200732</id>
    <revision>
      <id>2053872</id>
      <parentid>1897828</parentid>
      <timestamp>2011-02-22T04:54:03Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>clean up, typos fixed: seperate → separate, aswell → as well, prefered → preferred using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">Building AROS in Different Directories
--------------------------------------------

It is possible, and the preferred method, to configure and build AROS in a directory other than
the working copy. For example ..
&lt;source lang=&quot;bash&quot;&gt;
$ svn co https://svn.aros.org/svn/aros/trunk/AROS aros-src
$ cd aros-src
$ mkdir ../build
$ cd ../build
$ ../aros-src/configure [...with options as appropriate...]
$ make
&lt;/source&gt;
puts the AROS working copy in the directory &quot;aros-src&quot; and builds
it in a separate, parallel directory &quot;build&quot;.

Why would you want to do this? Well there are a number of reasons...

:* You may want to separate the source and object code and only
::backup the source / avoid &quot;polluting&quot; the working copy with
::files generated during the build.
  
:* You may want to put the build directory and the working
::copy on different physical disks to improve performance.
  
:*You may want to remote mount the working copy on multiple
:: machines, and build for different machines from the same
::working copy.
  
:*You may want to build multiple configurations from the
::same working copy (and at the same time!).

The last reason above is possibly the most useful.  For instance
you can have builds for separate architectures and/or debug builds
each using the same working copy. Using multiple build directories you can
rebuild any or all configurations after an edit without the need
to either clean and reconfigure, or identify and copy changes
into another working copy.

NB:- If you have previously built AROS inside the working copy you will
need to delete all obsolete generated files from the source tree before
attempting to configure/build in another directory. The reason for this is some parts will detect the existing file in the source tree before the correct version and attempt to use that.  It is best to delete the bin/ directory as well as all files that shouldnt exist when the following command is used ..

  &lt;code&gt;svn status --no-ignore&lt;/code&gt;

Delete any files which are ignored/not supposed to be there (unless they are your own
projects files).

  [TIP]
  
  If you are compiling multiple AROS builds from the same working dir, the following
  configure option will make them use a common location to download external sources to
  
  &lt;code&gt;--with-portssources=&lt;path to common location&gt;&lt;/code&gt;
  
  It is best to use a separate directory outside of both the working dir and build dir(s)
  to store these files - so that if you delete a build or the working dir you will still
  have the files and not need to download them every time.

{{BookCat}}</text>
      <sha1>9qo7w5ff21s3sy1062mnehwefd9t9oj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Wine Glazed Pork Chops</title>
    <ns>102</ns>
    <id>200733</id>
    <revision>
      <id>2692097</id>
      <parentid>1872025</parentid>
      <timestamp>2014-08-16T20:28:31Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Recipe had no cats.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 4 thick cut bone-in pork rib chops
* 1/2 cup [[Cookbook:Chop Rub|Chop Rub]]
* Cider vinegar, as needed
* 1 cup red wine
* 1/4 cup butter, divided

== Procedure ==
#Brush pork chops generously with cider vinegar. Season pork with Rub, patting down slightly.
#Bring wine to a boil over high heat in a large saucepan and ignite. Cook until reduced by half. Add butter, 1 tbsp at a time while whisking, until all butter has melted.
#Grill pork chops over high heat 2 minutes, brushing with wine mixture, then twist 90° and cook for 2 minutes, brushing. Flip and repeat 1 more time.
#Remove and let rest 5 minutes. Serve with remaining wine mixture.

[[Category:Pork recipes]]
[[Category:Wine recipes]]
[[Category:Grilled recipes]]
[[Category:Main course recipes]]</text>
      <sha1>5awro44x2w70gkdyqp9ddt8dy7pavd2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Userboxes</title>
    <ns>14</ns>
    <id>200734</id>
    <revision>
      <id>2586627</id>
      <parentid>2573799</parentid>
      <timestamp>2013-12-01T12:38:46Z</timestamp>
      <contributor>
        <username>دالبا</username>
        <id>393521</id>
      </contributor>
      <minor />
      <comment>[[fa:رده:جعبه‌های کاربری]]</comment>
      <text xml:space="preserve">{{template category|type=userbox}}

[[Category:User namespace templates]]

&lt;!-- [[en:Category:Userboxes]] --&gt;
[[eo:Kategorio:Ŝablonaro uzantoskatola]]
[[fr:Catégorie:Boîte_utilisateur]]
[[fa:رده:جعبه‌های کاربری]]</text>
      <sha1>r9n413yzo5g3ej7rs49ztmjn0hqpuhz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Ethics.jpg</title>
    <ns>6</ns>
    <id>200735</id>
    <revision>
      <id>1549217</id>
      <timestamp>2009-06-26T19:58:30Z</timestamp>
      <contributor>
        <username>Hcogg001</username>
        <id>225308</id>
      </contributor>
      <comment>found on freeclipart.net</comment>
      <text xml:space="preserve">== Summary ==
found on freeclipart.net
== Licensing: ==
{{cc-by-2.0}}</text>
      <sha1>9drogwho0mea4as9ic5enrhprpilx8x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Stackofbooks.jpg</title>
    <ns>6</ns>
    <id>200736</id>
    <revision>
      <id>1549219</id>
      <timestamp>2009-06-26T20:00:45Z</timestamp>
      <contributor>
        <username>Hcogg001</username>
        <id>225308</id>
      </contributor>
      <comment>found on freclipart.net</comment>
      <text xml:space="preserve">== Summary ==
found on freclipart.net
== Licensing: ==
{{cc-by-2.0}}</text>
      <sha1>9g758x6o5pcm73d179mle6igo77t27m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Book Overload.jpg</title>
    <ns>6</ns>
    <id>200737</id>
    <revision>
      <id>1549220</id>
      <timestamp>2009-06-26T20:01:54Z</timestamp>
      <contributor>
        <username>Hcogg001</username>
        <id>225308</id>
      </contributor>
      <comment>found on freeclipart.net</comment>
      <text xml:space="preserve">== Summary ==
found on freeclipart.net
== Licensing: ==
{{cc-by-2.0}}</text>
      <sha1>9drogwho0mea4as9ic5enrhprpilx8x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Islam In The World/George W. Bush</title>
    <ns>0</ns>
    <id>200740</id>
    <revision>
      <id>2472396</id>
      <parentid>1928142</parentid>
      <timestamp>2013-01-03T13:02:54Z</timestamp>
      <contributor>
        <username>Gold1618</username>
        <id>492166</id>
      </contributor>
      <comment>clarified Bush's beliefs specifically about Islam</comment>
      <text xml:space="preserve">George W. Bush held the office of President of the United States of America when the September 11 terrorism acts were carried out in 2001. Osama bin Laden, a militant Saudi Arabian muslim, soon claimed responsibility for the act. He had been forced to leave Sudan, after attacks on a US embassy, and the USS Cole, and sought haven with the Taliban in Afghanistan.

The US government demanded that the Taliban hand Osama bin Laden unconditionally over, but when they refused, the US military invaded the country to capture the heads of the terrorist organisation, al-Qaeda, which Osama was said to lead. The initial invasion appeared to be a success, and coalition forces soon gained control of Kabul. Soon, however, it became apparent that the country was not quite won yet; warlords swept in to fill the power void, and the Taliban regrouped. Eight years later, there are few prospects for peace in that war-torn country.

While the Bush administration was eager to explain that its &quot;War on Terror&quot; was in no way a war on Islam, not all were convinced. Calling the incursion into Afghanistan a &quot;crusade&quot; was a sore spot for some Muslims&lt;ref&gt;[http://weekly.ahram.org.eg/2001/552/p2fall3.htm War, 21st-century style]&lt;/ref&gt; and particularly after the second US invasion of Iraq, the relationship between the US and the &quot;Muslim world&quot; became a sensitive issue.

However, Bush also publicly stated that he believed that Muslims have no barriers to entry into Heaven that are not also faced by Christians, and that Islam was as acceptable a path to God as Christianity.

==References==
&lt;references/&gt;

[[Category:Islam In The World]]
[[ar:مستخدم:الحارث بن همام/حقوق الله/جورج بوش الابن]]</text>
      <sha1>9uazs56qg6zkn5qugud1t295zbp09k2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Global Issues: Japan/Globalization/Toyota Megaweb</title>
    <ns>0</ns>
    <id>200744</id>
    <revision>
      <id>2066110</id>
      <parentid>1561709</parentid>
      <timestamp>2011-03-06T04:38:14Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]] using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">== Overview ==

The Toyota Megaweb Showcase is a huge car showroom. Spread over 260,500 square feet in three pavilions, Mega Web has it's main focus on young consumers in their 20s and early 30s [1]. It's about the past, the present and the future. All the models of Toyota are in this showroom unlocked so as a visitor you can really experience a Toyota. In a way it is Disneyland for adults/men.The purpose of this exhibit is: `We want people to see, ride and dream', this was said by the Toyota Motor Corp. President Hiroshi Okuda [2]. 

There are six exhibits located in the various buildings of the Toyota Megaweb:

1 History Garage

Here cars from the past can be observed, not only from Toyota but from various brands. There are cars from all over the world from the 1950s to the 1970. The different rooms are a visit worth and have a different timezones and various types of cars.

2 Universal Designer Showcase

In this showcase is about the design of cars. How is this done and what should you think about.  

3 Toyota City Showcase

In this part you can see and learn all about Toyota's new models. Experience for yourself Toyota's new technology showcased in the hybrid and racing cars. Also announcements of new cars and motorsport events are communicated here.

4 Ride One

At ride one a person with a car licence can perform a test drive in one of the latest Toyota cars on a track. The costs are around 300 yen per car. In this way you can really experience a Toyota.

5 E-com Ride

This ride consists of a large track that passes around the complex but also through the building. The E-com ride are small special painted cars that drive by themselves. It's a kind of cruise control of the future, the car increase speed or break automatically.

6 Kids Hybrid Ride One

The kids are not forgotten. In this exhibit kids can drive a car. Here there are motor assisted hybrid cars that drive around on a 150 m circuit.


== History/Timeline ==
In March 1999 this Showroom opened her doors for visitors. The exhibits, and the current and the future cars are updated frequently.


== References ==
[1-2] http://www.highbeam.com/doc/1G1-54267288 retrieved on 25MAY09.

Personal visit to the Toyota Megaweb Showcase

Website of the Toyota Megaweb: http://www.megaweb.gr.jp/English retrieved on 25MAY09

http://www.autoblog.com/2006/07/11/toyota-mega-web-the-best-auto-showroom-ever retrieved on 25MAY09

http://metropolis.co.jp/CarsBikesarchive349/305/carsbikesinc retrieved on 25MAY09

{{BookCat}}</text>
      <sha1>cf0sokriebip6p032zd5a9bjhw5gezc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Global Issues: Japan/Peace Movements &amp; Peace Museums/JUMP</title>
    <ns>0</ns>
    <id>200746</id>
    <revision>
      <id>1561702</id>
      <parentid>1550343</parentid>
      <timestamp>2009-07-06T23:21:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">[http://www.ministryofpeace.jp JUMP], Japan United For Ministry of Peace, founded by [http://www.peaceinspace.blogs.com/campaign_for_a_positive_f/2008/02/yumi-kikuchi-bu.html Yumi Kikuchi], 
is an organization of individual citizens, whose main goal is to bring about a lasting and sustainable peace by establishing a Ministry for Peace across all of Japan.  A Ministry of Peace, referred to in the United States as a [http://en.wikipedia.org/wiki/Department_of_Peace Department of Peace], is a specific governmental institution that assesses governmental policy and legal decisions, on national, as well as international level, and then suggests alternatives based on the [http://www3.unesco.org/iycp/uk/uk_sum_cp.htm Culture of Peace], rather than economic gain or strategic / military power.  As defined by the United Nations, the Culture of Peace is a set of values, attitudes, modes of behaviour and ways of life that reject violence and prevent conflicts by tackling their root causes to solve problems through dialogue and negotiation among individuals, groups and nations (UN Resolutions [http://www3.unesco.org/iycp/kits/res52-13_en.htm A/RES/52/13]: Culture of Peace and [http://www3.unesco.org/iycp/kits/uk_res_243.pdf A/RES/53/243] Declaration and Programme of Action on a Culture of Peace).

The structure and design of a Ministry or Department of Peace is one that would not only establish a formal Department of Peace, but that would also create a [http://www.democraticunderground.com/discuss/duboard.php?az=view_all&amp;address=389x4908415 Secretary of Peace] position, appointed by the President of the United States, who would among many things, hold the cultivation of peace as a strategic national policy objective and work closely with the President and other lawmakers to advance this objective via domestic and foreign policy initiatives. 

The Department of Peace would also look to establish an &lt;strong&gt;Office of Peace Education and Training&lt;/strong&gt; that would carry out the functions of the Department relative to the development and implementation of peace education training at the elementary, secondary, university, and postgraduate levels, including the development of a Peace Academy. 

One of the most vocal advocates for a Department of Peace here in the United States is [http://kucinich.house.gov/issues/issue/?IssueID=1564 Congressman Dennis Kucinich] who has been a strong advocate for peace and meaningful reform towards that end in U.S. national and foreign policy. 

JUMP, as organization seeking to develop a Ministry of Peace in Japan, shares the basic mission and vision of numerous other independent organizations that seek to establish a Department of Peace with their home countries.  JUMP is also one of the founding members of the [http://www.mfp-dop.org/ Global Alliance for Ministries and Departments of Peace], a community of individuals and organizations working within their respective countries to establish ministries or departments of peace. The Global Alliance regularly hosts annual international conferences for current and potential members to encourage program growth and to address relevant global issues.

JUMP has an active voice in the Article 9 debate - the spirited debate over preserving or removing the clause in Japan's pacific constitution that prohibits maintaining a standing army as well as the use of military force to resolve international disputes. JUMP is an advocate for Article 9 preservation locally in Japan, but also supports the international, [http://www.iadllaw.org/en/node/172 Global Article 9 Campaign] holding Article 9 as a broad mechanism for peace and the shared property of the world.  Additionally they work to advocate for and to recognize the relevance that the cultivation of peace has on human rights, disarmament, nuclear weapons abolition, conflict prevention, development, the environment, etc.  JUMP is a strong advocate for developing self-sustaining communities, protecting the environment, corporate social responsibility, minimizing the effects of globalization, UN reform and other global issues.

'''IMPACT ON AUTHOR'''

I was particularly interested in JUMP because they are an advocate for peace in what is seemingly a tangible and meaningful way. The notion of a Ministry of Peace that works closely with Japanese law makers to develop and implement legislation and policies aimed at cultivating national and international peace was refreshing. I thought that it was an interesting idea to consider what that would like here in the United States. That is, a Department of Peace that works closely with the U.S. President to develop domestic and foreign policies that fully consider the importance of preserving and advancing the principles of peace as well as partnering with the President and other law makers to construct peaceful alternatives to international conflict. I believe that the current political and diplomatic climate is one that is incredibly tenuous. There are a wide and varied range of very serious issues brewing all across the world stage such as the U.S. Wars in Iraq and Afghanistan, Iran's pursuit of nuclear energy, the Israeli-Palestinian conflict, North Korea's testing of nuclear missiles, the issue of nuclear disarmament, pressure for UN reform, U.S. strained relationships with Russia, Cuba, etc., just to name a few. When you look closely at international relations and present-day issues, it is quite clear that the peace that exists is fragile and that there are many opportunities for international conflict. I believe that the establishment of Ministries or Departments of Peace in every country is potentially an important first step towards meaningful, lasting global peace. 

'''REFERENCES'''

Chinen, Mark 2006, ‘Article 9 of he constitution of Japan and the use of procedural and
     substantive heuristics for consensus’, Michigan Journal of Intentional Law vol. 27.

“Department of Peace.”  Wikipedia.  19 June 2009.  &lt;http:// en. wikipedia. org /wiki   
     /Department_of_Peace&gt;

International Association of Democratic Lawyers 2008, ‘Global Article 9 Campaign
     Background’ viewed June 26, 2009 http://iadllaw.org/en/node/172.

Japan-101 Information Resource, ‘Article 9 of Japan’s Constitution – No War Clause’,
     viewed June 26, 2009 http://www.japan-101.com/government/article_9_of_japan.htm.

Japan United for Ministry of Peace 2007, ‘Welcome to JUMP’, viewed June 26, 2009, 
     http://ministryofpeace.jp/english/index.html.

Secretary of Peace, U.S. Department of Peace and Nonviolence 2009, ‘One of Top 10 
     Ideas for Change Sent to Administration.’ viewed June 27, 2009.     
     http://www.democraticunderground.com/discuss/duboard.php?az= view_all&amp;    
     address=389x4908415.

Stebbins, Jane 2003, ‘Udall Backs Creating Department of Peace’ Summit Daily News 8 
     April.

U.S. Department of Peace, ‘Campaign to Establish The Peace Alliance.’ viewed June 26,
     2009, http://www.thepeacealliance.org/content/view/77/118.

{{BookCat}}</text>
      <sha1>1j744k4ru836e30hfiwbsh9y4z21egn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Rosa</title>
    <ns>110</ns>
    <id>200747</id>
    <revision>
      <id>1876082</id>
      <parentid>1549371</parentid>
      <timestamp>2010-07-07T18:35:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Rosa&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Rose
|binomial =Rosa
|image1 =Rosa virginiana.jpg
|caption1 =Virginia Rose
|image2=Rosa blanda.jpg
|caption2=Smooth Rose
|image3 =Rose hip.JPG
|caption3=Rose hips
|description =Roses are familiar to almost anyone who loves flowers.  However, the roses you buy from a florist or see in the grocery store do not look a whole lot like the wild ones you might find out in a field.  Wild roses have five petals.  The flowers are showy and large, usually an inch or two across.  The center of the flower has many yellow stamens ('''stay'''-mins) which are little thread-like structures.  The leaves generally have toothy edges.  The plant itself grows anywhere from one to six feet tall.  The stems are often thorny.

In the fall, the flowers turn into rose hips, which are small round fruits.
|facts = Rose hips rich in vitamin C and are commonly used as an herbal tea, often blended with hibiscus and as an oil. They can also be used to make jam, jelly, marmalade and wine. Rose hip soup, &quot;nyponsoppa,&quot; is especially popular in Sweden.
}}</text>
      <sha1>1vkkqlhz0mlmab6td7686x0pi1i6uzr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Kalmia angustifolia</title>
    <ns>110</ns>
    <id>200748</id>
    <revision>
      <id>1876108</id>
      <parentid>1550208</parentid>
      <timestamp>2010-07-07T18:38:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Kalmia angustifolia&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Sheep Laurel
|binomial =Kalmia angustifolia
|image1 =Kalmia angustifolia Rubra.jpg
|caption1 =Cluster of flowers
|image2=Kalmia angustifolia 3869.JPG
|caption2=
|image3 =Kalmia angustifolia 4502.JPG
|caption3=Sheep Laurel growing at the base of a Pine tree among some blueberries.
|description =Sheep Laurel has beautiful pink flowers shaped like bowls.  The petals are joined together all around the edges.  At the base of the petals there are some darker pink dots.  It looks like there are more dark dots around the edge of the &quot;bowl&quot; but if you look closely, you will see that these dots are connected to little threads.  The &quot;threads&quot; are called stamens ('''stay'''-mins), and the dots on the end of each is called an anther.  From the very center of the flower arises a white tube called a style.  The flowers are located a near the middle of the plant, peeking out from a layer of long, narrow leaves.  

The leaves are leathery, thick, and shiny.  They stay green year round.  The stem is woody and grows anywhere from six inches to two feet high.

Sheep Laurel is closely related to Mountain Laurel.  Mountain laurel can grow to be very tall (up to 30 feet) and has wide leaves.  Sheep Laurel leaves are far narrower.  These two plants are in the same genus ('''jee'''-nuss), and their species names remind us whether the leaves are wide or narrow.  Sheep Laurel is ''Kalmia angustifolia'', and Mountain Laurel is ''Kalmia latifolia''.  ''Angustifolia'' means &quot;narrow leaf,&quot; and ''latifolia'' means &quot;wide leaf.&quot;

|facts = Sheep Laurel is poisonous, especially to sheep.  It has many other names that attest to this unfortunate fact, including Lamb-kill, Calf-kill, and Sheep-poison.
}}</text>
      <sha1>5b1d2oicrmbp9j9ojxqk6u6g6fuelso</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Dianthus deltoides</title>
    <ns>110</ns>
    <id>200749</id>
    <revision>
      <id>1876126</id>
      <parentid>1549382</parentid>
      <timestamp>2010-07-07T18:40:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Dianthus deltoides&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Maiden Pink
|binomial =Dianthus deltoides
|image1 =Dianthus deltoides.jpeg
|caption1 =Flower
|image2=DianthusDeltoides.jpg
|caption2=Colony of Maiden Pinks
|image3 =Dianthus deltoides Newborough.jpg
|caption3=Stem and flower
|description =Maiden Pink is a brilliant pink flower with five petals.  Each petal has darker pink stripes going across their width near the center of the flower.  Flowers appear one per stem, but sometimes you can find many Maiden Pinks all growing together.  They are such beautiful flowers that they are planted by highway departments along roads and sidewalks.

The stems grow up to 18 inches tall, and the leaves are very narrow.
|facts = The scientific name for Maiden Pink is ''Dianthus deltoides''.  The word ''Dianthus'' was made from two Greek words: ''dios'' meaning &quot;divine&quot; and ''anthos'' meaning &quot;flower.&quot;  The Greeks thought that this flower was special to their main god Zeus.
}}</text>
      <sha1>hx5e5c9k4atzky7540qbbgvv5o60tvz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Doctorotto</title>
    <ns>3</ns>
    <id>200750</id>
    <revision>
      <id>1549388</id>
      <timestamp>2009-06-27T01:29:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">== Welcome! ==

&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Doctorotto!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, --[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 01:29, 27 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>q5b6kkc588fnga3hgf09s9f9xesbil8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Kjoldft</title>
    <ns>3</ns>
    <id>200751</id>
    <revision>
      <id>1556470</id>
      <parentid>1549412</parentid>
      <timestamp>2009-07-03T02:37:27Z</timestamp>
      <contributor>
        <username>Mike.lifeguard</username>
        <id>55262</id>
      </contributor>
      <minor />
      <comment>{{checkuserblock}}</comment>
      <text xml:space="preserve">{{mbox|type=warning|msg='''You have been indefinitely [[Wikibooks:Blocking policy|blocked]] from editing Wikibooks. This was done in accordance with policy because of your disruptive edits.

Please note that page blanking, addition of random text or spam, deliberate misinformation, privacy violations, [[Wikibooks:No personal attacks|personal attacks]], and repeated, blatant violations of our [[Wikibooks:Neutral point of view|neutral point of view]] policy are considered [[Wikibooks:vandalism|vandalism]]. If you wish to make useful contributions, you are welcome to come back after the block expires.&lt;br&gt;To request to be unblocked, add {{tlx|unblock|reason}} to [[Special:MyTalk|your user talk page]], which you can still edit.&lt;br/&gt;&amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 02:37, 3 July 2009 (UTC)}}</text>
      <sha1>elptm6o0jkuwvnqkd353q38jcpm5usi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Lobelia cardinalis</title>
    <ns>110</ns>
    <id>200752</id>
    <revision>
      <id>2260830</id>
      <parentid>1876103</parentid>
      <timestamp>2012-02-03T00:33:14Z</timestamp>
      <contributor>
        <username>CommonsDelinker</username>
        <id>49843</id>
      </contributor>
      <minor />
      <comment>Replacing Fleur_inconnue_02.jpg with [[File:Lobelia_cardinalis-02.jpg]] (by [[commons:User:Billinghurst|Billinghurst]] because: [[commons:Commons:File renaming|File renamed]]: Die Blume ist nicht mehr unbekannt, la fleur n'est plus inconnue, the p...</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Cardinal Flower
|binomial =Lobelia cardinalis
|image1 =Lobelia cardinalis 2.jpg
|caption1 =
|image2=Lobelia_cardinalis-02.jpg
|caption2=
|image3 =06-08-16 LobeliaCardinalisIR.jpg
|caption3=
|description =Cardinal Flowers grow to about four feet tall on the banks of rivers and streams.  They have clusters of brilliant red flowers growing along most of their length.  The leaves are up to eight inches long and two inches wide.

Each flower has five petals, with the largest one being at the bottom center.  The next largest petals are next to the bottom one, and two small petals grow at the top.  

Native Americans made a tea from the root and used it to treat intestinal sicknesses.  They used a tea made from the leaves to treat bronchitis, and chest colds.
|facts = This plant is a great choice for the garden if you want to attract hummingbirds.
}}</text>
      <sha1>hx8dhy7jl17a0u66spy48ehspun75q0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>XQuery/Basic Session Management</title>
    <ns>0</ns>
    <id>200753</id>
    <revision>
      <id>1582906</id>
      <parentid>1549416</parentid>
      <timestamp>2009-07-29T15:17:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">== Motivation ==
You want to associate some behavior of your web application with a users's login session.

== Method ==
There are several functions provided by eXist and other web servers to manage information associated with a login session.

&lt;source lang=&quot;xml&quot;&gt;
xquery version &quot;1.0&quot;;

let $session-attributes := session:get-attribute-names()

return
&lt;results&gt;
   {for $session-attribute in $session-attributes
       return
       &lt;session-attribute&gt;{$session-attribute}&lt;/session-attribute&gt;
   }
&lt;/results&gt;
&lt;/source&gt;

Before you add any session attributes this might return only a single variable such as:

&lt;source lang=&quot;xml&quot;&gt;
&lt;results&gt;
   &lt;session-attribute&gt;_eXist_xmldb_user&lt;/session-attribute&gt;
&lt;/results&gt;
&lt;/source&gt;


&lt;source lang=&quot;xml&quot;&gt;
xquery version &quot;1.0&quot;;

(: set the group and role :)
let $set-dba-group := session:set-attribute('group', 'dba')
let $set-role-editor := session:set-attribute('role', 'editor')

let $session-attributes := session:get-attribute-names()

return
&lt;results&gt;
   {for $session-attribute in $session-attributes
       return
       &lt;session-attribute&gt;{$session-attribute}&lt;/session-attribute&gt;
   }
&lt;/results&gt;
&lt;/source&gt;

This will return the following attributes:

&lt;source lang=&quot;xml&quot;&gt;
&lt;results&gt;
  &lt;session-attribute&gt;group&lt;/session-attribute&gt;
  &lt;session-attribute&gt;role&lt;/session-attribute&gt;
  &lt;session-attribute&gt;_eXist_xmldb_user&lt;/session-attribute&gt;
&lt;/results&gt;
&lt;/source&gt;

These attributes will remain associated with the user until the user logs out or their session times out, typically after 15 minutes of inactivity.

One sample use of session attributes is to keep track of user interface preferences.  For example if a user wants to have their data sorted by a person's zip code you can add that to their session variable.

   let $set-sort := session:set-attribute('sort', 'zip-code')

{{BookCat}}</text>
      <sha1>t49c92y2umyg64ges9ajfdfdmmoaccm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Float templates</title>
    <ns>14</ns>
    <id>200754</id>
    <revision>
      <id>1549441</id>
      <timestamp>2009-06-27T02:42:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Formatting templates]]</text>
      <sha1>kmlqpu5tsyiwl6fbhvgzpfdwq99ucbh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Column templates</title>
    <ns>14</ns>
    <id>200755</id>
    <revision>
      <id>1798291</id>
      <parentid>1549446</parentid>
      <timestamp>2010-05-18T01:56:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">[[Category:Templates]]</text>
      <sha1>0t5jiibdq6k1tam9oy4zt1yld5iz80u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Text formatting templates</title>
    <ns>14</ns>
    <id>200757</id>
    <revision>
      <id>2153210</id>
      <parentid>1549466</parentid>
      <timestamp>2011-08-04T12:45:54Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <comment>hide prefix</comment>
      <text xml:space="preserve">{{hide prefix|Template:}}
[[Category:Formatting templates]]</text>
      <sha1>dn6385tich7ym1zl05eizi7vx0n00en</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Blender 3D: Noob to Pro/Illustrative Example: Model a Wine Glass</title>
    <ns>0</ns>
    <id>200758</id>
    <revision>
      <id>2163102</id>
      <parentid>1617788</parentid>
      <timestamp>2011-09-01T08:04:40Z</timestamp>
      <contributor>
        <ip>66.189.165.84</ip>
      </contributor>
      <text xml:space="preserve">{{B3D:N2P/NAV
|next=Creating Ogg-Theora movies using Blender
|previous=Spin Tool Introduction
}}


Lets start with a classic spin tool model. Here we go step by step in making a wine glass... or any other latheable models... using the spin tool.

==Model half the outline==

Using what you have learned earlier, create a simple outline of the wine glass. Just the half part and leave the center part open. As a recap, go first to front view. Select the cube (or if you have no object create one) and press Tab to go to edit mode. Delete all vertices of the object, then using Ctrl+
LMB, add connected vertices. Keep holding Ctrl and clicking until finished. Adjust vertices as required.

{{Noframecenter|1=[[Image:WineglasTut outline.png|266px]]|2=Finished wineglass outline}}

==Spinning the outline==

Remember to align the two end points in the open side. Select the two vertices and scale at the x-axis to zero (Skey-&gt;Xkey-&gt;0key). Move the 3d cursor to the center by snapping to the selection (Shift+S -&gt; 4key). Then select all vertices by hitting Akey twice.

{{Noframecenter|1=[[Image:WineglassTut preparation.jpg|235px]]|2=Wineglass outline in preparation for spinning}}

Now go to top view (Num7). Select the editing button (F9Key) and find the mesh tools tab. Change Degr to 360 for a complete turn and change steps to 20 or higher to form a much rounded shape.

{{Noframecenter|1=[[Image:WineglassTut spin settings.jpg|380px]]|2=Parameter settings for the project}}

Press the Spin button.

{{Noframecenter|1=[[Image:WineglasTut spin frontview.jpg|238px]]|2=Wineglass result seen in front view}}

==Cleaning up the Mesh==

Select all vertices by pressing Akey twice then apply remove doubles operation (WKey-&gt;6Key/Remove doubles). Now the model is finished. Make it shade smooth using set smooth (Wkey -&gt; set smooth). If you like, add a Subsurf modifier to the object to make it geometrically smoother. If dark bands appear, recalculate normals outside (Ctrl+N), to eliminate them.

{{Noframecenter|1=[[Image:Winglass noTex.jpg]]|2=Finished wineglass rendered with no textures}}

{{B3D:N2P/NAV
|next=Illustrative Example: Model a Mug
|previous=Spin Tool Introduction
}}

{{BookCat}}</text>
      <sha1>jfhxr65ilhvk2t8g8nzqxtcs4h411va</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Template references</title>
    <ns>14</ns>
    <id>200759</id>
    <revision>
      <id>1549482</id>
      <timestamp>2009-06-27T03:15:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Templates]]</text>
      <sha1>0t5jiibdq6k1tam9oy4zt1yld5iz80u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Ohma-stublink</title>
    <ns>10</ns>
    <id>200763</id>
    <redirect title="Template:Organic Horticulture in the Mid-Atlantic/Stub" />
    <revision>
      <id>1549525</id>
      <timestamp>2009-06-27T03:57:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Ohma-stublink]] to [[Template:Organic Horticulture in the Mid-Atlantic/Stub]]: Naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Organic Horticulture in the Mid-Atlantic/Stub]]</text>
      <sha1>f3vmpzghxdsleu0xwcif84oog3eixbm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Ohma-weed</title>
    <ns>10</ns>
    <id>200764</id>
    <redirect title="Template:Organic Horticulture in the Mid-Atlantic/Weed" />
    <revision>
      <id>1549528</id>
      <timestamp>2009-06-27T03:58:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Ohma-weed]] to [[Template:Organic Horticulture in the Mid-Atlantic/Weed]]: Naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Organic Horticulture in the Mid-Atlantic/Weed]]</text>
      <sha1>ds1f4ceejwbtaqlhx26iu08lslzz1o8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Magic word templates</title>
    <ns>14</ns>
    <id>200765</id>
    <revision>
      <id>1549562</id>
      <parentid>1549544</parentid>
      <timestamp>2009-06-27T04:28:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">These templates pretend to be built-in magic words like &lt;nowiki&gt;{{PAGENAME}} and {{SUBPAGENAME}}&lt;/nowiki&gt; by using all caps. They provide additional functionality over the built-ins.

[[Category:Utility templates]]</text>
      <sha1>i3pb0wfirlypyhq4zwxxpgsp128ehdy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Disclaimer templates</title>
    <ns>14</ns>
    <id>200767</id>
    <revision>
      <id>1549581</id>
      <parentid>1549556</parentid>
      <timestamp>2009-06-27T04:43:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">[[Category:Information templates]]</text>
      <sha1>jmo5rvz4qp7c0n2eccrkeeywd7v9nie</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Utility templates</title>
    <ns>14</ns>
    <id>200768</id>
    <revision>
      <id>1549560</id>
      <timestamp>2009-06-27T04:28:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Templates]]</text>
      <sha1>0t5jiibdq6k1tam9oy4zt1yld5iz80u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Information templates</title>
    <ns>14</ns>
    <id>200770</id>
    <revision>
      <id>1549574</id>
      <timestamp>2009-06-27T04:41:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Templates]]</text>
      <sha1>0t5jiibdq6k1tam9oy4zt1yld5iz80u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Note templates</title>
    <ns>14</ns>
    <id>200771</id>
    <revision>
      <id>1549594</id>
      <timestamp>2009-06-27T04:50:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Information templates]]</text>
      <sha1>jmo5rvz4qp7c0n2eccrkeeywd7v9nie</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Algebra/Algebraic exponents</title>
    <ns>0</ns>
    <id>200772</id>
    <revision>
      <id>1567754</id>
      <parentid>1554247</parentid>
      <timestamp>2009-07-13T16:26:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">Calculate the problem carefully. (50 questions)

# &lt;math&gt;\!6x\times\!x=\cdots&lt;/math&gt;
# &lt;math&gt;\!y\times\!y\times\!y=\cdots&lt;/math&gt;
# &lt;math&gt;\!3x\times\!6y=\cdots&lt;/math&gt;
# &lt;math&gt;\!5x^2\times\!3xy=\cdots&lt;/math&gt;
# &lt;math&gt;\!3y^3\times\!6xy\times\!2x^2=\cdots&lt;/math&gt;
# &lt;math&gt;\!2x^3y^2\times\!3yz=\cdots&lt;/math&gt;
# &lt;math&gt;\!3yz\times\!5z^2=\cdots&lt;/math&gt;
# &lt;math&gt;\!4x^5\times\!3x^3y^5=\cdots&lt;/math&gt;
# &lt;math&gt;\!7x^2\times\!5y^2z\times\!5z=\cdots&lt;/math&gt;
# &lt;math&gt;\!3y\times\!4xy^4=\cdots&lt;/math&gt;
# &lt;math&gt;\!(\!5xy\times\!6x^2y^3)\div\!3y^5=\cdots&lt;/math&gt;
# &lt;math&gt;\!3x^2\times\!6xy^3=\cdots&lt;/math&gt;
# &lt;math&gt;\!4y^2z\times\!3xy\div\!2x^5=\cdots&lt;/math&gt;
# &lt;math&gt;\!5x^3\div\!10x^2y^3\times\!5xy=\cdots&lt;/math&gt;
# &lt;math&gt;\!(6x)^3\times\!(5y)^4=\cdots&lt;/math&gt;

{{BookCat}}</text>
      <sha1>lilci7krpups86yb3cn3cakgbfse7tv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Progress templates</title>
    <ns>14</ns>
    <id>200773</id>
    <revision>
      <id>2134235</id>
      <parentid>2134225</parentid>
      <timestamp>2011-07-05T15:24:28Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/208.71.79.254|208.71.79.254]] ([[User talk:208.71.79.254|talk]]) to last version by Adrignola</comment>
      <text xml:space="preserve">[[Category:Information templates]]</text>
      <sha1>jmo5rvz4qp7c0n2eccrkeeywd7v9nie</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Medical Physiology/Cellular Physiology/Cell junctions and Tissues</title>
    <ns>0</ns>
    <id>200775</id>
    <revision>
      <id>2481572</id>
      <parentid>2481570</parentid>
      <timestamp>2013-01-25T05:16:41Z</timestamp>
      <contributor>
        <username>CommonsDelinker</username>
        <id>49843</id>
      </contributor>
      <minor />
      <comment>Replacing Gap_cell_junction_en.svg with [[File:Gap_cell_junction-en.svg]] (by [[commons:User:Morning Sunshine|Morning Sunshine]] because: [[commons:COM:FR|File renamed]]: [[commons:COM:FR#reasons|File renaming criterion #6]]: Harmonize file names of a ...</comment>
      <text xml:space="preserve">==Introduction==
Cells are organized to form tissues, and tissues are organised to form organs. Tissues are formed by an aggregation of like cells carrying out a like function. Cells are linked together by '''cell junctions'''  and are supported by a '''matrix''' which they themselves secrete.

The cell junctions are basicaly of three types, '''tight''', '''desmosomal''', and '''gap'''. We will look at these in more detail in the next section.
&lt;div style='margin:20px'&gt;
[[File:Cell junctions.png|400px]]
&lt;/div&gt;
Histologists classify the tissues according to their physical features, physiologists tend to classify tissues acording to their function. There are four major types of tissue : '''epithelial'''; '''connective'''; '''neural'''; and '''muscular'''. The following table summarizes the difference between these tissues.

&lt;table cellpadding='10' border='1&gt;
&lt;caption&gt;&lt;b&gt;Summary of Tissue Properties&lt;/b&gt;&lt;/caption&gt;
&lt;tr&gt;
     &lt;th&gt;&lt;/th&gt;
     &lt;th&gt;Features&lt;/th&gt;
     &lt;th&gt;Matrix&lt;/th&gt;
     &lt;th&gt;Other Characeristics&lt;/th&gt;
&lt;/tr&gt;
&lt;tr valign='top'&gt;
     &lt;td&gt;&lt;b&gt;Epithelial&lt;/b&gt;&lt;/td&gt;
     &lt;td&gt;Organized in sheets. Provides covering: Lines body surface, hollow organs, cavities and tubes.  Provides tissues for secretory glands.&lt;/td&gt;
     &lt;td&gt;Matrix is minimal in ammount, forming the '''basement membrane''' of the sheets of epithelial cells.&lt;/td&gt;
     &lt;td&gt;Cells are polarized with a 'surface' and 'basement' side. The surface side may have special characteristcs such as '''cilia''' or '''microvilli'''. The membrane functions also often differ.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr valign='top'&gt;
     &lt;td&gt;&lt;b&gt;Connective&lt;/b&gt;&lt;/td&gt;
     &lt;td&gt;Characterised by a varied and extensive matrix. Cells are usually scattered irregularly in this matrix. Cell shape is irregular to round.&lt;/td&gt;
     &lt;td&gt;Matrix is varried consisting of numerous protein fibers in ground substance. Consistency varies from liquid (blood) to gelatinous; from firm (fibrous tissue,cartilage) to solid (bone).&lt;/td&gt;
     &lt;td&gt;Found throughout body, forms the support and structure for organs and the body itself.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr valign='top'&gt;
     &lt;td&gt;&lt;b&gt;Nerve&lt;/b&gt;&lt;/td&gt;
     &lt;td&gt;Cells can generate electrical signals. Highly branched.&lt;/td&gt;
     &lt;td&gt;Neural tissue has no matrix. Support is provided by other specialized neural cells.&lt;/td&gt;
     &lt;td&gt;Found throughout body with concentrations in the brain, the spinal cord and the enteric nervous system of the gut.&lt;/td&gt;

&lt;/tr&gt;

&lt;tr valign='top'&gt;
     &lt;td&gt;&lt;b&gt;Muscle&lt;/b&gt;&lt;/td&gt;
     &lt;td&gt;Cells can generate electrical signals, which result in contraction. 'Voluntary' muscle  makes up skeletal muscles; Cardiac muscle powers the heart; smooth muscle surrounds hollow organs and tubes.&lt;/td&gt;
     &lt;td&gt;Muscular tissue does not secrete its own matrix. Skeletal muscle is suppored by fibous tissue, and is attached to tendons.&lt;/td&gt;
     &lt;td&gt;Intestinal Smooth muscle and Cardiac muscle both have cell to cell communication.&lt;/td&gt;

&lt;/tr&gt;

&lt;/table&gt;

==Cell Junctions==
[[File:Junctional complex and pinocytotic vesicles - embryonic brain-TEM.jpg|thumb|Transmission electron microscope image of a thin section cut through the developing brain tissue (telencephalic hemisphere) of an 11.5 day mouse embryo. This higher magnification image of &quot;Embryonic brain 80415&quot;, shows an area of the luminal surface of the telencephalon, which has a junctional complex and pinocytotic vesicles. The junctional complex is divided into three types of junctions: 1) the most apical is the tight junction, which controls and/or restricts the movement of molecules across epithelial layers and helps maintain polarity, 2) the zonula adherens and 3) the desmosome, which is a spot junction. The pinocytotic vesicles are formed from coated pits in the plasma membrane and are involved in endocytosis.]]

It is the junctions that allow individual cells to be organized into tissues. Numerous proteins called '''cell adhesion molecules (CAMs)''' have been identified, and the illustrations shown really represent a generqalization. These proteins are being intensively studied because of their importance in cancer and the embryonic development organization of the nervous system. According to Ganong the proteins can be divided into four large groups, integrins, IgG superfamily, cadhedrins and selectins. A Biochemistry text should be consulted of more information on these proteins.

[[File:Cell junction simplified en.svg|600px]]
The tight junctions  can be found at the apexes of many lumen epithelial cells, and forms a 'water tight' occlusion that prevents leaking of water, substrates and ions from the extra cellular fluid to the lumen. That having been said, there is evidence that some tight junctions are more 'leaky' than others, and that this 'leakiness' is under hormonal control. Desmosomes and Zona Adherens junctions hold cells together.The Zona Adherens is a continuous band, whereas Desmosomes are more in the nature of a 'spot weld'. They allow passage of some substances between the cells. Gap junction give direct communication from cell to cell. They are found in many epithelial cells, but most famously they exist in Cardiac muscle and intestinal smooth muscle
[[File:Tight junction blowup.jpg|thumb| Electron Micrograph of negatively stained en:Proximal convoluted tubule of Rat en:Kidney tissue at a magnification of ~55,000x and 80KV.
This is a close-up of the en:Zonula occludens (en:Tight junction) out of a larger image of a Kidney Tissue with Tight junction.]]
===Tight (Zona Occludans) Junctions===
[[File:Cellular_tight_junction-en.svg|400px]]





===Zona Adherens Junctions===
[[File:Adherens Junctions structural proteins.svg|400px]]

===Desmosome Spot Junctions===
[[File:Desmosome cell junction en.svg|400px]]

===Gap Junctions===
[[File:Gap_cell_junction-en.svg|400px]]



&lt;!--
WIDER FIELD VERSION OF FIRST EM
[[File:Unctional complex and pinocytotic vesicles - embryonic brain - TEM.jpg|thumb|Transmission electron microscope image of a thin section cut through the developing brain tissue (telencephalic hemisphere) of an 11.5 day mouse embryo. This image of the luminal surface of the telencephalon, shows junctional complexes and pinocytotic vesicles. The junctional complex is divided into three types of junctions: 1) the most apical is the tight junction, which controls and/or restricts the movement of molecules across epithelial layers and helps maintain polarity, 2) the zonula adherens, which also includes the numerous actin filaments seen in the apical cytoplasm, and 3) the desmosome, which is a spot junction. The pinocytotic vesicles are formed from coated pits in the plasma membrane and are involved in endocytosis.]]--&gt;
&lt;br clear=&quot;both&quot; /&gt;

==Epithelia==
[[File:Normal colonic mucosa.jpg|thumb| Epithelia from Colon]]
[[File:Normal Epidermis and Dermis with Intradermal Nevus 10x.JPG|thumb|Normal epidermis and Dermis]]
[[File:Ciliated columnar epithelium.JPEG|thumb|Ciliated columnar epithelium]]

[[File:Microvilli-Duodenum.JPG|thumb|Microvilli-Duodenum]]

Histologists classify epithelia cells by appearence. Single layer epithelias is called 'simple'; multilayer is called stratified. The diagram below shows a typical histological classification. Plain light microscope appearences appear in the thumbnails to the right.
&lt;div align='center' style='align:center;margin:10px'&gt;
[[File:Illu epithelium.jpg]]
&lt;p&gt;&lt;i&gt;Histological classification of Epithelia&lt;/i&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;!--
[[File:Tkanka nablonkowa.png]]

SUMMARY

A - simple columnar epithelium. 
B - simple columnar epithelium with cilia. 
C - stratified squamous epithelium. 
D - simple squamous epithelium. 
E - transitional epithelium. 
F - pseudostratified epithelium. 
G - cuboidal epithelium. 
H - choanocytes 
I - stratified columnar epithelium with cilia. 
--&gt;

&lt;div align='center' style='align:center;margin:10px;border:black 1px solid;width:400px;'&gt;

[[File:Skinlayers.png]]
&lt;p align='center'&gt;&lt;i&gt;Illustration showing layers of the skin&lt;/i&gt;&lt;/p&gt;
&lt;/div&gt;


&lt;div align='center' style='align:center;margin:10px;border:black 1px solid;width:600px;'&gt;
[[File:Cell enterocyte.png]]
&lt;div align='center'&gt;&lt;i&gt;Illustration showing an enterocyte, a small intestine epithelial cell. These cells are bound by tight junctions, depicted by the yellow ovals in the illustration. Note the microvilli which increase the absorptive area about a hundredfold.&lt;/i&gt;&lt;/div&gt;
&lt;/div&gt;

As physiologists we find it more useful to classify epithelia by function:
*Exchange Epithelia
*Transport Epithelia
*Protective Epithelia
*Ciliated epithelia
*Secretion epithelia
A brief description is given below. More detail is given in the sections dealing with different orga types.
===Exchange Epithelia===
Thin flattened cells that allow the easy exchange of gasses. These are found in he capillaries and the lungs.

===Transport Epithelia===
These epithelia are found lining the the tubes of the intestine and the kidney. 
*The cells are usually columnar and regulate the exchange of  nutrients an ions. 
*The apical surface usually has microvilli, fingerlike projections that can increase the absorptive area up to 100X.
*These cells are usually bound together with tight junctions
*These cells usually have a high metabolism (numerous mitochondria)

===Protective Epithelia===
Prevent exchange between the internal and external environment, examples include:
*skin
*linings of upper respiratory system
*mouth
*oesaphagus
*urethra
*vagina

===Ciliated epithelia===
Line parts of the respiratory system - where they propel mucous laden with particulate matter out of the lung and the fallopian tube - where they waft the ovum to the uterus.

===Secretion epithelia===
Form either '''exocrine''' or '''endocrine''' glands

==Connective Tissue==
Connective tissue can be classified into the following groups:
*Loose Connective Tissue
*Dense Irregular Connective Tissue
*Dense Regular Connective Tissue
*Adipose Tissue
*Blood
*Cartilage
*Bone
Detailed histology is really outside the scope of this book. Physiologists need to know enough to under stand function. Brief descriptions are given below, fuller descriptions will be given in the appropriate sections on systems. A good histology book is recommended for more a detailed description.
===Loose Connective Tissue===
Loose Connective Tissue has a gel like ground substance with more ground substance than fibers or gel. The main cell type are fibroblasts, and it is foundaround blood vessels and organs and under the epithelia. What anatomists call 'loose fasia' is mainly Loose Connective Tissue.
===Dense Irregular Connective Tissue===
Dense Irregular Connective Tissue has more fibers than ground substance. The fiber type is mainly collagen, and the dominant cells are fibroblasts. Dense Irregular Connective Tissue forms the sheaths of nerves and muscles. Anatomists 'organized fascia' is of this type.
===Dense Regular Connective Tissue===
Parallel fibers of collagen. This connective tissue makes up ligaments and tendons
===Adipose Tissue===
Fat cells are found distributed throughout the body. There is very little ground substance
===Blood===
This will be reviewed in detail in the sections on Blood and and immunology 

===Cartilage===
[[File:Hyaline cartilage.jpg|thumb|Hyaline cartilage]]
[[File:Cartilage polarised.jpg|thumb|Cartilage in polarized light]]
&lt;!--[[File:Cartilage.jpg]]--&gt;
There are really two kinds of cartilage:
*Hyaline Cartilage
*Fibro cartilage.
Hyaline Cartilage is found lining the joints and is mainly firm hyaluronic acid. Fibro cartilage is found in the ear, the septum of the nose, and tracheal rings.
A characteristic of  cartilage is that it has no blood supply.
&lt;!--===Liver===
[[File:Portal triad.JPG|thumb|A portal Triad from the liver]]
--&gt;
===Bone===
Bone makes up the skeleton. It consists of two types, cortical and trabecular bone. It will be considered in more detail in its own section.


&lt;div align='center' style='align:center;margin:10px;border:black 1px solid;width:600px;'&gt;
[[File:Illu compact spongy bone.jpg]]
&lt;div align='center'&gt;&lt;i&gt;Illustration showing compact and Spongy bone.&lt;/i&gt;&lt;/div&gt;
&lt;/div&gt;

====Cortical or Compact Bone====
[[File:Compact bone - ground cross section.jpg|thumb|Compact bone - ground cross section.]]
[[File:Compact bone - decalcified cross section.jpg|thumb|Compact bone - decalcified cross section.]]
The thumbnails show calcified and decalcified cross sections of bone. Cortical bone occurs in the shafts of long bones. 
====Spongy or Trabecular Bone====
[[File:Spongy bone - trabecules.jpg|thumb|Spongey bone showing trabecules]]
Trabecular bone appears in vertebrae and the metaphyses (ends) of long bones.

==Muscle==
===Skeletal Muscle===
&lt;div align='center' style='align:center;margin:10px;border:black 1px solid;width:600px;'&gt;
[[File:Illu muscle structure.jpg]]
&lt;div align='center'&gt;&lt;i&gt;Illustration showing the general arrangement of Skeletal muscle.&lt;/i&gt;&lt;/div&gt;
&lt;/div&gt;


[[File:Skeletal muscle - cross section, nerve bundle.jpg|thumb]]
[[File:Skeletal muscle - longitudinal section.jpg|thumb|Longitudinal section through skeletal muscle]]

===Smooth Muscle Cells===
[[File:Illu compact spongy bone.jpg]]
[[File:Glatte Muskelzellen.jpg|thumb|smooth muscle cells]]
===Cardiac Muscle===
==Neural Tissues==
[[File:Peripheral nerve, cross section.jpg|thumb|]]
[[File:Myelinated nerve fibers, Ranvier nodes.jpg|thumb|Myelinated nerve fibers showing nodes of Ranvier]]

{{BookCat}}</text>
      <sha1>efj1pfyxpihxde1ftryoxuwnkhxyv9o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>USB</title>
    <ns>0</ns>
    <id>200776</id>
    <redirect title="Serial Programming/USB" />
    <revision>
      <id>1549627</id>
      <timestamp>2009-06-27T06:19:51Z</timestamp>
      <contributor>
        <username>Caesarion</username>
        <id>92735</id>
      </contributor>
      <minor />
      <comment>Redirected page to [[Serial Programming/USB]]</comment>
      <text xml:space="preserve">#REDIRECT [[Serial Programming/USB]]</text>
      <sha1>buxecjgvy6d9dyjqio9ppztz19rrtll</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:33rogers</title>
    <ns>2</ns>
    <id>200777</id>
    <redirect title="User talk:33rogers" />
    <revision>
      <id>1549641</id>
      <parentid>1549639</parentid>
      <timestamp>2009-06-27T07:22:38Z</timestamp>
      <contributor>
        <username>33rogers</username>
        <id>239975</id>
      </contributor>
      <comment>Redirected page to [[User talk:33rogers]]</comment>
      <text xml:space="preserve">#REDIRECT [[User_talk:33rogers]]</text>
      <sha1>ba5h1vjnqgmodcwv1q5y0dvfp6a3129</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:33rogers</title>
    <ns>3</ns>
    <id>200778</id>
    <revision>
      <id>1826524</id>
      <parentid>1794584</parentid>
      <timestamp>2010-06-06T17:18:53Z</timestamp>
      <contributor>
        <username>PullUpYourSocks</username>
        <id>4060</id>
      </contributor>
      <minor />
      <comment>/* Re: Canadian Criminal Procedure and Practice */</comment>
      <text xml:space="preserve">Welcome, 33rogers!
{| style=&quot;background:white; border:1px solid #abd5f5;; padding:0px; border-spacing:0px; color: #000000;&quot;
 ! style=&quot;background:#d0e5f5; color: #000000;&quot; | [[Wikibooks:Welcome|Getting started]] with Wikibooks
 |-
 | style=&quot;padding:5px;&quot; |
* Wikibooks is a collection of open-source textbooks. Find out [[WB:WIW|what this means]].
* To sign your name (on discussion pages), use four tildes, like this: &amp;#126;&amp;#126;&amp;#126;&amp;#126; 
* Learn how to [[Using Wikibooks|use Wikibooks]] and learn more about the community.
* [[WB:CCO|Explore]], [[Wikibooks:Be bold|be bold]], and have fun!
 |}

Come introduce yourself in the [[Wikibooks:Reading room/General|general reading room]] or your project in the [[Wikibooks:Reading room/Projects|project reading room]].  If you have any questions, you can ask in the [[Wikibooks:Reading room/Assistance|assistance reading room]] or contact me personally.--[[User:33rogers|33rogers]] ([[User talk:33rogers|talk]]) 07:23, 27 June 2009 (UTC)

== Editor, Rollbacker, Patroller ==

Hi 33rogers,

As per your request, I have enabled the editor tools on your account.  I also turned on rollbacker and patroller even though you did not request them.  Thanks for your work here, and congrats on the new buttons! --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 12:41, 10 May 2010 (UTC)

:Thank you. --[[User:33rogers|33rogers]] ([[User talk:33rogers|talk]]) 13:47, 10 May 2010 (UTC)

== About your screenshots ==

As I don't think you will check your commons talk, I am here to ask you if you want to change those screenshot licenses into &lt;nowiki&gt;{{Wikimedia-screenshot}}&lt;/nowiki&gt;. [[User:Kayau|Kayau]] ( [[User talk:Kayau|talk]] &amp;#124; [[Special:Emailuser/Kayau|email]] &amp;#124; [[Special:Contributions/Kayau|contribs]] ) 14:54, 13 May 2010 (UTC)
:done. thanks. --[[User:33rogers|33rogers]] ([[User talk:33rogers|talk]]) 14:57, 13 May 2010 (UTC)

== Canadian Criminal Procedure and Practice ==

It depends. But that's a topic that will be covered under &quot;release and attendance&quot;. I'll get around to starting that sometime soon. The &quot;Detention&quot; section mostly focuses on accused rights while while in custody. [[User:PullUpYourSocks|PullUpYourSocks]] ([[User talk:PullUpYourSocks|talk]])</text>
      <sha1>nqfj99qbhoi517w59l29k6nr460xppt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:33rogers/monobook.css</title>
    <ns>2</ns>
    <id>200779</id>
    <revision>
      <id>1798903</id>
      <parentid>1549651</parentid>
      <timestamp>2010-05-18T17:03:25Z</timestamp>
      <contributor>
        <username>33rogers</username>
        <id>239975</id>
      </contributor>
      <comment>testing implementation - MediaWiki:Geshi.css</comment>
      <text xml:space="preserve" />
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
      <model>css</model>
      <format>text/css</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Black-Peppered Chicken Spaghetti</title>
    <ns>102</ns>
    <id>200780</id>
    <revision>
      <id>2686482</id>
      <parentid>2680087</parentid>
      <timestamp>2014-07-31T19:00:10Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>16549</id>
      </contributor>
      <minor />
      <comment>Koavf moved page [[Cookbook:Black-peppered chicken spaghetti]] to [[Cookbook:Black-Peppered Chicken Spaghetti]]</comment>
      <text xml:space="preserve">{{Recipesummary|Pasta recipes|5|1 hours|3||350 kcal.}}

{{Recipe}}

==Ingredients==

* 1 pack (800 g) [[Cookbook:Spaghetti|spaghetti]] noodles
* 1 [[Cookbook:Litre|l]] [[Cookbook:Water|water]]
* 5 tbsp. [[Cookbook:Oil|oil]] (2 tbsp. for boiling spaghetti, 3 tbsp. for frying)
* 6 cloves [[Cookbook:Garlic|garlic]], crushed and minced
* 1 green [[Cookbook:Capsicum|capsicum]], cut into 8 pieces
* 1 red [[Cookbook:Capsicum|capsicum]], cut into 8 pieces
* 1 big [[Cookbook:Onion|onion]], minced
* 100 ml [[Cookbook:Cream|cream]]
* 6 pcs [[Cookbook:Chicken|chicken]] fillet, cut 2 cm
* 25 g [[Cookbook:Black Pepper|black pepper]]
* 2 tbsp. [[Cookbook:Salt|salt]]
* 2 tbsp. [[Cookbook:Parsley|parsley]]

==Procedure==

# Heat the water, put the spaghetti and 2 tbsp. oil. After 10 minutes boiled, keep the water. Drain the spaghetti from the big pan.
# Now, boil the chicken. Sprinkle some salt. When it's changes the color, drain the chicken.
# Heat the oil on non-stick pan, fry the garlic, green and red capsicum and big onion.
# Add the chicken, cream, black pepper, salt and parsley. Stir until become mixture.
# Add the spaghetti, stir until all mixed.
# Served hot.

[[Category:Inexpensive recipes]]
[[Category:Chicken recipes]]
[[Category:Pasta recipes]]
[[Category:Main course recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>6avtuysp32bbc0fyb6071rdg0p0yjfn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Syed Kazim</title>
    <ns>2</ns>
    <id>200781</id>
    <revision>
      <id>1549658</id>
      <parentid>1549655</parentid>
      <timestamp>2009-06-27T09:51:07Z</timestamp>
      <contributor>
        <username>Syed Kazim</username>
        <id>247825</id>
      </contributor>
      <comment>Final draft</comment>
      <text xml:space="preserve">Hey!
Thanks for visiting. My main account is on the [http://www.en.wikipedia.com English Wikipedia]. Please click [http://en.wikipedia.org/wiki/User:Syed_Kazim here] to go to my main user page. Apologies for any inconveniences caused.</text>
      <sha1>bdu6wsdyvksbiee8ylrib9p6i3r7rbj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Professional and Technical Writing/Business Communications/E-Mail</title>
    <ns>1</ns>
    <id>200782</id>
    <revision>
      <id>1549661</id>
      <timestamp>2009-06-27T10:52:59Z</timestamp>
      <contributor>
        <ip>59.96.196.198</ip>
      </contributor>
      <comment>Created page with 'Really a nice inforamtion'</comment>
      <text xml:space="preserve">Really a nice inforamtion</text>
      <sha1>k35w1bblxt1d83o27zk85ltxykyhunc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Beef Yakiniku Pizza</title>
    <ns>102</ns>
    <id>200783</id>
    <revision>
      <id>2686379</id>
      <parentid>2069204</parentid>
      <timestamp>2014-07-31T17:50:50Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>16549</id>
      </contributor>
      <minor />
      <comment>Koavf moved page [[Cookbook:Beef yakiniku pizza]] to [[Cookbook:Beef Yakiniku Pizza]]</comment>
      <text xml:space="preserve">{{Recipesummary|Pizza recipes|12|1 hour 30 minutes|3||4,8 Mcal.}}

{{Recipe}} | [[Cookbook:Cuisine of Japan|Cuisine of Japan]]

==Ingredients==

===[[Cookbook:Dough|Dough]]===

* 600 g high protein [[Cookbook:Flour|flour]]
* 200 g low protein [[Cookbook:Flour|flour]]
* 15 g [[Cookbook:Yeast|yeast]]
* 3 tbsp. [[Cookbook:Sugar|sugar]]
* 75 ml [[Cookbook:Water|cold water]]
* 3/4 tsp [[Cookbook:Salt|salt]]

===Topping===

&lt;!--REMOVE THE YAKINIKU SAUCE WHEN FINISH MAKE THE TOPPING INTO THE SMALL PLATE AS A CONDIMENT--&gt;

&lt;!--ALL OF THE FILLING INGREDIENTS FRIED TOGETHER--&gt;

* 2 tbsp. [[Cookbook:Oil|vegetable oil]]
* ½ big [[Cookbook:Onion|onion]], chopped
* ½ red [[Cookbook:Capsicum|capsicum]], cut into 10 pieces
* 600 g tenderloin meat, cut 2 * 1 * 1 cm
* 100 ml [[Cookbook:Water|water]]
* 2 tbsp. [[Cookbook:Mirin|mirin]]
* 2 tbsp. light [[Cookbook:Soy sauce|soy sauce]]
* 2 tbsp. oyster sauce
* 2 tbsp. [[Cookbook:Cornflour|cornflour]], dissolved with 20 ml [[Cookbook:Water|water]]
* 1 tbsp. [[Cookbook:Salt|salt]]
* 1 tbsp. [[Cookbook:Sugar|sugar]]

===Spreading===

* 5 tbsp. [[Cookbook:Tomato Sauce|tomato sauce]]

==Procedures==

* For dough: Mix all the dough ingredients in the bowl, close with wrapping plastic, and quiet until 10 minutes until expanded.
* For the topping: Heat the oil on non-stick pan, fry the big onion and capsicum, stir at 10 seconds. Add the tenderloin and the water. And then add some mirin, light soy sauce and oyster sauce.
* Add the dissolved cornflour, salt and sugar. Stir until mixed.
* Prepare the pizza dough, roll with rolling pin with diameter 10 cm, and then fill with the meat toppings.
* Bake in the oven at the temperature 220 degree Celsius at 20 minutes.
* Serve hot with the dipping sauces.

[[Category:Expensive recipes]]
[[Category:Japanese recipes]]
[[Category:Beef recipes]]
[[Category:Recipes with metric units]]
[[Category:Pizza recipes]]</text>
      <sha1>7myex2026pcpbxssm9dbf983wrhfv0h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Hastyo</title>
    <ns>2</ns>
    <id>200785</id>
    <revision>
      <id>2174384</id>
      <parentid>1549687</parentid>
      <timestamp>2011-10-02T23:57:08Z</timestamp>
      <contributor>
        <username>HethrirBot</username>
        <id>475400</id>
      </contributor>
      <minor />
      <comment>Robot: Cosmetic changes</comment>
      <text xml:space="preserve">&lt;font face=&quot;Century Gothic&quot;&gt;
&lt;center&gt;&lt;font size=&quot;8&quot;&gt;W&lt;/font&gt;&lt;font size=&quot;8&quot;&gt;ELCOME!&lt;/font&gt; 




&lt;font face=&quot;Century Gothic&quot;&gt;
&lt;center&gt;&lt;font size=&quot;4&quot;&gt;'''My name is Hastyo. Now I am using all Wikimedia projects. I am very loving all Wikimedia administrator! Because the appereance are handsome and preety, not so bad. I think you are healthy now. Thanks. --[[User:Hastyo|Hastyo]] ([[User talk:Hastyo|talk]]) 13:22, 27 June 2009 (UTC)'''&lt;/font&gt;</text>
      <sha1>ghx8hi1ldwztfyfx2kreh1s5eazgju1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Mesquite Beef Tenderloin</title>
    <ns>102</ns>
    <id>200786</id>
    <revision>
      <id>2687697</id>
      <parentid>1749676</parentid>
      <timestamp>2014-08-02T02:01:07Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added grilled and main course cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 center cut [[Cookbook:Beef|beef]] tenderloin roast
* 3/4 cup soaked mesquite wood chips
* Cognac, as needed

===Rub===
* 3 Tbsp [[Cookbook:Paprika|paprika]]
* 1 Tbsp coarsely ground coriander (seeds, not herb)
* 1 1/2 tsp salt
* 1 1/2 tsp coarsely ground black pepper
* 1 1/2 tsp dried rosemary
* 2 tsp dehydrated lemon peel

== Procedure ==
#Place beef in a large zip-top plastic bag. Add cognac to cover and refrigerate for at least 30 minutes.
#Place mesquite chips in the hot coal area of a charcoal grill.
#Combine Rub ingredients and rub all over beef. Bring to room temperature.
#Place beef in center of grill, cover, and cook, turning often until internal temperature reaches 135° for medium rare, 150° for medium, 160° for toast.
#Remove and let rest for 10 minutes and serve.

[[Category:Beef recipes]]
[[Category:Spice Mix recipes]]
[[Category:Main course recipes]]
[[Category:Grilled recipes]]</text>
      <sha1>4wfx9jt8mk1pe34ziusmapg87ly86us</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Chipotle Fried Chicken</title>
    <ns>102</ns>
    <id>200787</id>
    <revision>
      <id>2692252</id>
      <parentid>2682753</parentid>
      <timestamp>2014-08-16T23:39:39Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Removed from FRC cat.  Has no pic.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 2 '''''each''''' skinless chicken thighs, legs, and boneless skinless chicken breasts
* 1/2 cup adobo sauce
* 16 ounces vegetable shortening
* 1/4 cup freshly squeezed lime juice
* Cornmeal as needed

'''Seasoning'''
* 3 tbsp chipotle powder
* 2 tsp cayenne pepper
* 1 tbsp garlic powder
* 2 tbsp smoked paprika
* 2 tbsp salt
* 1 tbsp black pepper

== Procedure ==
#Combine adobo sauce and lime juice and pour over chicken. Refrigerate overnight.
#Remove chicken from adobo mixture. Combine Seasoning ingredients and sprinkle over chicken.
#Dredge chicken in cornmeal. Let rest for 2-3 minutes.
#Meanwhile, heat shortening in a large cast iron skillet to 350°. Place breasts and legs around the edges, then place thighs in the center.
#Cook for 12 minutes per side. Drain on a cooling rack and serve.

[[Category:Chicken recipes]]
[[Category:Chile recipes]]
[[Category:Lime recipes]]
[[Category:Spice Mix recipes]]
[[Category:Deep fried recipes]]
[[Category:Southwestern recipes]]
[[Category:Main course recipes]]</text>
      <sha1>kj1nzi9fr6ykovyspb0u2u455t65nxb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Fry Seasoning for Chicken</title>
    <ns>102</ns>
    <id>200788</id>
    <revision>
      <id>1728273</id>
      <parentid>1728272</parentid>
      <timestamp>2010-02-28T23:19:04Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1/2 cup smoked paprika
* 1/4 cup salt
* 1/4 cup granulated garlic
* 6 tbsp lemon pepper
* 3 tbsp cayenne pepper
* 2 tbsp red pepper flake
* 2 tbsp Old Bay
* 2 tbsp Worcestershire sauce powder (you can find this easily on the Internet)

== Procedure ==
#Combine all ingredients in an airtight container with a shaker lid.

[[Category:Spice Mix recipes]]</text>
      <sha1>e3a3hf658cm4gq63exdk7hdxylkte48</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Poultry Shake</title>
    <ns>102</ns>
    <id>200789</id>
    <revision>
      <id>1776459</id>
      <parentid>1549695</parentid>
      <timestamp>2010-04-26T16:05:14Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

Everyone serious about frying chicken ought to have one of these.

== Ingredients ==
*1/2 cup paprika
*1/2 cup salt
*1/3 cup garlic powder
*1/4 cup cayenne pepper
*1/3 cup lemon pepper

== Procedure ==
#Combine all ingredients in an airtight container with a shaker lid.

[[Category:Spice Mix recipes]]</text>
      <sha1>sjwgsdru3hnyptzu9tu7rw8x5yweh67</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Rosemary Garlic Pork Roast</title>
    <ns>102</ns>
    <id>200790</id>
    <revision>
      <id>2689944</id>
      <parentid>1796475</parentid>
      <timestamp>2014-08-08T22:56:44Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <comment>Adjusted text.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 boneless pork loin roast
* 1/4 cup [[Cookbook:Chop Rub|chop rub]]
* Cider vinegar, as needed
* 1 sprig rosemary
* 5 cloves garlic
* Non-stick cooking spray

== Procedure ==
#Generously brush pork with cider vinegar. Apply Rub, pressing slightly to aid adhesion. Spray with non-stick cooking spray. Refrigerate at least 1 hour.
#Place rosemary in the bottom of a roasting pan and place garlic in a circle around it. Place pork on top.
#Some may wish to be a bit bolder and make slits in the meat to insert the rosemary and garlic into the roast.
#Insert an oven-safe probe thermometer into the center and bake at 375°F until internal temperature reaches 145°F.
#Remove and let rest for 10 minutes. Serve.

[[Category:Garlic recipes]]
[[Category:Pork recipes]]
[[Category:Rosemary recipes]]
[[Category:Roasted recipes]]
[[Category:Main course recipes]]</text>
      <sha1>fwd6gebfohl39i80tw4w31wxgivie1c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Rosemary Garlic Oil</title>
    <ns>102</ns>
    <id>200791</id>
    <revision>
      <id>2689942</id>
      <parentid>1785583</parentid>
      <timestamp>2014-08-08T22:48:46Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <comment>Adjusted text.  Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

I am surprised how much people will pay for infused oils when you can make them easily in your own home.

== Ingredients ==
* 1/2 gallon any flavorless high-smoke point oil, such as canola, grapeseed, peanut, or safflower.
* 6 sprigs rosemary
* 20 cloves garlic
* 1/2 tsp salt

== Procedure ==
#Heat the oil in your tallest largest pot over low heat. Add remaining ingredients and warm for 1 hour.
#Strain and keep in an airtight container. Some may want to keep this in the refrigerator, others may not.

Proportionally reduce the amounts of all ingredients to an amount to fit your needs.

[[Category:Oil recipes]]
[[Category:Garlic recipes]]
[[Category:Rosemary recipes]]</text>
      <sha1>phnou26rt2uwpwz5qybfjjvje0adylb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Hot Wing Dip</title>
    <ns>102</ns>
    <id>200793</id>
    <revision>
      <id>2684888</id>
      <parentid>1735963</parentid>
      <timestamp>2014-07-26T15:04:41Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added appropriate cats.</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 cup crumbled blue cheese
* 1/2 cup sour cream 
* 1/2 tbsp minced garlic
* 2 tbsp cayenne pepper
* 1 tbsp salt
* 1 recipe [[Cookbook:Hot Wings|Hot Wings]] or [[Cookbook:Buffalo Wings|Buffalo Wings]]
* Celery sticks

== Procedure ==
#Combine cheese, cayenne, sour cream, garlic, and salt in a serving bowl.
#Serve with celery and hot wings/Buffalo Wings.

[[Category:Dairy recipes]]
[[Category:Dip recipes]]
[[Category:Sauce recipes]]</text>
      <sha1>1vgxbftajxxcbc0yrqol2ppjcayo8i1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Adventist Youth Honors Answer Book/Edible Wild Plants/Cranberry</title>
    <ns>0</ns>
    <id>200795</id>
    <revision>
      <id>1734817</id>
      <parentid>1734816</parentid>
      <timestamp>2010-03-12T22:34:09Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>add image</comment>
      <text xml:space="preserve">{{EWP
|name=Cranberry
|image=Mirtillo Rosso Cranberry.jpg
|description=
Cranberries are creeping shrubs or vines that grow up to 2 meters long and from 5 to 20 cm. tall. They have slender stems, and small evergreen leaves. They have dark pink flowers with petals that leave the style and stamens exposed and pointing forward. Their fruit is a berry that is larger than the leaves of the plant. It is white when unripe, but is a deep red when it is fully ripe. Cranberries have a very acidic taste.
|range=Northeastern US, northern Europe and Asia, and southeastern Canada.
|season=Late September to early October.
|use=Cranberries are usually made into '''compotes''' or '''jellies''', but are also baked into '''muffins''', '''scones''', or '''cakes''', or other baked goods. They are considered too sour for eating unaccompanied.
}}

{{BookCat}}
&lt;noinclude&gt;[[Category:Adventist Youth Honors Answer Book/Transcluded Modules|{{SUBPAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>b6uubedz9mqsx8cq1zv2uae7b95k7ed</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Introduction</title>
    <ns>0</ns>
    <id>200797</id>
    <revision>
      <id>2203685</id>
      <parentid>2203682</parentid>
      <timestamp>2011-10-30T15:46:58Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>Rejected the last text change (by [[Special:Contributions/175.110.178.235|175.110.178.235]]) and restored revision 1550567 by Suruena</comment>
      <text xml:space="preserve">{{Chapter navigation||Source Code Presentation}}

{{TOC|limit=3|float=none}}

== Introduction ==

Style is an often overlooked but very critical attribute of writing. The style of writing directly impacts the readability and understandability of the end product. The style of programming, as the writing of source code in a computer language, also suffers from this neglect. Programs need to be readable and understandable by humans, not just comparable by machines. This requirement is important in the creation of quality products that not only meet user needs but also can be developed on schedule and within estimated cost. This book is intended to help the computer professional produce better Ada programs. It presents a set of specific stylistic guidelines for using the powerful features of Ada 95 (Ada Reference Manual 1995) in a disciplined manner. 

Each guideline consists of a concise statement of the principles that should be followed and a rationale for following the guideline. In most cases, an example of the use of the guideline is provided, and, in some cases, a further example is included to show the consequences of violating the guideline. Possible exceptions to the application of the guideline are explicitly noted, and further explanatory notes are provided, where appropriate. In some cases, an instantiation is provided to show more specific guidance that could be enforced as a standard. In selected cases, automation notes discuss how one could automate enforcement of the guideline. 

Ada was designed to support the development of high-quality, reliable, reusable, and portable software. For a number of reasons, no programming language can ensure the achievement of these desirable objectives on its own. For example, programming must be embedded in a disciplined development process that addresses requirements analysis, design, implementation, verification, validation, and maintenance in an organized way. The use of the language must conform to good programming practices based on well-established software engineering principles. This book is intended to help bridge the gap between these principles and the actual practice of programming in Ada. 

Many of the guidelines in this book are designed to promote clear source text. The goal of these guidelines is to improve the ease of program evolution, adaptation, and maintenance. Understandable source text is more likely to be correct and reliable. Easy adaptation requires a thorough understanding of the software; this is considerably facilitated by clarity. Effective code adaptation is a prerequisite to code reuse, a technique that has the potential for drastic reductions in system development cost. Finally, because maintenance (really evolution) is a costly process that continues throughout the life of a system, clarity plays a major role in keeping maintenance costs down. Over the entire life cycle, code has to be read and understood far more often than it is written; thus, the investment in writing readable, understandable code is worthwhile. 

The remaining sections of this introduction discuss the organization of this book and how the material presented can be used by people in different roles, including new Ada programmers, experienced Ada programmers, object-oriented programmers, software project managers, contracting agencies, standards setting organizations, and planners of the transition to Ada 95 from existing Ada 83 (Ada Reference Manual 1983) programs. 

== Organization of this Book ==

The format of this book follows the well-received guideline format of the Ada Quality and Style: Guidelines for Professional Programmer's, version 02.01.01 (AQ&amp;S 83) (Software Productivity Consortium 1992). The style guide is divided into sections that map to the major decisions that each programmer must make when creating high-quality, reliable, reusable, and portable Ada software. Some overlap exists in the sections because not all programming decisions can be made independently. 

Individual chapters address source code presentation, readability, program structure, programming practices, concurrency, portability, reusability, and performance, and a new chapter addresses object-oriented features. Each chapter ends with a summary of the guidelines it contains. The last chapter shows a complete implementation of the Dining Philosophers example, provided by Dr. Michael B. Feldman and Mr. Bjorn Kallberg. Many of the guidelines in this book were used to create this example. An appendix provides a cross-reference matrix between the Ada Reference Manual (1995) sections and the guidelines in this style guide. 

This book is written using the general software engineering vocabulary developed over the last 20 years. Software engineering is a rapidly evolving discipline with relatively new concepts and terminology. However, to establish a common frame of reference, needed definitions are extracted from the Ada Reference Manual (1995) and Rationale (1995). 

Throughout the book, references are made to other sources of information about Ada style and other Ada issues. The references are listed at the end of the book. A bibliography is also provided. 

In this book, the term &quot;Ada&quot; refers to the latest Ada standard, released in February 1995 (sometimes also known as Ada 95). References to the earlier Ada standard are clearly denoted as &quot;Ada 83.&quot; 

=== Source Code Presentation and Readability ===

Chapters 2 and 3 directly address the issues of creating clear, readable, and understandable source text. Chapter 2 focuses on code formatting, and Chapter 3 addresses issues of use of comments, naming conventions, and types. 

There are two main aspects of code clarity: (1) careful and consistent layout of the source text on the page or the screen, covered by Chapter 2, that can enhance readability dramatically; (2) careful attention to the structure of code, covered by Chapter 3, that can make the code easier to understand. This is true both on the small scale (e.g., by careful choice of identifier names or by disciplined use of loops) and on the large scale (e.g., by proper use of packages). These guidelines treat both layout and structure. 

Code formatting and naming convention preferences tend to be very personal. You must balance your personal likes and dislikes with those of other engineers on the project so that you can agree to a consistent set of conventions that the whole project team will follow. Automatic code formatters can help in enforcing this kind of consistency. 

=== Program Structure ===

Chapter 4 addresses overall program structure. Proper structure improves program clarity. This is analogous to readability on lower levels and includes issues of high-level structure, in particular the use of packages and child packages, visibility, and exceptions. The majority of the guidelines in this chapter are concerned with the application of sound software engineering principles, such as information hiding, abstraction, encapsulation, and separation of concerns. 

=== Programming Practices ===

Chapter 5 presents guidelines that define consistent and logical language feature usage. These guidelines address optional parts of the syntax, types, data structures, expressions, statements, visibility, exceptions, and erroneous execution. 

=== Concurrency ===

Chapter 6 defines the correct use of concurrency to develop predictable, reliable, reusable, and portable software. The topics include tasking, protected units, communication, and termination. One major area of enhancement of the Ada language has been better support for shared data. The task mechanism had been the only available approach to protecting shared data. The guidelines in this chapter support the use of protected types to encapsulate and synchronize access to shared data. 

=== Portability and Reusability ===

Chapters 7 and 8 address issues of designing for change from slightly different perspectives. Chapter 7 addresses the fundamentals of portability, the ease of changing software from one computer system or environment to another, and the impact of specific feature usage on portability. Chapter 8 addresses code reusability, the extent to which code can be used in different applications with minimal change. 

The portability guidelines discussed in Chapter 7 need careful attention. Adherence to them is important even if the need to port the resulting software is not currently foreseen. Following the guidelines improves the potential reusability of the resulting code in projects that use different Ada implementations. You should insist that when particular project needs force the relaxation of some of the portability guidelines, nonportable features of the source text are prominently indicated. 

The reusability guidelines given in Chapter 8 are based on the principles of encapsulation and design for change. These guidelines stress that understanding and clarity, robustness, adaptability, and independence are useful and desirable, even when reuse is not expected, because the resulting code is more resistant to both planned and unplanned change. 

=== Object-Oriented Features ===

Chapter 9 defines a set of guidelines in common objected-oriented terms that exploit some of the features of Ada 95 that are not in Ada 83. The guidelines discuss the use of the new Ada features of type extension (tagged types), abstract tagged types, and abstract subprograms to implement single inheritance, multiple inheritance, and polymorphism. 

=== Performance ===

Chapter 10 defines a set of guidelines intended to enhance performance. It is recognized that some approaches to performance are at odds with maintainability and portability. Most of the guidelines in this chapter read &quot;. . . when measured performance indicates.&quot; &quot;Indicates&quot; means that you have determined that the benefit in increased performance to your application in your environment outweighs the negative side effects on understandability, maintainability, and portability of the resulting code. 

== How To Use This Book ==

This book is intended for those involved in the actual development of software systems written in Ada. The following sections discuss how to make the most effective use of the material presented. Readers with different levels of Ada experience or different roles in a software project will need to use the book in different ways. 

There are a number of ways in which this book can be used: as a guide to good Ada style; as a comprehensive list of guidelines that will contribute to better Ada programs; or as a reference work to consult for usage examples of and design-tradeoff discussion on specific features of the language. The book contains many guidelines, some of which are quite complex. Learning them all at the same time should not be necessary; it is unlikely that you will be using all the features of the language at once. However, it is recommended that all programmers (and, where possible, other Ada project staff) make an effort to read and understand Chapters 2, 3, 4, and Chapter 5 up to Section 5.7. Some of the material is quite difficult (e.g., Section 4.2, which discusses visibility), but it covers issues that are fundamental to the effective use of Ada and is important for any software professional involved in building Ada systems. 

This book is not intended as an introductory text on Ada or as a complete manual of the Ada language. It is assumed that you already know the syntax of Ada and have a rudimentary understanding of the semantics. With such a background, you should find the guidelines useful, informative, and often enlightening. 

If you are learning Ada, you should equip yourself with a comprehensive introduction to the language. Two good introductory texts on Ada 83 are Barnes (1989) and Cohen (1986). Both authors have published new books that cover Ada 95 (Barnes 1996, Cohen 1996). Once you become familiar with these texts, you are encouraged to use them in conjunction with Rationale (1995). The Ada Reference Manual (1995) should be regarded as a companion to these books. The majority of guidelines reference the sections of the Ada Reference Manual (1995) that define the language features being discussed. Appendix A cross references sections of the Ada Language Reference Manual to the guidelines. 

=== To The New Ada Programmer ===

At first sight, Ada offers a bewildering variety of features. It is a powerful tool intended to solve difficult problems, and almost every feature has a legitimate application in some context. This makes it especially important to use Ada's features in a disciplined and organized way. Following the guidelines can make learning Ada easier and help you to master its apparent complexity. From the beginning, you can write programs that exploit the best features of the language in the way that the designers intended. 

Programmers experienced in using other programming languages are often tempted to use Ada as if it were their familiar language but with irritating syntactic differences. This pitfall should be avoided at all costs; it can lead to convoluted code that subverts exactly those aspects of Ada that make it so suitable for building high-quality systems. You must learn to &quot;think Ada.&quot; Following the guidelines in this book and reading the examples of their use will help you to do this as quickly and painlessly as possible. 

To some degree, novice programmers learning Ada have an advantage. Following the guidelines from the beginning helps in developing a clear programming style that effectively exploits the language. If you are in this category, it is recommended that you adopt the guidelines for those exercises you perform as part of learning Ada. Initially, developing sound programming habits by concentrating on the guidelines themselves and their supporting examples is more important than understanding the rationale for each guideline. 

The rationale for many of the guidelines helps experienced programmers understand and accept the suggestions presented in the guideline. Some of the guidelines themselves are also written for the experienced programmer who must make engineering tradeoffs. This is especially true in the areas of portability, reusability, and performance. These more difficult guidelines and rationale will make you aware of the issues affecting each programming decision. You can then use that awareness to recognize the engineering tradeoffs that you will eventually be asked to make when you are the experienced Ada programmer. 

=== To The Experienced Ada Programmer ===

As an experienced Ada programmer, you are already writing code that conforms to many of the guidelines in this book. In some areas, however, you may have adopted a personal programming style that differs from that presented here, and you might be reluctant to change. Carefully review those guidelines that are inconsistent with your current style, make sure that you understand their rationale, and consider adopting them. The overall set of guidelines in this book embodies a consistent approach to producing high-quality programs that would be weakened by too many exceptions. 

Consistency is another important reason for general adoption of common guidelines. If all the staff of a project write source text in the same style, many critical project activities are easier. Consistent code simplifies formal and informal code reviews, system integration, code reuse within a project, and the provision and application of supporting tools. In practice, corporate or project standards may require deviations from the guidelines to be explicitly commented, so adopting a nonstandard approach may require extra work. 

Some of the guidelines in this book, particularly in the chapters on concurrency, portability, reusability, object-oriented features, and performance, focus on design tradeoffs. These guidelines ask you to consider whether using an Ada feature is an appropriate design decision for your application. There are often several ways to implement a particular design decision, and these guidelines discuss the tradeoffs you should consider in making your decision. 

=== To Experienced Object-Oriented Programmers ===

As an experienced object-oriented programmer, you will appreciate the effort that has gone into elegantly extending the Ada language to include powerful object-oriented features. These new features are integrated tightly with the existing language features and vocabulary. This book is intentionally written to provide a view from the perspective of style; therefore, Ada object-oriented features are used throughout the book. Disciplined use of these features will promote programs that are easier to read and modify. These features also give you flexibility in building reusable components. Chapter 9 addresses object-oriented programming and the issues of inheritance and polymorphism. Earlier chapters cross reference the Chapter 9 guidelines. 

You will find it easier to take advantage of many of the concepts in Chapter 9 if you have done an object-oriented design. The results of an object-oriented design would include a set of meaningful abstractions and hierarchy of classes. The abstractions need to include the definition of the design objects, including structure and state, the operations on the objects, and the intended encapsulation for each object. The details on designing these abstractions and the hierarchy of classes are beyond the scope of this book. A number of good sources exist for this detail, including Rumbaugh et al. (1991), Jacobson et al. (1992), the ADARTS Guidebook (Software Productivity Consortium 1993), and Booch (1994). 

=== To The Software Project Manager ===

Technical management plays a key role in ensuring that the software produced in the course of a project is correct, reliable, maintainable, and portable. Management must create a project-wide commitment to the production of high-quality code; define project-specific coding standards and guidelines; foster an understanding of why uniform adherence to the chosen coding standards is critical to product quality; and establish policies and procedures to check and enforce that adherence. The guidelines contained in this book can aid such an effort. 

An important activity for managers is the definition of coding standards for a project or organization. These guidelines do not, in themselves, constitute a complete set of standards; however, they can serve as a basis for standards. Several guidelines indicate a range of decisions, but they do not prescribe a particular decision. For example, the second guideline in the book (Guideline 2.1.2) advocates using a consistent number of spaces for indentation and indicates in the rationale that two to four spaces would be reasonable. With your senior technical staff, you should review each such guideline and arrive at a decision about its instantiation that will constitute your project or organizational standard. 

Two other areas require managerial decisions about standardization. Guideline 3.1.4 advises you to avoid arbitrary abbreviations in object or unit names. You should prepare a glossary of acceptable abbreviations for a project that allows the use of shorter versions of application-specific terms (e.g., FFT for Fast Fourier Transform or SPN for Stochastic Petri Net). You should keep this glossary short and restrict it to terms that need to be used frequently as part of names. Having to refer continually to an extensive glossary to understand source text makes it hard to read. 

The portability guidelines given in Chapter 7 need careful attention. Adherence to them is important even if the need to port the resulting software is not currently foreseen. Following the guidelines improves the potential reusability of the resulting code in projects that use different Ada implementations. You should insist that when particular project needs force the relaxation of some of the portability guidelines, nonportable features of the source text are prominently indicated. Observing the Chapter 7 guidelines requires definition and standardization of project- or organization-specific numeric types to be used in place of the (potentially nonportable) predefined numeric types. 

Your decisions on standardization issues should be incorporated in a project or organization coding standards document. With coding standards in place, you need to ensure adherence to them. Gaining the wholehearted commitment of your programming staff to use the standards is critical. Given this commitment and the example of high-quality Ada being produced by your programmers, it will be far easier to conduct effective formal code reviews that check compliance to project standards. 

Some general issues concerning the management of Ada projects are discussed by Hefley, et al. (1992). 

=== To Contracting Agencies And Standards Organizations ===

Many of the guidelines presented here are specific enough to be adopted as corporate or project programming standards. Others require a managerial decision on a particular instantiation before they can be used as standards. In such cases, a sample instantiation is presented and used throughout the examples. Such instantiations should be recognized as weaker recommendations than the guidelines themselves. In some cases, where the examples are extracted from a published work, the author's style is used unchanged. 

Other guidelines presented in this book are intentionally phrased in terms of design choices to consider. These guidelines cannot be instantiated as hard-and-fast rules that a project must follow. For example, you should not interpret Guidelines 6.1.1 and 6.1.2 to mean that a project is forbidden to use tasks. Rather, these guidelines are intended to help the designer make the tradeoffs between using protected objects and tasks, thus leading the designer to make a more informed choice between these features. 

The guidelines in this document are not intended to stand alone as a standard. In some cases, it is not clear that a guideline could be enforced because it is only intended to make the engineer aware of tradeoffs. In other cases, a choice still remains about a guideline, such as how many spaces to use for each level of indentation. 

When a guideline is too general to show an example, the &quot;instantiation&quot; section of each guideline contains more specific guidelines. These instantiations can be considered a standard and are more likely to be enforceable. Any organization that attempts to extract standards from this document needs to evaluate the complete context. Each guideline works best when related guidelines are practiced. In isolation, a guideline may have little or no benefit. 

=== To Ada 83 To Ada 95 Transition Planners ===

Transitioning issues fall into two major categories: the incompatibilities between the languages, in particular, upward compatibility, and exploitation of new language features. 

Upward compatibility of Ada 95 was a major design goal of the language. The small number of incompatibilities between Ada 83 and Ada 95 that are likely to occur in practice are easily overcome (see Ada 95 Rationale [1995] Appendix X entitled Upward Compatibility). Detailed information on compatibility issues can be found in Taylor (1995) and Intermetrics (1995). 

The transition planner can gain insight from this book into the exploitation of language features in two ways. First, Table 1 shows the impact of new Ada 95 language features on style guide chapters. Second, Appendix A maps Ada Reference Manual (1995) sections to specific style guidelines. 

== Typographic Conventions ==

This style guide uses the following typographic conventions: 

* Serif font  General presentation of information. 
* ''Italicized serif font''  Publication titles and emphasis. 
* '''Boldfaced serif font'''  Section headings. 
* '''Boldfaced sans serif font'''  Subheadings for guideline, instantiation, example, rationale, notes, exceptions, automation notes, caution, and subheadings in Summary sections. 
*&lt;tt&gt;Typewriter font&lt;/tt&gt;:
 Syntax of code.


{{Chapter navigation||Source Code Presentation}}
[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>jdtorrcmnb9gxkud3fwkcsogr8i7ad2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Source Code Presentation</title>
    <ns>0</ns>
    <id>200798</id>
    <revision>
      <id>2307255</id>
      <parentid>2307252</parentid>
      <timestamp>2012-04-16T06:40:06Z</timestamp>
      <contributor>
        <username>Metamorf</username>
        <id>615983</id>
      </contributor>
      <comment>/* More on Alignment */ Fix spacing &amp; alignment in examples</comment>
      <text xml:space="preserve">{{Chapter navigation|Introduction|Readability}}

{{TOC|limit=3|float=none}}

== Introduction ==

The physical layout of source text on the page or screen has a strong effect on its readability. This chapter contains source code presentation guidelines intended to make the code more readable. 

In addition to the general purpose guidelines, specific recommendations are made in the &quot;instantiation&quot; sections. If you disagree with the specific recommendations, you may want to adopt your own set of conventions that still follow the general purpose guidelines. Above all, be consistent across your entire project. 

An entirely consistent layout is hard to achieve or check manually. Therefore, you may prefer to automate layout with a tool for parameterized code formatting or incorporate the guidelines into an automatic coding template. Some of the guidelines and specific recommendations presented in this chapter cannot be enforced by a formatting tool because they are based on the semantics, not the syntax, of the Ada code. More details are given in the &quot;automation notes&quot; sections. 

== Code Formatting ==

The &quot;code formatting&quot; of Ada source code affects how the code looks, not what the code does. Topics included here are horizontal spacing, indentation, alignment, pagination, and line length. The most important guideline is to be consistent throughout the compilation unit as well as the project. 

=== Horizontal Spacing ===

==== guideline ====

* Use consistent spacing around delimiters. 
* Use the same spacing as you would in regular prose. 

==== instantiation ====

Specifically, leave at least one blank space in the following places, as shown in the examples throughout this book. More spaces may be required for the vertical alignment recommended in subsequent guidelines. 

* Before and after the following delimiters and binary operators: 

&lt;source lang=text&gt;
  + - * / &amp;
  &lt; = &gt; /= &lt;= &gt;=
  := =&gt; | ..
  :
  &lt;&gt; 
&lt;/source&gt;

* Outside of the quotes for string (&quot;) and character (' ) literals, except where prohibited.
* Outside, but not inside, parentheses.
* After commas (,) and semicolons (;).

Do not leave any blank spaces in the following places, even if this conflicts with the above recommendations.
* After the plus (+) and minus (-) signs when used as unary operators.
* After a function call.
* Inside of label delimiters (&lt;&lt; &gt;&gt;).
* Before and after the exponentiation operator (**), apostrophe ('), and period (.)
* Between multiple consecutive opening or closing parentheses.
* Before commas (,) and semicolons (;). 
When superfluous parentheses are omitted because of operator precedence rules, spaces may optionally be removed around the highest precedence operators in that expression. 

==== example ====

&lt;source lang=ada&gt;
Default_String : constant String :=
      &quot;This is the long string returned by&quot; &amp;
      &quot; default. It is broken into multiple&quot; &amp;
      &quot; Ada source lines for convenience.&quot;;

type Signed_Whole_16 is range -2**15 .. 2**15 - 1;
type Address_Area  is array (Natural range &lt;&gt;) of Signed_Whole_16;

Register : Address_Area (16#7FF0# .. 16#7FFF#);
Memory   : Address_Area (       0 .. 16#7FEC#);

Register (Pc) := Register (A);

X := Signed_Whole_16 (Radius * Sin(Angle) );

Register (Index) := Memory (Base_Address + Index * Element_Length);

Get (Value =&gt; Sensor);

Error_Term := 1.0 - (Cos(Theta)**2 + Sin(Theta)**2);

Z      := X**3;
Y      := C * X + B;
Volume := Length * Width * Height;
&lt;/source&gt;

==== rationale ====

It is a good idea to use white space around delimiters and operators because they are typically short sequences (one or two characters) that can easily get lost among the longer keywords and identifiers. Putting white space around them makes them stand out. Consistency in spacing also helps make the source code easier to scan visually. 

However, many of the delimiters (commas, semicolons, parentheses, etc.) are familiar as normal punctuation marks. It is distracting to see them spaced differently in a computer program than in normal text. Therefore, use the same spacing as in text (no spaces before commas and semicolons, no spaces inside parentheses, etc.). 

==== exceptions ====

The one notable exception is the colon (:). In Ada, it is useful to use the colon as a tabulator or a column separator (see Guideline 2.1.4). In this context, it makes sense to put spaces before and after the colon rather than only after it as in normal text. 

==== automation notes ====

The guidelines in this section are easily enforced with an automatic code formatter.

=== Indentation ===

==== guideline ====

* Indent and align nested control structures, continuation lines, and embedded units consistently. 
* Distinguish between indentation for nested control structures and for continuation lines.
* Use spaces for indentation, not the tab character (Nissen and Wallis 1984, §2.2).

==== instantiation ====
Specifically, the following indentation conventions are recommended, as shown in the examples throughout this book. Note that the minimum indentation is described. More spaces may be required for the vertical alignment recommended in subsequent guidelines. 

* Use the recommended paragraphing shown in the Ada Reference Manual (1995).
* Use three spaces as the basic unit of indentation for nesting.
* Use two spaces as the basic unit of indentation for continuation lines. 

A label is outdented three spaces: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
begin
&lt;&lt;label&gt;&gt;
   &lt;statement&gt;
end;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
&lt;long statement with line break&gt;
  &lt;trailing part of same statement&gt;
&lt;/source&gt;

|}

The if statement and the plain loop: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
if &lt;condition&gt; then
    &lt;statements&gt;
elsif &lt;condition&gt; then
   &lt;statements&gt;
else
   &lt;statements&gt;
end if;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
&lt;name&gt;:
loop
   &lt;statements&gt;
   exit when &lt;condition&gt;;
   &lt;statements&gt;
end loop &lt;name&gt;;
&lt;/source&gt;

|}

Loops with the for and while iteration schemes: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
&lt;name&gt;:
   for &lt;scheme&gt; loop
      &lt;statements&gt;
   end loop &lt;name&gt;;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
&lt;name&gt;:
   while &lt;condition&gt; loop
      &lt;statements&gt;
   end loop &lt;name&gt;;
&lt;/source&gt;

|}

The block and the case statement as recommended in the Ada Reference Manual (1995): 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
&lt;name&gt;:
   declare
      &lt;declarations&gt;
   begin
      &lt;statements&gt;
   exception
      when &lt;choice&gt; =&gt;
         &lt;statements&gt;
      when others =&gt;
         &lt;statements&gt;
   end &lt;name&gt;;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
case &lt;expression&gt; is
   when &lt;choice&gt; =&gt;
      &lt;statements&gt;
   when &lt;choice&gt; =&gt;
      &lt;statements&gt;
   when others =&gt;
      &lt;statements&gt;
end case;  --&lt;comment&gt;
&lt;/source&gt;

|}

These case statements save space over the Ada Reference Manual (1995) recommendation and depend on very short statement lists, respectively. Whichever you choose, be consistent: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
case &lt;expression&gt; is
when &lt;choice&gt; =&gt;
     &lt;statements&gt;
when &lt;choice&gt; =&gt;
     &lt;statements&gt;
when others =&gt;
     &lt;statements&gt;
end case;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
case &lt;expression&gt; is
   when &lt;choice&gt; =&gt; &lt;statements&gt;
                    &lt;statements&gt;
   when &lt;choice&gt; =&gt; &lt;statements&gt;
   when others   =&gt; &lt;statements&gt;
end case;
&lt;/source&gt;

|}

The various forms of selective accept and the timed and conditional entry calls: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
select
   when &lt;guard&gt; =&gt;
      &lt;accept statement&gt;
      &lt;statements&gt;
or
   &lt;accept statement&gt;
   &lt;statements&gt;
or
   when &lt;guard&gt; =&gt;
      delay &lt;interval&gt;;
      &lt;statements&gt;
or
   when &lt;guard&gt; =&gt;
      terminate;
else
   &lt;statements&gt;
end select;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
select
   &lt;entry call&gt;;
   &lt;statements&gt;
or
   delay &lt;interval&gt;;
   &lt;statements&gt;
end select;

select
   &lt;entry call&gt;;
   &lt;statements&gt;
else
   &lt;statements&gt;
end select;

select
   &lt;triggering alternative&gt;
then abort
   &lt;abortable part&gt;
end select;
&lt;/source&gt;

|}

The accept statement: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
accept &lt;specification&gt; do
   &lt;statements&gt;
end &lt;name&gt;;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
separate (&lt;parent unit&gt;)
&lt;proper body&gt;
&lt;/source&gt;

|}

A subunit: 
&lt;source lang=ada&gt;
separate (&lt;parent unit&gt;)
&lt;proper body&gt;
end &lt;name&gt;;
&lt;/source&gt;

Proper bodies of program units:

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
procedure &lt;specification&gt; is
   &lt;declarations&gt;
begin
   &lt;statements&gt;
exception
   when &lt;choice&gt; =&gt;
      &lt;statements&gt;
end &lt;name&gt;;

function &lt;specification&gt;
  return &lt;type name&gt; is
   &lt;declarations&gt;
begin
   &lt;statements&gt;
exception
   when &lt;choice&gt; =&gt;
      &lt;statements&gt;
end &lt;name&gt;;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
package body &lt;name&gt; is
   &lt;declarations&gt;
begin
   &lt;statements&gt;
exception
   when &lt;choice&gt;=&gt;
      &lt;statements&gt;
end &lt;name&gt;;

task body &lt;name&gt; is
   &lt;declarations&gt;
begin
   &lt;statements&gt;
exception
   when &lt;choice&gt;=&gt;
      &lt;statements&gt;
end &lt;name&gt;;
&lt;/source&gt;

|}

Context clauses on compilation units are arranged as a table. Generic formal parameters do not obscure the unit itself. Function, package, and task specifications use standard indentation: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
with &lt;name&gt;; use &lt;name&gt;;
with &lt;name&gt;;
with &lt;name&gt;;



&lt;compilation unit&gt;


generic
   &lt;formal parameters&gt;
&lt;compilation unit&gt;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
function &lt;specification&gt;
  return &lt;type&gt;;

package &lt;name&gt; is
   &lt;declarations&gt;
private
   &lt;declarations&gt;
end &lt;name&gt;;

task type &lt;name&gt; is
   &lt;entry declarations&gt;
end &lt;name&gt;;
&lt;/source&gt;

|
|}

Instantiations of generic units and record indentation: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
procedure &lt;name&gt; is
   new &lt;generic name&gt; &lt;actuals&gt;

function &lt;name&gt; is
   new &lt;generic name&gt; &lt;actuals&gt;

package &lt;name&gt; is
   new &lt;generic name&gt; &lt;actuals&gt;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
type ... is
   record
      &lt;component list&gt;
      case &lt;discriminant name&gt; is
         when &lt;choice&gt; =&gt;
            &lt;component list&gt;
         when &lt;choice&gt; =&gt;
            &lt;component list&gt;
      end case;
   end record;
&lt;/source&gt;
|}

Indentation for record alignment: 
&lt;source lang=ada&gt;
for &lt;name&gt; use
   record &lt;mod clause&gt;
      &lt;component clause&gt;
   end record;
&lt;/source&gt;

Tagged types and type extension: 
&lt;source lang=ada&gt;
type ... is tagged
   record
      &lt;component list&gt;
   end record;

type ... is new ... with
   record
      &lt;component list&gt;
   end record;
&lt;/source&gt;

==== example ====
&lt;source lang=ada&gt;
Default_String : constant String :=
      &quot;This is the long string returned by&quot; &amp;
      &quot; default.  It is broken into multiple&quot; &amp;
      &quot; Ada source lines for convenience.&quot;;

...

   if Input_Found then
      Count_Characters;

   else  --not Input_Found
      Reset_State;
      Character_Total :=
        First_Part_Total  * First_Part_Scale_Factor  +
        Second_Part_Total * Second_Part_Scale_Factor +
        Default_String'Length + Delimiter_Size;
   end if;

end loop;
&lt;/source&gt;
==== rationale ====

Indentation improves the readability of the code because it gives you a visual indicator of the program structure. The levels of nesting are clearly identified by indentation, and the first and last keywords in a construct can be matched visually. 

While there is much discussion on the number of spaces to indent, the reason for indentation is code clarity. The fact that the code is indented consistently is more important than the number of spaces used for indentation. 

Additionally, the Ada Reference Manual (1995, §1.1.4) states that the layout shown in the examples and syntax rules in the manual is the recommended code layout to be used for Ada programs: &quot;The syntax rules describing structured constructs are presented in a form that corresponds to the recommended paragraphing . . . . Different lines are used for parts of a syntax rule if the corresponding parts of the construct described by the rule are intended to be on different lines . . . . It is recommended that all indentation be by multiples of a basic step of indentation (the number of spaces for the basic step is not defined).&quot; 

It is important to indent continuation lines differently from nested control structures to make them visually distinct. This prevents them from obscuring the structure of the code as you scan it. 

Listing context clauses on individual lines allows easier maintenance; changing a context clause is less error-prone. 

Indenting with spaces is more portable than indenting with tabs because tab characters are displayed differently by different terminals and printers. 

==== exceptions ====

If you are using a variable width font, tabs will align better than spaces. However, depending on your tab setting, lines of successive indentation may leave you with a very short line length. 

==== automation notes ====

The guidelines in this section are easily enforced with an automatic code formatter.

=== Alignment of Operators ===

==== guideline ====

* Align operators vertically to emphasize local program structure and semantics. 

==== example ====
&lt;source lang=ada&gt;
    if Slot_A &gt;= Slot_B then
       Temporary := Slot_A;
       Slot_A    := Slot_B;
       Slot_B    := Temporary;
    end if;

    ----------------------------------------------------------------
    Numerator   := B**2 - 4.0 * A * C;
    Denominator := 2.0 * A;
    Solution_1 := (B + Square_Root(Numerator)) / Denominator;
    Solution_2 := (B - Square_Root(Numerator)) / Denominator;
    ----------------------------------------------------------------

    X := A * B +
         C * D +
         E * F;

    Y := (A * B + C) +  (2.0 * D - E) -  -- basic equation
         3.5;                            -- account for error factor
&lt;/source&gt;

==== rationale ====

Alignment makes it easier to see the position of the operators and, therefore, puts visual emphasis on what the code is doing. 

The use of lines and spacing on long expressions can emphasize terms, precedence of operators, and other semantics. It can also leave room for highlighting comments within an expression. 

==== exceptions ====

If vertical alignment of operators forces a statement to be broken over two lines, especially if the break is at an inappropriate spot, it may be preferable to relax the alignment guideline. 

==== automation notes ====

The last example above shows a kind of &quot;semantic alignment&quot; that is not typically enforced or even preserved by automatic code formatters. If you break expressions into semantic parts and put each on a separate line, beware of using a code formatter later. It is likely to move the entire expression to a single line and accumulate all the comments at the end. However, there are some formatters that are intelligent enough to leave a line break intact when the line contains a comment. A good formatter will recognize that the last example above does not violate the guidelines and would, therefore, preserve it as written.

=== Alignment of Declarations ===

==== guideline ====

* Use vertical alignment to enhance the readability of declarations. 
* Provide, at most, one declaration per line.
* Indent all declarations in a single declarative part at the same level. 

==== instantiation ====

For declarations not separated by blank lines, follow these alignment rules: 

* Align the colon delimiters.
* Align the := initialization delimiter.
* When trailing comments are used, align the comment delimiter.
* When the declaration overflows a line, break the line and add an indentation level for those lines that wrap. The preferred places to break, in order, are: (1) the comment delimiter; (2) the initialization delimiter; (3) the colon delimiter.
* For enumeration type declarations that do not fit on a single line, put each literal on a separate line, using the next level of indentation. When appropriate, semantically related literals can be arranged by row or column to form a table. 

==== example ====

Variable and constant declarations can be laid out in a tabular format with columns separated by the symbols :, :=, and -- 
&lt;source lang=ada&gt;
    Prompt_Column : constant        := 40;
    Question_Mark : constant String := &quot; ? &quot;; -- prompt on error input
    Prompt_String : constant String := &quot; ==&gt; &quot;;
&lt;/source&gt;
If this results in lines that are too long, they can be laid out with each part on a separate line with its unique indentation level: 
&lt;source lang=ada&gt;
    subtype User_Response_Text_Frame is String (1 .. 72);
    -- If the declaration needed a comment, it would fit here.
    Input_Line_Buffer : User_Response_Text_Frame
           := Prompt_String &amp;
              String'(1 .. User_Response_Text_Frame'Length -
                           Prompt_String'Length =&gt; ' ');
&lt;/source&gt;
Declarations of enumeration literals can be listed in one or more columns as: 
&lt;source lang=ada&gt;
  type Op_Codes_In_Column is
        (Push,
         Pop,
         Add,
         Subtract,
         Multiply,
         Divide,
         Subroutine_Call,
         Subroutine_Return,
         Branch,
         Branch_On_Zero,
         Branch_On_Negative);
&lt;/source&gt;
or, to save space: 

&lt;source lang=ada&gt;
    type Op_Codes_Multiple_Columns is
          (Push,            Pop,                Add,
           Subtract,        Multiply,           Divide,
           Subroutine_Call, Subroutine_Return,  Branch,
           Branch_On_Zero,  Branch_On_Negative);
&lt;/source&gt;
or, to emphasize related groups of values: 
&lt;source lang=ada&gt;
    type Op_Codes_In_Table is
          (Push,            Pop,
           Add,             Subtract,          Multiply,    Divide,
           Subroutine_Call, Subroutine_Return,
           Branch,          Branch_On_Zero,    Branch_On_Negative);
&lt;/source&gt;

==== rationale ====

Many programming standards documents require tabular repetition of names, types, initial values, and meaning in unit header comments. These comments are redundant and can become inconsistent with the code. Aligning the declarations themselves in tabular fashion (see the examples above) provides identical information to both compiler and reader; enforces, at most, one declaration per line; and eases maintenance by providing space for initializations and necessary comments. A tabular layout enhances readability, thus preventing names from &quot;hiding&quot; in a mass of declarations. This applies to all declarations: types, subtypes, objects, exceptions, named numbers, and so forth. 

==== automation notes ====

Most of the guidelines in this section are easily enforced with an automatic code formatter. The one exception is the last enumerated type example, which is laid out in rows based on the semantics of the enumeration literals. An automatic code formatter will not be able to do this and will likely move the enumeration literals to different lines. However, tools that are checking only for violations of the guidelines should accept the tabular form of an enumeration type declaration. 

=== More on Alignment ===

==== guideline ====

* Align parameter modes and parentheses vertically. 

==== instantiation ====

Specifically, it is recommended that you: 

* Place one formal parameter specification per line.
* Vertically align parameter names, colons, the reserved word in, the reserved word out, and parameter subtypes.
* Place the first parameter specification on the same line as the subprogram or entry name. If any parameter subtypes are forced beyond the line length limit, place the first parameter specification on a new line indented the same as a continuation line. 

==== example ====
&lt;source lang=ada&gt;
    procedure Display_Menu (Title   : in     String;
                            Options : in     Menus;
                            Choice  :    out Alpha_Numerics);
&lt;/source&gt;

The following two examples show alternate instantiations of this guideline: 

&lt;source lang=ada&gt;
    procedure Display_Menu_On_Primary_Window
          (Title   : in     String;
           Options : in     Menus;
           Choice  :    out Alpha_Numerics); 
&lt;/source&gt;

or: 

&lt;source lang=ada&gt;
    procedure Display_Menu_On_Screen (
          Title   : in     String;
          Options : in     Menus;
          Choice  :    out Alpha_Numerics
        );
&lt;/source&gt;

Aligning parentheses makes complicated relational expressions more clear: 

&lt;source lang=ada&gt;
    if not (First_Character in Alpha_Numerics and then
            Valid_Option(First_Character))        then
&lt;/source&gt;

==== rationale ====

This alignment facilitates readability and understandability, and it is easy to achieve given automated support. Aligning parameter modes provides the effect of a table with columns for parameter name, mode, subtype, and, if necessary, parameter-specific comments. Vertical alignment of parameters across subprograms within a compilation unit increases the readability even more. 

==== exceptions ====

Various options are available for subprogram layout. The second example above aligns all of the subprogram names and parameter names in a program. This has the disadvantage of occupying an unnecessary line where subprogram names are short and looking awkward if there is only one parameter. 

The third example is a format commonly used to reduce the amount of editing required when parameter lines are added, deleted, or reordered. The parentheses do not have to be moved from line to line. However, the last parameter line is the only one without a semicolon. 

==== exceptions ====

When an operator function has two or more formal parameters of the same type, it is more readable to declare the parameters in a single one-line list rather than to separate the formal parameter list into multiple formal parameter specifications. 

&lt;source lang=ada&gt;
    type Color_Scheme is (Red, Purple, Blue, Green, Yellow, White, Black, Brown, Gray, Pink); 

    function &quot;&amp;&quot; (Left, Right : Color_Scheme) return Color_Scheme;
&lt;/source&gt;

==== automation notes ====

Most of the guidelines in this section are easily enforced with an automatic code formatter. The one exception is the last example, which shows vertical alignment of parentheses to emphasize terms of an expression. This is difficult to achieve with an automatic code formatter unless the relevant terms of the expression can be determined strictly through operator precedence.

=== Blank Lines ===

==== guideline ====

* Use blank lines to group logically related lines of text (NASA 1987). 

==== example ====

&lt;source lang=ada&gt;
    if ... then

       for ... loop
          ...
       end loop;

    end if;
&lt;/source&gt;

This example separates different kinds of declarations with blank lines: 

&lt;source lang=ada&gt;
    type Employee_Record is
       record
          Legal_Name    : Name;
          Date_Of_Birth : Date;
          Date_Of_Hire  : Date;
          Salary        : Money;
       end record;

    type Day is
          (Monday,    Tuesday,   Wednesday, Thursday,  Friday,
           Saturday,  Sunday);

    subtype Weekday is Day range Monday   .. Friday;
    subtype Weekend is Day range Saturday .. Sunday;
&lt;/source&gt;

==== rationale ====

When blank lines are used in a thoughtful and consistent manner, sections of related code are more visible to readers. 

==== automation notes ====

Automatic formatters do not enforce this guideline well because the decision on where to insert blank lines is a semantic one. However, many formatters have the ability to leave existing blank lines intact. Thus, you can manually insert the lines and not lose the effect when you run such a formatter.

=== Pagination ===

==== guideline ====

* Highlight the top of each package or task specification, the top of each program unit body, and the end statement of each program unit. 

==== instantiation ====

Specifically, it is recommended that you: 

* Use file prologues, specification headers, and body headers to highlight those structures as recommended in Guideline 3.3.
* Use a line of dashes, beginning at the same column as the current indentation to highlight the definition of nested units embedded in a declarative part. Insert the line of dashes immediately before and immediately after the definition.
* If two dashed lines are adjacent, omit the longer of the two. 

==== example ====

&lt;source lang=ada&gt;
    with Basic_Types;
    package body SPC_Numeric_Types is
       ---------------------------------------------------------------------
       function Max
             (Left  : in     Basic_Types.Tiny_Integer;
              Right : in     Basic_Types.Tiny_Integer)
             return Basic_Types.Tiny_Integer is
       begin
          if Right &lt; Left then
             return Left;
          else
             return Right;
          end if;
       end Max;
       ---------------------------------------------------------------------
       function Min
             (Left  : in     Basic_Types.Tiny_Integer;
              Right : in     Basic_Types.Tiny_Integer)
             return Basic_Types.Tiny_Integer is
       begin
          if Left &lt; Right then
             return Left;
          else
             return Right;
          end if;
       end Min;
       ---------------------------------------------------------------------
       use Basic_Types;
    begin  -- SPC_Numeric_Types
       Max_Tiny_Integer := Min(System_Max, Local_Max);
       Min_Tiny_Integer := Max(System_Min, Local_Min);
       -- ...
    end SPC_Numeric_Types;
&lt;/source&gt;

==== rationale ====

It is easy to overlook parts of program units that are not visible on the current page or screen. The page lengths of presentation hardware and software vary widely. By clearly marking the program's logical page boundaries (e.g., with a dashed line), you enable a reader to quickly check whether all of a program unit is visible. Such pagination also makes it easier to scan a large file quickly, looking for a particular program unit. 

==== exceptions ====

This guideline does not address code layout on the physical &quot;page&quot; because the dimensions of such pages vary widely and no single guideline is appropriate. 

==== automation notes ====

The guidelines in this section are easily enforced with an automatic code formatter. 

=== Number of Statements Per Line ===

==== guideline ====

* Start each statement on a new line.
* Write no more than one simple statement per line.
* Break compound statements over multiple lines. 

==== example ====

Use: 

&lt;source lang=ada&gt;
    if End_Of_File then
       Close_File;
    else
       Get_Next_Record;
    end if;
&lt;/source&gt;

rather than: 

&lt;source lang=ada&gt;
    if End_Of_File then Close_File; else Get_Next_Record; end if;
&lt;/source&gt;

exceptional case: 

&lt;source lang=ada&gt;
    Put(&quot;A=&quot;);    Natural_IO.Put(A);    New_Line;
    Put(&quot;B=&quot;);    Natural_IO.Put(B);    New_Line;
    Put(&quot;C=&quot;);    Natural_IO.Put(C);    New_Line;
&lt;/source&gt;

==== rationale ====

A single statement on each line enhances the reader's ability to find statements and helps prevent statements being missed. Similarly, the structure of a compound statement is clearer when its parts are on separate lines. 

==== exceptions ====

If a statement is longer than the remaining space on the line, continue it on the next line. This guideline includes declarations, context clauses, and subprogram parameters. 

According to the Ada Reference Manual (1995, §1.1.4), &quot;The preferred places for other line breaks are after semicolons.&quot; 

==== automation notes ====

The guidelines in this section are easily enforced with an automatic code formatter, with the single exception of the last example, which shows a semantic grouping of multiple statements onto a single line. 

==== exceptions ====

The example of Put and New_Line statements shows a legitimate exception. This grouping of closely related statements on the same line makes the structural relationship between the groups clear. 

=== Source Code Line Length ===

==== guideline ====

* Adhere to a maximum line length limit for source code (Nissen and Wallis 1984, §2.3). 

==== instantiation ====

Specifically, it is recommended that you: 

* Limit source code line lengths to a maximum of 72 characters. 

==== rationale ====

When Ada code is ported from one system to another, there may be restrictions on the record size of source line statements, possibly for one of the following reasons: some operating systems may not support variable length records for tape I/O, or some printers and terminals support an 80-character line width with no line-wrap. See further rationale in the note for Guideline 7.1.2. 

Source code must sometimes be published for various reasons, and letter-size paper is not as forgiving as a computer listing in terms of the number of usable columns. 

In addition, there are human limitations in the width of the field of view for understanding at the level required for reading source code. These limitations correspond roughly to the 70- to 80-column range. 

==== exceptions ====

An alternate instantiation is to limit source code length to 79 characters. The 79-character limit differentiates the code from the FORTRAN 72-character limit. It also avoids problems with 80-character width terminals where the character in the last column may not print correctly. 

==== automation notes ====

The guidelines in this section are easily enforced with an automatic code formatter.

== Summary ==

=== code formatting ===

* Use consistent spacing around delimiters. 
* Use the same spacing as you would in regular prose. 
* Indent and align nested control structures, continuation lines, and embedded units consistently. 
* Distinguish between indentation for nested control structures and for continuation lines. 
* Use spaces for indentation, not the tab character (Nissen and Wallis 1984, §2.2). 
* Align operators vertically to emphasize local program structure and semantics. 
* Use vertical alignment to enhance the readability of declarations. 
* Provide, at most, one declaration per line. 
* Indent all declarations in a single declarative part at the same level. 
* Align parameter modes and parentheses vertically. 
* Use blank lines to group logically related lines of text (NASA 1987). 
* Highlight the top of each package or task specification, the top of each program unit body, and the end statement of each program unit. 
* Start each statement on a new line. 
* Write no more than one simple statement per line. 
* Break compound statements over multiple lines. 
* Adhere to a maximum line length limit for source code (Nissen and Wallis 1984, §2.3).


{{Chapter navigation||Readability}}
[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>qnmrbop4tt0dmv7yl7nasc234hq3jha</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Readability</title>
    <ns>0</ns>
    <id>200799</id>
    <revision>
      <id>2307226</id>
      <parentid>2307225</parentid>
      <timestamp>2012-04-16T04:35:12Z</timestamp>
      <contributor>
        <username>Metamorf</username>
        <id>615983</id>
      </contributor>
      <minor />
      <comment>/* example */</comment>
      <text xml:space="preserve">{{Chapter navigation|Source Code Presentation|Program Structure}}

{{TOC|limit=3|float=none}}

== Introduction ==

This chapter recommends ways of using Ada features to make reading and understanding code easier. There are many myths about comments and readability. The responsibility for true readability rests more with naming and code structure than with comments. Having as many comment lines as code lines does not imply readability; it more likely indicates the writer does not understand what is important to communicate. 

== Spelling ==

Spelling conventions in source code include rules for capitalization and use of underscores, numbers, and abbreviations. If you follow these conventions consistently, the resulting code is clearer and more readable. 

=== Use of Underscores ===

==== guideline ====

* Use underscores to separate words in a compound name. 

==== example ====
&lt;source lang=ada&gt;
Miles_Per_Hour
Entry_Value
&lt;/source&gt;

==== rationale ====

When an identifier consists of more than one word, it is much easier to read if the words are separated by underscores. Indeed, there is precedent in English in which compound words are separated by a hyphen or a space. In addition to promoting readability of the code, if underscores are used in names, a code formatter has more control over altering capitalization. See Guideline 3.1.3. 

=== Numbers ===

==== guideline ====

* Represent numbers in a consistent fashion.
* Represent literals in a radix appropriate to the problem.
* Use underscores to separate digits the same way commas or periods (or spaces for nondecimal bases) would be used in normal text. 
* When using scientific notation, make the E consistently either uppercase or lowercase.
* In an alternate base, represent the alphabetic characters in either all uppercase or all lowercase. 

==== instantiation ====
* Decimal and octal numbers are grouped by threes beginning on the left side of the radix point and by fives beginning on the right side of the radix point.
* The E is always capitalized in scientific notation.
* Use uppercase for the alphabetic characters representing digits in bases above 10. 
* Hexadecimal numbers are grouped by fours beginning on either side of the radix point. 

==== example ====

&lt;source lang=ada&gt;
type Maximum_Samples     is range          1 ..  1_000_000;
type Legal_Hex_Address   is range   16#0000# ..   16#FFFF#;
type Legal_Octal_Address is range 8#000_000# .. 8#777_777#;

Avogadro_Number : constant := 6.02216_9E+23;
&lt;/source&gt;

To represent the number 1/3 as a constant, use: 

&lt;source lang=ada&gt;
One_Third : constant := 1.0 / 3.0;
&lt;/source&gt;

Avoid this use: 

&lt;source lang=ada&gt;
One_Third_As_Decimal_Approximation : constant := 0.33333_33333_3333;
&lt;/source&gt;

or: 

&lt;source lang=ada&gt;
One_Third_Base_3 : constant := 3#0.1#;
&lt;/source&gt;

==== rationale ====

Consistent use of uppercase or lowercase aids scanning for numbers. Underscores serve to group portions of numbers into familiar patterns. Consistency with common use in everyday contexts is a large part of readability. 

==== notes ====

If a rational fraction is represented in a base in which it has a terminating rather than a repeating representation, as 3#0.1# does in the example above, it may have increased accuracy upon conversion to the machine base.
(This is wrong for named numbers as in this example - they must be calculated exactly.)

=== Capitalization ===

==== guideline ====

* Make reserved words and other elements of the program visually distinct from each other. 

==== instantiation ====
* Use lowercase for all reserved words (when used as reserved words).
* Use mixed case for all other identifiers, a capital letter beginning every word separated by underscores.
* Use uppercase for abbreviations and acronyms (see automation notes). 

==== example ====

&lt;source lang=ada&gt;
...

type Second_Of_Day      is range 0 .. 86_400;
type Noon_Relative_Time is (Before_Noon, After_Noon, High_Noon);

subtype Morning   is Second_Of_Day range 0 .. 86_400 / 2 - 1;
subtype Afternoon is Second_Of_Day range Morning'Last + 2 .. 86_400;

...

Current_Time := Second_Of_Day(Calendar.Seconds(Calendar.Clock));
if Current_Time in Morning then
   Time_Of_Day := Before_Noon;
elsif Current_Time in Afternoon then
   Time_Of_Day := After_Noon;
else
   Time_Of_Day := High_Noon;
end if;

case Time_Of_Day is
   when Before_Noon =&gt;   Get_Ready_For_Lunch;
   when High_Noon   =&gt;   Eat_Lunch;
   when After_Noon  =&gt;   Get_To_Work;
end case;

...
&lt;/source&gt;

==== rationale ====

Visually distinguishing reserved words allows you to focus on program structure alone, if desired, and also aids scanning for particular identifiers. 

The instantiation chosen here is meant to be more readable for the experienced Ada programmer, who does not need reserved words to leap off the page. Beginners to any language often find that reserved words should be emphasized to help them find the control structures more easily. Because of this, instructors in the classroom and books introducing the Ada language may want to consider an alternative instantiation. The Ada Reference Manual (1995) chose bold lowercase for all reserved words. 

==== automation notes ====

Ada names are not case sensitive. Therefore, the names &lt;code&gt;max_limit&lt;/code&gt;, &lt;code&gt;MAX_LIMIT&lt;/code&gt;, and &lt;code&gt;Max_Limit&lt;/code&gt; denote the same object or entity. A good code formatter should be able to automatically convert from one style to another as long as the words are delimited by underscores. 

As recommended in Guideline 3.1.4, abbreviations should be project-wide. An automated tool should allow a project to specify those abbreviations and format them accordingly. 

=== Abbreviations ===

==== guideline ====

* Do not use an abbreviation of a long word as an identifier where a shorter synonym exists. 
* Use a consistent abbreviation strategy.
* Do not use ambiguous abbreviations.
* To justify its use, an abbreviation must save many characters over the full word. 
* Use abbreviations that are well-accepted in the application domain. 
* Maintain a list of accepted abbreviations, and use only abbreviations on that list. 

==== example ====
Use: 

&lt;source lang=ada&gt;
Time_Of_Receipt 
&lt;/source&gt;

rather than: 

&lt;source lang=ada&gt;
Recd_Time or R_Time
&lt;/source&gt;

But in an application that commonly deals with message formats that meet military standards, &lt;code&gt;DOD_STD_MSG_FMT&lt;/code&gt; is an acceptable abbreviation for: 

&lt;source lang=ada&gt;
Department_Of_Defense_Standard_Message_Format.
&lt;/source&gt;

==== rationale ====

Many abbreviations are ambiguous or unintelligible unless taken in context. As an example, Temp could indicate either temporary or temperature. For this reason, you should choose abbreviations carefully when you use them. The rationale in Guideline 8.1.2 provides a more thorough discussion of how context should influence the use of abbreviations. 

Because very long variable names can obscure the structure of the program, especially in deeply nested (indented) control structures, it is a good idea to try to keep identifiers short and meaningful. Use short unabbreviated names whenever possible. If there is no short word that will serve as an identifier, then a well-known unambiguous abbreviation is the next best choice, especially if it comes from a list of standard abbreviations used throughout the project. 

You can establish an abbreviated format for a fully qualified name using the renames clause. This capability is useful when a very long, fully qualified name would otherwise occur many times in a localized section of code (see Guideline 5.7.2). 

A list of accepted abbreviations for a project provides a standard context for using each abbreviation.

== Naming Conventions ==

Choose names that clarify the object's or entity's intended use. Ada allows identifiers to be any length as long as the identifier fits on a line with all characters being significant (including underscores). Identifiers are the names used for variables, constants, program units, and other entities within a program. 

=== Names ===

==== guideline ====

* Choose names that are as self-documenting as possible.
* Use a short synonym instead of an abbreviation (see Guideline 3.1.4). 
* Use names given by the application, but do not use obscure jargon. 
* Avoid using the same name to declare different kinds of identifiers. 

==== example ====
In a tree-walker, using the name &lt;code&gt;Left&lt;/code&gt; instead of &lt;code&gt;Left_Branch&lt;/code&gt; is sufficient to convey the full meaning given the context. However, use &lt;code&gt;Time_Of_Day&lt;/code&gt; instead of &lt;code&gt;TOD&lt;/code&gt;. 

Mathematical formulas are often given using single-letter names for variables. Continue this convention for mathematical equations where they would recall the formula, for example: 

&lt;source lang=ada&gt;
   A*(X**2) + B*X + C.
&lt;/source&gt;

With the use of child packages, a poor choice of package, subunit, and identifier names can lead to a visibility clash with subunits. See the Rationale (1995, §8.1) for a sample of the resulting, rather obscure code. 

==== rationale ====

A program that follows these guidelines can be more easily comprehended. Self-documenting names require fewer explanatory comments. Empirical studies have shown that you can further improve comprehension if your variable names are not excessively long (Schneiderman 1986, 7). The context and application can help greatly. The unit of measure for numeric entities can be a source of subtype names. 

You should try not to use the same name as an identifier for different declarations, such as an object and a child package. Overusing an identifier in seemingly different name spaces can, in fact, lead to visibility clashes if the enclosing program units are intended to work together. 

==== notes ====

See Guideline 8.1.2 for a discussion on how to use the application domain as a guideline for selecting abbreviations. 

=== Subtype Names ===

==== guideline ====

* Use singular, general nouns as subtype identifiers.
* Choose identifiers that describe one of the subtype's values.
* Consider using suffixes for subtype identifiers that define visible access types, visible subranges, or visible array types.
* For private types, do not use identifier constructions (e.g., suffixes) that are unique to subtype identifiers.
* Do not use the subtype names from predefined packages. 

==== example ====
&lt;source lang=ada&gt;
type Day is
   (Monday,    Tuesday,   Wednesday, Thursday,  Friday,
    Saturday,  Sunday);

type Day_Of_Month    is range      0 ..    31;
type Month_Number    is range      1 ..    12;
type Historical_Year is range -6_000 .. 2_500;

type Date is
   record
      Day   : Day_Of_Month;
      Month : Month_Number;
      Year  : Historical_Year;
   end record;
&lt;/source&gt;

In particular, &lt;code&gt;Day&lt;/code&gt; should be used in preference to &lt;code&gt;Days&lt;/code&gt; or &lt;code&gt;Day_Type&lt;/code&gt;. 

The identifier &lt;code&gt;Historical_Year&lt;/code&gt; might appear to be specific, but it is actually general, with the adjective &lt;code&gt;historical&lt;/code&gt; describing the range constraint: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
procedure Disk_Driver is
 
   -- In this procedure, a number of important disk parameters are
   -- linked.
   Number_Of_Sectors  : constant :=     4;
   Number_Of_Tracks   : constant :=   200;
   Number_Of_Surfaces : constant :=    18;
   Sector_Capacity    : constant := 4_096;

   Track_Capacity   : constant := Number_Of_Sectors  * Sector_Capacity;
   Surface_Capacity : constant := Number_Of_Tracks   * Track_Capacity;
   Disk_Capacity    : constant := Number_Of_Surfaces * Surface_Capacity;

   type Sector_Range  is range 1 .. Number_Of_Sectors;
   type Track_Range   is range 1 .. Number_Of_Tracks;
   type Surface_Range is range 1 .. Number_Of_Surfaces;

   type Track_Map   is array (Sector_Range)  of ...;
   type Surface_Map is array (Track_Range)   of Track_Map;
   type Disk_Map    is array (Surface_Range) of Surface_Map;

begin  -- Disk_Driver
   ...
end Disk_Driver;
------------------------------------------------------------------------
&lt;/source&gt;

The suffixes &lt;code&gt;_Capacity&lt;/code&gt;, &lt;code&gt;_Range&lt;/code&gt;, and &lt;code&gt;_Map&lt;/code&gt; help define the purpose of the above subtypes and avoid the search for synonyms for the sector, track, and surface abstractions. Without the suffixes, you would need three different names per abstraction, one to describe each of the concepts succinctly named in the suffix. This recommendation only applies to certain visible subtypes. Private types, for example, should be given a good name that reflects the abstraction being represented.

==== rationale ====

When this style and the suggested style for object identifiers are used, program code more closely resembles English (see Guideline 3.2.3). Furthermore, this style is consistent with the names of the language's predefined identifiers. They are not named &lt;code&gt;Integers&lt;/code&gt;, &lt;code&gt;Booleans&lt;/code&gt;, &lt;code&gt;Integer_Type&lt;/code&gt;, or &lt;code&gt;Boolean_Type&lt;/code&gt;. 

However, using the name of a subtype from the predefined packages is sure to confuse a programmer when that subtype appears somewhere without a package qualification. 

==== notes ====

This style guide tries to be consistent with the Ada Reference Manual (1995) in use of the terms &quot;type&quot; and &quot;subtype&quot; name. In general, a &quot;type&quot; refers to the abstract concept, as in a type declaration, while the &quot;subtype&quot; refers to the name given to that abstract concept in an actual declaration. Thus, what was called a type name in Ada 83 (Ada Reference Manual 1983) is now called a subtype name. 

=== Object Names ===

==== guideline ====

* Use predicate clauses or adjectives for Boolean objects.
* Use singular, specific nouns as object identifiers.
* Choose identifiers that describe the object's value during execution.
* Use singular, general nouns as identifiers for record components. 

==== example ====
Non-Boolean objects: 

&lt;source lang=ada&gt;
Today           : Day;
Yesterday       : Day;
Retirement_Date : Date;
&lt;/source&gt;

Boolean objects: 

&lt;source lang=ada&gt;
User_Is_Available : Boolean;        -- predicate clause
List_Is_Empty     : Boolean;        -- predicate clause
Empty             : Boolean;        -- adjective
Bright            : Boolean;        -- adjective
&lt;/source&gt;

==== rationale ====

Using specific nouns for objects establishes a context for understanding the object's value, which is one of the general values described by the subtype's name (see Guideline 3.2.2). Object declarations become very English-like with this style. For example, the first declaration above is read as &quot;Today is a Day.&quot; 

General nouns, rather than specific, are used for record components because a record object's name will supply the context for understanding the component. Thus, the following component is understood as &quot;the year of retirement&quot;: 

&lt;source lang=ada&gt;
Retirement_Date.Year
&lt;/source&gt;

Following conventions that relate object types and parts of speech makes code read more like text. For example, because of the names chosen, the following code segment needs no comments: 

&lt;source lang=ada&gt;
if List_Is_Empty then
   Number_Of_Elements := 0;
else
   Number_Of_Elements := Length_Of_List;
end if;
&lt;/source&gt;

==== notes ====

If it is difficult to find a specific noun that describes an object's value during the entire execution of a program, the object is probably serving multiple purposes. Multiple objects should be used in such a case. 

=== Naming of Tagged Types and Associated Packages ===

==== guideline ====

* Use a consistent naming convention for tagged types and associated packages. 

==== instantiation ====

Naming conventions spark &quot;religious wars&quot;; therefore, two different instantiations are presented. The first instantiation integrates the use of object-oriented features. Except for two special cases, it applies the same naming conventions to declarations, independent of whether they use an object-oriented feature: 

* Name tagged types no differently than subtype names (see Guideline 3.2.2).
* Use the prefix &lt;code&gt;Abstract_&lt;/code&gt; for packages that export an abstraction for which you intend to provide multiple implementations (see Guideline 9.2.4).
* Use the suffix &lt;code&gt;_Mixin&lt;/code&gt; for packages that provide units of functionality that can be &quot;mixed in&quot; to core abstractions. 

The second instantiation highlights the use of object-oriented features through special names or suffixes: 

* Name class packages after the object they represent, without a suffix (Rosen 1995).
* Name mixin packages after the facet they represent, appending the suffix _Facet (Rosen 1995).
* Name the main tagged type &lt;code&gt;Instance&lt;/code&gt; (Rosen 1995).
* Follow the declaration of the specific type with a subtype named &lt;code&gt;Class&lt;/code&gt; for the corresponding class-wide type (Rosen 1995). 

==== example ====

The following two-part example from the Rationale (1995, §§4.4.4 and 4.6.2) applies the naming conventions of the first instantiation. 

For the first part of this example, assume the type &lt;code&gt;Set_Element&lt;/code&gt; was declared elsewhere:

&lt;source lang=ada&gt;
package Abstract_Sets is

   type Set is abstract tagged private;

   -- empty set
   function Empty return Set is abstract;

   -- build set with 1 element
   function Unit (Element: Set_Element) return Set is abstract;

   -- union of two sets
   function Union (Left, Right: Set) return Set is abstract;

   -- intersection of two sets
   function Intersection (Left, Right: Set) return Set is abstract;

   -- remove an element from a set
   procedure Take (From    : in out Set;
                   Element :    out set_Element) is abstract;

   Element_Too_Large : exception;
private
   type Set is abstract tagged null record;
end Abstract_Sets;

with Abstract_Sets;
package Bit_Vector_Sets is   -- one implementation of set abstraction

   type Bit_Set is new Abstract_Sets.Set with private;
   ...
private
   Bit_Set_Size : constant := 64;
   type Bit_Vector is ...
   type Bit_Set is new Abstract_Sets.Set with
      record
         Data : Bit_Vector;
      end record;
end Bit_Vector_Sets;

with Abstract_Sets;
package Sparse_Sets  -- alternate implementation of set abstraction

   type Sparse_Set is new Abstract_Sets.Set with private;
   ...
private
   ...
end Bit_Vector_Sets;
&lt;/source&gt;

The second part of this example applies the naming convention to mixin packages that support a windowing system: 

&lt;source lang=ada&gt;
-- assume you have type Basic_Window is tagged limited private;

generic
   type Some_Window is abstract new Basic_Window with private;
package Label_Mixin is 
   type Window_With_Label is abstract new Some_Window with private;
   ...
private
   ...
end Label_Mixin;

generic
   type Some_Window is abstract new Basic_Window with private;
package Border_Mixin is 
   type Window_With_Label is abstract new Some_Window with private;
   ...
private
   ...
end Border_Mixin;
&lt;/source&gt;

The following example applies the naming conventions of the second instantiation, as discussed in Rosen (1995): 

&lt;source lang=ada&gt;
package Shape is
   subtype Side_Count is range 0 .. 100;
   type Instance (Sides: Side_Count) is tagged private;
   subtype Class is Instance'Class;
   . . .
   -- operations on Shape.Instance
private
   . . .
end Shape;

with Shape; use Shape;
package Line is
   type Instance is new Shape.Instance with private;
   subtype Class is Instance'Class;
   . . .
   -- Overridden or new operations
private
   . . .
end Line;

with Shape; use Shape;
generic
   type Origin is new Shape.Instance;
package With_Color_Facet is
   type Instance is new Origin with private;
   subtype Class is Instance'Class;
   -- operations for colored shapes
private
   . . .
end With_Color_Facet;

with Line; use Line;
with With_Color_Facet;
package Colored_Line is new With_Color_Facet (Line.Instance);
&lt;/source&gt;

Sample declarations might look like: 

&lt;source lang=ada&gt;
Red_Line : Colored_Line.Instance;

procedure Draw (What : Shape.Instance);
&lt;/source&gt;

The above scheme works whether you use full names or a &lt;code&gt;use&lt;/code&gt; clause. As long as you use the same name for all the specific types (i.e., &lt;code&gt;type Instance&lt;/code&gt;) and class-wide types, the unqualified names will always hide one another. Thus, the compiler will insist you use full name qualification to resolve the ambiguity introduced by the use clause (Rosen 1995). 

==== rationale ====

You want to use a naming scheme that is consistent and readable and conveys the intent of the abstraction. Ideally, the naming scheme should be uniform in how it handles the different ways in which tagged types are used to create classes. If the naming convention is too rigid, however, you will write code fragments that appear stilted from a readability point of view. By using a similar naming convention for type extension through derivation and through generic mixin (see also Guideline 9.5.1), you achieve readable declarations of objects and procedures. 

==== notes ====

A naming convention for classes draws a hard line between object-oriented abstractions and other kinds of abstractions. Given that engineers have been defining abstract data types in Ada 83 (Ada Reference Manual 1983) for over 10 years, you may not want to change the naming convention just for the sake of using type extension with a type. You must consider how important it is to call out uses of inheritance in the overall use of abstractions in your program. If you prefer to emphasize abstraction, in general, over the mechanism used to implement the abstraction (i.e., inheritance, type-extension, and polymorphism), you may not want to impose such a stringent naming convention. You do not hamper quality by favoring a smoother transition in naming conventions from abstractions developed without inheritance to those developed with inheritance. 

If you choose a naming convention that highlights the use of object-oriented features and later decide to change the declaration to one that does not use an object-oriented feature, the change may be expensive. You must naturally change all occurrences of the names and must be careful not to introduce errors as you update the names. If you choose a naming convention that prohibits the use of suffixes or prefixes to characterize the declaration, you lose the opportunity to convey the intended usage of the declared item.

=== Program Unit Names ===

==== guideline ====

* Use action verbs for procedures and entries.
* Use predicate clauses for Boolean functions.
* Use nouns for non-Boolean functions.
* Give packages names that imply a higher level of organization than subprograms. Generally, these are noun phrases that describe the abstraction provided.
* Give tasks names that imply an active entity.
* Use nouns descriptive of the data being protected for protected units.
* Consider naming generic subprograms as if they were nongeneric subprograms.
* Consider naming generic packages as if they were nongeneric packages.
* Make the generic names more general than the instantiated names.

==== example ====
The following are sample names for elements that compose an Ada program: 

Sample procedure names: 

&lt;source lang=ada&gt;
procedure Get_Next_Token          -- get is a transitive verb
procedure Create                  -- create is a transitive verb
&lt;/source&gt;

Sample function names for Boolean-valued functions: 

&lt;source lang=ada&gt;
function Is_Last_Item             -- predicate clause
function Is_Empty                 -- predicate clause
&lt;/source&gt;

Sample function names for non-Boolean-valued functions: 

&lt;source lang=ada&gt;
function Successor                -- common noun
function Length                   -- attribute
function Top                      -- component
&lt;/source&gt;

Sample package names: 

&lt;source lang=ada&gt;
package Terminals is               -- common noun
package Text_Routines is           -- common noun
&lt;/source&gt;

Sample protected objects: 

&lt;source lang=ada&gt;
protected Current_Location is      -- data being protected
protected type Guardian is         -- noun implying protection
&lt;/source&gt;

Sample task names: 

&lt;source lang=ada&gt;
task Terminal_Resource_Manager is  -- common noun that shows action
&lt;/source&gt;

The following sample piece of code shows the clarity that results from using the parts-of-speech naming conventions:

&lt;source lang=ada&gt;
Get_Next_Token(Current_Token);

case Current_Token is
   when Identifier =&gt;         Process_Identifier;
   when Numeric    =&gt;         Process_Numeric;
end case;  -- Current_Token

if Is_Empty(Current_List) then
   Number_Of_Elements := 0;
else
   Number_Of_Elements := Length(Current_List);
end if;
&lt;/source&gt;

When packages and their subprograms are named together, the resulting code is very descriptive: 

&lt;source lang=ada&gt;
if Stack.Is_Empty(Current_List) then
   Current_Token := Stack.Top(Current_List);
end if;
&lt;/source&gt;

==== rationale ====

Using these naming conventions creates understandable code that reads much like natural language. When verbs are used for actions, such as subprograms, and nouns are used for objects, such as the data that the subprogram manipulates, code is easier to read and understand. This models a medium of communication already familiar to a reader. Where the pieces of a program model a real-life situation, using these conventions reduces the number of translation steps involved in reading and understanding the program. In a sense, your choice of names reflects the level of abstraction from computer hardware toward application requirements. 

See also Guideline 3.2.4 for the use of special-purpose suffixes in packages associated with tagged types. 

==== notes ====

There are some conflicting conventions in current use for task entries. Some programmers and designers advocate naming task entries with the same conventions used for subprograms to blur the fact that a task is involved. Their reasoning is that if the task is reimplemented as a package, or vice versa, the names need not change. Others prefer to make the fact of a task entry as explicit as possible to ensure that the existence of a task with its presumed overhead is recognizable. Project-specific priorities may be useful in choosing between these conventions. 

=== Constants and Named Numbers ===

==== guideline ====

* Use symbolic values instead of literals where the symbolic value improves readability.
* Use symbolic values instead of literals if the value occurs at more than one place and might need to be changed.
* Use the predefined constants Ada.Numerics.Pi and Ada.Numerics.e for the mathematical constants Pi and e.
* Use constants instead of variables for constant values.
* Use a constant when the value is specific to a type or when the value must be static.
* Use named numbers instead of constants, whenever possible.
* Use named numbers to replace numeric literals whose type or context is truly universal. 
* Use constants for objects whose values cannot change after elaboration (United Technologies 1987).
* Show relationships between symbolic values by defining them with static expressions.
* Use linearly independent sets of literals.
* Use attributes like 'First and 'Last instead of literals, wherever possible.

==== example ====

&lt;source lang=ada&gt;
3.14159_26535_89793                                 -- literal
Max_Entries : constant Integer       := 400;        -- constant
Avogadros_Number  : constant := 6.022137 * 10**23;  -- named number
Avogadros_Number / 2                                -- static expression
Avogadros_Number                                    -- symbolic value
&lt;/source&gt;

Declaring &lt;code&gt;Pi&lt;/code&gt; as a named number (assuming a &lt;code&gt;with&lt;/code&gt; clause for the predefined package &lt;code&gt;Ada.Numerics&lt;/code&gt; in the Ada Reference Manual [1995, §A.5] allows it to be referenced symbolically in the assignment statement below: 

&lt;source lang=ada&gt;
Area :=       Pi * Radius**2;       -- if radius is known.
&lt;/source&gt;

instead of: 

&lt;source lang=ada&gt;
Area := 3.14159 * Radius**2;        -- Needs explanatory comment
&lt;/source&gt;

Also, &lt;code&gt;Ada.Characters.Latin_1.Bel&lt;/code&gt; is more expressive than &lt;code&gt;Character'Val(8#007#)&lt;/code&gt;. 

Clarity of constant and named number declarations can be improved by using other constant and named numbers. For example: 

&lt;source lang=ada&gt;
Bytes_Per_Page   : constant := 512;
Pages_Per_Buffer : constant := 10;
Buffer_Size      : constant := Pages_Per_Buffer * Bytes_Per_Page;
&lt;/source&gt;

is more self-explanatory and easier to maintain than: 

&lt;source lang=ada&gt;
Buffer_Size : constant := 5_120;   -- ten pages
&lt;/source&gt;

The following literals should be constants: 

&lt;source lang=ada&gt;
if New_Character  = '$' then  -- &quot;constant&quot; that may change
...
if Current_Column = 7 then    -- &quot;constant&quot; that may change
&lt;/source&gt;

==== rationale ====

Using identifiers instead of literals makes the purpose of expressions clear, reducing the need for comments. Constant declarations consisting of expressions of numeric literals are safer because they do not need to be computed by hand. They are also more enlightening than a single numeric literal because there is more opportunity for embedding explanatory names. Clarity of constant declarations can be improved further by using other related constants in static expressions defining new constants. This is not less efficient because static expressions of named numbers are computed at compile time. 

A constant has a type. A named number can only be a universal type: universal_integer or universal_real. Strong typing is enforced for constants but not for named numbers or literals. Named numbers allow compilers to generate more efficient code than for constants and to perform more complete error checking at compile time. If the literal contains a large number of digits (as Pi in the example above), the use of an identifier reduces keystroke errors. If keystroke errors occur, they are easier to locate either by inspection or at compile time. 

Independence of literals means that the few literals that are used do not depend on one another and that any relationship between constant or named values is shown in the static expressions. Linear independence of literal values gives the property that if one literal value changes, all of the named numbers of values dependent on that literal are automatically changed. 

See Guideline 4.1.4 for additional guidelines on choosing a parameterless function versus a constant. 

==== notes ====

There are situations where a literal is a better choice than a name.  For this to be the case, the following conditions have to be fulfilled:

* The literal has to be self-explanatory in the respective context, such that replacing the literal by a symbolic value would not improve the readability.
* The value is either unchangeable or only occurs at one single place in the code, such that replacing the literal by a symbolic value would not improve the maintainability.

For example, the literals in the following well known relationship are both self-explanatory and unchangeable:

&lt;source lang=ada&gt;
   Fahrenheit := 32.0 + (9.0 * Celsius) / 5.0;
&lt;/source&gt;

As a second example, dividing by the literal 2 is self-explanatory in a binary search algorithm context.  And, since the value is also unchangeably related with the algorithm, it also does not matter if the literal occurs at more than one place in the code (for example due to loop unrolling).  Therefore, the use of a symbolic value like the following would neither improve readability nor maintainability:

&lt;source lang=ada&gt;
   Binary_Search_Divisor : constant := 2;
&lt;/source&gt;

=== Exceptions ===

==== guideline ====

* Use a name that indicates the kind of problem the exception represents. 

==== example ====

&lt;source lang=ada&gt;
Invalid_Name: exception;
Stack_Overflow: exception;
&lt;/source&gt;

==== rationale ====

Naming exceptions according to the kind of problem they are detecting enhances the readability of the code. You should name your exceptions as precisely as you can so that the maintainer of the code understands why the exception might be raised. A well-named exception should be meaningful to the clients of the package declaring the exception.

=== Constructors ===

==== guideline ====

* Include a prefix like &lt;code&gt;New&lt;/code&gt;, &lt;code&gt;Make&lt;/code&gt;, or &lt;code&gt;Create&lt;/code&gt; in naming constructors (in this sense, operations to create and/or initialize an object).
* Use names indicative of their content for child packages containing constructors. 

==== instantiation ====
* Name a child package containing constructors &lt;code&gt;&lt;whatever&gt;.Constructor&lt;/code&gt;. 

==== example ====

&lt;source lang=ada&gt;
function Make_Square (Center : Cartesian_Coordinates; 
                      Side   : Positive)
  return Square;
&lt;/source&gt;

==== rationale ====

Including a word like &lt;code&gt;New&lt;/code&gt;, &lt;code&gt;Make&lt;/code&gt;, or &lt;code&gt;Create&lt;/code&gt; in a constructor name makes its purpose clear. You may want to restrict the use of the prefix New to constructors that return an access value because the prefix suggests the internal use of an allocator. 

Putting all constructors in a child package, even when they return access values, is a useful organizational principle. 

For information regarding the use of Ada constructors, refer to Guideline 9.3.3.

== Comments ==

Comments in source text are a controversial issue. There are arguments both for and against the view that comments enhance readability. In practice, the biggest problem with comments is that people often fail to update them when the associated source text is changed, thereby making the commentary misleading. Commentary should be reserved for expressing needed information that cannot be expressed in code and highlighting cases where there are overriding reasons to violate one of the guidelines. If possible, source text should use self-explanatory names for objects and program units, and it should use simple, understandable program structures so that little additional commentary is needed. The extra effort in selecting (and entering) appropriate names and the extra thought needed to design clean and understandable program structures are fully justified. 

Use comments to state the intent of the code. Comments that provide an overview of the code help the maintenance programmer see the forest for the trees. The code itself is the detailed &quot;how&quot; and should not be paraphrased in the comments. 

Comments should be minimized. They should provide needed information that cannot be expressed in the Ada language, emphasize the structure of code, and draw attention to deliberate and necessary violations of the guidelines. Comments are present either to draw attention to the real issue being exemplified or to compensate for incompleteness in the sample program. 

Maintenance programmers need to know the causal interaction of noncontiguous pieces of code to get a global, more or less complete sense of the program. They typically acquire this kind of information from mental simulation of parts of the code. Comments should be sufficient enough to support this process (Soloway et al. 1986). 

This section presents general guidelines about how to write good comments. It then defines several different classes of comments with guidelines for the use of each. The classes are file headers, program unit specification headers, program unit body headers, data comments, statement comments, and marker comments. 

=== General Comments ===

==== guideline ====

* Make the code as clear as possible to reduce the need for comments. 
* Never repeat information in a comment that is readily available in the code.
* Where a comment is required, make it concise and complete. 
* Use proper grammar and spelling in comments.
* Make comments visually distinct from the code.
* Structure comments in header so that information can be automatically extracted by a tool. 

==== rationale ====
The structure and function of well-written code is clear without comments. Obscured or badly structured code is hard to understand, maintain, or reuse regardless of comments. Bad code should be improved, not explained. Reading the code itself is the only way to be absolutely positive about what the code does; therefore, the code should be made as readable as possible. 

Using comments to duplicate information in the code is a bad idea for several reasons. First, it is unnecessary work that decreases productivity. Second, it is very difficult to correctly maintain the duplication as the code is modified. When changes are made to existing code, it is compiled and tested to make sure that it is once again correct. However, there is no automatic mechanism to make sure that the comments are correctly updated to reflect the changes. Very often, the duplicate information in a comment becomes obsolete at the first code change and remains so through the life of the software. Third, when comments about an entire system are written from the limited point of view of the author of a single subsystem, the comments are often incorrect from the start. 

Comments are necessary to reveal information difficult or impossible to obtain from the code. Subsequent chapters of this book contain examples of such comments. Completely and concisely present the required information. 

The purpose of comments is to help readers understand the code. Misspelled, ungrammatical, ambiguous, or incomplete comments defeat this purpose. If a comment is worth adding, it is worth adding correctly in order to increase its usefulness. 

Making comments visually distinct from the code by indenting them, grouping them together into headers, or highlighting them with dashed lines is useful because it makes the code easier to read. Subsequent chapters of this book elaborate on this point. 

==== automation notes ====

The guideline about storing redundant information in comments applies only to manually generated comments. There are tools that automatically maintain information about the code (e.g., calling units, called units, cross-reference information, revision histories, etc.), storing it in comments in the same file as the code. Other tools read comments but do not update them, using the information from the comments to automatically generate detailed design documents and other reports. 

The use of such tools is encouraged and may require that you structure your header comments so they can be automatically extracted and/or updated. Beware that tools that modify the comments in a file are only useful if they are executed frequently enough. Automatically generated obsolete information is even more dangerous than manually generated obsolete information because it is more trusted by the reader. 

Revision histories are maintained much more accurately and completely by configuration management tools. With no tool support, it is very common for an engineer to make a change and forget to update the revision history. If your configuration management tool is capable of maintaining revision histories as comments in the source file, then take advantage of that capability, regardless of any compromise you might have to make about the format or location of the revision history. It is better to have a complete revision history appended to the end of the file than to have a partial one formatted nicely and embedded in the file header. 

=== File Headers ===

==== guideline ====

* Put a file header on each source file.
* Place ownership, responsibility, and history information for the file in the file header.

==== instantiation ====
* Put a copyright notice in the file header.
* Put the author's name and department in the file header.
* Put a revision history in the file header, including a summary of each change, the date, and the name of the person making the change. 

==== example ====

&lt;source lang=ada&gt;
------------------------------------------------------------------------
--      Copyright (c) 1991, Software Productivity Consortium, Inc.
--      All rights reserved.
--
-- Author: J. Smith
-- Department:System Software Department
--
-- Revision History:
--   7/9/91 J. Smith
--     - Added function Size_Of to support queries of node sizes.
--     - Fixed bug in Set_Size which caused overlap of large nodes.
--   7/1/91 M. Jones
--     - Optimized clipping algorithm for speed.
--   6/25/91 J. Smith
--     - Original version.
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Ownership information should be present in each file if you want to be sure to protect your rights to the software. Furthermore, for high visibility, it should be the first thing in the file. 

Responsibility and revision history information should be present in each file for the sake of future maintainers; this is the header information most trusted by maintainers because it accumulates. It does not evolve. There is no need to ever go back and modify the author's name or the revision history of a file. As the code evolves, the revision history should be updated to reflect each change. At worst, it will be incomplete; it should rarely be wrong. Also, the number and frequency of changes and the number of different people who made the changes over the history of a unit can be good indicators of the integrity of the implementation with respect to the design. 

Information about how to find the original author should be included in the file header, in addition to the author's name, to make it easier for maintainers to find the author in case questions arise. However, detailed information like phone numbers, mail stops, office numbers, and computer account user names are too volatile to be very useful. It is better to record the department for which the author was working when the code was written. This information is still useful if the author moves offices, changes departments, or even leaves the company because the department is likely to retain responsibility for the original version of the code. 

==== notes ====

With modern configuration management systems, explicitly capturing version history as header comments may be superfluous. The configuration management tool maintains a more reliable and consistent (from a content point of view) change history. Some systems can re-create earlier versions of a unit. 

=== Program Unit Specification Headers ===

==== guideline ====

* Put a header on the specification of each program unit.
* Place information required by the user of the program unit in the specification header.
* Do not repeat information (except unit name) in the specification header that is present in the specification.
* Explain what the unit does, not how or why it does it.
* Describe the complete interface to the program unit, including any exceptions it can raise and any global effects it can have.
* Do not include information about how the unit fits into the enclosing software system.
* Describe the performance (time and space) characteristics of the unit. 

==== instantiation ====
* Put the name of the program unit in the header.
* Briefly explain the purpose of the program unit.
* For packages, describe the effects of the visible subprograms on each other and how they should be used together.
* List all exceptions that can be raised by the unit.
* List all global effects of the unit.
* List preconditions and postconditions of the unit.
* List hidden tasks activated by the unit.
* Do not list the names of parameters of a subprogram.
* Do not list the names of package subprograms just to list them.
* Do not list the names of all other units used by the unit.
* Do not list the names of all other units that use the unit. 

==== example ====

&lt;source lang=ada&gt;
     ------------------------------------------------------------------------
     -- AUTOLAYOUT
     --
     -- Purpose:
     --   This package computes positional information for nodes and arcs
     --   of a directed graph.  It encapsulates a layout algorithm which is
     --   designed to minimize the number of crossing arcs and to emphasize
     --   the primary direction of arc flow through the graph.
     --
     -- Effects:
     --   - The expected usage is:
     --     1. Call Define for each node and arc to define the graph.
     --     2. Call Layout to assign positions to all nodes and arcs.
     --     3. Call Position_Of for each node and arc to determine the
     --        assigned coordinate positions.
     --   - Layout can be called multiple times, and recomputes the
     --     positions of all currently defined nodes and arcs each time.
     --   - Once a node or arc has been defined, it remains defined until
     --     Clear is called to delete all nodes and arcs.
     --
     -- Performance:
     --   This package has been optimized for time, in preference to space.
     --   Layout times are on the order of N*log(N) where N is the number
     --   of nodes, but memory space is used inefficiently.
     ------------------------------------------------------------------------

     package Autolayout is

        ...

        ---------------------------------------------------------------------
        -- Define
        --
        -- Purpose:
        --   This procedure defines one node of the current graph.
        -- Exceptions:
        --   Node_Already_Defined
        ---------------------------------------------------------------------
        procedure Define
              (New_Node : in     Node);

        ---------------------------------------------------------------------
        -- Layout
        --
        -- Purpose:
        --   This procedure assigns coordinate positions to all defined
        --   nodes and arcs.
        -- Exceptions:
        --   None.
        ---------------------------------------------------------------------
        procedure Layout;

        ---------------------------------------------------------------------
        -- Position_Of
        --
        -- Purpose:
        --   This function returns the coordinate position of the
        --   specified node.  The default position (0,0) is returned if no
        --   position has been assigned yet.
        -- Exceptions:
        --   Node_Not_Defined
        ---------------------------------------------------------------------
        function Position_Of (Current : in     Node)
              return Position;

        ...

     end Autolayout;
&lt;/source&gt;

==== rationale ====

The purpose of a header comment on the specification of a program unit is to help the user understand how to use the program unit. From reading the program unit specification and header, a user should know everything necessary to use the unit. It should not be necessary to read the body of the program unit. Therefore, there should be a header comment on each program unit specification, and each header should contain all usage information not expressed in the specification itself. Such information includes the units' effects on each other and on shared resources, exceptions raised, and time/space characteristics. None of this information can be determined from the Ada specification of the program unit. 

When you duplicate information in the header that can be readily obtained from the specification, the information tends to become incorrect during maintenance. For example, do not make a point of listing all parameter names, modes, or subtypes when describing a procedure. This information is already available from the procedure specification. Similarly, do not list all subprograms of a package in the header unless this is necessary to make some important statement about the subprograms. 

Do not include information in the header that the user of the program unit does not need. In particular, do not include information about how a program unit performs its function or why a particular algorithm was used. This information should be hidden in the body of the program unit to preserve the abstraction defined by the unit. If the user knows such details and makes decisions based on that information, the code may suffer when that information is later changed. 

When describing the purpose of the unit, avoid referring to other parts of the enclosing software system. It is better to say &quot;this unit does…&quot; than to say &quot;this unit is called by Xyz to do….&quot; The unit should be written in such a way that it does not know or care which unit is calling it. This makes the unit much more general purpose and reusable. In addition, information about other units is likely to become obsolete and incorrect during maintenance. 

Include information about the performance (time and space) characteristics of the unit. Much of this information is not present in the Ada specification, but it is required by the user. To integrate the unit into a system, the user needs to understand the resource usage (CPU, memory, etc.) of the unit. It is especially important to note that when a subprogram call causes activation of a task hidden in a package body, the task may continue to consume resources after the subroutine ends. 

==== notes ====

Some projects have deferred most of the commentary to the end rather than at the beginning of the program unit. Their rationale is that program units are written once and read many times and that long header comments make the start of the specification difficult to find. 

==== exceptions ====

Where a group of program units are closely related or simple to understand, it is acceptable to use a single header for the entire group of program units. For example, it makes sense to use a single header to describe the behavior of Max and Min functions; Sin, Cos, and Tan functions; or a group of functions to query related attributes of an object encapsulated in a package. This is especially true when each function in the set is capable of raising the same exceptions. 

=== Program Unit Body Headers ===

==== guideline ====

* Place information required by the maintainer of the program unit in the body of the header 
* Explain how and why the unit performs its function, not what the unit does.
* Do not repeat information (except unit name) in the header that is readily apparent from reading the code.
* Do not repeat information (except unit name) in the body header that is available in the specification header. 

==== instantiation ====
* Put the name of the program unit in the header.
* Record portability issues in the header.
* Summarize complex algorithms in the header.
* Record reasons for significant or controversial implementation decisions.
* Record discarded implementation alternatives, along with the reason for discarding them. 
* Record anticipated changes in the header, especially if some work has already been done to the code to make the changes easy to accomplish. 

==== example ====

&lt;source lang=ada&gt;
------------------------------------------------------------------------
-- Autolayout
--
-- Implementation Notes:
--   - This package uses a heuristic algorithm to minimize the number
--     of arc crossings.  It does not always achieve the true minimum
--     number which could theoretically be reached.  However it does a
--     nearly perfect job in relatively little time.  For details about
--     the algorithm, see ...
--
-- Portability Issues:
--   - The native math package Math_Lib is used for computations of
--     coordinate positions.
--   - 32-bit integers are required.
--   - No operating system specific routines are called.
--
-- Anticipated Changes:
--   - Coordinate_Type below could be changed from integer to float
--     with little effort.  Care has been taken to not depend on the
--     specific characteristics of integer arithmetic.
------------------------------------------------------------------------
package body Autolayout is

   ...

   ---------------------------------------------------------------------
   -- Define
   --
   -- Implementation Notes:
   --   - This routine stores a node in the general purpose Graph data
   --     structure, not the Fast_Graph structure because ...
   ---------------------------------------------------------------------
   procedure Define
         (New_Node : in     Node) is
   begin
      ...
   end Define;

   ---------------------------------------------------------------------
   -- Layout
   --
   -- Implementation Notes:
   --   - This routine copies the Graph data structure (optimized for
   --     fast random access) into the Fast_Graph data structure
   --     (optimized for fast sequential iteration), then performs the
   --     layout, and copies the data back to the Graph structure.  This
   --     technique was introduced as an optimization when the algorithm
   --     was found to be too slow, and it produced an order of
   --     magnitude improvement.
   ---------------------------------------------------------------------
   procedure Layout is
   begin
      ...
   end Layout;

   ---------------------------------------------------------------------
   -- Position_Of
   ---------------------------------------------------------------------
   function Position_Of (Current : in     Node)
         return Position is
   begin
      ...
   end Position_Of;

   ...

end Autolayout;
&lt;/source&gt;

==== rationale ====

The purpose of a header comment on the body of a program unit is to help the maintainer of the program unit to understand the implementation of the unit, including tradeoffs among different techniques. Be sure to document all decisions made during implementation to prevent the maintainer from making the same mistakes you made. One of the most valuable comments to a maintainer is a clear description of why a change being considered will not work. 

The header is also a good place to record portability concerns. The maintainer may have to port the software to a different environment and will benefit from a list of nonportable features. Furthermore, the act of collecting and recording portability issues focuses attention on these issues and may result in more portable code from the start. 

Summarize complex algorithms in the header if the code is difficult to read or understand without such a summary, but do not merely paraphrase the code. Such duplication is unnecessary and hard to maintain. Similarly, do not repeat the information from the header of the program unit specification. 

==== notes ====

It is often the case that a program unit is self-explanatory so that it does not require a body header to explain how it is implemented or why. In such a case, omit the header entirely, as in the case with Position_Of above. Be sure, however, that the header you omit truly contains no information. For example, consider the difference between the two header sections: 

&lt;source lang=ada&gt;
-- Implementation Notes:  None.
&lt;/source&gt;

and: 

&lt;source lang=ada&gt;
-- NonPortable Features:  None.
&lt;/source&gt;

The first is a message from the author to the maintainer saying &quot;I can't think of anything else to tell you,&quot; while the second may mean &quot;I guarantee that this unit is entirely portable.&quot; 

=== Data Comments ===

==== guideline ====

* Comment on all data types, objects, and exceptions unless their names are self-explanatory.
* Include information on the semantic structure of complex, pointer-based data structures.
* Include information about relationships that are maintained between data objects.
* Omit comments that merely repeat the information in the name.
* Include information on redispatching for tagged types in cases where you intend the specializations (i.e., derived types) to override these redispatching operations. 

==== example ====
Objects can be grouped by purpose and commented as: 

&lt;source lang=ada&gt;
...

---------------------------------------------------------------------
-- Current position of the cursor in the currently selected text
-- buffer, and the most recent position explicitly marked by the
-- user.
-- Note:  It is necessary to maintain both current and desired
--        column positions because the cursor cannot always be
--        displayed in the desired position when moving between
--        lines of different lengths.
---------------------------------------------------------------------
Desired_Column : Column_Counter;
Current_Column : Column_Counter;
Current_Row    : Row_Counter;
Marked_Column  : Column_Counter;
Marked_Row     : Row_Counter;
&lt;/source&gt;

The conditions under which an exception is raised should be commented: 

&lt;source lang=ada&gt;
---------------------------------------------------------------------
-- Exceptions
---------------------------------------------------------------------
Node_Already_Defined : exception;   -- Raised when an attempt is made
                                    --|   to define a node with an
                                    --|   identifier which already
                                    --|   defines a node.
Node_Not_Defined     : exception;   -- Raised when a reference is
                                    --|   made to a node which has
                                    --|   not been defined.
&lt;/source&gt;

Here is a more complex example, involving multiple record and access types that are used to form a complex data structure: 

&lt;source lang=ada&gt;
---------------------------------------------------------------------
-- These data structures are used to store the graph during the
-- layout process. The overall organization is a sorted list of
-- &quot;ranks,&quot; each containing a sorted list of nodes, each containing
-- a list of incoming arcs and a list of outgoing arcs.
-- The lists are doubly linked to support forward and backward
-- passes for sorting. Arc lists do not need to be doubly linked
-- because order of arcs is irrelevant.
--
-- The nodes and arcs are doubly linked to each other to support
-- efficient lookup of all arcs to/from a node, as well as efficient
-- lookup of the source/target node of an arc.
---------------------------------------------------------------------

type Arc;
type Arc_Pointer is access Arc;

type Node;
type Node_Pointer is access Node;

type Node is
   record
      Id       : Node_Pointer;-- Unique node ID supplied by the user.
      Arc_In   : Arc_Pointer;
      Arc_Out  : Arc_Pointer;
      Next     : Node_Pointer;
      Previous : Node_Pointer;
   end record;

type Arc is
   record
      ID     : Arc_ID;        -- Unique arc ID supplied by the user.
      Source : Node_Pointer;
      Target : Node_Pointer;
      Next   : Arc_Pointer;
   end record;

type Rank;
type Rank_Pointer is access Rank;

type Rank is
   record
      Number     : Level_ID;  -- Computed ordinal number of the rank.
      First_Node : Node_Pointer;
      Last_Node  : Node_Pointer;
      Next       : Rank_Pointer;
      Previous   : Rank_Pointer;
   end record;

First_Rank : Rank_Pointer;
Last_Rank  : Rank_Pointer;
&lt;/source&gt;

==== rationale ====

It is very useful to add comments explaining the purpose, structure, and semantics of the data structures. Many maintainers look at the data structures first when trying to understand the implementation of a unit. Understanding the data that can be stored, along with the relationships between the different data items and the flow of data through the unit, is an important first step in understanding the details of the unit. 

In the first example above, the names Current_Column and Current_Row are relatively self-explanatory. The name Desired_Column is also well chosen, but it leaves the reader wondering what the relationship is between the current column and the desired column. The comment explains the reason for having both. 

Another advantage of commenting on the data declarations is that the single set of comments on a declaration can replace multiple sets of comments that might otherwise be needed at various places in the code where the data is manipulated. In the first example above, the comment briefly expands on the meaning of &quot;current&quot; and &quot;marked.&quot; It states that the &quot;current&quot; position is the location of the cursor, the &quot;current&quot; position is in the current buffer, and the &quot;marked&quot; position was marked by the user. This comment, along with the mnemonic names of the variables, greatly reduces the need for comments at individual statements throughout the code. 

It is important to document the full meaning of exceptions and under what conditions they can be raised, as shown in the second example above, especially when the exceptions are declared in a package specification. The reader has no other way to find out the exact meaning of the exception (without reading the code in the package body). 

Grouping all the exceptions together, as shown in the second example, can provide the reader with the effect of a &quot;glossary&quot; of special conditions. This is useful when many different subprograms in the package can raise the same exceptions. For a package in which each exception can be raised by only one subprogram, it may be better to group related subprograms and exceptions together. 

When commenting exceptions, it is better to describe the exception's meaning in general terms than to list all the subprograms that can cause the exception to be raised; such a list is harder to maintain. When a new routine is added, it is likely that these lists will not be updated. Also, this information is already present in the comments describing the subprograms, where all exceptions that can be raised by the subprogram should be listed. Lists of exceptions by subprogram are more useful and easier to maintain than lists of subprograms by exception. 

In the third example, the names of the record fields are short and mnemonic, but they are not completely self-explanatory. This is often the case with complex data structures involving access types. There is no way to choose the record and field names so that they completely explain the overall organization of the records and pointers into a nested set of sorted lists. The comments shown are useful in this case. Without them, the reader would not know which lists are sorted, which lists are doubly linked, or why. The comments express the intent of the author with respect to this complex data structure. The maintainer still has to read the code if he wants to be sure that the double links are all properly maintained. Keeping this in mind when reading the code makes it much easier for the maintainer to find a bug where one pointer is updated and the opposite one is not. 

See Guideline 9.3.1 for the rationale for documenting the use of redispatching operations. (Redispatching means converting an argument of one primitive operation to a class-wide type and making a dispatching call to another primitive operation.) The rationale in Guideline 9.3.1 discusses whether such documentation should be in the specification or the body. 

=== Statement Comments ===

==== guideline ====

* Minimize comments embedded among statements. 
* Use comments only to explain parts of the code that are not obvious. 
* Comment intentional omissions from the code. 
* Do not use comments to paraphrase the code. 
* Do not use comments to explain remote pieces of code, such as subprograms called by the current unit. 
* Where comments are necessary, make them visually distinct from the code. 

==== example ====
The following is an example of very poorly commented code: 

&lt;source lang=ada&gt;
...

-- Loop through all the strings in the array Strings, converting
-- them to integers by calling Convert_To_Integer on each one,
-- accumulating the sum of all the values in Sum, and counting them
-- in Count.  Then divide Sum by Count to get the average and store
-- it in Average. Also, record the maximum number in the global
-- variable Max_Number.

for I in Strings'Range loop
   -- Convert each string to an integer value by looping through
   -- the characters which are digits, until a nondigit is found,
   -- taking the ordinal value of each, subtracting the ordinal value
   -- of '0', and multiplying by 10 if another digit follows.  Store
   -- the result in Number.
   Number := Convert_To_Integer(Strings(I));
   -- Accumulate the sum of the numbers in Total.
   Sum := Sum + Number;
   -- Count the numbers.
   Count := Count + 1;

   -- Decide whether this number is more than the current maximum.
   if Number &gt; Max_Number then
      -- Update the global variable Max_Number.
      Max_Number := Number;
   end if;

end loop;
-- Compute the average.
Average := Sum / Count;
&lt;/source&gt;

The following is improved by not repeating things in the comments that are obvious from the code, not describing the details of what goes in inside of &lt;code&gt;Convert_To_Integer&lt;/code&gt;, deleting an erroneous comment (the one on the statement that accumulates the sum), and making the few remaining comments more visually distinct from the code. 

&lt;source lang=ada&gt;
Sum_Integers_Converted_From_Strings:
   for I in Strings'Range loop
      Number := Convert_To_Integer(Strings(I));
      Sum := Sum + Number;
      Count := Count + 1;

      -- The global Max_Number is computed here for efficiency.
      if Number &gt; Max_Number then
         Max_Number := Number;
      end if;

   end loop Sum_Integers_Converted_From_Strings;

Average := Sum / Count;
&lt;/source&gt;

==== rationale ====

The improvements shown in the example are not improvements merely by reducing the total number of comments; they are improvements by reducing the number of useless comments. 

Comments that paraphrase or explain obvious aspects of the code have no value. They are a waste of effort for the author to write and the maintainer to update. Therefore, they often end up becoming incorrect. Such comments also clutter the code, hiding the few important comments. 

Comments describing what goes on inside another unit violate the principle of information hiding. The details about Convert_To_Integer (deleted above) are irrelevant to the calling unit, and they are better left hidden in case the algorithm ever changes. Examples explaining what goes on elsewhere in the code are very difficult to maintain and almost always become incorrect at the first code modification. 

The advantage of making comments visually distinct from the code is that it makes the code easier to scan, and the few important comments stand out better. Highlighting unusual or special code features indicates that they are intentional. This assists maintainers by focusing attention on code sections that are likely to cause problems during maintenance or when porting the program to another implementation. 

Comments should be used to document code that is nonportable, implementation-dependent, environment-dependent, or tricky in any way. They notify the reader that something unusual was put there for a reason. A beneficial comment would be one explaining a work around for a compiler bug. If you use a lower level (not &quot;ideal&quot; in the software engineering sense) solution, comment on it. Information included in the comments should state why you used that particular construct. Also include documentation on the failed attempts, for example, using a higher level structure. This kind of comment is useful to maintainers for historical purposes. You show the reader that a significant amount of thought went into the choice of a construct. 

Finally, comments should be used to explain what is not present in the code as well as what is present. If you make a conscious decision to not perform some action, like deallocating a data structure with which you appear to be finished, be sure to add a comment explaining why not. Otherwise, a maintainer may notice the apparent omission and &quot;correct&quot; it later, thus introducing an error. 

See also Guideline 9.3.1 for a discussion of what kind of documentation you should provide regarding tagged types and redispatching. 

==== notes ====

Further improvements can be made on the above example by declaring the variables Count and Sum in a local block so that their scope is limited and their initializations occur near their usage, e.g., by naming the block Compute_Average or by moving the code into a function called Average_Of. The computation of Max_Number can also be separated from the computation of Average. However, those changes are the subject of other guidelines; this example is only intended to illustrate the proper use of comments. 

=== Marker Comments ===

==== guideline ====

* Use pagination markers to mark program unit boundaries (see Guideline 2.1.7). 
* Repeat the unit name in a comment to mark the &lt;code&gt;begin&lt;/code&gt; of a package body, subprogram body, task body, or block if the &lt;code&gt;begin&lt;/code&gt; is preceded by declarations. 
* For long or heavily nested &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;case&lt;/code&gt; statements, mark the end of the statement with a comment summarizing the condition governing the statement. 
* For long or heavily nested &lt;code&gt;if&lt;/code&gt; statements, mark the &lt;code&gt;else&lt;/code&gt; part with a comment summarizing the conditions governing this portion of the statement. 

==== example ====

&lt;source lang=ada&gt;
if    A_Found then
   ...
elsif B_Found then
   ...

else  -- A and B were both not found
   ...

   if Count = Max then
      ...

   end if;

   ...
end if;  -- A_Found

------------------------------------------------------------------------
package body Abstract_Strings is
   ...

   ---------------------------------------------------------------------
   procedure Concatenate (...) is
   begin
      ...
   end Concatenate;
   ---------------------------------------------------------------------

   ...
begin  -- Abstract_Strings
   ...
end Abstract_Strings;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Marker comments emphasize the structure of code and make it easier to scan. They can be lines that separate sections of code or descriptive tags for a construct. They help the reader resolve questions about the current position in the code. This is more important for large units than for small ones. A short marker comment fits on the same line as the reserved word with which it is associated. Thus, it adds information without clutter. 

The &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;elsif&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, and &lt;code&gt;end if&lt;/code&gt; of an &lt;code&gt;if&lt;/code&gt; statement are often separated by long sequences of statements, sometimes involving other &lt;code&gt;if&lt;/code&gt; statements. As shown in the first example, marker comments emphasize the association of the keywords of the same statement over a great visual distance. Marker comments are not necessary with the block statement and loop statement because the syntax of these statements allows them to be named with the name repeated at the end. Using these names is better than using marker comments because the compiler verifies that the names at the beginning and end match. 

The sequence of statements of a package body is often very far from the first line of the package. Many subprogram bodies, each containing many &lt;code&gt;begin&lt;/code&gt; lines, may occur first. As shown in the second example, the marker comment emphasizes the association of the begin with the package. 

==== notes ====

Repeating names and noting conditional expressions clutters the code if overdone. It is visual distance, especially page breaks, that makes marker comments beneficial.

== Using Types ==

Strong typing promotes reliability in software. The type definition of an object defines all legal values and operations and allows the compiler to check for and identify potential errors during compilation. In addition, the rules of type allow the compiler to generate code to check for violations of type constraints at execution time. Using these Ada compiler's features facilitates earlier and more complete error detection than that which is available with less strongly typed languages. 

=== Declaring Types ===

==== guideline ====

* Limit the range of scalar types as much as possible.
* Seek information about possible values from the application.
* Do not reuse any of the subtype names in package Standard. 
* Use subtype declarations to improve program readability (Booch 1987). 
* Use derived types and subtypes in concert (see Guideline 5.3.1). 

==== example ====
&lt;source lang=ada&gt;
subtype Card_Image is String (1 .. 80);
Input_Line : Card_Image := (others =&gt; ' ');
-- restricted integer type:
type    Day_Of_Leap_Year     is                  range 1 .. 366;
subtype Day_Of_Non_Leap_Year is Day_Of_Leap_Year range 1 .. 365;
&lt;/source&gt;

By the following declaration, the programmer means, &quot;I haven't the foggiest idea how many,&quot; but the actual base range will show up buried in the code or as a system parameter: 

&lt;source lang=ada&gt;
Employee_Count : Integer;
&lt;/source&gt;

==== rationale ====

Eliminating meaningless values from the legal range improves the compiler's ability to detect errors when an object is set to an invalid value. This also improves program readability. In addition, it forces you to carefully think about each use of objects declared to be of the subtype. 

Different implementations provide different sets of values for most of the predefined types. A reader cannot determine the intended range from the predefined names. This situation is aggravated when the predefined names are overloaded. 

The names of an object and its subtype can clarify their intended use and document low-level design decisions. The example above documents a design decision to restrict the software to devices whose physical parameters are derived from the characteristics of punch cards. This information is easy to find for any later changes, thus enhancing program maintainability. 

You can rename a type by declaring a subtype without a constraint (Ada Reference Manual 1995, §8.5). You cannot overload a subtype name; overloading only applies to callable entities. Enumeration literals are treated as parameterless functions and so are included in this rule. 

Types can have highly constrained sets of values without eliminating useful values. Usage as described in Guideline 5.3.1 eliminates many flag variables and type conversions within executable statements. This renders the program more readable while allowing the compiler to enforce strong typing constraints. 

==== notes ====

Subtype declarations do not define new types, only constraints for existing types. 

Any deviation from this guideline detracts from the advantages of the strong typing facilities of the Ada language. 

==== exceptions ====

There are cases where you do not have a particular dependence on any range of numeric values. Such situations occur, for example, with array indices (e.g., a list whose size is not fixed by any particular semantics). See Guideline 7.2.1 for a discussion of appropriate uses of predefined types. 

=== Enumeration Types ===

==== guideline ====

* Use enumeration types instead of numeric codes. 
* Only if absolutely necessary, use representation clauses to match requirements of external devices. 

==== example ====
Use: 

&lt;source lang=ada&gt;
type Color is (Blue, Red, Green, Yellow);
&lt;/source&gt;

rather than: 

&lt;source lang=ada&gt;
Blue   : constant := 1;
Red    : constant := 2;
Green  : constant := 3;
Yellow : constant := 4;
&lt;/source&gt;

and add the following if necessary: 

&lt;source lang=ada&gt;
for Color use (Blue   =&gt; 1,
               Red    =&gt; 2,
               Green  =&gt; 3,
               Yellow =&gt; 4);
&lt;/source&gt;

==== rationale ====

Enumerations are more robust than numeric codes; they leave less potential for errors resulting from incorrect interpretation and from additions to and deletions from the set of values during maintenance. Numeric codes are holdovers from languages that have no user-defined types. 

In addition, Ada provides a number of attributes ('Pos, 'Val, 'Succ, 'Pred, 'Image, and 'Value) for enumeration types that, when used, are more reliable than user-written operations on encodings. 

A numeric code may at first seem appropriate to match external values. Instead, these situations call for a representation clause on the enumeration type. The representation clause documents the &quot;encoding.&quot; If the program is properly structured to isolate and encapsulate hardware dependencies (see Guideline 7.1.5), the numeric code ends up in an interface package where it can be easily found and replaced if the requirements change. 

In general, avoid using representation clauses for enumeration types. When there is no obvious ordering of the enumeration literals, an enumeration representation can create portability problems if the enumeration type must be reordered to accommodate a change in representation order on the new platform. 

== Summary ==

=== spelling ===

* Use underscores to separate words in a compound name.
* Represent numbers in a consistent fashion. 
* Represent literals in a radix appropriate to the problem.
* Use underscores to separate digits the same way commas or periods (or spaces for nondecimal bases) would be used in normal text. 
* When using scientific notation, make the E consistently either uppercase or lowercase. 
* In an alternate base, represent the alphabetic characters in either all uppercase or all lowercase. 
* Make reserved words and other elements of the program visually distinct from each other.
* Do not use an abbreviation of a long word as an identifier where a shorter synonym exists.
* Use a consistent abbreviation strategy.
* Do not use ambiguous abbreviations.
* To justify its use, an abbreviation must save many characters over the full word.
* Use abbreviations that are well-accepted in the application domain.
* Maintain a list of accepted abbreviations, and use only abbreviations on that list. 

=== naming conventions ===

* Choose names that are as self-documenting as possible.
* Use a short synonym instead of an abbreviation.
* Use names given by the application, but do not use obscure jargon.
* Avoid using the same name to declare different kinds of identifiers.
* Use singular, general nouns as subtype identifiers.
* Choose identifiers that describe one of the subtype's values.
* Consider using suffixes for subtype identifiers that define visible access types, visible subranges, or visible array types.
* For private types, do not use identifier constructions (e.g., suffixes) that are unique to subtype identifiers.
* Do not use the subtype names from predefined packages.
* Use predicate clauses or adjectives for Boolean objects.
* Use singular, specific nouns as object identifiers.
* Choose identifiers that describe the object's value during execution.
* Use singular, general nouns as identifiers for record components.
* Use a consistent naming convention for tagged types and associated packages.
* Use action verbs for procedures and entries.
* Use predicate clauses for Boolean functions.
* Use nouns for non-Boolean functions.
* Give packages names that imply a higher level of organization than subprograms. Generally, these are noun phrases that describe the abstraction provided.
* Give tasks names that imply an active entity.
* Use nouns descriptive of the data being protected for protected units.
* Consider naming generic subprograms as if they were nongeneric subprograms.
* Consider naming generic packages as if they were nongeneric packages.
* Make the generic names more general than the instantiated names.
* Use symbolic values instead of literals, wherever possible.
* Use the predefined constants Ada.Numerics.Pi and Ada.Numerics.e for the mathematical constants Pi and e.
* Use constants instead of variables for constant values.
* Use a constant when the value is specific to a type or when the value must be static. 
* Use named numbers instead of constants, whenever possible.
* Use named numbers to replace numeric literals whose type or context is truly universal. 
* Use constants for objects whose values cannot change after elaboration. (United Technologies 1987).
* Show relationships between symbolic values by defining them with static expressions.
* Use linearly independent sets of literals.
* Use attributes like 'First and 'Last instead of literals, wherever possible. 
* Use a name that indicates the kind of problem the exception represents.
* Include a prefix like New, Make, or Create in naming constructors (in this sense, operations to create and/or initialize an object).
* Use names indicative of their content for child packages containing constructors. 

=== comments ===

* Make the code as clear as possible to reduce the need for comments.
* Never repeat information in a comment that is readily available in the code.
* Where a comment is required, make it concise and complete.
* Use proper grammar and spelling in comments.
* Make comments visually distinct from the code.
* Structure comments in headers so that information can be automatically extracted by a tool. 
* Put a file header on each source file.
* Place ownership, responsibility, and history information for the file in the file header.
* Put a header on the specification of each program unit.
* Place information required by the user of the program unit in the specification header.
* Do not repeat information (except unit name) in the specification header that is present in the specification.
* Explain what the unit does, not how or why it does it.
* Describe the complete interface to the program unit, including any exceptions it can raise and any global effects it can have.
* Do not include information about how the unit fits into the enclosing software system. 
* Describe the performance (time and space) characteristics of the unit. 
* Place information required by the maintainer of the program unit in the body header.
* Explain how and why the unit performs its function, not what the unit does.
* Do not repeat information (except unit name) in the header that is readily apparent from reading the code.
* Do not repeat information (except unit name) in the body header that is available in the specification header.
* Comment on all data types, objects, and exceptions unless their names are self-explanatory.
* Include information on the semantic structure of complex, pointer-based data structures.
* Include information about relationships that are maintained between data objects.
* Omit comments that merely repeat the information in the name.
* Include information on redispatching for tagged types in cases where you intend the specializations (i.e., derived types) to override these redispatching operations.
* Minimize comments embedded among statements.
* Use comments only to explain parts of the code that are not obvious.
* Comment intentional omissions from the code.
* Do not use comments to paraphrase the code.
* Do not use comments to explain remote pieces of code, such as subprograms called by the current unit.
* Where comments are necessary, make them visually distinct from the code.
* Use pagination markers to mark program unit boundaries. 
* Repeat the unit name in a comment to mark the begin of a package body, subprogram body, task body, or block if the begin is preceded by declarations. 
* For long or heavily nested if and case statements, mark the end of the statement with a comment summarizing the condition governing the statement. 
* For long or heavily nested if statements, mark the else part with a comment summarizing the conditions governing this portion of the statement. 

=== using types ===

* Limit the range of scalar types as much as possible.
* Seek information about possible values from the application.
* Do not reuse any of the subtype names in package Standard. 
* Use subtype declarations to improve program readability (Booch 1987). 
* Use derived types and subtypes in concert.
* Use enumeration types instead of numeric codes. 
* Only if absolutely necessary, use representation clauses to match requirements of external devices.

{{Chapter navigation||Program Structure}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>2gs4915enzd3kfbbw4tsw6hitairoq4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Program Structure</title>
    <ns>0</ns>
    <id>200800</id>
    <revision>
      <id>2496680</id>
      <parentid>2496665</parentid>
      <timestamp>2013-03-04T01:02:07Z</timestamp>
      <contributor>
        <username>Samcconn</username>
        <id>908335</id>
      </contributor>
      <minor />
      <comment>/* high-level structure */ added a missing space.</comment>
      <text xml:space="preserve">{{Chapter navigation|Readability|Programming Practices}}

{{TOC|limit=3|float=none}}

== Introduction ==

Proper structure improves program clarity. This is analogous to readability on lower levels and facilitates the use of the readability guidelines (Chapter 3). The various program structuring facilities provided by Ada were designed to enhance overall clarity of design. These guidelines show how to use these facilities for their intended purposes. 

The concept of child packages supports the concept of subsystem, where a subsystem is represented in Ada as a hierarchy of library units. In general, a large system should be structured as a series of subsystems. Subsystems should be used to represent logically related library units, which together implement a single, high-level abstraction or framework. 

Abstraction and encapsulation are supported by the package concept and by private types. Related data and subprograms can be grouped together and seen by a higher level as a single entity. Information hiding is enforced via strong typing and by the separation of package and subprogram specifications from their bodies. Exceptions and tasks are additional Ada language elements that impact program structure. 

== High-Level Structure ==

Well-structured programs are easily understood, enhanced, and maintained. Poorly structured programs are frequently restructured during maintenance just to make the job easier. Many of the guidelines listed below are often given as general program design guidelines. 

=== Separate Compilation Capabilities ===

==== guideline ====

* Place the specification of each library unit package in a separate file from its body. 
* Avoid defining library unit subprograms that are not intended to be used as main programs. If such subprograms are defined, then create an explicit specification, in a separate file, for each library unit subprogram. 
* Minimize the use of subunits.
* In preference to subunits, use child library units to structure a subsystem into manageable units.
* Place each subunit in a separate file.
* Use a consistent file naming convention.
* In preference to nesting in a package body, use a private child and with it to the parent body. 
* Use private child unit specifications for data and subprograms that are required by (other) child units that extend a parent unit's abstraction or services.

==== example ====
The file names below illustrate one possible file organization and associated consistent naming convention. The library unit name uses the adb suffix for the body. The suffix ads indicates the specification, and any files containing subunits use names constructed by separating the body name from the subunit name with an underscore: 

 text_io.ads                 -- the specification
 text_io.adb                 -- the body
 text_io_integer_io.adb      -- a subunit
 text_io_fixed_io.adb        -- a subunit
 text_io_float_io.adb        -- a subunit
 text_io_enumeration_io.adb  -- a subunit

Depending on what characters your file system allows you to use in file names, you could show the distinction between parent and subunit name more clearly in the file name. If your file system allows the &quot;#&quot; character, for example, you could separate the body name from the subunit name with a #: 

 text_io.ads                 -- the specification
 text_io.adb                 -- the body
 text_io#integer_io.adb      -- a subunit
 text_io#fixed_io.adb        -- a subunit
 text_io#float_io.adb        -- a subunit
 text_io#enumeration_io.adb  -- a subunit

Some operating systems are case sensitive, although Ada itself is not a case-sensitive language. For example, you could choose a convention of all lowercase file names. 

==== rationale ====

The main reason for the emphasis on separate files in this guideline is to minimize the amount of recompilation required after each change. Typically, during software development, bodies of units are updated far more often than specifications. If the body and specification reside in the same file, then the specification will be compiled each time the body is compiled, even though the specification has not changed. Because the specification defines the interface between the unit and all of its users, this recompilation of the specification typically makes recompilation of all users necessary in order to verify compliance with the specification. If the specifications and bodies of the users also reside together, then any users of these units will also have to be recompiled and so on. The ripple effect can force a huge number of compilations that could have been avoided, severely slowing the development and test phase of a project. This is why you should place specifications of all library units (nonnested units) in separate files from their bodies. 

Library unit subprograms should be minimized. The only real use for library unit subprograms is as the main subprogram. In almost all other cases, it is better to embed the subprogram into a package. This provides a place (the package body) to localize data needed by the subprogram. Moreover, it cuts down on the number of separate modules in the system. 

In general, you should use a separate specification for any library subprogram that is mentioned in a with clause. This makes the with'ing unit dependent on the library subprogram specification, not its body. 

You should minimize the use of subunits because they create maintenance problems. Declarations appearing in the parent body are visible in the subunit, increasing the amount of data global to the subunit and, thus, increasing the potential ripple effect of changes. Subunits hinder reuse because they provide an incentive to put otherwise reusable code in the subunit directly rather than in a common routine called from multiple subprograms. 

With the availability of child library units in Ada 95, you can avoid most uses of subunits. For example, instead of using a subunit for a large nested body, you should try to encapsulate this code in a child library unit and add the necessary context clauses. You can modify the body of the child unit without having to recompile any of the other units in a subsystem. 

An additional benefit of using multiple, separate files is that it allows different implementors to modify different parts of the system at the same time with conventional editors, which do not allow multiple concurrent updates to a single file. 

Finally, keeping bodies and specifications separate makes it possible to have multiple bodies for the same specification or multiple specifications for the same body. Although Ada requires that there be exactly one specification per body in a system at any given time, it can still be useful to maintain multiple bodies or multiple specifications for use in different builds of a system. For example, a single specification may have multiple bodies, each of which implements the same functionality with a different tradeoff of time versus space efficiency, or, for machine-dependent code, there may be one body for each target machine. Maintaining multiple package specifications can also be useful during development and test. You may develop one specification for delivery to your customer and another for unit testing. The first one would export only those subprograms intended to be called from outside of the package during normal operation of the system. The second one would export all subprograms of the package so that each of them could be independently tested. 

A consistent file naming convention is recommended to make it easier to manage the large number of files that may result from following this guideline. 

In implementing the abstraction defined in a package specification, you often need to write supporting subprograms that manipulate the internal representation of the data. These subprograms should not be exported on the interface. You have a choice of whether to place them in the package body of the parent program or in a child package named in a context clause of the parent package body. When you place them in the parent package body, you make them inaccessible to all clients of the parent, including extensions of the parent declared in child packages. If these subprograms are needed to implement extensions of the parent abstraction, you would be forced to modify both the parent specification and the body because you would have to declare the extensions within the parent specification. This technique would then force recompilation of the entire package (specification and body) as well as all its clients. 

Alternatively, you can implement the supporting subprograms in a private child package. Because the parent unit's specification is not modified, neither it nor its clients need to be recompiled. The data and subprograms that might have declared in the parent unit body must now be declared in the private child unit's specification to make them visible to both the parent unit body and to any child units that extend the parent unit's services or abstractions. (See also Guidelines 4.1.6 and 4.2.) This use of private child units will generally minimize recompilations within the unit family and among its clients. 

In declaring the child package private, you achieve a similar effect to declaring it in the parent package body to the extent that clients of the parent cannot name the private child in a context clause. You gain flexibility because now you can extend the parent abstraction using child packages without having to recompile the parent specification or its body, assuming that you do not otherwise modify the parent or its body. This added flexibility will usually compensate for the increased dependency between units, in this case, the additional context clause on the parent body (and other child package bodies) that names the private child package of supporting subprograms. 

=== Configuration Pragmas ===

==== guideline ====

* When possible, express configuration pragmas through compiler options or other means that do not require modifications to the source code. 
* When configuration pragmas must be placed in source code, consider isolating them to one compilation unit per partition; if specified, the main subprogram for the partition is recommended. 

==== rationale ====

Configuration pragmas are generally used to select a partition-wide or system-wide option. Usually, they reflect either high-level software architecture decisions (e.g., pragma Task_Dispatching_Policy) or the use of the software in a particular application domain (e.g., safety-critical software). If a configuration pragma is embedded within a software component and that component is reused in a different context where the pragma is no longer appropriate, then it may cause problems in the new application. Such problems can include the rejection by the compilation system of otherwise legal source code or unexpected behavior at run-time. These problems can be significant given the wide scope of a configuration pragma. In addition, maintenance of the original system may require that some of these system-wide decisions be changed. If the configuration pragmas are scattered throughout the software, it may be difficult to locate the lines that need to change. 

As a result, it is recommended that all configuration pragmas be kept in a single compilation unit if possible to make them easy to locate and modify as needed. If this compilation unit is unlikely to be reused (e.g., a main subprogram), then the likelihood of conflicts with future reusers is reduced. Finally, if these system-wide decisions are indicated without embedding them in the code at all, such as through a compiler option, then the problems described above are even less likely to occur. 

==== exceptions ====

Certain pragmas (e.g., pragma Suppress) can be used in several forms, including as a configuration pragma. This guideline does not apply to such pragmas when they are not used as a configuration pragma. 

=== Subprograms ===

==== guideline ====

* Use subprograms to enhance abstraction.
* Restrict each subprogram to the performance of a single action. 

==== example ====

Your program is required to draw a menu of user options as part of a menu-driven user interface package. Because the contents of the menu can vary depending on the user state, the proper way to do this is to write a subprogram to draw the menu. This way, the output subprogram has one purpose and the way to determine the menu content is described elsewhere. 

&lt;source lang=ada&gt;
...
----------------------------------------------------------------------
procedure Draw_Menu
      (Title   : in    String;
       Options : in    Menu) is
   ...
begin  -- Draw_Menu
   Ada.Text_IO.New_Page;
   Ada.Text_IO.New_Line;
   Ada.Text_IO.Set_Col (Right_Column);
   Ada.Text_IO.Put_Line (Title);
   Ada.Text_IO.New_Line;
   for Choice in Alpha_Numeric loop
     if Options (Choice) /= Empty_Line then
         Valid_Option (Choice) := True;
         Ada.Text_IO.Set_Col (Left_Column);
         Ada.Text_IO.Put (Choice &amp; &quot; -- &quot;);
         Ada.Text_IO.Put_Line (Options (Choice));
     end if;
     ...
   end loop;
end Draw_Menu;
----------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Subprograms are an extremely effective and well-understood abstraction technique. Subprograms increase program readability by hiding the details of a particular activity. It is not necessary that a subprogram be called more than once to justify its existence. 

==== notes ====

Guideline 10.7.1 discusses dealing with the overhead of subroutine calls. 

=== Functions ===

==== guideline ====

* Use a function when the subprogram's primary purpose is to provide a single value. 
* Minimize the side effect of a function.
* Consider using a parameterless function when the value does not need to be static. 
* Use a parameterless function (instead of a constant) if the value should be inherited by types derived from the type.
* Use a parameterless function if the value itself is subject to change.

==== example ====
Although reading a character from a file will change what character is read next, this is accepted as a minor side effect compared to the primary purpose of the following function: 

&lt;source lang=ada&gt;
function Next_Character return Character is separate;
&lt;/source&gt;

However, the use of a function like this could lead to a subtle problem. Any time the order of evaluation is undefined, the order of the values returned by the function will effectively be undefined. In this example, the order of the characters placed in Word and the order that the following two characters are given to the Suffix parameters are unknown. No implementation of the Next_Character function can guarantee which character will go where: 

&lt;source lang=ada&gt;
   Word : constant String := String'(1 .. 5 =&gt; Next_Character);
begin  -- Start_Parsing
   Parse(Keyword =&gt; Word,
         Suffix1 =&gt; Next_Character,
         Suffix2 =&gt; Next_Character);
end Start_Parsing;
&lt;/source&gt;

Of course, if the order is unimportant (as in a random number generator), then the order of evaluation is unimportant. 

The following example shows the use of a parameterless function instead of a constant: 
&lt;source lang=ada&gt;
type T is private;
function Nil return T;        -- This function is a derivable operation of type T
function Default return T;    -- Also derivable, and the value can be changed by
                              -- recompiling the body of the function
&lt;/source&gt;
This same example could have been written using constants: 
&lt;source lang=ada&gt;
type T is private;
Nil : constant T;
Default : constant T;
&lt;/source&gt;

==== rationale ====

A side effect is a change to any variable that is not local to the subprogram. This includes changes to variables by other subprograms and entries during calls from the function if the changes persist after the function returns. Side effects are discouraged because they are difficult to understand and maintain. Additionally, the Ada language does not define the order in which functions are evaluated when they occur in expressions or as actual parameters to subprograms. Therefore, a program that depends on the order in which side effects of functions occur is erroneous. Avoid using side effects anywhere. 

=== Packages ===

==== guideline ====

* Use packages for information hiding.
* Use packages with tagged types and private types for abstract data types.
* Use packages to model abstract entities appropriate to the problem domain.
* Use packages to group together related type and object declarations (e.g., common declarations for two or more library units).
* Encapsulate machine dependencies in packages. Place a software interface to a particular device in a package to facilitate a change to a different device.
* Place low-level implementation decisions or interfaces in subprograms within packages.
* Use packages and subprograms to encapsulate and hide program details that may change (Nissen and Wallis 1984). 

==== example ====
Reading the names and other attributes of external files is highly machine dependent. A package called Directory could contain type and subprogram declarations to support a generalized view of an external directory that contains external files. Its internals may, in turn, depend on other packages more specific to the hardware or operating system: 

&lt;source lang=ada&gt;
package Directory is

   type Directory_Listing is limited private;

   procedure Read_Current_Directory (D : in out Directory_Listing);

   generic
      with procedure Process (Filename : in String);
   procedure Iterate (Over : in Directory_Listing);

   ...

private

   type Directory_Listing is ...

end Directory;

---------------------------------------------------------------

package body Directory is

   -- This procedure is machine dependent
   procedure Read_Current_Directory (D : in out Directory_Listing) is separate;


   procedure Iterate (Over : in Directory_Listing) is
      ...
   begin
      ...

      Process (Filename);

      ...
   end Iterate;

   ...

end Directory;
&lt;/source&gt;

==== rationale ====

Packages are the principal structuring facility in Ada. They are intended to be used as direct support for abstraction, information hiding, and modularization. For example, they are useful for encapsulating machine dependencies as an aid to portability. A single specification can have multiple bodies isolating implementation-specific information so other parts of the code do not need to change. 

Encapsulating areas of potential change helps to minimize the effort required to implement that change by preventing unnecessary dependencies among unrelated parts of the system. 

==== notes ====

The most prevalent objection to this guideline usually involves performance penalties. See Guideline 10.7.1 for a discussion about subprogram overhead. 

=== Child Library Units ===

==== guideline ====

* If a new library unit represents a logical extension to the original abstraction, define it as a child library unit.
* If a new library unit is independent (e.g., introduces a new abstraction that depends only in part on the existing one), then encapsulate the new abstraction in a separate library unit.
* Use child packages to implement a subsystem.
* Use public child units for those parts of a subsystem that should be visible to clients of the subsystem. 
* Use private child units for those parts of a subsystem that should not be visible to clients of the subsystem.
* Use private child units for local declarations used only in implementing the package specification. 
* Use child packages to implement constructors, even when they return access values.

==== example ====

The following example of a windowing system is taken from Cohen et al. (1993) and illustrates some of the uses of child units in designing subsystems. The parent (root) package declares the types, subtypes, and constants that its clients and subsystems need. Individual child packages provide specific parts of the windowing abstraction, such as atoms, fonts, graphic output, cursors, and keyboard information: 

&lt;source lang=ada&gt;
package X_Windows is
   ...
private
   ...
end X_Windows;


package X_Windows.Atoms is
   type Atom is private;
   ...
private
   ...
end X_Windows.Atoms;


package X_Windows.Fonts is
   type Font is private;
   ...
private
   ...
end X_Windows.Fonts;


package X_Windows.Graphic_Output is
   type Graphic_Context is private;
   type Image is private;
   ...
private
   ...
end X_Windows.Graphic_Output;


package X_Windows.Cursors is
   ...
end X_Windows.Cursors;


package X_Windows.Keyboard is
   ...
end X_Windows.Keyboard;
&lt;/source&gt;

==== rationale ====

The user can create more precise packages with less cluttered interfaces, using child library packages to extend the interfaces as needed. The parent contains only the relevant functionality. The parent provides a general-purpose interface, while the child units provide more complete programming interfaces, tailored to that aspect of an abstraction that they are extending or defining. 

Child packages build on the modular strength of Ada where &quot;the distinct specification and body decouple the user interface to a package (the specification) from its implementation (the body)&quot; (Rationale 1995, §II.7). Child packages provide the added capability of being able to extend a parent package without recompiling the parent or the parent's clients. 

Child packages allow you to write logically distinct packages that share a private type. The visibility rules give the private part of the child specification and the body of the child visibility into the private part of the parent. Thus, you can avoid creating a monolithic package for the sake of developing abstractions that share a private type and need to know its representation. The private representation is not available to clients of the package, so the abstraction in the package and its children is maintained. 

Using private child packages for local declarations enables you to have available the support declarations you need when implementing both the parent package and extensions to the parent package. You enhance the maintainability of your program by using a common set of support declarations (data representations, data manipulation subprograms). You can modify the internal representation and the implementation of the support subprograms without modifying or recompiling the rest of your subsystem because these support subprograms are implemented in the body of the private child package. See also Guidelines 4.1.1, 4.2.1, 8.4.1, and 8.4.8. 

See also Guideline 9.4.1 for a discussion of the use of child library units in creating a tagged type hierarchy. 

=== Cohesion ===

==== guideline ====

* Make each package serve a single purpose. 
* Use packages to group related data, types, and subprograms.
* Avoid collections of unrelated objects and subprograms (NASA 1987; Nissen and Wallis 1984). 
* Consider restructuring a system to move two highly related units into the same package (or package hierarchy) or to move relatively independent units into separate packages. 

==== example ====
As a bad example, a package named Project_Definitions is obviously a &quot;catch all&quot; for a particular project and is likely to be a jumbled mess. It probably has this form to permit project members to incorporate a single with clause into their software. 

Better examples are packages called Display_Format_Definitions, containing all the types and constants needed by some specific display in a specific format, and Cartridge_Tape_Handler, containing all the types, constants, and subprograms that provide an interface to a special-purpose device. 

==== rationale ====

The degree to which the entities in a package are related has a direct impact on the ease of understanding packages and programs made up of packages. There are different criteria for grouping, and some criteria are less effective than others. Grouping the class of data or activity (e.g., initialization modules) or grouping data or activities based on their timing characteristics is less effective than grouping based on function or need to communicate through data (Charette 1986). 

The &quot;correct&quot; structuring of a system can make a tremendous difference in the maintainability of a system. Although it may seem painful at the time, it is important to restructure if the initial structuring is not quite right. 

See also Guideline 5.4.2 on heterogeneous data. 

==== notes ====

Traditional subroutine libraries often group functionally unrelated subroutines. Even such libraries should be broken into a collection of packages, each containing a logically cohesive set of subprograms. 

=== Data Coupling ===

==== guideline ====

* Avoid declaring variables in package specifications. 

==== example ====

This is part of a compiler. Both the package handling error messages and the package containing the code generator need to know the current line number. Rather than storing this in a shared variable of type Natural, the information is stored in a package that hides the details of how such information is represented and makes it available with access routines: 

&lt;source lang=ada&gt;
-------------------------------------------------------------------------
package Compilation_Status is
   type Line_Number is range 1 .. 2_500_000;
   function Source_Line_Number return Line_Number;
end Compilation_Status;
-------------------------------------------------------------------------
with Compilation_Status;
package Error_Message_Processing is
   -- Handle compile-time diagnostic.
end Error_Message_Processing;
-------------------------------------------------------------------------
with Compilation_Status;

package Code_Generation is
   -- Operations for code generation.
end Code_Generation;
-------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Strongly coupled program units can be difficult to debug and very difficult to maintain. By protecting shared data with access functions, the coupling is lessened. This prevents dependence on the data structure, and access to the data can be controlled. 

==== notes ====

The most prevalent objection to this guideline usually involves performance penalties. When a variable is moved to the package body, subprograms to access the variable must be provided and the overhead involved during each call to those subprograms is introduced. See Guideline 10.7.1 for a discussion about subprogram overhead.

=== Tasks ===

==== guideline ====

* Use tasks to model abstract, asynchronous entities within the problem domain.
* Use tasks to define concurrent algorithms for multiprocessor architectures.
* Use tasks to perform concurrent, cyclic, or prioritized activities (NASA 1987). 

==== rationale ====
The rationale for this guideline is given under Guideline 6.1.2. Chapter 6 discusses tasking in more detail. 

=== Protected Types ===

==== guideline ====

* Use protected types to control or synchronize access to data or devices.
* Use protected types to implement synchronization tasks, such as a passive resource monitor. 

==== example ====
See example in Guideline 6.1.1. 

==== rationale ====

The rationale for this guideline is given under Guideline 6.1.1. Chapter 6 discusses concurrency and protected types in more detail. 

== Visibility ==

Ada's ability to enforce information hiding and separation of concerns through its visibility controlling features is one of the most important advantages of the language, particularly when &quot;pieces of a large system are being developed separately.&quot; Subverting these features, for example, by excessive reliance on the use clause, is wasteful and dangerous. See also Guidelines 5.7 and 9.4.1. 

=== Minimization of Interfaces ===

==== guideline ====

* Put only what is needed for the use of a package into its specification.
* Minimize the number of declarations in package specifications.
* Do not include extra operations simply because they are easy to build.
* Minimize the context (with) clauses in a package specification.
* Reconsider subprograms that seem to require large numbers of parameters.
* Do not manipulate global data within a subprogram or package merely to limit the number of parameters.
* Avoid unnecessary visibility; hide the implementation details of a program unit from its users.
* Use child library units to control the visibility of parts of a subsystem interface.
* Use private child packages for those declarations that should not be used outside the subsystem. 
* Use child library units present different views of an entity to different clients.
* Design (and redesign) interfaces after having worked out the logic of various expected clients of the interface. 

==== example ====

&lt;source lang=ada&gt;
-------------------------------------------------------------------------
package Telephone_Book is
   type Listing is limited private;
   procedure Set_Name (New_Name : in     String;
                       Current  : in out Listing);
   procedure Insert (Name    : in     String;
                     Current : in out Listing);
   procedure Delete (Obsolete : in     String;
                     Current  : in out Listing);
private
   type Information;
   type Listing is access Information;
end Telephone_Book;
-------------------------------------------------------------------------
package body Telephone_Book is
   -- Full details of record for a listing
   type Information is
      record
         ...
         Next : Listing;
      end record;
   First : Listing;
   procedure Set_Name (New_Name : in     String;
                       Current  : in out Listing) is separate;
   procedure Insert (Name    : in      String;
                     Current : in out  Listing) is separate;
   procedure Delete (Obsolete : in     String;
                     Current  : in out Listing) is separate;
end Telephone_Book;
-------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

For each entity in the specification, give careful consideration to whether it could be moved to a child package or to the parent package body. The fewer the extraneous details, the more understandable the program, package, or subprogram. It is important to maintainers to know exactly what a package interface is so that they can understand the effects of changes. Interfaces to a subprogram extend beyond the parameters. Any modification of global data from within a package or subprogram is an undocumented interface to the &quot;outside&quot; as well. 

Minimize the context clauses on a specification by moving unnecessary clauses to the body. This technique makes the reader's job easier, localizes the recompilation required when library units change, and helps prevent a ripple effect during modifications. See also Guideline 4.2.3. 

Subprograms with large numbers of parameters often indicate poor design decisions (e.g., the functional boundaries of the subprogram are inappropriate or parameters are structured poorly). Conversely, subprograms with no parameters are likely to be accessing global data. 

Objects visible within package specifications can be modified by any unit that has visibility to them. The object cannot be protected or represented abstractly by its enclosing package. Objects that must persist should be declared in package bodies. Objects whose value depends on program units external to their enclosing package are probably either in the wrong package or are better accessed by a subprogram specified in the package specification. 

Child library units can provide distinct views of the hierarchical library. The engineer can provide a different view for the client than for the implementor (Rationale 1995, §10.1). By creating private child packages, the engineer can provide facilities that are only available inside the subsystem rooted at the parent library unit. The declarations inside a private child package specification are not exported outside the subsystem. Thus, the engineer can declare utilities needed to implement an abstraction in a private child package (e.g., debugging utilities [Cohen et al. 1993]) and be certain that users of the abstraction (i.e., the clients) cannot access these utilities. 

Different clients may have different needs for essentially the same resource. Instead of having multiple versions of the resources, consider having child units that export different views for different purposes. 

Designing an interface based strictly on predicting what clients &quot;might&quot; need can produce a bloated and inappropriate interface. What then happens is that clients try to &quot;live&quot; with the interface and work around the inappropriate interfaces, repeating code that logically should be part of the shared abstraction. See Guideline 8.3.1 for a discussion of interfaces from the reusability perspective. 

==== notes ====

In some cases, subroutine libraries look like large, monolithic packages. In such cases, it may be beneficial to break these up into smaller packages, grouping them according to category (e.g., trigonometric functions). 

=== Nested Packages ===

==== guideline ====

* Use child packages rather than nested packages to present different views of the same abstraction.
* Nest package specifications within another package specification only for grouping operations or hiding common implementation details. 

==== example ====
Annex A of the Ada Reference Manual (1995) gives an example of package specification nesting. The specification of the generic package Generic_Bounded_Length is nested inside the specification of package Ada.Strings.Bounded. The nested package is a generic, grouping closely related operations.

==== rationale ====

Grouping package specifications into an encompassing package emphasizes a relationship of commonality among those packages. It also allows them to share common implementation details resulting from the relationship. Nesting packages allows you to organize the name space of the package in contrast to the semantic effect of nesting inside of subprograms or task bodies. 

An abstraction occasionally needs to present different views to different classes of users. Building one view upon another as an additional abstraction does not always suffice because the functionality of the operations presented by the views may be only partially disjointed. Nesting specifications groups the facilities of the various views, yet associates them with the abstraction they present. Abusive mixing of the views by another unit would be easy to detect due to the multiple use clauses or an incongruous mix of qualified names. 

See the rationale discussed in Guideline 4.2.1. 

=== Restricting Visibility ===

==== guideline ====

* Consider using private child packages in lieu of nesting.
* Restrict the visibility of program units as much as possible by nesting them inside package bodies (Nissen and Wallis 1984) if you cannot use a private child package.
* Minimize nesting program units inside subprograms and tasks.
* Minimize the scope within which with clauses apply. 
* Only with those units directly needed.

==== example ====

This program illustrates the use of child library units to restrict visibility. The procedure Rational_Numbers.Reduce is nested inside the body of Rational_Numbers to restrict its visibility to the implementation of this abstraction. Rather than make the text input/output facilities visible to the entire rational number hierarchy, it is only available to the body of the child library Rational_Numbers.IO. This example is adapted from the Ada Reference Manual (1995, §§7.1, 7.2, and 10.1.1): 

&lt;source lang=ada&gt;
-------------------------------------------------------------------------
package Rational_Numbers is
   type Rational is private;
   function &quot;=&quot; (X, Y: Rational) return Boolean;
   function &quot;/&quot; (X, Y: Integer)  return Rational;  -- construct a rational number
   function &quot;+&quot; (X, Y: Rational) return Rational;
   function &quot;-&quot; (X, Y: Rational) return Rational;
   function &quot;*&quot; (X, Y: Rational) return Rational;
   function &quot;/&quot; (X, Y: Rational) return Rational;  -- rational division
private
   ...
end Rational_Numbers;
package body Rational_Numbers is
   procedure Reduce (R :in out Rational) is . . . end Reduce;
   . . .
end Rational_Numbers;
package Rational_Numbers.IO is
   procedure Put (R : in  Rational);
   procedure Get (R : out Rational);
end Rational_Numbers.IO;
with Ada.Text_IO;
with Ada.Integer_Text_IO;
package body Rational_Numbers.IO is   -- has visibility to parent private type declaration
   procedure Put (R : in  Rational) is
   begin
      Ada.Integer_Text_IO.Put (Item =&gt; R.Numerator, Width =&gt; 0);
      Ada.Text_IO.Put (&quot;/&quot;);
      Ada.Integer_Text_IO.Put (Item =&gt; R.Denominator, Width =&gt; 0);
   end Put;
   procedure Get (R : out Rational) is . . . end Get;
end Rational_Numbers.IO;
&lt;/source&gt;

==== rationale ====

Restricting visibility of a program unit ensures that the program unit is not called from some part of the system other than that which was intended. This is done by nesting it inside the only unit that uses it, by hiding it inside a package body rather than declaring it in the package specification, or by declaring it as a private child unit. This avoids errors and eases the job of maintainers by guaranteeing that a local change in that unit will not have an unforeseen global effect. 

Restricting visibility of a library unit by using with clauses on subunits rather than on the entire parent unit is useful in the same way. In the example above, it is clear that the package Text_IO is used only by the Listing_Facilities package of the compiler. 

Nesting inside subprograms and tasks is discouraged because it leads to unreusable components. These components are essentially unreusable because they make undesirable up-level references into the defining context. Unless you truly want to ensure that the program unit is not called from some unintended part of the system, you should minimize this form of nesting. 

See also Guideline 4.2.1 for a discussion of the use of child units. 

==== notes ====

One way to minimize the coverage of a with clause is to use it only with subunits that really need it. Consider making those subunits separate compilation units when the need for visibility to a library unit is restricted to a subprogram or two. 

=== Hiding Tasks ===

==== guideline ====

* Carefully consider encapsulation of tasks.

==== example ====

&lt;source lang=ada&gt;
-------------------------------------------------------------------------
package Disk_Head_Scheduler is
   type Words        is ...
   type Track_Number is ...
   procedure Transmit (Track : in     Track_Number;
                       Data  : in     Words);
   ...
end Disk_Head_Scheduler;
-------------------------------------------------------------------------
package body Disk_Head_Scheduler is
   ...
   task Control is
      entry Sign_In (Track : in     Track_Number);
      ...
   end Control;
   ----------------------------------------------------------------------
   task Track_Manager is
      entry Transfer(Track_Number) (Data : in     Words);
   end Track_Manager;
   ----------------------------------------------------------------------
   ...
   procedure Transmit (Track : in     Track_Number;
                       Data  : in     Words) is
   begin
      Control.Sign_In(Track);
      Track_Manager.Transfer(Track)(Data);
   end Transmit;
   ----------------------------------------------------------------------
   ...
end Disk_Head_Scheduler;
-------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

The decision whether to declare a task in the specification or body of an enclosing package is not a simple one. There are good arguments for both. 

Hiding a task specification in a package body and exporting (via subprograms ) only required entries reduces the amount of extraneous information in the package specification. It allows your subprograms to enforce any order of entry calls necessary to the proper operation of the tasks. It also allows you to impose defensive task communication practices (see Guideline 6.2.2) and proper use of conditional and timed entry calls. Finally, it allows the grouping of entries into sets for export to different classes of users (e.g., producers versus consumers) or the concealment of entries that should not be made public at all (e.g., initialization, completion, signals). Where performance is an issue and there are no ordering rules to enforce, the entries can be renamed as subprograms to avoid the overhead of an extra procedure call. 

An argument, which can be viewed as an advantage or disadvantage, is that hiding the task specification in a package body hides the fact of a tasking implementation from the user. If the application is such that a change to or from a tasking implementation or a reorganization of services among tasks need not concern users of the package, then this is an advantage. However, if the package user must know about the tasking implementation to reason about global tasking behavior, then it is better not to hide the task completely. Either move it to the package specification or add comments stating that there is a tasking implementation, describing when a call may block, etc. Otherwise, it is the package implementor's responsibility to ensure that users of the package do not have to concern themselves with behaviors such as deadlock, starvation, and race conditions. 

Finally, keep in mind that hiding tasks behind a procedural interface prevents the usage of conditional and timed entry calls and entry families, unless you add parameters and extra code to the procedures to make it possible for callers to direct the procedures to use these capabilities. 


== Exceptions ==

This section addresses the issue of exceptions in the context of program structures. It discusses how exceptions should be used as part of the interface to a unit, including what exceptions to declare and raise and under what conditions to raise them. Information on how to handle, propagate, and avoid raising exceptions is found in Guideline 5.8. Guidelines on how to deal with portability issues are in Guideline 7.5. 

=== Using Exceptions to Help Define an Abstraction ===

==== guideline ====

* For unavoidable internal errors for which no user recovery is possible, declare a single user-visible exception. Inside the abstraction, provide a way to distinguish between the different internal errors.
* Do not borrow an exception name from another context.
* Export (declare visibly to the user) the names of all exceptions that can be raised.
* In a package, document which exceptions can be raised by each subprogram and task entry.
* Do not raise exceptions for internal errors that can be avoided or corrected within the unit.
* Do not raise the same exception to report different kinds of errors that are distinguishable by the user of the unit.
* Provide interrogative functions that allow the user of a unit to avoid causing exceptions to be raised.
* When possible, avoid changing state information in a unit before raising an exception.
* Catch and convert or handle all predefined and compiler-defined exceptions at the earliest opportunity.
* Do not explicitly raise predefined or implementation-defined exceptions.
* Never let an exception propagate beyond its scope.

==== example ====

This package specification defines two exceptions that enhance the abstraction: 

&lt;source lang=ada&gt;
-------------------------------------------------------------------------
generic
   type Element is private;
package Stack is

   function Stack_Empty return Boolean;
   function Stack_Full  return Boolean;

   procedure Pop  (From_Top :    out Element);
   procedure Push (Onto_Top : in     Element);

   -- Raised when Pop is used on empty stack.
   Underflow : exception;

   -- Raised when Push is used on full stack.
   Overflow  : exception;

end Stack;
-------------------------------------------------------------------------
...
----------------------------------------------------------------------
procedure Pop (From_Top :    out Element) is
begin
   ...

   if Stack_Empty then
      raise Underflow;

   else -- Stack contains at least one element
      Top_Index := Top_Index - 1;
      From_Top  := Data(Top_Index + 1);

   end if;
end Pop;
--------------------------------------------------------------------
...
&lt;/source&gt;

==== rationale ====

Exceptions should be used as part of an abstraction to indicate error conditions that the abstraction is unable to prevent or correct. Because the abstraction is unable to correct such an error, it must report the error to the user. In the case of a usage error (e.g., attempting to invoke operations in the wrong sequence or attempting to exceed a boundary condition), the user may be able to correct the error. In the case of an error beyond the control of the user, the user may be able to work around the error if there are multiple mechanisms available to perform the desired operation. In other cases, the user may have to abandon use of the unit, dropping into a degraded mode of limited functionality. In any case, the user must be notified. 

Exceptions are a good mechanism for reporting such errors because they provide an alternate flow of control for dealing with errors. This allows error-handling code to be kept separate from the code for normal processing. When an exception is raised, the current operation is aborted and control is transferred directly to the appropriate exception handler. 

Several of the guidelines above exist to maximize the ability of the user to distinguish and correct different kinds of errors. Declaring new exception names, rather than raising exceptions declared in other packages, reduces the coupling between packages and also makes different exceptions more distinguishable. Exporting the names of all exceptions that a unit can raise, rather than declaring them internally to the unit, makes it possible for users of the unit to refer to the names in exception handlers. Otherwise, the user would be able to handle the exception only with an others handler. Finally, use comments to document exactly which of the exceptions declared in a package can be raised by each subprogram or task entry making it possible for the user to know which exception handlers are appropriate in each situation. 

In situations where there are errors for which the abstraction user can take no intelligent action (e.g., there is no workaround or degraded mode), it is better to export a single internal error exception. Within the package, you should consider distinguishing between the different internal errors. For instance, you could record or handle different kinds of internal error in different ways. When you propagate the error to the user, however, you should use a special internal error exception, indicating that no user recovery is possible. You should also provide relevant information when you propagate the error, using the facilities provided in Ada.Exceptions. Thus, for any abstraction, you effectively provide N + 1 different exceptions: N different recoverable errors and one irrecoverable error for which there is no mapping to the abstraction. Both the application requirements and what the client needs/wants in terms of error information help you identify the appropriate exceptions for an abstraction. 

Because they cause an immediate transfer of control, exceptions are useful for reporting unrecoverable errors, which prevent an operation from being completed, but not for reporting status or modes incidental to the completion of an operation. They should not be used to report internal errors that a unit was able to correct invisibly to the user. 

To provide the user with maximum flexibility, it is a good idea to provide interrogative functions that the user can call to determine whether an exception would be raised if a subprogram or task entry were invoked. The function Stack_Empty in the above example is such a function. It indicates whether Underflow would be raised if Pop were called. Providing such functions makes it possible for the user to avoid triggering exceptions. 

To support error recovery by its user, a unit should try to avoid changing state during an invocation that raises an exception. If a requested operation cannot be completely and correctly performed, then the unit should either detect this before changing any internal state information or should revert to the state at the time of the request. For example, after raising the exception Underflow, the stack package in the above example should remain in exactly the same state it was in when Pop was called. If it were to partially update its internal data structures for managing the stack, then future Push and Pop operations would not perform correctly. This is always desirable, but not always possible. 

User-defined exceptions should be used instead of predefined or compiler-defined exceptions because they are more descriptive and more specific to the abstraction. The predefined exceptions are very general and can be triggered by many different situations. Compiler-defined exceptions are nonportable and have meanings that are subject to change even between successive releases of the same compiler. This introduces too much uncertainty for the creation of useful handlers. 

If you are writing an abstraction, remember that the user does not know about the units you use in your implementation. That is an effect of information hiding. If any exception is raised within your abstraction, you must catch it and handle it. The user is not able to provide a reasonable handler if the original exception is allowed to propagate out of the body of your abstraction. You can still convert the exception into a form intelligible to the user if your abstraction cannot effectively recover on its own. 

Converting an exception means raising a user-defined exception in the handler for the original exception. This introduces a meaningful name for export to the user of the unit. Once the error situation is couched in terms of the application, it can be handled in those terms. 

== Summary ==

=== high-level structure ===

* Place the specification of each library unit package in a separate file from its body. 
* Avoid defining library unit subprograms that are not intended to be used as main programs. If such subprograms are defined, then create an explicit specification, in a separate file, for each library unit subprogram.
* Minimize the use of subunits.
* In preference to subunits, use child library units to structure a subsystem into manageable units.
* Place each subunit in a separate file.
* Use a consistent file naming convention.
* In preference to nesting in a package body, use a private child and with it to the parent body. 
* Use private child unit specifications for data and subprograms that are required by (other) child units that extend a parent unit's abstraction or services.
* When possible, express configuration pragmas through compiler options or other means that do not require modifications to the source code. .
* When configuration pragmas must be placed in source code, consider isolating them to one compilation unit per partition; if specified, the main subprogram for the partition is recommended.
* Use subprograms to enhance abstraction.
* Restrict each subprogram to the performance of a single action.
* Use a function when the subprogram's primary purpose is to provide a single value.
* Minimize the side effect of a function.
* Consider using a parameterless function when the value does not need to be static.
* Use a parameterless function (instead of a constant) if the value should be inherited by types derived from the type.
* Use a parameterless function if the value itself is subject to change. 
* Use packages for information hiding.
* Use packages with tagged types and private types for abstract data types.
* Use packages to model abstract entities appropriate to the problem domain.
* Use packages to group together related type and object declarations (e.g., common declarations for two or more library units).
* Encapsulate machine dependencies in packages. Place a software interface to a particular device in a package to facilitate a change to a different device.
* Place low-level implementation decisions or interfaces in subprograms within packages. 
* Use packages and subprograms to encapsulate and hide program details that may change (Nissen and Wallis 1984).
* If a new library unit represents a logical extension to the original abstraction, define it as a child library unit.
* If a new library unit is independent (e.g., introduces a new abstraction that depends only in part on the existing one), then encapsulate the new abstraction in a separate library unit.
* Use child packages to implement a subsystem.
* Use public child units for those parts of a subsystem that should be visible to clients of the subsystem. 
* Use private child units for those parts of a subsystem that should not be visible to clients of the subsystem.
* Use private child units for local declarations used only in implementing the package specification.
* Use child packages to implement constructors, even when they return access values.
* Make each package serve a single purpose.
* Use packages to group related data, types, and subprograms.
* Avoid collections of unrelated objects and subprograms (NASA 1987; Nissen and Wallis 1984). 
* Consider restructuring a system to move two highly related units into the same package (or package hierarchy) or to move relatively independent units into separate packages.
* Avoid declaring variables in package specifications.
* Use tasks to model abstract, asynchronous entities within the problem domain.
* Use tasks to define concurrent algorithms for multiprocessor architectures.
* Use tasks to perform concurrent, cyclic, or prioritized activities (NASA 1987). 
* Use protected types to control or synchronize access to data or devices.
* Use protected types to implement synchronization tasks, such as a passive resource monitor.

=== visibility ===

* Put only what is needed for the use of a package into its specification.
* Minimize the number of declarations in package specifications.
* Do not include extra operations simply because they are easy to build.
* Minimize the context (with) clauses in a package specification.
* Reconsider subprograms that seem to require large numbers of parameters.
* Do not manipulate global data within a subprogram or package merely to limit the number of parameters.
* Avoid unnecessary visibility; hide the implementation details of a program unit from its users. 
* Use child library units to control the visibility of parts of a subsystem interface.
* Use private child packages for those declarations that should not be used outside the subsystem. 
* Use child library units to present different views of an entity to different clients.
* Design (and redesign) interfaces after having worked out the logic of various expected clients of the interface.
* Use child packages rather than nested packages to present different views of the same abstraction. 
* Nest package specifications within another package specification only for grouping operations or hiding common implementation details.
* Consider using private child packages in lieu of nesting.
* Restrict the visibility of program units as much as possible by nesting them inside package bodies (Nissen and Wallis 1984) if you cannot use a private child package.
* Minimize nesting program units inside subprograms and tasks.
* Minimize the scope within which with clauses apply. 
* Only with those units directly needed.
* Carefully consider encapsulation of tasks.

==== exceptions ====

* For unavoidable internal errors for which no user recovery is possible, declare a single user-visible exception. Inside the abstraction, provide a way to distinguish between the different internal errors.
* Do not borrow an exception name from another context.
* Export (declare visibly to the user) the names of all exceptions that can be raised.
* In a package, document which exceptions can be raised by each subprogram and task entry.
* Do not raise exceptions for internal errors that can be avoided or corrected within the unit.
* Do not raise the same exception to report different kinds of errors that are distinguishable by the user of the unit.
* Provide interrogative functions that allow the user of a unit to avoid causing exceptions to be raised.
* When possible, avoid changing state information in a unit before raising an exception.
* Catch and convert or handle all predefined and compiler-defined exceptions at the earliest opportunity.
* Do not explicitly raise predefined or implementation-defined exceptions.
* Never let an exception propagate beyond its scope.


{{Chapter navigation||Concurrency}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>kp0dlanvp49osrqfwbtkr5wt0i585ng</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Concurrency</title>
    <ns>0</ns>
    <id>200801</id>
    <revision>
      <id>2371777</id>
      <parentid>2053132</parentid>
      <timestamp>2012-07-01T16:48:20Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>Added new chapter 5: Programming Practices</comment>
      <text xml:space="preserve">{{Chapter navigation|Programming Practices|Portability}}

{{TOC|limit=3|float=none}}

== Introduction ==

Concurrency exists as either apparent concurrency or real concurrency. In a single processor environment, apparent concurrency is the result of interleaved execution of concurrent activities. In a multiprocessor environment, real concurrency is the result of overlapped execution of concurrent activities. 

Concurrent programming is more difficult and error prone than sequential programming. The concurrent programming features of Ada are designed to make it easier to write and maintain concurrent programs that behave consistently and predictably and avoid such problems as deadlock and starvation. The language features themselves cannot guarantee that programs have these desirable properties. They must be used with discipline and care, a process supported by the guidelines in this chapter. 

The correct usage of Ada concurrency features results in reliable, reusable, and portable software. Protected objects (added in Ada 95) encapsulate and provide synchronized access to their private data (Rationale 1995, §II.9). Protected objects help you manage shared data without incurring a performance penalty. Tasks model concurrent activities and use the rendezvous to synchronize between cooperating concurrent tasks. Much of the synchronization required between tasks involves data synchronization, which can be accomplished most efficiently, in general, using protected objects. Misuse of language features results in software that is unverifiable and difficult to reuse or port. For example, using task priorities or delays to manage synchronization is not portable. It is also important that a reusable component not make assumptions about the order or speed of task execution (i.e., about the compiler's tasking implementation). 

Although concurrent features such as tasks and protected objects are supported by the core Ada language, care should be taken when using these features with implementations that do not specifically support Annex D (Real-Time Systems). If Annex D is not specifically supported, features required for real-time applications might not be implemented. 

Guidelines in this chapter are frequently worded &quot;consider . . .&quot; because hard and fast rules cannot apply in all situations. The specific choice you make in a given situation involves design tradeoffs. The rationale for these guidelines is intended to give you insight into some of these tradeoffs. 

== Concurrency Options ==

Many problems map naturally to a concurrent programming solution. By understanding and correctly using the Ada language concurrency features, you can produce solutions that are largely independent of target implementation. Tasks provide a means, within the Ada language, of expressing concurrent, asynchronous threads of control and relieving programmers from the problem of explicitly controlling multiple concurrent activities. Protected objects serve as a building block to support other synchronization paradigms. 
Tasks cooperate to perform the required activities of the software. Synchronization and mutual exclusion are required between individual tasks. The Ada rendezvous and protected objects provide powerful mechanisms for both synchronization and mutual exclusion. 

=== Protected Objects ===

==== guideline ====

* Consider using protected objects to provide mutually exclusive access to data.
* Consider using protected objects to control or synchronize access to data shared by multiple tasks .
* Consider using protected objects to implement synchronization, such as a passive resource monitor. 
* Consider encapsulating protected objects in the private part or body of a package.
* Consider using a protected procedure to implement an interrupt handler. 
* Do not attach a protected procedure handler to a hardware interrupt if that interrupt has a maximum priority greater than the ceiling priority assigned to the handler.
* Avoid the use of global variables in entry barriers.
* Avoid the use of barrier expressions with side effects. 

==== example ====

&lt;source lang=ada&gt;
generic
   type Item is private;
   Maximum_Buffer_Size : in Positive;
package Bounded_Buffer_Package is

   subtype Buffer_Index is Positive range 1..Maximum_Buffer_Size;
   subtype Buffer_Count is Natural  range 0..Maximum_Buffer_Size;
   type    Buffer_Array is array (Buffer_Index) of Item;

   protected type Bounded_Buffer is
      entry Get (X : out Item);
      entry Put (X : in Item);
   private
      Get_Index : Buffer_Index := 1;
      Put_Index : Buffer_Index := 1;
      Count     : Buffer_Count := 0;
      Data      : Buffer_Array;
   end Bounded_Buffer;

end Bounded_Buffer_Package;

------------------------------------------------------------------
package body Bounded_Buffer_Package is

   protected body Bounded_Buffer is

      entry Get (X : out Item) when Count &gt; 0 is
      begin
         X := Data(Get_Index);
         Get_Index := (Get_Index mod Maximum_Buffer_Size) + 1;
         Count := Count - 1;
      end Get;

      entry Put (X : in Item) when Count &lt; Maximum_Buffer_Size is
      begin
         Data(Put_Index) := X;
         Put_Index  := (Put_Index mod Maximum_Buffer_Size) + 1;
         Count := Count + 1;
      end Put;

   end Bounded_Buffer;

end Bounded_Buffer_Package;
&lt;/source&gt;

==== rationale ====

Protected objects are intended to provide a &quot;lightweight&quot; mechanism for mutual exclusion and data synchronization. You should use a task only when you need to introduce explicitly a new, concurrent thread of control (see Guideline 6.1.2). 

Protected objects offer a low overhead, efficient means to coordinate access to shared data. A protected type declaration is similar to a program unit and consists of both a specification and a body. The data to be protected must be declared in the specification, as well as the operations that can be used to manipulate this data. If some operations are only allowed conditionally, entries must be provided. Ada 95 rules require that entry barriers be evaluated at the end of procedure calls and entry calls on protected objects. Entry barriers should avoid referring to global variables so that the underlying assumptions of the state of the protected object are not violated. Protected procedures and entries should be used to change the state of a protected object. 

Most clients of an abstraction do not need to know how it is implemented, whether it is a regular abstraction or a shared abstraction. A protected type is inherently a limited type, and you can use protected types to implement a limited private type exported by a package. As pointed out in Guideline 5.3.3, abstractions are best implemented using private types (possibly derived from controlled types) or limited private types, providing appropriate operations that overcome the restrictiveness imposed by the use of private types. 

The Rationale (1995, §9.1) describes the interrupt handling features that make the protected procedure the recommended building block: 

A protected procedure is very well suited to act as an interrupt handler for a number of reasons; they both typically have a short bounded execution time, do not arbitrarily block, have a limited context and finally they both have to integrate with the priority model. The nonblocking critical region matches the needs of an interrupt handler, as well as the needs of non-interrupt-level code to synchronize with an interrupt handler. The entry barrier construct allows an interrupt handler to signal a normal task by changing the state of a component of the protected object and thereby making a barrier true. 

When using protected procedures for interrupt handling, you must ensure that the ceiling priority of the handler is at least as high as the maximum possible priority of the interrupt to be handled. With priority-ceiling locking, the delivery of an interrupt with a higher priority than the ceiling priority of the handler will result in erroneous execution (Ada Reference Manual 1995, §C.3.1). 

A global variable could be changed by another task or even by a call of a protected function. These changes will not be acted upon promptly. Therefore, you should not use a global variable in an entry barrier. 

Side effects in barrier expressions can cause undesirable dependencies. Therefore, you should avoid the use of barrier expressions that can cause side effects. 

See also Guideline . 

==== exceptions ====

If the client of the abstraction containing the protected object must use a select statement with an entry call, you must expose the protected object on the package interface. 

=== Tasks ===

==== guideline ====

* Use tasks to model selected asynchronous threads of control within the problem domain. 
* Consider using tasks to define concurrent algorithms.
* Consider using rendezvous when your application requires synchronous unbuffered communication. 

==== example ====
The naturally concurrent objects within the problem domain can be modeled as Ada tasks. 

&lt;source lang=ada&gt;
-- The following example of a stock exchange simulation shows how naturally
-- concurrent objects within the problem domain can be modeled as Ada tasks.

-------------------------------------------------------------------------

-- Protected objects are used for the Display and for the Transaction_Queue
-- because they only need a mutual exclusion mechanism.

protected Display is
   entry Shift_Tape_Left;
   entry Put_Character_On_Tape (C : in Character);
end Display;

protected Transaction_Queue is
   entry Put (T : in     Transaction);
   entry Get (T :    out Transaction);
   function Is_Empty return Boolean;
end Transaction_Queue;

-------------------------------------------------------------------------

-- A task is needed for the Ticker_Tape because it has independent cyclic
-- activity.  The Specialist and the Investor are best modeled with tasks
-- since they perform different actions simultaneously, and should be
-- asynchronous threads of control.

task Ticker_Tape;

task Specialist is
   entry Buy  (Order : in Order_Type);
   entry Sell (Order : in Order_Type);
end Specialist;

task Investor;
-------------------------------------------------------------------------
task body Ticker_Tape is
   ...
begin
   loop
      Display.Shift_Tape_Left;

      if not More_To_Send (Current_Tape_String) and then
         not Transaction_Queue.Is_Empty
      then
         Transaction_Queue.Get (Current_Tape_Transaction);
         ... -- convert Transaction to string
      end if;

      if More_To_Send (Current_Tape_String) then
         Display.Put_Character_On_Tape (Next_Char);
      end if;

      delay until Time_To_Shift_Tape;
      Time_To_Shift_Tape := Time_To_Shift_Tape + Shift_Interval;
   end loop;
end Ticker_Tape;

task body Specialist is 
   ...

   loop
      select
         accept Buy  (Order : in Order_Type) do
            ...
         end Buy;
         ...
      or
         accept Sell (Order : in Order_Type) do
            ...
         end Sell;
         ...
      else
         -- match orders
         ...
         Transaction_Queue.Put (New_Transaction);
         ...
      end select;
   end loop;

end Specialist;


task body Investor is
   ...
begin

   loop
      -- some algorithm that determines whether the investor
      -- buys or sells, quantity, price, etc

      ...

      if ... then
         Specialist.Buy (Order);
      end if;

      if ... then
         Specialist.Sell (Order);
      end if;
   end loop;

end Investor;
&lt;/source&gt;

Multiple tasks that implement the decomposition of a large, matrix multiplication algorithm are an example of an opportunity for real concurrency in a multiprocessor target environment. In a single processor target environment, this approach may not be justified due to the overhead incurred from context switching and the sharing of system resources. 

A task that updates a radar display every 30 milliseconds is an example of a cyclic activity supported by a task. 

A task that detects an over-temperature condition in a nuclear reactor and performs an emergency shutdown of the systems is an example of a task to support a high-priority activity. 

==== rationale ====

These guidelines reflect the intended uses of tasks. They all revolve around the fact that a task has its own thread of control separate from the main subprogram (or environment task) of a partition. The conceptual model for a task is a separate program with its own virtual processor. This provides the opportunity to model entities from the problem domain in terms more closely resembling those entities and the opportunity to handle physical devices as a separate concern from the main algorithm of the application. Tasks also allow naturally concurrent activities that can be mapped to multiple processors within a partition when available. 

You should use tasks for separate threads of control. When you synchronize tasks, you should use the rendezvous mechanism only when you are trying to synchronize actual processes (e.g., specify a time-sensitive ordering relationship or tightly coupled interprocess communication). For most synchronization needs, however, you should use protected objects (see Guideline 6.1.1), which are more flexible and can minimize unnecessary bottlenecks. Additionally, passive tasks are probably better modeled through protected objects than active tasks. 

Resources shared between multiple tasks, such as devices, require control and synchronization because their operations are not atomic. Drawing a circle on a display might require that many low-level operations be performed without interruption by another task. A display manager would ensure that no other task accesses the display until all these operations are complete. 

=== Discriminants ===

==== guideline ====

* Consider using discriminants to minimize the need for an explicit initialization operation (Rationale 1995, §9.1).
* Consider using discriminants to control composite components of the protected objects, including setting the size of an entry family (Rationale 1995, §9.1).
* Consider using a discriminant to set the priority of a protected object (Rationale 1995, §9.1).
* Consider using a discriminant to identify an interrupt to a protected object (Rationale 1995, §9.1).
* Consider declaring a task type with a discriminant to indicate (Rationale 1995, §9.6):
** Priority, storage size, and size of entry families of individual tasks of a type
** Data associated with a task (through an access discriminant) 

==== example ====
The following code fragment shows how a task type with discriminant can be used to associate data with a task (Rationale 1995, §9.6): 

&lt;source lang=ada&gt;
type Task_Data is
   record
      ...  -- data for task to work on
   end record;
task type Worker (D : access Task_Data) is
   ...
end;
-- When you declare a task object of type Worker, you explicitly associate this task with
-- its data through the discriminant D
Data_for_Worker_X : aliased Task_Data := ...;
X : Worker (Data_for_Worker_X'Access);
&lt;/source&gt;

The following example shows how to use discriminants to associate data with tasks, thus allowing the tasks to be parameterized when they are declared and eliminating the need for an initial rendezvous with the task: 

&lt;source lang=ada&gt;
task type Producer (Channel : Channel_Number; ID : ID_Number);

task body Producer is
begin

   loop

      ... -- generate an item

      Buffer.Put (New_Item);

   end loop;
end Producer;

...

Keyboard : Producer (Channel =&gt; Keyboard_Channel, ID =&gt; 1);
Mouse    : Producer (Channel =&gt; Mouse_Channel,    ID =&gt; 2);
&lt;/source&gt;

The next example shows how an initial rendezvous can be used to associate data with tasks. This is more complicated and more error prone than the previous example. This method is no longer needed in Ada 95 due to the availability of discriminants with task types and protected types: 

&lt;source lang=ada&gt;
task type Producer is
   entry Initialize (Channel : in Channel_Number; ID : in ID_Number);
end Producer;

task body Producer is
   IO_Channel  : Channel_Number;
   Producer_ID : ID_Number;
begin

   accept Initialize (Channel : in Channel_Number; ID : in ID_Number) do
      IO_Channel  := Channel;
      Producer_ID := ID;
   end;

   loop

      ... -- generate an item

      Buffer.Put (New_Item);

   end loop;
end Producer;

...

Keyboard : Producer;
Mouse    : Producer;

...

begin
   ...
   Keyboard.Initialize (Channel =&gt; Keyboard_Channel, ID =&gt; 1);
   Mouse.Initialize    (Channel =&gt; Mouse_Channel,    ID =&gt; 2);
   ...
&lt;/source&gt;


==== rationale ====

Using discriminants to parameterize protected objects provides a low-overhead way of specializing the protected object. You avoid having to declare and call special subprograms solely for the purpose of passing this information to the protected object. 

Task discriminants provide a way for you to identify or parameterize a task without the overhead of an initial rendezvous. For example, you can use this discriminant to initialize a task or tell it who it is (from among an array of tasks) (Rationale 1995, §II.9). More importantly, you can associate the discriminant with specific data. When you use an access discriminant, you can bind the data securely to the task because the access discriminant is constant and cannot be detached from the task (Rationale 1995, §9.6). This reduces and might eliminate bottlenecks in the parallel activation of tasks (Rationale 1995, §9.6). 

==== notes ====

Using an access discriminant to initialize a task has a potential danger in that the data being referenced could change after the rendezvous. This possibility and its effects should be considered and, if necessary, appropriate actions taken (e.g., copy the referenced data and not rely on the data pointed to by the discriminant after initialization). 

=== Anonymous Task Types and Protected Types ===

==== guideline ====

* Consider using single task declarations to declare unique instances of concurrent tasks.
* Consider using single protected declarations to declare unique instances of protected objects. 

==== example ====
The following example illustrates the syntactic differences between the kinds of tasks and protected objects discussed here. Buffer is static, but its type is anonymous. No type name is declared to enable you to declare further objects of the same type. 

&lt;source lang=ada&gt;
task      Buffer;
&lt;/source&gt;

Because it is declared explicitly, the task type Buffer_Manager is not anonymous. Channel is static and has a name, and its type is not anonymous. 

&lt;source lang=ada&gt;
task type Buffer_Manager;
Channel : Buffer_Manager;
&lt;/source&gt;

==== rationale ====

The use of anonymous tasks and protected objects of anonymous type avoids a proliferation of task and protected types that are only used once, and the practice communicates to maintainers that there are no other tasks or protected objects of that type. If the need arises later to have additional tasks or protected objects of the same type, then the work required to convert an anonymous task to a task type or an anonymous protected object to a protected type is minimal. 

The consistent and logical use of task and protected types, when necessary, contributes to understandability. Identical tasks can be declared using a common task type. Identical protected objects can be declared using a common protected type. Dynamically allocated task or protected structures are necessary when you must create and destroy tasks or protected objects dynamically or when you must reference them by different names. 

==== notes ====

Though changing the task or protected object from an anonymous type to a declared type is trivial, structural changes to the software architecture might not be trivial. Introduction of multiple tasks or protected objects of the declared type might require the scope of the type to change and might change the behavior of the network of synchronizing tasks and protected objects. 

=== Dynamic Tasks ===

==== guideline ====

* Minimize dynamic creation of tasks because of the potentially high startup overhead; reuse tasks by having them wait for new work on some appropriate entry queue. 

==== example ====
The approach used in the following example is not recommended. The example shows why caution is required with dynamically allocated task and protected objects. It illustrates how a dynamic task can be disassociated from its name: 

&lt;source lang=ada&gt;
task type Radar_Track;
type      Radar_Track_Pointer is access Radar_Track;
Current_Track : Radar_Track_Pointer;
---------------------------------------------------------------------
task body Radar_Track is
begin
   loop
      -- update tracking information
      ...
      -- exit when out of range
      delay 1.0;
   end loop;
...
end Radar_Track;
---------------------------------------------------------------------
...
loop
   ...
   -- Radar_Track tasks created in previous passes through the loop
   -- cannot be accessed from Current_Track after it is updated.
   -- Unless some code deals with non-null values of Current_Track,
   -- (such as an array of existing tasks)
   -- this assignment leaves the existing Radar_Track task running with
   -- no way to signal it to abort or to instruct the system to
   -- reclaim its resources.

   Current_Track := new Radar_Track;
   ...
end loop;
&lt;/source&gt;

==== rationale ====

Starting up a task has significant overhead in many implementations. If an application has a need for dynamically created tasks, the tasks should be implemented with a top-level loop so that after such a task completes its given job, it can cycle back and wait for a new job. 

You can use dynamically allocated tasks and protected objects when you need to allow the number of tasks and protected objects to vary during execution. When you must ensure that tasks are activated in a particular order, you should use dynamically allocated tasks because the Ada language does not define an activation order for statically allocated task objects. In using dynamically allocated tasks and protected objects, you face the same issues as with any use of the heap. 

=== Priorities ===

==== guideline ====

* Do not rely on pragma Priority unless your compiler supports the Real-Time Annex (Ada Reference Manual 1995, Annex D) and priority scheduling.
* Minimize risk of priority inversion by use of protected objects and ceiling priority.
* Do not rely upon task priorities to achieve a particular sequence of task execution. 

==== example ====
For example, let the tasks have the following priorities: 

&lt;source lang=ada&gt;
task T1 is
   pragma Priority (High);
end T1;

task T2 is
   pragma Priority (Medium);
end T2;

task Server is
   entry Operation (...);
end Server;

----------------------------
task body T1 is
begin
   ...
   Server.Operation (...);
   ...
end T1;
task body T2 is
begin
   ...
   Server.Operation (...);
   ...
end T2;

task body Server is
begin
   ...
   accept Operation (...);
   ...
end Server;
&lt;/source&gt;

At some point in its execution, T1 is blocked. Otherwise, T2 and Server might never execute. If T1 is blocked, it is possible for T2 to reach its call to Server's entry (Operation) before T1. Suppose this has happened and that T1 now makes its entry call before Server has a chance to accept T2's call. 

This is the timeline of events so far: 

T1 blocks
T2 calls Server.Operation
T1 unblocks
T1 calls Server.Operation
-- Does Server accept the call from T1 or from T2?

You might expect that, due to its higher priority, T1's call would be accepted by Server before that of T2. However, entry calls are queued in first-in-first-out (FIFO) order and not queued in order of priority (unless pragma Queueing_Policy is used). Therefore, the synchronization between T1 and Server is not affected by T1's priority. As a result, the call from T2 is accepted first. This is a form of priority inversion. (Annex D can change the default policy of FIFO queues.) 

A solution might be to provide an entry for a High priority user and an entry for a Medium priority user. 
&lt;source lang=ada&gt;
---------------------------------------------------------------------
task Server is
   entry Operation_High_Priority;
   entry Operation_Medium_Priority;
   ...
end Server;
---------------------------------------------------------------------
task body Server is
begin
   loop
      select
         accept Operation_High_Priority do
            Operation;
         end Operation_High_Priority;
      else  -- accept any priority
         select
            accept Operation_High_Priority do
               Operation;
            end Operation_High_Priority;
         or
            accept Operation_Medium_Priority do
               Operation;
            end Operation_Medium_Priority;
         or
            terminate;
         end select;
      end select;
   end loop;
...
end Server;
---------------------------------------------------------------------
&lt;/source&gt;
However, in this approach, T1 still waits for one execution of Operation when T2 has already gained control of the task Server. In addition, the approach increases the communication complexity (see Guideline 6.2.6).

==== rationale ====

The pragma Priority allows relative priorities to be placed on tasks to accomplish scheduling. Precision becomes a critical issue with hard-deadline scheduling. However, there are certain problems associated with using priorities that warrant caution. 

Priority inversion occurs when lower priority tasks are given service while higher priority tasks remain blocked. In the first example, this occurred because entry queues are serviced in FIFO order, not by priority. There is another situation referred to as a race condition . A program like the one in the first example might often behave as expected as long as T1 calls Server.Operation only when T2 is not already using Server.Operation or waiting. You cannot rely on T1 always winning the race because that behavior would be due more to fate than to the programmed priorities. Race conditions change when either adding code to an unrelated task or porting this code to a new target. 

You should not rely upon task priorities to achieve an exact sequence of execution or rely upon them to achieve mutual exclusion. Although the underlying dispatching model is common to all Ada 95 implementations, there might be differences in dispatching, queuing, and locking policies for tasks and protected objects. All of these factors might lead to different sequences of execution. If you need to ensure a sequence of execution, you should make use of Ada's synchronization mechanisms, i.e., protected objects or rendezvous. 

==== notes ====

Work is being done to minimize these problems, including the introduction of a scheduling algorithm known as the priority ceiling protocol (Goodenough and Sha 1988). The priority ceiling protocol reduces the blocking time that causes priority inversion to only one critical region (defined by the entries in a task). The protocol also eliminates deadlock (unless a task recursively tries to access a critical region) by giving a ceiling priority to each task accessing a resource that is as high as the priority of any task that ever accesses that resource. This protocol is based on priority inheritance and, thus, deviates from the standard Ada tasking paradigm, which supports priority ceiling emulation instead of the priority ceiling blocking that occurs with priority inheritance. 

Priorities are used to control when tasks run relative to one another. When both tasks are not blocked waiting at an entry, the highest priority task is given precedence. However, the most critical tasks in an application do not always have the highest priority. For example, support tasks or tasks with small periods might have higher priorities because they need to run frequently. 

All production-quality validated Ada 95 compilers will probably support pragma Priority. However, you should use caution unless (Annex D is specifically supported. 

There is currently no universal consensus on how to apply the basic principles of rate monotonic scheduling (RMS) to the Ada 95 concurrency model. One basic principle of RMS is to arrange all periodic tasks so that tasks with shorter periods have higher priorities than tasks with longer periods. However, with Ada 95, it might be faster to raise the priorities of tasks whose jobs suddenly become critical than to wait for an executive task to reschedule them. In this case, priority inversion can be minimized using a protected object with pragma Locking_Policy(Ceiling_Locking) as the server instead of a task. 

=== Delay Statements ===

==== guideline ====

* Do not depend on a particular delay being achievable (Nissen and Wallis 1984).
* Use a delay until not a delay statement to delay until a specific time has been reached.
* Avoid using a busy waiting loop instead of a delay. 

==== example ====
The phase of a periodic task is the fraction of a complete cycle elapsed as measured from a specified reference point. In the following example, an inaccurate delay causes the phase of the periodic task to drift over time (i.e., the task starts later and later in the cycle): 

Periodic:
&lt;source lang=ada&gt;
   loop
      delay Interval;
      ...
   end loop Periodic;
&lt;/source&gt;

To avoid an inaccurate delay drift, you should use the delay until statement. The following example (Rationale 1995, §9.3) shows how to satisfy a periodic requirement with an average period: 

&lt;source lang=ada&gt;
task body Poll_Device is
   use type Ada.Real_Time.Time;
   use type Ada.Real_Time.Time_Span;

   Poll_Time :          Ada.Real_Time.Time := ...; -- time to start polling
   Period    : constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds (10);
begin
   loop
      delay until Poll_Time;
      ... -- Poll the device
      Poll_Time := Poll_Time + Period;
   end loop;
end Poll_Device;
&lt;/source&gt;

==== rationale ====

There are two forms of delay statement. The delay will cause a delay for at least a specified time interval. The delay until causes a delay until an absolute wake-up time. You should choose the form appropriate to your application. 

The Ada language definition only guarantees that the delay time is a minimum. The meaning of a delay or delay until statement is that the task is not scheduled for execution before the interval has expired. In other words, a task becomes eligible to resume execution as soon as the amount of time has passed. However, there is no guarantee of when (or if) it is scheduled after that time because the required resources for that task might not be available at the expiration of the delay . 

A busy wait can interfere with processing by other tasks. It can consume the very processor resource necessary for completion of the activity for which it is waiting. Even a loop with a delay can have the impact of busy waiting if the planned wait is significantly longer than the delay interval. If a task has nothing to do, it should be blocked at an accept or select statement, an entry call, or an appropriate delay. 

The expiration time for a relative delay is rounded up to the nearest clock tick. If you use the real-time clock features provided by (Annex D, however, clock ticks are guaranteed to be no greater than one millisecond (Ada Reference Manual 1995, §D.8). 

==== notes ====

You need to ensure the arithmetic precision of the calculation Poll_Time := Poll_Time + Period; to avoid drift. 

=== Extensibility and Concurrent Structures ===

==== guideline ====

* Carefully consider the placement of components of protected types within a tagged type inheritance hierarchy. 
* Consider using generics to provide extensibility of data types requiring the restrictions provided by protected objects. 

==== rationale ====
Once a component of a protected type is added to an inheritance hierarchy of an abstract data type, further extensibility of that data type is impaired. When you constrain the concurrent behavior of a type (i.e., introduce a protected type component), you lose the ability to modify that behavior in subsequent derivations. Therefore, when the need arises for a version of an abstract data type to impose the restrictions provided by protected objects, the opportunity for reuse is maximized by adding the protected objects at the leaves of the inheritance hierarchy. 

The reusability of common protected operations (e.g., mutually exclusive read/write operations) can be maximized by using generic implementations of abstract data types. These generic implementations then provide templates that can be instantiated with data types specific to individual applications. 

==== notes ====

You can address synchronization within an inheritance hierarchy in one of three ways: 

* You can declare the root as a limited tagged type with a component that belongs to a protected type and give the tagged type primitive operations that work by invoking the protected operations of that component.
* Given a tagged type implementing an abstract data type (perhaps resulting from several extensions), you can declare a protected type with a component belonging to the tagged type. The body of each protected operation would then invoke the corresponding operation of the abstract data type. The protected operations provide mutual exclusion.
* You can use a hybrid approach where you declare a protected type with a component of some tagged type. You then use this protected type to implement a new root tagged type (not a descendant of the original tagged type). 

== Communication ==

The need for tasks to communicate gives rise to most of the problems that make concurrent programming so difficult. Used properly, Ada's intertask communication features can improve the reliability of concurrent programs; used thoughtlessly, they can introduce subtle errors that can be difficult to detect and correct. 

=== Efficient Task Communication ===

==== guideline ====

* Minimize the work performed during a rendezvous.
* Minimize the work performed in the selective accept loop of a task.
* Consider using protected objects for data synchronization and communication. 

==== example ====
In the following example, the statements in the accept body are performed as part of the execution of both the caller task and the task Server, which contains Operation and Operation2. The statements after the accept body are executed before Server can accept additional calls to Operation or Operation2. 

&lt;source lang=ada&gt;
   ...
   loop
      select
         accept Operation do
            -- These statements are executed during rendezvous.
            -- Both caller and server are blocked during this time.
            ...
         end Operation;
         ...
         -- These statements are not executed during rendezvous.
         -- The execution of these statements increases the time required
         --   to get back to the accept and might be a candidate for another task.

      or
         accept Operation_2 do
            -- These statements are executed during rendezvous.
            -- Both caller and server are blocked during this time.
            ...
         end Operation_2;
      end select;
      -- These statements are also not executed during rendezvous,
      -- The execution of these statements increases the time required
      --   to get back to the accept and might be a candidate for another task.

   end loop;
&lt;/source&gt;

==== rationale ====

To minimize the time required to rendezvous, only work that needs to be performed during a rendezvous, such as saving or generating parameters, should be allowed in the accept bodies. 

When work is removed from the accept body and placed later in the selective accept loop, the additional work might still suspend the caller task. If the caller task calls entry Operation again before the server task completes its additional work, the caller is delayed until the server completes the additional work. If the potential delay is unacceptable and the additional work does not need to be completed before the next service of the caller task, the additional work can form the basis of a new task that will not block the caller task. 

Operations on protected objects incur less execution overhead than tasks and are more efficient for data synchronization and communication than the rendezvous. You must design protected operations to be bounded, short, and not potentially blocking. 

==== notes ====

In some cases, additional functions can be added to a task. For example, a task controlling a communication device might be responsible for a periodic function to ensure that the device is operating correctly. This type of addition should be done with care, realizing that the response time of the task might be impacted (see the above rationale). 

Minimizing the work performed during a rendezvous or selective accept loop of a task can increase the rate of execution only when it results in additional overlaps in processing between the caller and callee or when other tasks can be scheduled due to the shorter period of execution. Therefore, the largest increases in execution rates will be seen in multiprocessor environments. In single-processor environments, the increased execution rate will not be as significant and there might even be a small net loss. The guideline is still applicable, however, if the application could ever be ported to a multiprocessor environment. 

=== Defensive Task Communication ===

==== guideline ====

* Provide a handler for exception Program_Error whenever you cannot avoid a selective accept statement whose alternatives can all be closed (Honeywell 1986).
* Make systematic use of handlers for Tasking_Error.
* Be prepared to handle exceptions during a rendezvous .
* Consider using a when others exception handler. 

==== example ====
This block allows recovery from exceptions raised while attempting to communicate a command to another task: 

&lt;source lang=ada&gt;
Accelerate:
   begin
      Throttle.Increase(Step);
   exception
      when Tasking_Error     =&gt;     ...
      when Constraint_Error  =&gt;     ...
      when Throttle_Too_Wide =&gt;     ...
      ...
   end Accelerate;
&lt;/source&gt;

In this select statement, if all the guards happen to be closed, the program can continue by executing the else part. There is no need for a handler for Program_Error. Other exceptions can still be raised while evaluating the guards or attempting to communicate. You will also need to include an exception handler in the task Throttle so that it can continue to execute after an exception is raised during the rendezvous: 

&lt;source lang=ada&gt;
...
Guarded:
   begin
      select
         when Condition_1 =&gt;
            accept Entry_1;
      or
         when Condition_2 =&gt;
            accept Entry_2;
      else  -- all alternatives closed
         ...
      end select;
   exception
      when Constraint_Error =&gt;
         ...
   end Guarded;
&lt;/source&gt;

In this select statement, if all the guards happen to be closed, exception Program_Error will be raised. Other exceptions can still be raised while evaluating the guards or attempting to communicate: 

&lt;source lang=ada&gt;
Guarded:
   begin
      select
         when Condition_1 =&gt;
            accept Entry_1;
      or
         when Condition_2 =&gt;
            delay Fraction_Of_A_Second;
      end select;
   exception
      when Program_Error     =&gt;  ...
      when Constraint_Error  =&gt;  ...
   end Guarded;
...
&lt;/source&gt;

==== rationale ====

The exception Program_Error is raised if a selective accept statement (select statement containing accepts) is reached, all of whose alternatives are closed (i.e., the guards evaluate to False and there are no alternatives without guards), unless there is an else part. When all alternatives are closed, the task can never again progress, so there is by definition an error in its programming. You must be prepared to handle this error should it occur. 

Because an else part cannot have a guard, it can never be closed off as an alternative action; thus, its presence prevents Program_Error. However, an else part, a delay alternative, and a terminate alternative are all mutually exclusive, so you will not always be able to provide an else part. In these cases, you must be prepared to handle Program_Error. 

The exception Tasking_Error can be raised in the calling task whenever it attempts to communicate. There are many situations permitting this. Few of them are preventable by the calling task. 

If an exception is raised during a rendezvous and not handled in the accept statement, it is propagated to both tasks and must be handled in two places (see Guideline 5.8). 
The handling of the others exception can be used to avoid propagating unexpected exceptions to callers (when this is the desired effect) and to localize the logic for dealing with unexpected exceptions in the rendezvous. After handling, an unknown exception should normally be raised again because the final decision of how to deal with it might need to be made at the outermost scope of the task body. 

==== notes ====

There are other ways to prevent Program_Error at a selective accept. These involve leaving at least one alternative unguarded or proving that at least one guard will evaluate True under all circumstances. The point here is that you or your successors will make mistakes in trying to do this, so you should prepare to handle the inevitable exception. 

=== Attributes 'Count, 'Callable, and 'Terminated ===

==== guideline ====

* Do not depend on the values of the task attributes 'Callable or 'Terminated ( Nissen and Wallis 1984).
* Do not depend on attributes to avoid Tasking_Error on an entry call. 
* For tasks, do not depend on the value of the entry attribute 'Count.
* Using the 'Count attribute with protected entries is more reliable than using the 'Count attribute with task entries. 

==== example ====
In the following examples, Dispatch'Callable is a Boolean expression, indicating whether a call can be made to the task Intercept without raising the exception Tasking_Error. Dispatch'Count indicates the number of callers currently waiting at entry Transmit. Dispatch'Terminated is a Boolean expression, indicating whether the task Dispatch is in a terminated state. 

This task is badly programmed because it relies upon the values of the 'Count attributes not changing between evaluating and acting upon them: 

&lt;source lang=ada&gt;
---------------------------------------------------------------------
task body Dispatch is
...
   select
      when Transmit'Count &gt; 0 and Receive'Count = 0 =&gt;
         accept Transmit;
         ...
   or
      accept Receive;
      ...
   end select;
...
end Dispatch;
---------------------------------------------------------------------
&lt;/source&gt;

If the following code is preempted between evaluating the condition and initiating the call, the assumption that the task is still callable might no longer be valid: 

&lt;source lang=ada&gt;
...
if Dispatch'Callable then
   Dispatch.Receive;
end if;
...
&lt;/source&gt;

==== rationale ====

Attributes 'Callable, 'Terminated, and 'Count are all subject to race conditions. Between the time you reference an attribute and the time you take action, the value of the attribute might change. Attributes 'Callable and 'Terminated convey reliable information once they become False and True, respectively. If 'Callable is False, you can expect the callable state to remain constant. If 'Terminated is True, you can expect the task to remain terminated. Otherwise, 'Terminated and 'Callable can change between the time your code tests them and the time it responds to the result. 

The Ada Reference Manual (1995, §9.9) itself warns about the asynchronous increase and decrease of the value of 'Count. A task can be removed from an entry queue due to execution of an abort statement as well as expiration of a timed entry call. The use of this attribute in guards of a selective accept statement might result in the opening of alternatives that should not be opened under a changed value of 'Count. 

The value of the attribute 'Count is stable for protected units because any change to an entry queue is itself a protected action, which will not occur while any other protected action is already proceeding. Nevertheless, when you use 'Count within an entry barrier of a protected unit, you should remember that the condition of the barrier is evaluated both before and after queueing a given caller. 

=== Unprotected Shared Variables ===

==== guideline ====

* Use calls on protected subprograms or entries to pass data between tasks rather than unprotected shared variables.
* Do not use unprotected shared variables as a task synchronization device.
* Do not reference nonlocal variables in a guard .
* If an unprotected shared variable is necessary, use the pragma Volatile or Atomic. 

==== example ====
This code will either print the same line more than once, fail to print some lines, or print garbled lines (part of one line followed by part of another) nondeterministically. This is because there is no synchronization or mutual exclusion between the task that reads a command and the one that acts on it. Without knowledge about their relative scheduling, the actual results cannot be predicted: 

&lt;source lang=ada&gt;
-----------------------------------------------------------------------
task body Line_Printer_Driver is
   ...
begin
   loop
      Current_Line := Line_Buffer;
      -- send to device
   end loop;
end Line_Printer_Driver;
-----------------------------------------------------------------------
task body Spool_Server is
   ...
begin
   loop
      Disk_Read (Spool_File, Line_Buffer);
   end loop;
end Spool_Server;
-----------------------------------------------------------------------
&lt;/source&gt;

The following example shows a vending machine that dispenses the amount requested into an appropriately sized container. The guards reference the global variables Num_Requested and Item_Count, leading to a potential problem in the wrong amount being dispensed into an inappropriately sized container: 

&lt;source lang=ada&gt;
Num_Requested : Natural;
Item_Count    : Natural := 1000;
task type Request_Manager (Personal_Limit : Natural := 1) is
   entry Make_Request (Num : Natural);
   entry Get_Container;
   entry Dispense;
end Request_Manager;

task body Request_Manager is
begin
   loop
      select
         accept Make_Request (Num : Natural) do
            Num_Requested := Num;
         end Make_Request;
      or
         when Num_Requested &lt; Item_Count =&gt;
            accept Get_Container;
            ...
      or
         when Num_Requested &lt; Item_Count =&gt;
            accept Dispense do
               if Num_Requested &lt;= Personal_Limit then
                  Ada.Text_IO.Put_Line (&quot;Please pick up items.&quot;);
               else
                  Ada.Text_IO.Put_Line (&quot;Sorry! Requesting too many items.&quot;);
               end if;
            end Dispense;
      end select;
   end loop;
end Request_Manager;
R1 : Request_Manager (Personal_Limit =&gt; 10);
R2 : Request_Manager (Personal_Limit =&gt; 2);  
&lt;/source&gt;

The interleaving of the execution of R1 and R2 can lead to Num_Requested being changed before the entry call to Dispense is accepted. Thus, R1 might receive fewer items than requested or R2's request might be bounced because the request manager thinks that what R2 is requesting exceeds R2's personal limit. By using the local variable, you will dispense the correct amount. Furthermore, by using the pragma Volatile (Ada Reference Manual 1995, §C.6), you ensure that the Item_Count is reevaluated when the guards are evaluated. Given that the variable Item_Count is not updated in this task body, the compiler might otherwise have optimized the code and not generated code to reevaluate Item_Count every time it is read: 

&lt;source lang=ada&gt;
Item_Count : Natural := 1000;
pragma Volatile (Item_Count);
task body Request_Manager is
   Local_Num_Requested : Natural := 0;
begin
   loop
      select
         accept Make_Request (Num : Natural) do
            Local_Num_Requested := Num;
         end Make_Request;
      or
         when Local_Num_Requested &lt;= Personal_Limit =&gt;
            accept Get_Container;
            ...
      or
         when Local_Num_Requested &lt; Item_Count =&gt;
            accept Dispense do
               ... -- output appropriate message if couldn't service request
            end Dispense;
            Item_Count := Item_Count - Local_Num_Requested; 
      end select;
   end loop;
end Request_Manager;
&lt;/source&gt;

==== rationale ====

There are many techniques for protecting and synchronizing data access. You must program most of them yourself to use them. It is difficult to write a program that shares unprotected data correctly. If it is not done correctly, the reliability of the program suffers. 

Ada provides protected objects that encapsulate and provide synchronized access to protected data that is shared between tasks. Protected objects are expected to provide better performance than the rendezvous that usually requires introduction of an additional task to manage the shared data. The use of unprotected shared variables is more error-prone than the protected objects or rendezvous because the programmer must ensure that the unprotected shared variables are independently addressable and that the actions of reading or updating the same unprotected shared variable are sequential (Ada Reference Manual 1995, §9.10; Rationale 1995, §II.9). 

The first example above has a race condition requiring perfect interleaving of execution. This code can be made more reliable by introducing a flag that is set by Spool_Server and reset by Line_Printer_Driver. An if (condition flag) then delay ... else would be added to each task loop in order to ensure that the interleaving is satisfied. However, notice that this approach requires a delay and the associated rescheduling. Presumably, this rescheduling overhead is what is being avoided by not using the rendezvous. 

You might need to use an object in shared memory to communicate data between (Rationale 1995, §C.5): 
* Ada tasks
* An Ada program and concurrent non-Ada processes
* An Ada program and hardware devices 

If your environment supports the Systems Programming Annex (Ada Reference Manual 1995, Annex C), you should indicate whether loads and stores to the shared object must be indivisible. If you specify the pragma Atomic, make sure that the object meets the underlying hardware requirements for size and alignment. 
Multiple tasks sharing the predefined random number generator and certain input/output subprograms can lead to problems with unprotected updates to shared state. The Ada Reference Manual (1995, §A.5.2) points out the need for tasks to synchronize their access to the random number generators (packages Ada.Numerics.Float_Random and Ada.Numerics.Discrete_Random). See Guideline 7.7.5 for the I/O issue. 

=== Selective Accepts and Entry Calls ===

==== guideline ====

* Use caution with conditional entry calls to task entries. 
* Use caution with selective accept with else parts.
* Do not depend upon a particular delay in timed entry calls to task entries.
* Do not depend upon a particular delay in selective accepts with delay alternatives. 
* Consider using protected objects instead of the rendezvous for data-oriented synchronization. 

==== example ====
The conditional entry call in the following code results in a potential race condition that might degenerate into a busy waiting loop (i.e., perform the same calculation over and over). The task Current_Position containing entry Request_New_Coordinates might never execute if the loop-containing task (shown in the following code fragment) has a higher priority than Current_Position because it does not release the processing resource: 

&lt;source lang=ada&gt;
task body Calculate_Flightpath is
begin
   ...
   loop
  
      select
         Current_Position.Request_New_Coordinates (X, Y);
         -- calculate projected location based on new coordinates
         ...
  
      else
         -- calculate projected location based on last locations
         ...
      end select;
  
   end loop;
   ...
end Calculate_Flightpath;
&lt;/source&gt;

The addition of a delay, as shown, may allow Current_Position to execute until it reaches an accept for Request_New_Coordinates: 

&lt;source lang=ada&gt;
task body Calculate_Flightpath is
begin
   ...
   loop
  
      select
         Current_Position.Request_New_Coordinates(X, Y);
         -- calculate projected location based on new coordinates
         ...
  
      else
         -- calculate projected location based on last locations
         ...
  
         delay until Time_To_Execute;
         Time_To_Execute := Time_To_Execute + Period;
      end select;
  
   end loop;
   ...
end Calculate_Flightpath;
&lt;/source&gt;


The following selective accept with else again does not degenerate into a busy wait loop only because of the addition of a delay statement: 

&lt;source lang=ada&gt;
task body Buffer_Messages is

   ...

begin

   ...

   loop
      delay until Time_To_Execute;

      select
         accept Get_New_Message (Message : in     String) do
            -- copy message to parameters
            ...
         end Get_New_Message;
      else  -- Don't wait for rendezvous
         -- perform built in test Functions
         ...
      end select;

      Time_To_Execute := Time_To_Execute + Period;
   end loop;

   ...

end Buffer_Messages;
&lt;/source&gt;


The following timed entry call might be considered an unacceptable implementation if lost communications with the reactor for over 25 milliseconds results in a critical situation: 

&lt;source lang=ada&gt;
task body Monitor_Reactor is
   ...
begin
   ...
   loop
  
      select
         Reactor.Status(OK);
  
      or
         delay 0.025;
         -- lost communication for more that 25 milliseconds
         Emergency_Shutdown;
      end select;
  
      -- process reactor status
      ...
   end loop;
   ...
end Monitor_Reactor;
&lt;/source&gt;


In the following &quot;selective accept with delay&quot; example, the accuracy of the coordinate calculation function is bounded by time. For example, the required accuracy cannot be obtained unless Period is within + or - 0.005 seconds. This period cannot be guaranteed because of the inaccuracy of the delay statement: 

&lt;source lang=ada&gt;
task body Current_Position is
begin
   ...
   loop
  
      select
         accept Request_New_Coordinates (X :    out Integer;
                                         Y :    out Integer) do
            -- copy coordinates to parameters
            ...
         end Request_New_Coordinates;
  
      or
         delay until Time_To_Execute;
      end select;
  
      Time_To_Execute := Time_To_Execute + Period;
      -- Read Sensors
      -- execute coordinate transformations
   end loop;
   ...
end Current_Position;
&lt;/source&gt;

==== rationale ====

Use of these constructs always poses a risk of race conditions. Using them in loops, particularly with poorly chosen task priorities , can have the effect of busy waiting. 

These constructs are very much implementation dependent. For conditional entry calls and selective accepts with else parts, the Ada Reference Manual (1995, §9.7) does not define &quot;immediately.&quot; For timed entry calls and selective accepts with delay alternatives, implementors might have ideas of time that differ from each other and from your own. Like the delay statement, the delay alternative on the select construct might wait longer than the time required (see Guideline 6.1.7). 

Protected objects offer an efficient means for providing data-oriented synchronization. Operations on protected objects incur less execution overhead than tasks and are more efficient for data synchronization and communication than the rendezvous. See Guideline 6.1.1 for an example of this use of protected objects. 

=== Communication Complexity ===

==== guideline ====

* Minimize the number of accept and select statements per task .
* Minimize the number of accept statements per entry. 

==== example ====
Use: 

&lt;source lang=ada&gt;
accept A;
if Mode_1 then
   -- do one thing
else  -- Mode_2
   -- do something different
end if;
&lt;/source&gt;

rather than: 

&lt;source lang=ada&gt;
if Mode_1 then
   accept A;
   -- do one thing
else  -- Mode_2
   accept A;
   -- do something different
end if;
&lt;/source&gt;

==== rationale ====

This guideline reduces conceptual complexity. Only entries necessary to understand externally observable task behavior should be introduced. If there are several different accept and select statements that do not modify task behavior in a way important to the user of the task, there is unnecessary complexity introduced by the proliferation of select/accept statements. Externally observable behavior important to the task user includes task timing behavior, task rendezvous initiated by the entry calls, prioritization of entries, or data updates (where data is shared between tasks). 

==== notes ====

Sanden (1994) argues that you need to trade off the complexity of the guards associated with the accept statements against the number of select/accept statements. Sanden (1994) shows an example of a queue controller for bank tellers where there are two modes, open and closed. You can implement this scenario with one loop and two select statements, one for the open mode and the other for the closed mode. Although you are using more select/accept statements, Sanden (1994) argues that the resulting program is easier to understand and verify. 

== Termination ==

The ability of tasks to interact with each other using Ada's intertask communication features makes it especially important to manage planned or unplanned (e.g., in response to a catastrophic exception condition) termination in a disciplined way. To do otherwise can lead to a proliferation of undesired and unpredictable side effects as a result of the termination of a single task. 
The guidelines on termination focus on the termination of tasks. Wherever possible, you should use protected objects (see Guideline 6.1.1), thus avoiding the termination problems associated with tasks. 

=== Avoiding Undesired Termination ===

==== guideline ====

* Consider using an exception handler for a rendezvous within the main loop inside each task. 

==== example ====
In the following example, an exception raised using the primary sensor is used to change Mode to Degraded still allowing execution of the system: 

&lt;source lang=ada&gt;
...
loop

   Recognize_Degraded_Mode:
      begin

         case Mode is
            when Primary =&gt;
               select
                  Current_Position_Primary.Request_New_Coordinates (X, Y);
               or
                  delay 0.25;
                  -- Decide whether to switch modes;
               end select;

            when Degraded =&gt;

               Current_Position_Backup.Request_New_Coordinates (X, Y);

         end case;

         ...
      exception
         when Tasking_Error | Program_Error =&gt;
            Mode := Degraded;
      end Recognize_Degraded_Mode;

end loop;
...
&lt;/source&gt;

==== rationale ====

Allowing a task to terminate might not support the requirements of the system. Without an exception handler for the rendezvous within the main task loop, the functions of the task might not be performed. 

==== notes ====

The use of an exception handler is the only way to guarantee recovery from an entry call to an abnormal task. Use of the 'Terminated attribute to test a task's availability before making the entry call can introduce a race condition where the tested task fails after the test but before the entry call (see Guideline 6.2.3). 

=== Normal Termination ===

==== guideline ====

* Do not create nonterminating tasks unintentionally. 
* Explicitly shut down tasks that depend on library packages.
* Confirm that a task is terminated before freeing it with Ada.Unchecked_Deallocation.
* Consider using a select statement with a terminate alternative rather than an accept statement alone.
* Consider providing a terminate alternative for every selective accept that does not require an else part or a delay .
* Do not declare or create a task within a user-defined Finalize procedure after the environment task has finished waiting for other tasks. 

==== example ====
This task will never terminate: 

&lt;source lang=ada&gt;
---------------------------------------------------------------------
task body Message_Buffer is
   ...
begin  -- Message_Buffer
   loop
      select
         when Head /= Tail =&gt; -- Circular buffer not empty
            accept Retrieve (Value :    out Element) do
               ...
            end Retrieve;
              
      or
         when not ((Head  = Index'First and then
                    Tail  = Index'Last) or else
                   (Head /= Index'First and then
                    Tail  = Index'Pred(Head))    )
                 =&gt; -- Circular buffer not full
            accept Store (Value : in     Element);
      end select;
   end loop;
...
end Message_Buffer;
---------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

The implicit environment task does not terminate until all other tasks have terminated. The environment task serves as a master for all other tasks created as part of the execution of the partition; it awaits termination of all such tasks in order to perform finalization of any remaining objects of the partition. Thus, a partition will exist until all library tasks are terminated. 

A nonterminating task is a task whose body consists of a nonterminating loop with no selective accept with terminate or a task that depends on a library package. Execution of a subprogram or block containing a task cannot complete until the task terminates. Any task that calls a subprogram containing a nonterminating task will be delayed indefinitely. 

A task that depends on a library package cannot be forced to terminate using a selective accept construct with alternative and should be terminated explicitly during program shutdown. One way to explicitly shut down tasks that depend on library packages is to provide them with exit entries and have the main subprogram call the exit entry just before it terminates. 

The Ada Reference Manual (1995, §13.11.2) states that a bounded error results from freeing a discriminated, unterminated task object. The danger lies in deallocating the discriminants as a result of freeing the task object. The effect of unterminated tasks containing bounded errors at the end of program execution is undefined. 

Execution of an accept statement or of a selective accept statement without an else part, a delay, or a terminate alternative cannot proceed if no task ever calls the entry(s) associated with that statement. This could result in deadlock. Following the guideline to provide a terminate alternative for every selective accept without an else or a delay entails programming multiple termination points in the task body. A reader can easily &quot;know where to look&quot; for the normal termination points in a task body. The termination points are the end of the body's sequence of statements and alternatives to select statements. 

When the environment task has been terminated, either normally or abnormally, the language does not specify whether to await a task activated during finalization of the controlled objects in a partition. While the environment task is waiting for all other tasks in the partition to complete, starting up a new task during finalization results in a bounded error (Ada Reference Manual 1995, §10.2). The exception Program_Error can be raised during creation or activation of such a task. 

==== exceptions ====

If you are implementing a cyclic executive, you might need a scheduling task that does not terminate. It has been said that no real-time system should be programmed to terminate. This is extreme. Systematic shutdown of many real-time systems is a desirable safety feature. 

If you are considering programming a task not to terminate, be certain that it is not a dependent of a block or subprogram from which the task's caller(s) will ever expect to return. Because entire programs can be candidates for reuse (see Chapter 8), note that the task (and whatever it depends upon) will not terminate. Also be certain that for any other task that you do wish to terminate, its termination does not await this task's termination. Reread and fully understand the Ada Reference Manual (1995, §9.3) on &quot;Task Dependence-Termination of Tasks.&quot; 

=== The Abort Statement ===

==== guideline ====

* Avoid using the abort statement.
* Consider using the asynchronous select statement rather than the abort statement.
* Minimize uses of the asynchronous select statement. 
* Avoid assigning nonatomic global objects from a task or from the abortable part of an asynchronous select statement. 

==== example ====
If required in the application, provide a task entry for orderly shutdown. 

The following example of asynchronous transfer of control shows a database transaction. The database operation may be cancelled (through a special input key) unless the commit transaction has begun. The code is extracted from the Rationale (1995, §9.4): 

&lt;source lang=ada&gt;
with Ada.Finalization;
package Txn_Pkg is
   type Txn_Status is (Incomplete, Failed, Succeeded);
   type Transaction is new Ada.Finalization.Limited_Controlled with private;
   procedure Finalize (Txn : in out transaction);
   procedure Set_Status (Txn    : in out Transaction;
                         Status : in     Txn_Status);
private
   type Transaction is new Ada.Finalization.Limited_Controlled with
      record
         Status : Txn_Status := Incomplete;
         pragma Atomic (Status);
         . . . -- More components
      end record;
end Txn_Pkg;
-----------------------------------------------------------------------------
package body Txn_Pkg is
   procedure Finalize (Txn : in out Transaction) is
   begin
      -- Finalization runs with abort and ATC deferred
      if Txn.Status = Succeeded then
         Commit (Txn);
      else
         Rollback (Txn);
      end if;
   end Finalize;
   . . . -- body of procedure Set_Status
end Txn_Pkg;
----------------------------------------------------------------------------
-- sample code block showing how Txn_Pkg could be used:
declare
   Database_Txn : Transaction;
   -- declare a transaction, will commit or abort during finalization
begin
   select  -- wait for a cancel key from the input device
      Input_Device.Wait_For_Cancel;
      -- the Status remains Incomplete, so that the transaction will not commit
   then abort  -- do the transaction
      begin
         Read (Database_Txn, . . .);
         Write (Database_Txn, . . .);
         . . .
         Set_Status (Database_Txn, Succeeded);
         -- set status to ensure the transaction is committed
      exception
         when others =&gt;
            Ada.Text_IO.Put_Line (&quot;Operation failed with unhandled exception:&quot;);
            Set_Status (Database_Txn, Failed);
      end;
   end select;
   -- Finalize on Database_Txn will be called here and, based on the recorded
   -- status, will either commit or abort the transaction.
end;
&lt;/source&gt;

==== rationale ====

When an abort statement is executed, there is no way to know what the targeted task was doing beforehand. Data for which the target task is responsible might be left in an inconsistent state. The overall effect on the system of aborting a task in such an uncontrolled way requires careful analysis. The system design must ensure that all tasks depending on the aborted task can detect the termination and respond appropriately. 

Tasks are not aborted until they reach an abort completion point such as beginning or end of elaboration, a delay statement, an accept statement, an entry call, a select statement, task allocation, or the execution of an exception handler. Consequently, the abort statement might not release processor resources as soon as you might expect. It also might not stop a runaway task because the task might be executing an infinite loop containing no abort completion points. There is no guarantee that a task will not abort until an abort completion point in multiprocessor systems, but the task will almost always stop running right away. 

An asynchronous select statement allows an external event to cause a task to begin execution at a new point, without having to abort and restart the task (Rationale 1995, §9.3). Because the triggering statement and the abortable statement execute in parallel until one of them completes and forces the other to be abandoned, you need only one thread of control. The asynchronous select statement improves maintainability because the abortable statements are clearly delimited and the transfer cannot be mistakenly redirected. 

In task bodies and in the abortable part of an asynchronous select, you should avoid assigning to nonatomic global objects, primarily because of the risk of an abort occurring before the nonatomic assignment completes. If you have one or more abort statements in your application and the assignment is disrupted, the target object can become abnormal, and subsequent uses of the object lead to erroneous execution (Ada Reference Manual 1995, §9.8). In the case of scalar objects, you can use the attribute 'Valid, but there is no equivalent attribute for nonscalar objects. (See Guideline 5.9.1 for a discussion of the 'Valid attribute.) You also can still safely assign to local objects and call operations of global protected objects. 

=== Abnormal Termination ===

==== guideline ====

* Place an exception handler for others at the end of a task body. 
* Consider having each exception handler at the end of a task body report the task's demise.
* Do not rely on the task status to determine whether a rendezvous can be made with the task. 

==== example ====
This is one of many tasks updating the positions of blips on a radar screen. When started, it is given part of the name by which its parent knows it. Should it terminate due to an exception, it signals the fact in one of its parent's data structures: 

&lt;source lang=ada&gt;
task type Track (My_Index : Track_Index) is
   ...
end Track;
---------------------------------------------------------------------
task body Track is
     Neutral : Boolean := True;
begin  -- Track
   select
      accept ...
      ...
   or
      terminate;
   end select;
   ...
exception
   when others =&gt;
      if not Neutral then
         Station(My_Index).Status := Dead;
      end if;
end Track;
---------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

A task will terminate if an exception is raised within it for which it has no handler. In such a case, the exception is not propagated outside of the task (unless it occurs during a rendezvous). The task simply dies with no notification to other tasks in the program. Therefore, providing exception handlers within the task, and especially a handler for others, ensures that a task can regain control after an exception occurs. If the task cannot proceed normally after handling an exception, this affords it the opportunity to shut itself down cleanly and to notify tasks responsible for error recovery necessitated by the abnormal termination of the task. 

You should not use the task status to determine whether a rendezvous can be made with the task. If Task A depends on Task B and Task A checks the status flag before it rendezvouses with Task B, there is a potential that Task B fails between the status test and the rendezvous. In this case, Task A must provide an exception handler to handle the Tasking_Error exception raised by the call to an entry of an abnormal task (see Guideline 6.3.1). 

=== Circular Task Calls ===

==== guideline ====

* Do not call a task entry that directly or indirectly results in a call to an entry of the original calling task. 

==== rationale ====
A software failure known as task deadlock will occur if a task calls one of its own entries directly or indirectly via a circular chain of calls. 

=== Setting Exit Status ===

==== guideline ====

* Avoid race conditions in setting an exit status code from the main program when using the procedure Ada.Command_Line.Set_Exit_Status. 
* In a program with multiple tasks, encapsulate, serialize, and check calls to the procedure Ada.Command_Line.Set_Exit_Status. 

==== rationale ====

In accordance with the rules of Ada, tasks in library-level packages may terminate after the main program task. If the program permits multiple tasks to use Set_Exit_Status, then there can be no guarantee that any particular status value is the one actually returned. 

== Summary ==

=== concurrency options ===

* Consider using protected objects to provide mutually exclusive access to data. 
* Consider using protected objects to control or synchronize access to data shared by multiple tasks .
* Consider using protected objects to implement synchronization, such as a passive resource monitor. 
* Consider encapsulating protected objects in the private part or body of a package.
* Consider using a protected procedure to implement an interrupt handler. 
* Do not attach a protected procedure handler to a hardware interrupt if that interrupt has a maximum priority greater than the ceiling priority assigned to the handler.
* Avoid the use of global variables in entry barriers.
* Avoid the use of barrier expressions with side effects.
* Use tasks to model selected asynchronous threads of control within the problem domain. 
* Consider using tasks to define concurrent algorithms.
* Consider using rendezvous when your application requires synchronous unbuffered communication.
* Consider using discriminants to minimize the need for an explicit initialization operation (Rationale 1995, §9.1).
* Consider using discriminants to control composite components of the protected objects, including setting the size of an entry family (Rationale 1995, §9.1).
* Consider using a discriminant to set the priority of a protected object (Rationale 1995, §9.1).
* Consider using a discriminant to identify an interrupt to a protected object (Rationale 1995, §9.1).
* Consider declaring a task type with a discriminant to indicate (Rationale 1995, §9.6): 
** Priority, storage size, and size of entry families of individual tasks of a type 
** Data associated with a task (through an access discriminant)
* Consider using single task declarations to declare unique instances of concurrent tasks. 
* Consider using single protected declarations to declare unique instances of protected objects.
* Minimize dynamic creation of tasks because of the potentially high startup overhead; reuse tasks by having them wait for new work on some appropriate entry queue. 
* Do not rely on pragma Priority unless your compiler supports the Real-Time Annex (Ada Reference Manual 1995, Annex D) and priority scheduling.
* Minimize risk of priority inversion by use of protected objects and ceiling priority. 
* Do not rely upon task priorities to achieve a particular sequence of task execution. 
* Do not depend on a particular delay being achievable (Nissen and Wallis 1984). 
* Use a delay until not a delay statement to delay until a specific time has been reached.
* Avoid using a busy waiting loop instead of a delay.
* Carefully consider the placement of components of protected types within a tagged type inheritance hierarchy. 
* Consider using generics to provide extensibility of data types requiring the restrictions provided by protected objects. 

=== communication ===

* Minimize the work performed during a rendezvous .
* Minimize the work performed in the selective accept loop of a task. 
* Consider using protected objects for data synchronization and communication. 
* Provide a handler for exception Program_Error whenever you cannot avoid a selectiveaccept statement whose alternatives can all be closed (Honeywell 1986). 
* Make systematic use of handlers for Tasking_Error. 
* Be prepared to handle exceptions during a rendezvous .
* Consider using a when others exception handler. 
* Do not depend on the values of the task attributes 'Callable or 'Terminated (Nissen and Wallis 1984).
* Do not depend on attributes to avoid Tasking_Error on an entry call. 
* For tasks, do not depend on the value of the entry attribute 'Count.
* Using the 'Count attribute with protected entries is more reliable than using the 'Count attribute with task entries. 
* Use calls on protected subprograms or entries to pass data between tasks rather than unprotected shared variables. 
* Do not use unprotected shared variables as a task synchronization device.
* Do not reference nonlocal variables in a guard .
* If an unprotected shared variable is necessary, use the pragma Volatile or Atomic. 
* Use caution with conditional entry calls to task entries. 
* Use caution with selective accepts with else parts.
* Do not depend upon a particular delay in timed entry calls to task entries.
* Do not depend upon a particular delay in selective accepts with delay alternatives. 
* Consider using protected objects instead of the rendezvous for data-oriented synchronization. 
* Minimize the number of accept and select statements per task .
* Minimize the number of accept statements per entry.

=== termination ===

* Consider using an exception handler for a rendezvous within the main loop inside each task. 
* Do not create nonterminating tasks unintentionally. 
* Explicitly shut down tasks that depend on library packages.
* Confirm that a task is terminated before freeing it with Ada.Unchecked_Deallocation.
* Consider using a select statement with a terminate alternative rather than an accept statement alone. 
* Consider providing a terminate alternative for every selective accept that does not require an else part or a delay.
* Do not declare or create a task within a user-defined Finalize procedure after the environment task has finished waiting for other tasks.
* Avoid using the abort statement.
* Consider using the asynchronous select statement rather than the abort statement.
* Minimize uses of the asynchronous select statement. 
* Avoid assigning nonatomic global objects from a task or from the abortable part of an asynchronous select statement.
* Place an exception handler for others at the end of a task body.
* Consider having each exception handler at the end of a task body report the task's demise.
* Do not rely on the task status to determine whether a rendezvous can be made with the task. 
* Do not call a task entry that directly or indirectly results in a call to an entry of the original calling task.
* Avoid race conditions in setting an exit status code from the main program when using the procedure Ada.Command_Line.Set_Exit_Status. 
* In a program with multiple tasks, encapsulate, serialize, and check calls to the procedure Ada.Command_Line.Set_Exit_Status.


{{Chapter navigation||Portability}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>oi2odp8fegkn88aawqrtqt3vdp3ll7g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Portability</title>
    <ns>0</ns>
    <id>200802</id>
    <revision>
      <id>2053135</id>
      <parentid>1550579</parentid>
      <timestamp>2011-02-22T02:44:33Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>clean up, typos fixed: diferences → differences, the the → the using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">{{Chapter navigation|Concurrency|Reusability}}

{{TOC|limit=3|float=none}}

== Introduction ==

Discussions concerning portability usually concentrate on the differences in computer systems, but the development and run-time environment may also change: 

; portability (software) : The ease with which software can be transferred from one computer system or environment to another (IEEE Dictionary 1984). 

Most portability problems are not pure language issues. Portability involves hardware (byte order, device I/O) and software (utility libraries, operating systems, run-time libraries). This chapter will not address these challenging design issues. 

This chapter does identify the more common portability problems that are specific to Ada when moving from one platform or compiler to another. It also suggests ways that nonportable code can be isolated. By using the implementation hiding features of Ada, the cost of porting can be significantly reduced. 

In fact, many language portability issues are solved by the strict definition of the Ada language itself. In most programming languages, different dialects are prevalent as vendors extend or dilute a language for various reasons: conformance to a programming environment or features for a particular application domain. The Ada Compiler Validation Capability (ACVC) was developed by the U.S. Department of Defense at the Ada Validation Facility, ASD/SIDL, Wright-Patterson Air Force Base, to ensure that implementors strictly adhered to the Ada standard. 

As part of the strict definition of Ada, certain constructs are defined to be erroneous, and the effect of executing an erroneous construct is unpredictable. Therefore, erroneous constructs are obviously not portable. Erroneous constructs and bounded errors are discussed in Guideline 5.9.10 and are not repeated in this chapter. 

Most programmers new to the language expect Ada to eliminate all portability problems; it definitely does not. Certain areas of Ada are not yet covered by validation. The definition of Ada leaves certain details to the implementor. The compiler implementor's choices, with respect to these details, affect portability. 

The revisions to the Ada language approved in the 1995 standard generate a new area of portability concerns. Some programs are intended to have a long life and may start in Ada 83 (Ada Reference Manual 1983) but transition to Ada 95 (Ada Reference Manual 1995). Although this style guide focuses on the current Ada standard and does not address transition issues, there are portability issues relating to using certain features of the language. These issues revolve around the language features designated as obsolescent in Annex J of the Ada Reference Manual (1995). 

The constructs of the language have been developed to satisfy a series of needs. These constructs can legitimately be used even though they may impact portability. There are some general principles to enhancing portability that are exemplified by many of the guidelines in this chapter. They are: 
* Recognize those Ada constructs that may adversely affect portability on the relevant implementations or platforms.
* Rely on those Ada constructs that depend on characteristics shared by all relevant implementations. Avoid the use of those constructs whose implementation characteristics vary on the relevant platforms.
* Localize and encapsulate nonportable features of a program if their use is essential.
* Highlight the use of constructs that may cause portability problems. 

These guidelines cannot be applied thoughtlessly. Many of them involve a detailed understanding of the Ada model and its implementation. In many cases, you will have to make carefully considered tradeoffs between efficiency and portability. Reading this chapter should improve your insight into the tradeoffs involved. 
The material in this chapter was largely acquired from three sources: the Ada Run-Time Environments Working Group (ARTEWG) Catalogue of Ada Runtime Implementation Dependencies (ARTEWG 1986); the Nissen and Wallis book on Portability and Style in Ada (Nissen and Wallis 1984); and a paper written for the U.S. Air Force by SofTech on Ada Portability Guidelines (Pappas 1985). The last of these sources (Pappas 1985) encompasses the other two and provides an in-depth explanation of the issues, numerous examples, and techniques for minimizing portability problems. Conti (1987) is a valuable reference for understanding the latitude allowed for implementors of Ada and the criteria often used to make decisions. 

This chapter's purpose is to provide a summary of portability issues in the guideline format of this book. The chapter does not include all issues identified in the references but only the most significant. For an in-depth presentation, see Pappas (1985). A few additional guidelines are presented here and others are elaborated upon where applicable. For further reading on Ada I/O portability issues, see Matthews (1987), Griest (1989), and CECOM (1989). 

Some of the guidelines in this chapter cross reference and place stricter constraints on other guidelines in this book. These constraints apply when portability is being emphasized. 

Guidelines in this chapter are frequently worded &quot;consider . . .&quot; because hard and fast rules cannot apply in all situations. The specific choice you make in a given situation involves design tradeoffs. The rationale for these guidelines is intended to give you insight into some of these tradeoffs. 

== Fundamentals ==

This section introduces some generally applicable principles of writing portable Ada programs. It includes guidelines about the assumptions you should make with respect to a number of Ada features and their implementations and guidelines about the use of other Ada features to ensure maximum portability. 

=== Obsolescent Features ===

==== guideline ====

* In programs or components intended to have a long life, avoid using the features of Ada declared as &quot;obsolescent&quot; by Annex J of the Ada Reference Manual (1995), unless the use of the feature is needed for backward compatibility with Ada 83 (Ada Reference Manual 1983).
* Document the use of any obsolescent features.
* Avoid using the following features:
** The short renamings of the packages in the predefined environment (e.g., Text_IO as opposed to Ada.Text_IO)
** The character replacements of ! for |, : for #, and % for quotation marks
** Reduced accuracy subtypes of floating-point types
** The 'Constrained attribute as applied to private types
** The predefined package ASCII
** The exception Numeric_Error
** Various representation specifications, including at clauses, mod clauses, interrupt entries, and the Storage_Size attribute 

==== rationale ====
Ten years of reflection on the use of Ada 83 led to the conclusion that some features of the original language are not as useful as originally intended. These features have been replaced with others in the Ada 95 revision. It would have been desirable to remove the obsolescent features completely, but that would have prevented the upward compatible transition of programs from Ada 83 to Ada 95. Thus, the obsolescent features remain in the language and are explicitly labeled as such in Annex J of the Ada Reference Manual (1995). The features listed in Annex J are candidates for removal from the language during its next revision. If a program's lifetime may extend beyond the next language revision, it should avoid the obsolescent language features unless backward compatibility with Ada 83 forces their use. 

==== exceptions ====

When you instantiate Ada.Text_IO.Float_IO, the values of the Default_Fore and Default_Aft fields are set from the values of the 'Fore and 'Aft attributes of the actual floating-point type used in the instantiation. If you declare a reduced accuracy floating-point type that you then use to instantiate Ada.Text_IO.Float_IO, the output field widths are determined from the reduced accuracy type, although the implementation accuracy is unchanged (Rationale 1995, §3.3). 

=== Global Assumptions ===

==== guideline ====

* Make informed assumptions about the support provided for the following on potential target platforms: 
** Number of bits available for type Integer (range constraints) 
** Number of decimal digits of precision available for floating-point types 
** Number of bits available for fixed-point types (delta and range constraints) 
** Number of characters per line of source text 
** Number of bits for Root_Integer expressions 
** Number of seconds for the range of Duration 
** Number of milliseconds for Duration'Small 
** Minimum and maximum scale for decimal types 
* Avoid assumptions about the values and the number of values included in the type Character. 

==== instantiation ====

* These are minimum values (or minimum precision in the case of Duration'Small) that a project or application might assume that an implementation provides. There is no guarantee that a given implementation provides more than the minimum, so these would be treated by the project or application as maximum values also. 
** 16 bits available for type Integer (-2**15 .. 2**15 - 1) 
** 6 decimal digits of precision available for floating-point types 
** 24 bits available for fixed-point types 
** 200 characters per line of source text 
** 16 bits for expressions 
** -86_400 .. 86_400 seconds (1 day) for the range of Duration (as specified in Ada Reference Manual [1995, §9.6]) 
** 20 milliseconds for Duration'Small (as specified in Ada Reference Manual [1995, §9.6]) 

==== rationale ====
Some assumptions must be made with respect to certain implementation-specific values. The exact values assumed should cover the majority of the target equipment of interest. Choosing the lowest common denominator for values improves portability. Implementations may supply an alternate character set specific to a locale or environment. For instance, the implementation on an IBM-compatible PC may support that machine's native character set rather than Latin 1. As a result, some character values may or may not be supported, for example, the smiley face. 

==== notes ====

Of the microcomputers currently available for incorporation within embedded systems, 16-bit and 32-bit processors are prevalent. Using current representation schemes, 6 decimal digits of floating point accuracy imply a representation mantissa at least 21 bits wide, leaving 11 bits for exponent and sign within a 32-bit representation. This correlates with the data widths of floating point hardware currently available for the embedded systems market. A 32-bit minimum on fixed-point numbers correlates with the accuracy and storage requirements of floating point numbers. The 16-bit example for Root_Integer expressions matches that for Integer storage. (The 32-bit integers can be assumed if the application will only be considered for 32-bit processors with a corresponding 32-bit operating system and supporting compiler.) 

The values for the range and accuracy of values of the predefined type Duration are the limits expressed in the Ada Reference Manual (1995, §9.6). You should not expect an implementation to provide a wider range or a finer granularity. 

A standard-mode Ada character set of Latin 1 can be assumed in most cases for the contents and internal behavior of type Character and packages Character.Latin_1, Character.Handling, and Strings.Maps. However, this does not mean that the target hardware platform is capable of displaying the entire character set. You should not use a nonstandard Ada character set unless intentionally producing a nonportable user interface with a specific purpose. 

=== Comments ===

==== guideline ====

* Use highlighting comments for each package, subprogram, and task where any nonportable features are present. 
* For each nonportable feature employed, describe the expectations for that feature. 

==== example ====

&lt;source lang=ada&gt;
------------------------------------------------------------------------
package Memory_Mapped_IO is
   -- WARNING - This package is implementation specific.
   -- It uses absolute memory addresses to interface with the I/O
   -- system. It assumes a particular printer's line length.
   -- Change memory mapping and printer details when porting.
   Printer_Line_Length : constant := 132;
   type Data is array (1 .. Printer_Line_Length) of Character;
   procedure Write_Line (Line : in     Data);
end Memory_Mapped_IO;
------------------------------------------------------------------------
with System;
with System.Storage_Elements;
package body Memory_Mapped_IO is
   -- WARNING: Implementation specific memory address

   Buffer_Address : constant System.Address
      := System.Storage_Elements.To_Address(16#200#);


   ---------------------------------------------------------------------
   procedure Write_Line (Line : in     Data) is
      Buffer : Data;
      for Buffer'Address use Buffer_Address;

   begin  -- Write_Line
       -- perform output operation through specific memory locations.
       ...
   end Write_Line;
   ---------------------------------------------------------------------
end Memory_Mapped_IO;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Explicitly commenting each breach of portability will raise its visibility and aid in the porting process. A description of the nonportable feature's expectations covers the common case where vendor documentation of the original implementation is not available to the person performing the porting process. 

=== Main Subprogram ===

==== guideline ====

* Consider using only a parameterless procedure as the main subprogram.
* Consider using Ada.Command_Line for accessing values from the environment, but recognize that this package's behavior and even its specification are nonportable (see Guideline 7.1.6).
* Encapsulate and document all uses of package Ada.Command_Line. 
==== example ====

The following example encapsulates the arguments for a hypothetical &quot;execution mode&quot; argument passed from the environment. It encapsulates both the expected position and the expected values of the argument, as well as provides a default in cases where the environment was unable to provide the information: 

&lt;source lang=ada&gt;
package Environment is

   type Execution_Mode is (Unspecified, Interactive, Batch);

   function Execution_Argument return Execution_Mode;

   ...

end Environment;

----------------------------------------------------------------------

with Ada.Command_Line;       use Ada.Command_Line;
with Ada.Strings.Unbounded;  use Ada.Strings.Unbounded;

package body Environment is

   function Execution_Argument return Execution_Mode is

      Execution_Argument_Number : constant := 1;

      Interactive_Mode_String : constant String := &quot;-i&quot;;
      Batch_Mode_String       : constant String := &quot;-b&quot;;

   begin
      if Argument_Count &lt; Execution_Argument_Number then
         return Unspecified;
      elsif To_Unbounded_String (Argument (Execution_Argument_Number)) =
               Interactive_Mode_String then
         return Interactive;
      elsif To_Unbounded_String (Argument (Execution_Argument_Number)) =
               Batch_Mode_String then
         return Batch;
      else
         return Unspecified;
      end if;
   end Execution_Argument;

end Environment;
&lt;/source&gt;

==== rationale ====

The predefined language environment declares the package Ada.Command_Line, providing a standardized way for a program to obtain the values of a command line. Because all Ada compilers must implement the packages in the predefined language environment, you can create a program that is more portable, maintainable, and readable by using this package. You should, however, be aware that even though the language defines the objects and type profiles of this package, it does not force a relationship between the function results and any other entity or operation, and thus, allows the possibility of a nonportable behavior and specification. 

The value returned by the function Ada.Command_Line.Argument_Count is implementation-dependent. Different operating systems follow different conventions regarding the parsing and meaning of command line parameters. To enhance your program's portability, assume the simplest case: that the external execution environment does not support passing arguments to a program. 

Some operating systems are capable of acquiring and interpreting returned integer values near 0 from a function, but many others cannot. Further, many real-time, embedded systems will not be designed to terminate, so a function or a procedure having parameters with modes out or in out will be inappropriate to such applications. 

This leaves procedures with in parameters. Although some operating systems can pass parameters into a program as it starts, others are not. Also, an implementation may not be able to perform type checking on such parameters even if the surrounding environment is capable of providing them. 

==== notes ====

Real-time, embedded applications may not have an &quot;operator&quot; initiating the program to supply the parameters, in which case it would be more appropriate for the program to have been compiled with a package containing the appropriate constant values or for the program to read the necessary values from switch settings or a downloaded auxiliary file. In any case, the variation in surrounding initiating environments is far too great to depend upon the kind of last-minute (program) parameterization implied by (subprogram) parameters to the main subprogram. POSIX 5 provides a standard operating system command line interface that might be a more appropriate alternative to the Ada command line facility depending on the implementation family of an application. 

=== Encapsulating Implementation Dependencies ===

==== guideline ====

* Create packages specifically designed to isolate hardware and implementation dependencies and designed so that their specification will not change when porting.
* Clearly indicate the objectives if machine or solution efficiency is the reason for hardware or implementation-dependent code.
* For the packages that hide implementation dependencies, maintain different package bodies for different target environments.
* Isolate interrupt receiving tasks into implementation-dependent packages.
* Refer to Annex M of the Ada Reference Manual (1995) for a list of implementation-dependent features. 

==== example ====
See Guideline 7.1.3. 

==== rationale ====

Encapsulating hardware and implementation dependencies in a package allows the remainder of the code to ignore them and, thus, to be fully portable. It also localizes the dependencies, making it clear exactly which parts of the code may need to change when porting the program. 

Some implementation-dependent features may be used to achieve particular performance or efficiency objectives. Commenting these objectives ensures that the programmer can find an appropriate way to achieve them when porting to a different implementation or explicitly recognize that they cannot be achieved. 

Interrupt entries are implementation-dependent features that may not be supported (e.g., VAX Ada uses pragmas to assign system traps to &quot;normal&quot; rendezvous). However, interrupt entries cannot be avoided in most embedded, real-time systems, and it is reasonable to assume that they are supported by an Ada implementation. The value for an interrupt is implementation-defined. Isolate it. 

==== notes ====

You can use Ada to write machine-dependent programs that take advantage of an implementation in a manner consistent with the Ada model but that make particular choices where Ada allows implementation freedom. These machine dependencies should be treated in the same way as any other implementation-dependent features of the code. 

=== Implementation-Added Features ===

==== guideline ====

* Avoid the use of vendor-supplied packages.
* Avoid the use of features added to the predefined packages that are not specified in the Ada language definition or Specialized Needs Annexes. 

==== rationale ====

Vendor-added features are not likely to be provided by other implementations. Even if a majority of vendors eventually provide similar additional features, they are unlikely to have identical formulations. Indeed, different vendors may use the same formulation for (semantically) entirely different features. See Guideline 7.5.2 for further information on vendor-supplied exceptions. 

Ada has introduced a number of new pragmas and attributes that were not present in Ada 83 (Ada Reference Manual 1983). These new pragmas and attributes may clash with implementation-defined pragmas and attributes. 

==== exceptions ====

There are many kinds of applications that require the use of these features. Examples include multilingual systems that standardize on a vendor's file system, applications that are closely integrated with vendor products (i.e., user interfaces), and embedded systems for performance reasons. Isolate the use of these features into packages. 

If a vendor-supplied package is provided in compilable source code form, use of the package does not make a program nonportable provided that the package does not contain any nonportable code and can be lawfully included in your program. 

=== Specialized Needs Annexes ===

==== guideline ====

* Use features defined in the Specialized Needs Annexes rather than vendor-defined features.
* Document clearly the use of any features from the Specialized Needs Annexes (systems programming, real-time systems, distributed systems, information systems, numerics, and safety and security). 

==== rationale ====
The Specialized Needs Annexes define standards for specific application areas without extending the syntax of the language. You can port a program with specific domain needs (e.g., distributed systems, information systems) across vendor implementations more easily if they support the features standardized in an annex rather than rely on specific vendor extensions. The purpose of the annexes is to provide a consistent and uniform way to address issues faced in several application areas where Ada is expected to be used. Because different compilers will support different sets of annexes if any, you may have portability problems if you rely on the features defined in any given annex. 

The Specialized Needs Annexes provide special capabilities that go beyond the core language definition. Because compilers are not required to support the special-purpose annexes, you should localize your use of these features where possible. By documenting their usage, you are leaving a record of potential porting difficulties for future programmers. 

=== Dependence on Parameter Passing Mechanism ===

==== guideline ====

* Do not write code whose correct execution depends on the particular parameter passing mechanism used by an implementation (Ada Reference Manual 1995, §6.2; Cohen 1986).
* If a subprogram has more than one formal parameter of a given subtype, at least one of which is [in] out, make sure that the subprogram can properly handle the case when both formal parameters denote the same actual object. 

==== example ====

The output of this program depends on the particular parameter passing mechanism that was used: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
with Ada.Integer_Text_IO;
procedure Outer is
   type Coordinates is
      record
         X : Integer := 0;
         Y : Integer := 0;
      end record;
   Outer_Point : Coordinates;
   ---------------------------------------------------------------------
   procedure Inner (Inner_Point : in out Coordinates) is
   begin
      Inner_Point.X := 5;
      -- The following line causes the output of the program to
      -- depend on the parameter passing mechanism.
      Ada.Integer_Text_IO.Put(Outer_Point.X);
   end Inner;
   ---------------------------------------------------------------------
begin  -- Outer
   Ada.Integer_Text_IO.Put(Outer_Point.X);
   Inner(Outer_Point);
   Ada.Integer_Text_IO.Put(Outer_Point.X);
end Outer;
------------------------------------------------------------------------
&lt;/source&gt;

If the parameter passing mechanism is by copy, the results on the standard output file are: 

0 0 5 

If the parameter passing mechanism is by reference, the results are: 

0 5 5 

The following code fragment shows where there is a potential for bounded error when a procedure is called with actual parameters denoting the same object: 

&lt;source lang=ada&gt;
procedure Test_Bounded_Error (Parm_1 : in out    Integer;
                              Parm_2 : in out Integer) is
   procedure Inner (Parm : in out Integer) is
   begin
      Parm := Parm * 10;
   end Inner;
begin
   Parm_2 := 5;
   Inner (Parm_1);
end Test_Bounded_Error;
&lt;/source&gt;

In executing the procedure Test_Bounded_Error, both Parm_1 and Parm_2 denote the object Actual_Parm. After executing the first statement, the object Actual_Parm has the value 5. When the procedure Inner is called, its formal parameter Parm denotes Actual_Parm. It cannot be determined whether it denotes the old value of Parm_1, in this case 1, or the new value, in this case 5. 

&lt;source lang=ada&gt;
Actual_Parm : Integer := 1;
...
Test_Bounded_Error (Actual_Parm, Actual_Parm);  -- potential bounded error
&lt;/source&gt;

==== rationale ====

Certain composite types (untagged records and arrays) can be passed either by copy or by reference. If there are two or more formal parameters of the same type, one or more of which is writable, then you should document whether you assume that these formal parameters do not denote the same actual object. Similarly, if a subprogram that has a formal parameter of a given subtype also makes an up-level reference to an object of this same type, you should document whether you assume that the formal parameter denotes a different object from the object named in the up-level reference. In these situations where an object can be accessed through distinct formal parameter paths, the exception Program_Error may be raised, the new value may be read, or the old value of the object may be used (Ada Reference Manual 1995, §6.2). 

See also Guideline 8.2.7. 

==== exceptions ====

Frequently, when interfacing Ada to foreign code, dependence on parameter-passing mechanisms used by a particular implementation is unavoidable. In this case, isolate the calls to the foreign code in an interface package that exports operations that do not depend on the parameter-passing mechanism. 

=== Arbitrary Order Dependencies ===

==== guideline ====

* Avoid depending on the order in which certain constructs in Ada are evaluated. 

==== example ====
The output of this program depends upon the order of evaluation of subprogram parameters, but the Ada Reference Manual (1995, §6.4) specifies that these evaluations are done in an arbitrary order: 

&lt;source lang=ada&gt;
package Utilities is
   function Unique_ID return Integer;
end Utilities;

package body Utilities is

   ID : Integer := 0;

   function Unique_ID return Integer is
   begin
      ID := ID + 1;
      return ID;
   end Unique_ID;

end Utilities;

--------------------------------------------------------------------------------
with Ada.Text_IO;
with Utilities; use Utilities;
procedure P is
begin
   Ada.Text_IO.Put_Line (Integer'Image(Unique_ID) &amp; Integer'Image(Unique_ID));
end P;
&lt;/source&gt;

If the parameters to the &quot;&amp;&quot; function are evaluated in textual order, the output is: 

1 2 

If the parameters are evaluated in the reverse order, the output is: 

2 1 

==== rationale ====

The Ada language defines certain evaluations to occur in arbitrary order (e.g., subprogram parameters). While a dependency on the order of evaluation may not adversely affect the program on a certain implementation, the code might not execute correctly when it is ported. For example, if two actual parameters of a subprogram call have side effects, the effect of the program could depend on the order of evaluation (Ada Reference Manual 1995, §1.1.4). Avoid arbitrary order dependencies, but also recognize that even an unintentional error of this kind could prohibit portability. 

== Numeric Types and Expressions ==

A great deal of care was taken with the design of the Ada features related to numeric computations to ensure that the language could be used in embedded systems and mathematical applications where precision was important. As far as possible, these features were made portable. However, there is an inevitable tradeoff between maximally exploiting the available precision of numeric computation on a particular machine and maximizing the portability of Ada numeric constructs. This means that these Ada features, particularly numeric types and expressions, must be used with great care if full portability of the resulting program is to be guaranteed. 

=== Predefined Numeric Types ===

==== guideline ====

* Avoid using the predefined numeric types in package Standard. Use range and digits declarations and let the implementation pick the appropriate representation. 
* For programs that require greater accuracy than that provided by the global assumptions, define a package that declares a private type and operations as needed; see Pappas (1985) for a full explanation and examples.
* Consider using predefined numeric types (Integer, Natural, Positive) for: 
** Indexes into arrays where the index type is not significant, such as type String 
** &quot;Pure&quot; numbers, that is, numbers with no associated physical unit (e.g., exponents) 
** Values whose purpose is to control a repeat or iteration count 

==== example ====
The second and third examples below are not representable as subranges of Integer on a machine with a 16-bit word. The first example below allows a compiler to choose a multiword representation, if necessary. 

Use: 

&lt;source lang=ada&gt;
type    Second_Of_Day is             range 0 .. 86_400;
&lt;/source&gt;

rather than: 

&lt;source lang=ada&gt;
type    Second_Of_Day is new Integer range 1 .. 86_400;
&lt;/source&gt;
or: 

&lt;source lang=ada&gt;
subtype Second_Of_Day is     Integer range 1 .. 86_400;
&lt;/source&gt;
==== rationale ====

An implementor is free to define the range of the predefined numeric types. Porting code from an implementation with greater accuracy to one of lesser accuracy is a time consuming and error-prone process. Many of the errors are not reported until run-time. 

This applies to more than just numerical computation. An easy-to-overlook instance of this problem occurs if you neglect to use explicitly declared types for integer discrete ranges (array sizes, loop ranges, etc.) (see Guidelines 5.5.1 and 5.5.2). If you do not provide an explicit type when specifying index constraints and other discrete ranges, a predefined integer type is assumed. 

The predefined numeric types are useful when you use them wisely. You should not use them to avoid declaring numeric types—then you lose the benefits of strong typing. When your application deals with different kinds of quantities and units, you should definitely separate them through the use of distinct numeric types. However, if you are simply counting the number of iterations in an iterative approximation algorithm, declaring a special integer type is probably overkill. The predefined exponentiation operators ** require an integer as the type of its right operand. 

You should use the predefined types Natural and Positive for manipulating certain kinds of values in the predefined language environment. The types String and Wide_String use an index of type Positive. If your code indexes into a string using an incompatible integer type, you will be forced to do type conversion, reducing its readability. If you are performing operations like slices and concatenation, the subtype of your numeric array index is probably insignificant and you are better off using a predefined subtype. On the other hand, if your array represents a table (e.g., a hash table), then your index subtype is significant, and you should declare a distinct index type. 

==== notes ====

There is an alternative that this guideline permits. As Guideline 7.1.5 suggests, implementation dependencies can be encapsulated in packages intended for that purpose. This could include the definition of a 32-bit integer type. It would then be possible to derive additional types from that 32-bit type. 

=== Accuracy Model ===

==== guideline ====

* Use an implementation that supports the Numerics Annex (Ada Reference Manual 1995, Annex G) when performance and accuracy are overriding concerns. 
==== rationale ====

The Numerics Annex defines the accuracy and performance requirements for floating- and fixed-point arithmetic. The Annex provides a &quot;strict&quot; mode in which the compiler must support these requirements. To guarantee that your program's numerical performance is portable, you should compile and link in the strict mode. If your program relies upon the numeric properties of the strict mode, then it will only be portable to other environments that support the strict numerics mode. 

The accuracy of floating-point numbers is based on what machine numbers can be represented exactly in storage. A computational result in a register can fall between two machine numbers when the register contains more bits than storage. You can step through the machine numbers using the attributes 'Pred and 'Succ. Other attributes return values of the mantissa, exponent, radix, and other characteristics of floating- and fixed-point numbers. 

=== Accuracy Analysis ===

==== guideline ====

* Carefully analyze what accuracy and precision you really need. 
==== rationale ====

Floating-point calculations are done with the equivalent of the implementation's predefined floating-point types. The effect of extra &quot;guard&quot; digits in internal computations can sometimes lower the number of digits that must be specified in an Ada declaration. This may not be consistent over implementations where the program is intended to be run. It may also lead to the false conclusion that the declared types are sufficient for the accuracy required. 

You should choose the numeric type declarations to satisfy the lowest precision (smallest number of digits) that will provide the required accuracy. Careful analysis will be necessary to show that the declarations are adequate. When you move to a machine with less precision, you probably can use the same type declaration. 

=== Accuracy Constraints ===

==== guideline ====

* Do not press the accuracy limits of the machine(s). 

==== rationale ====

Just because two different machines use the same number of digits in the mantissa of a floating-point number does not imply they will have the same arithmetic properties. Some Ada implementations may give slightly better accuracy than required by Ada because they make efficient use of the machine. Do not write programs that depend on this. 

=== Comments ===

==== guideline ====

* Comment the analysis and derivation of the numerical aspects of a program. 
==== rationale ====

Decisions and background about why certain precisions are required in a program are important to program revision or porting. The underlying numerical analysis leading to the program should be commented. 

=== Subexpression Evaluation ===

==== guideline ====

* Anticipate the range of values of subexpressions to avoid exceeding the underlying range of their base type. Use derived types, subtypes, factoring, and range constraints on numeric types (see Guidelines 3.4.1, 5.3.1, and 5.5.3). 

==== example ====

This example is adapted from the Rationale (1995, §3.3): 

&lt;source lang=ada&gt;
with Ada.Text_IO;
with Ada.Integer_Text_IO;
procedure Demo_Overflow is
-- assume the predefined type Integer has a 16-bit range
   X : Integer := 24_000;
   Y : Integer;
begin  -- Demo_Overflow
   y := (3 * X) / 4;  -- raises Constraint_Error if the machine registers used are 16-bit
  -- mathematically correct intermediate result if 32-bit registers
   Ada.Text_IO.Put (&quot;(&quot;);
   Ada.Integer_Text_IO.Put (X);
   Ada.Text_IO.Put (&quot; * 3 ) / 4 = &quot;);
   Ada.Integer_Text_IO.Put (Y);
exception
   when Constraint_Error =&gt;
      Ada.Text_IO.Put_Line (&quot;3 * X too big for register!&quot;);
end Demo_Overflow;
&lt;/source&gt;

==== rationale ====

The Ada language does not require that an implementation perform range checks on subexpressions within an expression. Ada does require that overflow checks be performed. Thus, depending on the order of evaluation and the size of the registers, a subexpression will either overflow or produce the mathematically correct result. In the event of an overflow, you will get the exception Constraint_Error. Even if the implementation on your program's current target does not result in an overflow on a subexpression evaluation, your program might be ported to an implementation that does. 

=== Relational Tests ===

==== guideline ====

* Consider using &lt;= and &gt;= to do relational tests on real valued arguments, avoiding the &lt;, &gt;, =, and /= operations. 
* Use values of type attributes in comparisons and checking for small values. 
==== example ====

The following examples test for (1) absolute &quot;equality&quot; in storage, (2) absolute &quot;equality&quot; in computation, (3) relative &quot;equality&quot; in storage, and (4) relative &quot;equality&quot; in computation: 

&lt;source lang=ada&gt;
abs (X - Y) &lt;= Float_Type'Model_Small                -- (1)
abs (X - Y) &lt;= Float_Type'Base'Model_Small           -- (2)
abs (X - Y) &lt;= abs X * Float_Type'Model_Epsilon      -- (3)
abs (X - Y) &lt;= abs X * Float_Type'Base'Model_Epsilon -- (4)
&lt;/source&gt;
And, specifically, for &quot;equality&quot; to 0: 
&lt;source lang=ada&gt;
abs X &lt;= Float_Type'Model_Small                      -- (1)
abs X &lt;= Float_Type'Base'Model_Small                 -- (2)
abs X &lt;= abs X * Float_Type'Model_Epsilon            -- (3)
abs X &lt;= abs X * Float_Type'Base'Model_Epsilon       -- (4)
&lt;/source&gt;

==== rationale ====
Strict relational comparisons ( &lt;, &gt;, =, /= ) are a general problem with computations involving real numbers. Because of the way comparisons are defined in terms of model intervals, it is possible for the values of the comparisons to depend on the implementation. Within a model interval, the result of comparing two values is nondeterministic if the values are not model numbers. In general, you should test for proximity rather than equality as shown in the examples. See also Rationale (1995, §§G.4.1 and G.4.2.).

Type attributes are the primary means of symbolically accessing the implementation of the Ada numeric model. When the characteristics of the model numbers are accessed by type attributes, the source code is portable. The appropriate model numbers of any implementation will then be used by the generated code. 

Although 0 is technically not a special case, it is often overlooked because it looks like the simplest and, therefore, safest case. But in reality, each time comparisons involve small values, you should evaluate the situation to determine which technique is appropriate. 

==== notes ====

Regardless of language, real-valued computations have inaccuracy. That the corresponding mathematical operations have algebraic properties usually introduces some confusion. This guideline explains how Ada deals with the problem that most languages face.

=== Decimal Types and the Information Systems Annex ===

==== guideline ====

* In information systems, declare different numeric decimal types to correspond to different scales (Brosgol, Eachus, and Emery 1994).
* Create objects of different decimal types to reflect different units of measure (Brosgol, Eachus, and Emery 1994).
* Declare subtypes of the appropriately scaled decimal type to provide appropriate range constraints for application-specific types.
* Encapsulate each measure category in a package (Brosgol, Eachus, and Emery 1994).
* Declare as few decimal types as possible for unitless data (Brosgol, Eachus, and Emery 1994). 
* For decimal calculations, determine whether the result should be truncated toward 0 or rounded.
* Avoid decimal types and arithmetic on compilers that do not support the Information Systems Annex (Ada Reference Manual 1995, Annex F) in full. 

==== example ====

&lt;source lang=ada&gt;
-- The salary cap today is $500,000; however this can be expanded to $99,999,999.99.
type Executive_Salary is delta 0.01 digits 10 range 0 .. 500_000.00;

------------------------------------------------------------------------------
package Currency is

   type Dollars is delta 0.01 digits 12;

   type Marks   is delta 0.01 digits 12;

   type Yen     is delta 0.01 digits 12;

   function To_Dollars (M : Marks) return Dollars;
   function To_Dollars (Y : Yen)   return Dollars;

   function To_Marks (D : Dollars) return Marks;
   function To_Marks (Y : Yen)     return Marks;

   function To_Yen (D : Dollars) return Yen;
   function To_Yen (M : Marks)   return Yen;

end Currency;
&lt;/source&gt;

==== rationale ====

The Ada language does not provide any predefined decimal types. Therefore, you need to declare decimal types for the different scales you will need to use. Differences in scale and precision must be considered in deciding whether or not a common type will suffice (Brosgol, Eachus, and Emery 1994). 

You need different types for objects measured in different units. This allows the compiler to detect mismatched values in expressions. If you declare all decimal objects to be of a single type, you forego the benefits of strong typing. For example, in an application that involves several currencies, each currency should be declared as a separate type. You should provide appropriate conversions between different currencies. 

You should map data with no particular unit of measure to a small set of types or a single type to avoid the explosion of conversions between numeric types. 

Separate the range requirement on a decimal type from its precision, i.e., the number of significant digits required. From the point of view of planning for change and ease of maintenance, you can use the digit's value to accommodate future growth in the values to be stored in objects of the type. For example, you may want to anticipate growth for database values and report formats. You can constrain the values of the type through a range constraint that matches current needs. It is easier to modify the range and avoid redefining databases and reports. 

Ada automatically truncates toward 0. If your requirements are to round the decimal result, you must explicitly do so using the 'Round attribute. 

The core language defines the basic syntax of and operations on decimal types. It does not specify, however, the minimum number of significant digits that must be supported. Nor does the core language require the compiler to support values of Small other than powers of 2, thus enabling the compiler effectively to reject a decimal declaration (Ada Reference Manual 1995, §3.5.9). The Information Systems Annex provides additional support for decimal types. It requires a minimum of 18 significant digits. It also specifies a Text_IO.Editing package that provides support analogous to the COBOL picture approach. 

=== Storage Control ===

The management of dynamic storage can vary between Ada environments. In fact, some environments do not provide any deallocation. The following Ada storage control mechanisms are implementation-dependent and should be used with care in writing portable programs. 

=== Representation Clause ===

==== guideline ====

* Do not use a representation clause to specify number of storage units. 
==== rationale ====

The meaning of the 'Storage_Size attribute is ambiguous; specifying a particular value will not improve portability. It may or may not include space allocated for parameters, data, etc. Save the use of this feature for designs that must depend on a particular vendor's implementation. 

==== notes ====

During a porting activity, it can be assumed that any occurrence of storage specification indicates an implementation dependency that must be redesigned. 

=== Access-to-Subprogram Values ===

==== guideline ====

* Do not compare access-to-subprogram values. 
==== rationale ====

The Ada Reference Manual (1995, §3.10.2) explains that an &quot;implementation may consider two access-to-subprogram values to be unequal, even though they designate the same subprogram. This might be because one points directly to the subprogram, while the other points to a special prologue that performs an Elaboration_Check and then jumps to the subprogram.&quot; The Ada Reference Manual (1995, §4.5.2) states that it is &quot;unspecified whether two access values that designate the same subprogram but are the result of distinct evaluations of Access attribute references are equal or unequal.&quot; 

See also Guideline 5.3.4. 

==== exceptions ====

If you must compare an access-to-subprogram value, you should define a constant using the access-to-subprogram value and make all future comparisons against the constant. However, if you attempt to compare access-to-subprogram values with different levels of indirection, the values might still be unequal, even if designating the same subprogram. 

=== Storage Pool Mechanisms ===

==== guideline ====

* Consider using explicitly defined storage pool mechanisms. 

==== example ====

See the Ada Reference Manual 1995, §13.11.2). 

You use allocators as before. Instead of using unchecked deallocation, you maintain your own free lists of objects that are no longer in use and available for reuse. 

You use allocators and possibly unchecked deallocation; however, you implement a storage pool and associate it with the access type(s) via a Storage_Pool clause. You can use this technique to implement a mark/release storage management paradigm, which might be significantly faster than an allocate/deallocate paradigm. Some vendors may provide a mark/release package as part of their Ada environment. 

You do not use allocators, but instead use unchecked conversion from the address and do all your own default initialization, etc. It is unlikely you would use this last option because you lose automatic default initialization.

== Tasking ==

The definition of tasking in the Ada language leaves many characteristics of the tasking model up to the implementor. This allows a vendor to make appropriate tradeoffs for the intended application domain, but it also diminishes the portability of designs and code employing the tasking features. In some respects, this diminished portability is an inherent characteristic of concurrency approaches (see Nissen and Wallis 1984, 37). 
A discussion of Ada tasking dependencies when employed in a distributed target environment is beyond the scope of this book. For example, multiprocessor task scheduling, interprocessor rendezvous, and the distributed sense of time through package Calendar are all subject to differences between implementations. For more information, Nissen and Wallis (1984) and ARTEWG (1986) touch on these issues, and Volz et al. (1985) is one of many research articles available. 

If the Real-Time Systems Annex is supported, then many concurrency aspects are fully defined and, therefore, a program can rely on these features while still being portable to other implementations that conform to the Real-Time Systems Annex. The following sections provide guidelines based on the absence of this annex. 

=== Task Activation Order ===

==== guideline ====

* Do not depend on the order in which task objects are activated when declared in the same declarative list. 
==== rationale ====

The order in which task objects are activated is left undefined in the Ada Reference Manual (1995, §9.2). See also Guideline 6.1.5. 

=== Delay Statements ===

==== guideline ====

* Do not depend on a particular delay being achievable (Nissen and Wallis 1984). 
* Never use knowledge of the execution pattern of tasks to achieve timing requirements. 

==== rationale ====
The rationale for this appears in Guideline 6.1.7. In addition, the treatment of delay statements varies from implementation to implementation, thereby hindering portability. 

Using knowledge of the execution pattern of tasks to achieve timing requirements is nonportable. Ada does not specify the underlying scheduling algorithm, and there is no guarantee that system clock ticks will be consistently precise between different systems. Thus, when you change system clocks, your delay behavior also changes. 

=== Package Calendar, Type Duration, and System.Tick ===

==== guideline ====

* Do not assume a correlation between System.Tick and type Duration (see Guidelines 6.1.7 and 7.4.2). 

==== rationale ====
Such a correlation is not required, although it may exist in some implementations. 

=== Select Statement Evaluation Order ===

==== guideline ====

* Do not depend on the order in which guard conditions are evaluated or on the algorithm for choosing among several open select alternatives. 

==== rationale ====
The language does not define the order of these conditions, so assume that they are arbitrary. 


=== Task Scheduling Algorithm ===

==== guideline ====

* Do not assume that tasks execute uninterrupted until they reach a synchronization point.
* Use pragma Priority to distinguish general levels of importance only (see Guideline 6.1.6). 

==== rationale ====
The Ada tasking model requires that tasks be synchronized only through the explicit means provided in the language (i.e., rendezvous, task dependence, pragma Atomic). The scheduling algorithm is not defined by the language and may vary from time sliced to preemptive priority. Some implementations provide several choices that a user may select for the application. 

==== notes ====

The number of priorities may vary between implementations. In addition, the manner in which tasks of the same priority are handled may vary between implementations even if the implementations use the same general scheduling algorithm. 

==== exceptions ====

In real-time systems, it is often necessary to tightly control the tasking algorithm to obtain the required performance. For example, avionics systems are frequently driven by cyclic events with limited asynchronous interruptions. A nonpreemptive tasking model is traditionally used to obtain the greatest performance in these applications. Cyclic executives can be programmed in Ada, as can a progression of scheduling schemes from cyclic through multiple-frame-rate to full asynchrony (MacLaren 1980), although an external clock is usually required. 

=== Abort ===

==== guideline ====

* Avoid using the abort statement. 

==== rationale ====

The rationale for this appears in Guideline 6.3.3. In addition, treatment of the abort statement varies from implementation to implementation, thereby hindering portability. 

=== Unprotected Shared Variables and Pragmas Atomic and Volatile ===

==== guideline ====

* Do not use unprotected shared variables.
* Consider using protected types to provide data synchronization.
* Have tasks communicate through the rendezvous mechanism. 
* Do not use unprotected shared variables as a task synchronization device. 
* Consider using protected objects to encapsulate shared data.
* Use pragma Atomic or Volatile only when you are forced to by run-time system deficiencies. 

==== example ====
See Guidelines 6.1.1 and 6.1.2. 

==== rationale ====

The rationale for this appears in Guidelines 6.1.1 and 6.2.4. In addition, the treatment of unprotected shared variables varies from implementation to implementation, thereby hindering portability. 

== Exceptions ==

You should exercise care when using predefined exceptions because aspects of their treatment may vary between implementations. Implementation-specific exceptions must, of course, be avoided. See Guidelines 4.3 an 5.8 for further information on exceptions. See Guideline 7.1.6 for further information on vendor-supplied features. 

=== Predefined and User-Defined Exceptions ===

==== guideline ====

* Do not depend on the exact locations at which predefined exceptions are raised. 
* Do not rely on the behavior of Ada.Exceptions beyond the minimum defined in the language. 

==== rationale ====
The Ada Reference Manual (1995, §11) states that, among implementations, a predefined exception for the same cause may be raised from different locations. You will not be able to discriminate between the exceptions. Further, each of the predefined exceptions is associated with a variety of conditions. Any exception handler written for a predefined exception must be prepared to deal with any of these conditions. 

Guideline 5.6.9 discusses the use of blocks to define local exception handlers that can catch exceptions close to their point of origin. 

=== Implementation-Specific Exceptions ===

==== guideline ====

* Do not raise implementation-specific exceptions.
* Convert implementation-specific exceptions within interface packages to visible user-defined exceptions. 

==== rationale ====
No exception defined specifically by an implementation can be guaranteed to be portable to other implementations whether or not they are from the same vendor. Not only may the names be different, but the range of conditions triggering the exceptions may be different also. 

If you create interface packages for the implementation-specific portions of your program, those packages can catch or recognize implementation-specific exceptions and convert them into user-defined exceptions that have been declared in the specification. Do not allow yourself to be forced to find and change the name of every handler you have written for these exceptions when the program is ported. 

== Representation Clauses And Implementation-Dependent Features ==

Ada provides many implementation-dependent features that permit greater control over and interaction with the underlying hardware architecture than is normally provided by a high-order language. These mechanisms are intended to assist in systems programming and real-time programming to obtain greater efficiency (e.g., specific size and layout of variables through representation clauses) and direct hardware interaction (e.g., interrupt entries) without having to resort to assembly level programming. 
Given the objectives for these features, it is not surprising that you must usually pay a significant price in portability to use them. In general, where portability is the main objective, do not use these features. When you must use these features, encapsulate them in packages that are well-commented as interfacing to the particular target environment. This section identifies the various features and their recommended use with respect to portability. 

=== Representation Clauses ===

==== guideline ====

* Use algorithms that do not depend on the representation of the data and, therefore, do not need representation clauses. 
* Consider using representation clauses when accessing or defining interface data or when a specific representation is needed to implement a design. 
* Do not assume that sharing source files between programs guarantees the same representation of data types in those files. 

==== rationale ====
In many cases, it is easy to use representation clauses to implement an algorithm, even when it is not necessary. There is also a tendency to document the original programmer's assumptions about the representation for future reference. But there is no guarantee that another implementation will support the representation chosen. Unnecessary representation clauses also confuse porting or maintenance efforts, which must assume that the programmer depends on the documented representation. 

Interfaces to external systems and devices are the most common situations where a representation clause is needed. Uses of pragma Import and address clauses should be evaluated during design and porting to determine whether a representation clause is needed. 

Without representation clauses, the language does not require two compilations of an unchanged file to result in the same data representation. Things that can change the representation between compilations include: 

* A change in a file earlier in the compilation order 
* A change in the optimization strategy or level 
* A change in versions of the compiler 
* A change in actual compilers 
* A change in the availability of system resources 

Therefore, two independently linked programs or partitions should only share data that has their representations explicitly controlled. 
==== notes ====

During a porting effort, all representation clauses can be evaluated as either design artifacts or specifications for accessing interface data that might change with a new implementation. 

=== Package System ===

==== guideline ====

* Avoid using package System constants except in attempting to generalize other machine-dependent constructs. 

==== rationale ====
Because the values in this package are implementation-provided, unexpected effects can result from their use. 

==== notes ====

If you must guarantee that physical record layouts will remain the same between implementations, you can express record fields by their first and last bit positions as shown in the Ada Reference Manual (1995, §13.5.1). Static expressions and named numbers should be used to let the compiler compute the endpoints of each range in terms of earlier fields. In this case, greater portability can be achieved by using System.Storage_Unit to let the compiler compute the value of the named number. However, this method might not work for all values of System.Storage_Unit. 

==== exceptions ====

Do use package System constants to parameterize other implementation-dependent features (see Pappas (1985, §13.7.1). 

=== Machine Code Inserts ===

==== guideline ====

* Avoid machine code inserts. 

==== rationale ====
The Ada Reference Manual (1995, Annex C) suggests that the package that implements machine code inserts is optional. Additionally, it is not standardized so that machine code inserts are most likely not portable. In fact, it is possible that two different vendors' syntax will differ for an identical target, and differences in lower-level details, such as register conventions, will hinder portability. 

==== exceptions ====

If machine code inserts must be used to meet another project requirement, recognize and document the portability decreasing effects. 

In the declarative region of the body of the routine where machine code inserts are being used, insert comments explaining what functions inserts provide and (especially) why the inserts are necessary. Comment the necessity of using machine code inserts by delineating what went wrong with attempts to use other higher level constructs. 

=== Interfacing to Foreign Languages ===

==== guideline ====

* Use the package Interfaces and its language-defined child packages rather than implementation-specific mechanisms. 
* Consider using pragma Import rather than access-to-subprogram types for interfacing to subprograms in other languages.  (Preferably using the &quot;External_Name =&gt;&quot; argument.)
* Isolate all subprograms employing pragmas Import, Export, and Convention to implementation-specific (interface) package bodies. 

==== example ====

This example shows how to interface with the following cube root function written in C: 

&lt;source lang=c&gt;
double cbrt (double x);
&lt;/source&gt;

&lt;source lang=ada&gt;
package Math_Utilities is

   Argument_Error : exception;

   function Cube_Root (X : Float) return Float;

   ...

end Math_Utilities;
   
------------------------------------------------------------------------------
with Interfaces.C;
package body Math_Utilities is

   function Cube_Root (X : Float) return Float is

      function C_Cbrt (X : Interfaces.C.Double) return Interfaces.C.Double;
      pragma Import (Convention    =&gt; C,
                     Entity        =&gt; C_Cbrt,
                     External_Name =&gt; &quot;cbrt&quot;);

   begin
      if X &lt; 0.0 then
         raise Argument_Error;
      else
         return Float (C_Cbrt (Interfaces.C.Double (X)));
      end if;
   end Cube_Root;

   ...

end Math_Utilities;
&lt;/source&gt;

==== rationale ====

For static interfacing to subprograms in other languages, the pragma Import provides a better solution than access to subprograms because no indirection is required. The pragma Interface (Ada Reference Manual 1983) has been replaced by pragmas Import, Export, and Convention. Annex B of the Rationale (1995) discusses how to use these pragmas in conjunction with the access-to-subprogram types in interfacing to other languages. 

Note especially the distinction between the &quot;External_Name =&gt;&quot; and &quot;Link_Name =&gt;&quot; parameters to pragma Import which are frequently confused.  External_Name specifies the procedure name as it appears in the source code of the other language (such as C or Fortran).  Link_Name specifies the name used by the linker.  Typically, only one of these parameters is specified, and generally External_Name is the preferred choice for portability.

Access to subprogram types is useful for implementing callbacks in a separate subsystem, such as the X Window system. 

The problems with interfacing to foreign languages are complex. These problems include pragma syntax differences, conventions for linking/binding Ada to other languages, and mapping Ada variables to foreign language variables. By hiding these dependencies within interface packages, the amount of code modification can be reduced. 

==== exceptions ====

It is often necessary to interact with other languages, if only an assembly language, to reach certain hardware features. In these cases, clearly comment the requirements and limitations of the interface and pragma Import, Export, and Conventions usage.

=== Implementation-Specific Pragmas and Attributes ===

==== guideline ====

* Avoid pragmas and attributes added by the compiler implementor. 

==== rationale ====
The Ada Reference Manual (1995) permits an implementor to add pragmas and attributes to exploit a particular hardware architecture or software environment. These are obviously even more implementation-specific and therefore less portable than an implementor's interpretations of the predefined pragmas and attributes. However, the Ada Reference Manual (1995) defines a set of annexes that have a uniform and consistent approach to certain specialized needs, namely, real-time systems, distributed systems, information systems, numerics, interfacing to foreign languages, and safety and security. You should always prefer the facilities defined in the annexes to any vendor-defined pragmas and attributes. 

=== Unchecked Deallocation ===

==== guideline ====

* Avoid dependence on Ada.Unchecked_Deallocation (see Guideline 5.9.2). 

==== rationale ====
The unchecked storage deallocation mechanism is one method for overriding the default time at which allocated storage is reclaimed. The earliest default time is when an object is no longer accessible, for example, when control leaves the scope where an access type was declared (the exact point after this time is implementation-dependent). Any unchecked deallocation of storage performed prior to this may result in an erroneous Ada program if an attempt is made to access the object. 

This guideline is stronger than Guideline 5.9.2 because of the extreme dependence on the implementation of Ada.Unchecked_Deallocation. Using it could cause considerable difficulty with portability. 

==== notes ====

Ada.Unchecked_Deallocation is a supported feature in all Ada implementations. The portability issue arises in that unchecked storage deallocations might cause varying results in different implementations. 

==== exceptions ====

Using unchecked deallocation of storage can be beneficial in local control of highly iterative or recursive algorithms where available storage may be exceeded. 

=== Unchecked Access ===

==== guideline ====

* Avoid dependence on the attribute Unchecked_Access (see Guideline 5.9.2). 

==== rationale ====
Access values are subject to accessibility restrictions. Using the attribute Unchecked_Access prevents these rules from being checked, and the programmer runs the risk of having dangling references. 

=== Unchecked Conversion ===

==== guideline ====

* Avoid dependence on Ada.Unchecked_Conversion (see Guideline 5.9.1). 

==== rationale ====
The unchecked type conversion mechanism is, in effect, a means of bypassing the strong typing facilities in Ada. An implementation is free to limit the types that may be matched and the results that occur when object sizes differ. 

==== exceptions ====

Unchecked type conversion is useful in implementation-dependent parts of Ada programs where lack of portability is isolated and where low-level programming and foreign language interfacing are the objectives. 

If an enumeration representation clause is used, unchecked type conversion is the only language-provided way to retrieve the internal integer code of an enumeration value. 

=== Run-Time Dependencies ===

==== guideline ====

* Avoid the direct invocation of or implicit dependence upon an underlying host operating system or Ada run-time support system, except where the interface is explicitly defined in the language (e.g., Annex C or D of the Ada Reference Manual [1995]). 
* Use standard bindings and the package Ada.Command_Line when you need to invoke the underlying run-time support system. 
* Use features defined in the Annexes rather than vendor-defined features. 

==== rationale ====
Features of an implementation not specified in the Ada Reference Manual (1995) will usually differ between implementations. Specific implementation-dependent features are not likely to be provided in other implementations. In addition to the mandatory predefined language environment, the annexes define various packages, attributes, and pragmas to standardize implementation-dependent features for several specialized domains. You enhance portability when you use the features declared in the packages in the Annexes because you can port your program to other vendor environments that implement the same Annexes you have used. Even if a majority of vendors eventually provide similar features, they are unlikely to have identical formulations. Indeed, different vendors may use the same formulation for (semantically) entirely different features. 

When coding, try to avoid depending on the underlying operating system. Consider the consequences of including system calls in a program on a host development system. If these calls are not flagged for removal and replacement, the program could go through development and testing only to be unusable when moved to a target environment that lacks the facilities provided by those system calls on the host. 

Guideline 7.1.5 discusses the use of the package Ada.Command_Line. If an Ada environment implements a standard binding to operating system services, such as POSIX/Ada, and you write POSIX-compliant calls, your program should be portable across more systems. 

==== exceptions ====

In real-time, embedded systems, making calls to low-level support system facilities may often be unavoidable. Isolating the uses of these facilities may be too difficult. Comment them as you would machine code inserts (see Guideline 7.6.3); they are, in a sense, instructions for the virtual machine provided by the support system. When isolating the uses of these features, provide an interface for the rest of your program to use, which can be ported through replacement of the interface's implementation. 

== Input/Output ==

I/O facilities in Ada are not a part of the syntactic definition of the language. The constructs in the language have been used to define a set of packages for this purpose. These packages are not expected to meet all the I/O needs of all applications, in particular, embedded systems. They serve as a core subset that may be used on straightforward data and that can be used as examples of building I/O facilities upon the low-level constructs provided by the language. Providing an I/O definition that could meet the requirements of all applications and integrate with the many existing operating systems would result in unacceptable implementation dependencies. 
The types of portability problems encountered with I/O tend to be different for applications running with a host operating system versus embedded targets where the Ada run-time is self-sufficient. Interacting with a host operating system offers the added complexity of coexisting with the host file system structures (e.g., hierarchical directories), access methods (e.g., indexed sequential access method [ISAM]), and naming conventions (e.g., logical names and aliases based on the current directory). The section on Input/Output in ARTEWG (1986) provides some examples of this kind of dependency. Embedded applications have different dependencies that often tie them to the low-level details of their hardware devices. 

The major defense against these inherent implementation dependencies in I/O is to try to isolate their functionality in any given application. The majority of the following guidelines are focused in this direction. 

=== Name and Form Parameters ===

==== guideline ====

* Use constants and variables as symbolic actuals for the Name and Form parameters on the predefined I/O packages. Declare and initialize them in an implementation dependency package. 

==== rationale ====
The format and allowable values of these parameters on the predefined I/O packages can vary greatly between implementations. Isolation of these values facilitates portability. Not specifying a Form string or using a null value does not guarantee portability because the implementation is free to specify defaults. 

==== notes ====

It may be desirable to further abstract the I/O facilities by defining additional Create and Open procedures that hide the visibility of the Form parameter entirely (see Pappas 1985, 54-55). 

=== File Closing ===

==== guideline ====

* Close all files explicitly. 

==== rationale ====
The Ada Reference Manual (1995, §A.7) does not define what happens to external files after completion of the main subprogram (in particular, if corresponding files have not been closed). 

The disposition of a closed temporary file may vary, perhaps affecting performance and space availability (ARTEWG 1986). 

=== Input/Output on Access Types ===

==== guideline ====

* Avoid performing I/O on access types. 

==== rationale ====
The Ada Reference Manual (1995, §A.7) does not specify the effects of I/O on access types. When such a value is written, it is placed out of reach of the implementation. Thus, it is out of reach of the reliability-enhancing controls of strong type checking. 

Consider the meaning of this operation. One possible implementation of the values of access types is virtual addresses. If you write such a value, how can you expect another program to read that value and make any sensible use of it? The value cannot be construed to refer to any meaningful location within the reader's address space, nor can a reader infer any information about the writer's address space from the value read. The latter is the same problem that the writer would have trying to interpret or use the value if it is read back in. To wit, a garbage collection and/or heap compaction scheme may have moved the item formerly accessed by that value, leaving that value &quot;pointing&quot; at space that is now being put to indeterminable uses by the underlying implementation. 

=== Package Ada.Streams.Stream_IO ===

==== guideline ====

* Consider using Sequential_IO or Direct_IO instead of Stream_IO unless you need the low-level, heterogeneous I/O features provided by Stream_IO. 

==== rationale ====
Sequential_IO and Direct_IO are still well suited for processing homogeneous files. Additionally, in cases where the intent is to process homogeneous files, the use of Sequential_IO or Direct_IO has the advantage of enforcing this intent at compile time. 

Stream_IO should be reserved for processing heterogeneous files. In this case, a file is not a sequence of objects of all the same type but rather a sequence of objects of varying types. To read a heterogeneous sequence of objects in the correct order requires some application-specific knowledge. 

=== Current Error Files ===

==== guideline ====

* Consider using Current_Error and Set_Error for run-time error messages. 

==== example ====

&lt;source lang=ada&gt;
with Ada.Text_IO;

...

begin
   Ada.Text_IO.Open (File =&gt; Configuration_File,
                     Mode =&gt; Ada.Text_IO.In_File,
                     Name =&gt; Configuration_File_Name);
exception
   when Ada.Text_IO.Name_Error =&gt;
      Ada.Text_IO.Put_Line (File =&gt; Ada.Text_IO.Standard_Error,
                            Item =&gt; &quot;Can't open configuration file.&quot;);
      ...
end;
&lt;/source&gt;

==== rationale ====

The package Text_IO includes the concept of a current error file. You should report errors to the user through the associated subprograms Current_Error and Set_Error instead of the standard output facilities. In interactive applications, using the Text_IO error facilities increases the portability of your user interface. 

==== notes ====

In a program with multiple tasks for I/O, you need to be careful of two or more tasks trying to set Current_Input, Current_Output, or Current_Error. The potential problem lies in unprotected updates to the &quot;shared&quot; state associated with a package, in this case, the package Text_IO. Guidelines 6.1.1 and 6.2.4 discuss the related issues of unprotected shared variables. 

== Summary ==

=== fundamentals ===

* In programs or components intended to have a long life, avoid using the features of Ada declared as &quot;obsolescent&quot; by Annex J of the Ada Reference Manual (1995), unless the use of the feature is needed for backward compatibility with Ada 83 (Ada Reference Manual 1983). 
* Document the use of any obsolescent features. 
* Avoid using the following features: 
** The short renamings of the packages in the predefined environment (e.g., Text_IO as opposed to Ada.Text_IO) 
** The character replacements of ! for |, : for #, and % for quotation marks 
** Reduced accuracy subtypes of floating-point types 
** The 'Constrained attribute as applied to private types 
** The predefined package ASCII 
** The exception Numeric_Error 
** Various representation specifications, including at clauses, mod clauses, interrupt entries, and the Storage_Size attribute 
* Make informed assumptions about the support provided for the following on potential target platforms: 
** Number of bits available for type Integer (range constraints) 
** Number of decimal digits of precision available for floating-point types 
** Number of bits available for fixed-point types (delta and range constraints) 
** Number of characters per line of source text 
** Number of bits for Root_Integer expressions 
** Number of seconds for the range of Duration 
** Number of milliseconds for Duration'Small 
** Minimum and maximum scale for decimal types 
* Avoid assumptions about the values and the number of values included in the type Character. 
* Use highlighting comments for each package, subprogram, and task where any nonportable features are present. 
* For each nonportable feature employed, describe the expectations for that feature. 
* Consider using only a parameterless procedure as the main subprogram. 
* Consider using Ada.Command_Line for accessing values from the environment, but recognize that this package's behavior and even its specification are nonportable. 
* Encapsulate and document all uses of package Ada.Command_Line. 
* Create packages specifically designed to isolate hardware and implementation dependencies and designed so that their specification will not change when porting. 
* Clearly indicate the objectives if machine or solution efficiency is the reason for hardware or implementation-dependent code. 
* For the packages that hide implementation dependencies, maintain different package bodies for different target environments. 
* Isolate interrupt receiving tasks into implementation-dependent packages. 
* Refer to Annex M of the Ada Reference Manual (1995) for a list of implementation-dependent features. 
* Avoid the use of vendor-supplied packages. 
* Avoid the use of features added to the predefined packages that are not specified in the Ada language definition or Specialized Needs Annexes. 
* Use features defined in the Specialized Needs Annexes rather than vendor-defined features. 
* Document clearly the use of any features from the Specialized Needs Annexes (systems programming, real-time systems, distributed systems, information systems, numerics, and safety and security). 
* Do not write code whose correct execution depends on the particular parameter passing mechanism used by an implementation (Ada Reference Manual 1995, §6.2; Cohen 1986). 
* If a subprogram has more than one formal parameter of a given subtype, at least one of which is [in] out, make sure that the subprogram can properly handle the case when both formal parameters denote the same actual object. 
* Avoid depending on the order in which certain constructs in Ada are evaluated . 

=== numeric types and expressions ===

* Avoid using the predefined numeric types in package Standard . Use range and digits declarations and let the implementation pick the appropriate representation. 
* For programs that require greater accuracy than that provided by the global assumptions, define a package that declares a private type and operations as needed; see Pappas (1985) for a full explanation and examples. 
* Consider using predefined numeric types (Integer, Natural, Positive) for: 
** Indexes into arrays where the index type is not significant, such as type String 
** &quot;Pure&quot; numbers, that is, numbers with no associated physical unit (e.g., exponents) 
** Values whose purpose is to control a repeat or iteration count 
* Use an implementation that supports the Numerics Annex (Ada Reference Manual 1995, Annex G) when performance and accuracy are overriding concerns . 
* Carefully analyze what accuracy and precision you really need. 
* Do not press the accuracy limits of the machine(s). 
* Comment the analysis and derivation of the numerical aspects of a program. 
* Anticipate the range of values of subexpressions to avoid exceeding the underlying range of their base type. Use derived types, subtypes, factoring, and range constraints on numeric types. 
* Consider using &lt;= and &gt;= to do relational tests on real valued arguments, avoiding the &lt;, &gt;, =, and /= operations. 
* Use values of type attributes in comparisons and checking for small values. 
* In information systems, declare different numeric decimal types to correspond to different scales (Brosgol, Eachus, and Emery 1994). 
* Create objects of different decimal types to reflect different units of measure (Brosgol, Eachus, and Emery 1994). 
* Declare subtypes of the appropriately scaled decimal type to provide appropriate range constraints for application-specific types. 
* Encapsulate each measure category in a package (Brosgol, Eachus, and Emery 1994). 
* Declare as few decimal types as possible for unitless data (Brosgol, Eachus, and Emery 1994). 
* For decimal calculations, determine whether the result should be truncated toward 0 or rounded. 
* Avoid decimal types and arithmetic on compilers that do not support the Information Systems Annex (Ada Reference Manual 1995, Annex F) in full. 

=== storage control ===

* Do not use a representation clause to specify number of storage units. 
* Do not compare access-to-subprogram values. 
* Consider using explicitly defined storage pool mechanisms. 

=== tasking ===

* Do not depend on the order in which task objects are activated when declared in the same declarative list. 
* Do not depend on a particular delay being achievable (Nissen and Wallis 1984). 
* Never use knowledge of the execution pattern of tasks to achieve timing requirements. 
* Do not assume a correlation between System.Tick and type Duration. 
* Do not depend on the order in which guard conditions are evaluated or on the algorithm for choosing among several open select alternatives. 
* Do not assume that tasks execute uninterrupted until they reach a synchronization point. 
* Use pragma Priority to distinguish general levels of importance only. 
* Avoid using the abort statement. 
* Do not use unprotected shared variables. 
* Consider using protected types to provide data synchronization. 
* Have tasks communicate through the rendezvous mechanism. 
* Do not use unprotected shared variables as a task synchronization device. 
* Consider using protected objects to encapsulate shared data. 
* Use pragma Atomic or Volatile only when you are forced to by run-time system deficiencies. 

==== exceptions ====

* Do not depend on the exact locations at which predefined exceptions are raised. 
* Do not rely on the behavior of Ada.Exceptions beyond the minimum defined in the language. 
* Do not raise implementation-specific exceptions. 
* Convert implementation-specific exceptions within interface packages to visible user-defined exceptions. 

=== representation clauses and implementation-dependent features ===

* Use algorithms that do not depend on the representation of the data and, therefore, do not need representation clauses. 
* Consider using representation clauses when accessing or defining interface data or when a specific representation is needed to implement a design . 
* Do not assume that sharing source files between programs guarantees the same representation of data types in those files. 
* Avoid using package System constants except in attempting to generalize other machine-dependent constructs. 
* Avoid machine code inserts. 
* Use the package Interfaces and its language-defined child packages rather than implementation-specific mechanisms. 
* Consider using pragma Import rather than access-to-subprogram types for interfacing to subprograms in other languages. 
* Isolate all subprograms employing pragmas Import, Export, and Convention to implementation-specific (interface) package bodies. 
* Avoid pragmas and attributes added by the compiler implementor. 
* Avoid dependence on Ada.Unchecked_Deallocation. 
* Avoid dependence on the attribute Unchecked_Access. 
* Avoid dependence on Ada.Unchecked_Conversion. 
* Avoid the direct invocation of or implicit dependence upon an underlying host operating system or Ada run-time support system, except where the interface is explicitly defined in the language (e.g., Annex C or D of the Ada Reference Manual [1995]). 
* Use standard bindings and the package Ada.Command_Line when you need to invoke the underlying 
run-time support system. 
* Use features defined in the Annexes rather than vendor-defined features. 

=== input/output ===

* Use constants and variables as symbolic actuals for the Name and Form parameters on the predefined I/O packages. Declare and initialize them in an implementation dependency package. 
* Close all files explicitly. 
* Avoid performing I/O on access types. 
* Consider using Sequential_IO or Direct_IO instead of Stream_IO unless you need the low-level, heterogeneous I/O features provided by Stream_IO. 
* Consider using Current_Error and Set_Error for run-time error messages.


{{Chapter navigation||Reusability}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>nrvbw387ilv5hdim1bgwbpu41o2fvoy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Reusability</title>
    <ns>0</ns>
    <id>200803</id>
    <revision>
      <id>1550573</id>
      <parentid>1549819</parentid>
      <timestamp>2009-06-28T09:11:25Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>{{Chapter navigation|Portability|Object-Oriented Features}}</comment>
      <text xml:space="preserve">{{Chapter navigation|Portability|Object-Oriented Features}}

{{TOC|limit=3|float=none}}

== Introduction ==

Reusability is the extent to which code can be used in different applications with minimal change. As code is reused in a new application, that new application partially inherits the attributes of that code. If the code is maintainable, the application is more maintainable. If it is portable, then the application is more portable. So this chapter's guidelines are most useful when all of the other guidelines in this book are also applied. 
Several guidelines are directed at the issue of maintainability. Maintainable code is easy to change to meet new or changing requirements. Maintainability plays a special role in reuse. When attempts are made to reuse code, it is often necessary to change it to suit the new application. If the code cannot be changed easily, it is less likely to be reused. 

There are many issues involved in software reuse: whether to reuse parts, how to store and retrieve reusable parts in a library, how to certify parts, how to maximize the economic value of reuse, how to provide incentives to engineers and entire companies to reuse parts rather than reinvent them, and so on. This chapter ignores these managerial, economic, and logistic issues to focus on the single technical issue of how to write software parts in Ada to increase reuse potential. The other issues are just as important but are outside of the scope of this book. 

One of the design goals of Ada was to facilitate the creation and use of reusable parts to improve productivity. To this end, Ada provides features to develop reusable parts and to adapt them once they are available. Packages, visibility control, and separate compilation support modularity and information hiding (see guidelines in Sections 4.1, 4.2, 5.3, and 5.7). This allows the separation of application-specific parts of the code, maximizes the general purpose parts suitable for reuse, and allows the isolation of design decisions within modules, facilitating change. The Ada type system supports localization of data definitions so that consistent changes are easy to make. The Ada inheritance features support type extension so that data definitions and interfaces may be customized for an application. Generic units directly support the development of general purpose, adaptable code that can be instantiated to perform specific functions. The Ada 95 improvements for object-oriented techniques and abstraction support all of the above goals. Using these features carefully and in conformance to the guidelines in this book, produces code that is more likely to be reusable. 

Reusable code is developed in many ways. Code may be scavenged from a previous project. A reusable library of code may be developed from scratch for a particularly well-understood domain, such as a math library. Reusable code may be developed as an intentional byproduct of a specific application. Reusable code may be developed a certain way because a design method requires it. These guidelines are intended to apply in all of these situations. 

The experienced programmer recognizes that software reuse is much more a requirements and design issue than a coding issue. The guidelines in this section are intended to work within an overall method for developing reusable code. This section will not deal with artifacts of design, testing, etc. Some research into reuse issues related specifically to the Ada language can be found in AIRMICS (1990), Edwards (1990), and Wheeler (1992). 

* Regardless of development method, experience indicates that reusable code has certain characteristics, and this chapter makes the following assumptions: 
* Reusable parts must be understandable. A reusable part should be a model of clarity. The requirements for commenting reusable parts are even more stringent than those for parts specific to a particular application. 
* Reusable parts must be of the highest possible quality. They must be correct, reliable, and robust. An error or weakness in a reusable part may have far-reaching consequences, and it is important that other programmers can have a high degree of confidence in any parts offered for reuse. 
* Reusable parts must be adaptable. To maximize its reuse potential, a reusable part must be able to adapt to the needs of a wide variety of users. 
* Reusable parts should be independent. It should be possible to reuse a single part without also adopting many other parts that are apparently unrelated. 

In addition to these criteria, a reusable part must be easier to reuse than to reinvent, must be efficient, and must be portable. If it takes more effort to reuse a part than to create one from scratch or if the reused part is simply not efficient enough, reuse does not occur as readily. For guidelines on portability, see Chapter 7. 
This chapter should not be read in isolation. In many respects, a well-written, reusable component is simply an extreme example of a well-written component. All of the guidelines in the previous chapters and in Chapter 9 apply to reusable components as well as components specific to a single application. As experience increases with the 1995 revision to the Ada standard, new guidelines may emerge while others may change. The guidelines listed here apply specifically to reusable components. 

Guidelines in this chapter are frequently worded &quot;consider . . .&quot; because hard and fast rules cannot apply in all situations. The specific choice you can make in a given situation involves design tradeoffs. The rationale for these guidelines is intended to give you insight into some of these tradeoffs. 

== Understanding and Clarity ==

It is particularly important that parts intended for reuse should be easy to understand. What the part does, how to use it, what anticipated changes might be made to it in the future, and how it works are facts that must be immediately apparent from inspection of the comments and the code itself. For maximum readability of reusable parts, follow the guidelines in Chapter 3, some of which are repeated more strongly below. 

=== Application-Independent Naming ===

==== guideline ====

* Select the least restrictive names possible for reusable parts and their identifiers . 
* Select the generic name to avoid conflicting with the naming conventions of instantiations of the generic. 
* Use names that indicate the behavioral characteristics of the reusable part, as well as its abstraction. 

==== example ====
General-purpose stack abstraction: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Item is private;
package Bounded_Stack is
   procedure Push (New_Item    : in     Item);
   procedure Pop  (Newest_Item :    out Item);
   ...
end Bounded_Stack;
------------------------------------------------------------------------
&lt;/source&gt;

Renamed appropriately for use in current application: 

&lt;source lang=ada&gt;
with Bounded_Stack;

...

   type Tray is ...
   package Tray_Stack is 
      new Bounded_Stack (Item =&gt; Tray);
&lt;/source&gt;

==== rationale ====

Choosing a general or application-independent name for a reusable part encourages its wide reuse. When the part is used in a specific context, it can be instantiated (if generic) or renamed with a more specific name. 

When there is an obvious choice for the simplest, clearest name for a reusable part, it is a good idea to leave that name for use by the reuser of the part, choosing a longer, more descriptive name for the reusable part. Thus, Bounded_Stack is a better name than Stack for a generic stack package because it leaves the simpler name Stack available to be used by an instantiation. 

Include indications of the behavioral characteristics (but not indications of the implementation) in the name of a reusable part so that multiple parts with the same abstraction (e.g., multiple stack packages) but with different restrictions (bounded, unbounded, etc.) can be stored in the same Ada library and used as part of the same Ada program. 

=== Abbreviations ===

==== guideline ====

* Do not use abbreviations in identifier or unit names. 

==== example ====
&lt;source lang=ada&gt;
------------------------------------------------------------------------
with Ada.Calendar;
package Greenwich_Mean_Time is
   function Clock return Ada.Calendar.Time;
   ...
end Greenwich_Mean_Time;
------------------------------------------------------------------------
&lt;/source&gt;

The following abbreviation may not be clear when used in an application: 

&lt;source lang=ada&gt;
with Ada.Calendar;
with Greenwich_Mean_Time;
...
   function Get_GMT return Ada.Calendar.Time renames
          Greenwich_Mean_Time.Clock;
&lt;/source&gt;

==== rationale ====

This is a stronger guideline than Guideline 3.1.4. However well commented, an abbreviation may cause confusion in some future reuse context. Even universally accepted abbreviations, such as GMT for Greenwich Mean Time, can cause problems and should be used only with great caution. 

The difference between this guideline and Guideline 3.1.4 involves issues of domain. When the domain is well-defined, abbreviations and acronyms that are accepted in that domain will clarify the meaning of the application. When that same code is removed from its domain-specific context, those abbreviations may become meaningless. 

In the example above, the package, Greenwich_Mean_Time, could be used in any application without loss of meaning. But the function Get_GMT could easily be confused with some other acronym in a different domain. 

==== notes ====

See Guideline 5.7.2 concerning the proper use of the renames clause. If a particular application makes extensive use of the Greenwich_Mean_Time domain, it may be appropriate to rename the package GMT within that application: 

with Greenwich_Mean_Time;
...
   package GMT renames Greenwich_Mean_Time;

=== Generic Formal Parameters ===

==== guideline ====

* Document the expected behavior of generic formal parameters just as you document any package specification. 

==== example ====
The following example shows how a very general algorithm can be developed but must be clearly documented to be used: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   -- Index provides access to values in a structure.  For example,
   -- an array, A.
   type Index is (&lt;&gt;);
   type Element is private;
   type Element_Array is array (Index range &lt;&gt;) of Element;
   -- The function, Should_Precede, does NOT compare the indexes
   -- themselves; it compares the elements of the structure.
   -- The function Should_Precede is provided rather than a &quot;Less_Than&quot; function
   -- because the sort criterion need not be smallest first.
   with function Should_Precede (Left  : in     Element;
                                 Right : in     Element)
     return Boolean;
   -- This procedure swaps values of the structure (the mode won't
   -- allow the indexes themselves to be swapped!)
   with procedure Swap (Index1 : in     Index;
                        Index2 : in     Index;
                        A      : in out Element_Array);
   -- After the call to Quick_Sort, the indexed structure will be
   -- sorted:
   --     For all i,j in First..Last :  i&lt;j  =&gt;  A(i) &lt; A(j).
procedure Quick_Sort (First : in     Index := Index'First;
                      Last  : in     Index := Index'Last);
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

The generic capability is one of Ada's strongest features because of its formalization. However, not all of the assumptions made about generic formal parameters can be expressed directly in Ada. It is important that any user of a generic know exactly what that generic needs in order to behave correctly. 

In a sense, a generic specification is a contract where the instantiator must supply the formal parameters and, in return, receives a working instance of the specification. Both parties are best served when the contract is complete and clear about all assumptions. 

== Robustness ==

The following guidelines improve the robustness of Ada code. It is easy to write code that depends on an assumption that you do not realize that you are making. When such a part is reused in a different environment, it can break unexpectedly. The guidelines in this section show some ways in which Ada code can be made to automatically conform to its environment and some ways in which it can be made to check for violations of assumptions. Finally, some guidelines are given to warn you about errors that Ada does not catch as soon as you might like. 

=== Named Numbers ===

==== guideline ====

* Use named numbers and static expressions to allow multiple dependencies to be linked to a small number of symbols. 

==== example ====
&lt;source lang=ada&gt;
------------------------------------------------------------------------
procedure Disk_Driver is
   -- In this procedure, a number of important disk parameters are
   -- linked.
   Number_Of_Sectors  : constant :=     4;
   Number_Of_Tracks   : constant :=   200;
   Number_Of_Surfaces : constant :=    18;
   Sector_Capacity    : constant := 4_096;
   Track_Capacity   : constant := Number_Of_Sectors  * Sector_Capacity;
   Surface_Capacity : constant := Number_Of_Tracks   * Track_Capacity;
   Disk_Capacity    : constant := Number_Of_Surfaces * Surface_Capacity;
   type Sector_Range  is range 1 .. Number_Of_Sectors;
   type Track_Range   is range 1 .. Number_Of_Tracks;
   type Surface_Range is range 1 .. Number_Of_Surfaces;
   type Track_Map   is array (Sector_Range)  of ...;
   type Surface_Map is array (Track_Range)   of Track_Map;
   type Disk_Map    is array (Surface_Range) of Surface_Map;
begin  -- Disk_Driver
   ...
end Disk_Driver;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

To reuse software that uses named numbers and static expressions appropriately, just one or a small number of constants need to be reset, and all declarations and associated code are changed automatically. Apart from easing reuse, this reduces the number of opportunities for error and documents the meanings of the types and constants without using error-prone comments. 

=== Unconstrained Arrays ===

==== guideline ====

* Use unconstrained array types for array formal parameters and array return values.
* Make the size of local variables depend on actual parameter size, where appropriate. 

==== example ====

&lt;source lang=ada&gt;
   ...
   type Vector is array (Vector_Index range &lt;&gt;) of Element;
   type Matrix is array
           (Vector_Index range &lt;&gt;, Vector_Index range &lt;&gt;) of Element;
   ...
   ---------------------------------------------------------------------
   procedure Matrix_Operation (Data : in     Matrix) is
      Workspace   : Matrix (Data'Range(1), Data'Range(2));
      Temp_Vector : Vector (Data'First(1) .. 2 * Data'Last(1));
   ...
   ---------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Unconstrained arrays can be declared with their sizes dependent on formal parameter sizes. When used as local variables, their sizes change automatically with the supplied actual parameters. This facility can be used to assist in the adaptation of a part because necessary size changes in local variables are taken care of automatically. 

=== Minimizing and Documenting Assumptions ===

==== guideline ====

* Minimize the number of assumptions made by a unit. 
* For assumptions that cannot be avoided, use subtypes or constraints to automatically enforce conformance. 
* For assumptions that cannot be automatically enforced by subtypes, add explicit checks to the code. 
* Document all assumptions. 
* If the code depends upon the implementation of a specific Special Needs Annex for proper operation, document this assumption in the code. 

==== example ====
The following poorly written function documents but does not check its assumption: 

&lt;source lang=ada&gt;
   -- Assumption:  BCD value is less than 4 digits.
   function Binary_To_BCD (Binary_Value : in     Natural)
     return BCD;
&lt;/source&gt;

The next example enforces conformance with its assumption, making the checking automatic and the comment unnecessary: 

&lt;source lang=ada&gt;
   subtype Binary_Values is Natural range 0 .. 9_999;
   function Binary_To_BCD (Binary_Value : in     Binary_Values)
     return BCD;
&lt;/source&gt;

The next example explicitly checks and documents its assumption: 

&lt;source lang=ada&gt;
   ---------------------------------------------------------------------
   -- Out_Of_Range raised when BCD value exceeds 4  digits.
   function Binary_To_BCD (Binary_Value : in     Natural)
     return BCD is
      Maximum_Representable : constant Natural := 9_999;
   begin  -- Binary_To_BCD
      if Binary_Value &gt; Maximum_Representable then
         raise Out_Of_Range;
      end if;
      ...
   end Binary_To_BCD;
   ---------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Any part that is intended to be used again in another program, especially if the other program is likely to be written by other people, should be robust. It should defend itself against misuse by defining its interface to enforce as many assumptions as possible and by adding explicit defensive checks on anything that cannot be enforced by the interface. By documenting dependencies on a Special Needs Annex, you warn the user that he should only reuse the component in a compilation environment that provides the necessary support. 

==== notes ====

You can restrict the ranges of values of the inputs by careful selection or construction of the subtypes of the formal parameters. When you do so, the compiler-generated checking code may be more efficient than any checks you might write. Indeed, such checking is part of the intent of the strong typing in the language. This presents a challenge, however, for generic units where the user of your code selects the types of the parameters. Your code must be constructed to deal with any value of any subtype the user may choose to select for an instantiation. 

=== Subtypes in Generic Specifications ===

==== guideline ====

* Use first subtypes when declaring generic formal objects of mode in out. 
* Beware of using subtypes as subtype marks when declaring parameters or return values of generic formal subprograms. 
* Use attributes rather than literal values. 

==== example ====
In the following example, it appears that any value supplied for the generic formal object Object would be constrained to the range 1..10. It also appears that parameters passed at run-time to the Put routine in any instantiation and values returned by the Get routine would be similarly constrained: 

&lt;source lang=ada&gt;
   subtype Range_1_10 is Integer range 1 .. 10;
   ---------------------------------------------------------------------
   generic
      Object : in out Range_1_10;
      with procedure Put (Parameter : in     Range_1_10);
      with function  Get return Range_1_10;
   package Input_Output is
      ...
   end Input_Output;
   ---------------------------------------------------------------------
&lt;/source&gt;

However, this is not the case. Given the following legal instantiation: 

&lt;source lang=ada&gt;
   subtype Range_15_30 is Integer range 15 .. 30;
   Constrained_Object : Range_15_30 := 15;
   procedure Constrained_Put (Parameter : in     Range_15_30);
   function  Constrained_Get return Range_15_30;
   package Constrained_Input_Output is
      new Input_Output (Object =&gt; Constrained_Object,
                        Put    =&gt; Constrained_Put,
                        Get    =&gt; Constrained_Get);
   ...
&lt;/source&gt;

Object, Parameter, and the return value of Get are constrained to the range 15..30. Thus, for example, if the body of the generic package contains an assignment statement: 
&lt;source lang=ada&gt;
Object := 1;
&lt;/source&gt;

Constraint_Error is raised when this instantiation is executed. 

==== rationale ====

The language specifies that when constraint checking is performed for generic formal objects and parameters and return values of generic formal subprograms, the constraints of the actual subtype (not the formal subtype) are enforced (Ada Reference Manual 1995, §§12.4&quot;&gt; and 12.6).Thus, the subtype specified in a formal in out object parameter and the subtypes specified in the profile of a formal subprogram need not match those of the actual object or subprogram. 

Thus, even with a generic unit that has been instantiated and tested many times and with an instantiation that reported no errors at instantiation time, there can be a run-time error. Because the subtype constraints of the generic formal are ignored, the Ada Reference Manual (1995, §§12.4 and 12.6) suggests using the name of a base type in such places to avoid confusion. Even so, you must be careful not to assume the freedom to use any value of the base type because the instantiation imposes the subtype constraints of the generic actual parameter. To be safe, always refer to specific values of the type via symbolic expressions containing attributes like 'First, 'Last, 'Pred, and 'Succ rather than via literal values. 

For generics, attributes provide the means to maintain generality. It is possible to use literal values, but literals run the risk of violating some constraint. For example, assuming that an array's index starts at 1 may cause a problem when the generic is instantiated for a zero-based array type. 

==== notes ====

Adding a generic formal parameter that defines the subtype of the generic formal object does not address the ramifications of the constraint checking rule discussed in the above rationale. You can instantiate the generic formal type with any allowable subtype, and you are not guaranteed that this subtype is the first subtype: 

&lt;source lang=ada&gt;
generic
   type Object_Range is range &lt;&gt;;
   Objects : in out Object_Range;
   ...
package X is
   ...
end X;
&lt;/source&gt;

You can instantiate the subtype Object_Range with any Integer subtype, for example, Positive. However, the actual variable Object can be of Positive'Base, i.e., Integer and its value are not guaranteed to be greater than 0. 

=== Overloading in Generic Units ===

==== guideline ====

* Be careful about overloading the names of subprograms exported by the same generic package. 

==== example ====

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Item is limited private;
package Input_Output is
   procedure Put (Value : in     Integer);
   procedure Put (Value : in     Item);
end Input_Output;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

If the generic package shown in the example above is instantiated with Integer (or any subtype of Integer) as the actual type corresponding to generic formal Item, then the two Put procedures have identical interfaces, and all calls to Put are ambiguous. Therefore, this package cannot be used with type Integer. In such a case, it is better to give unambiguous names to all subprograms. See the Ada Reference Manual (1995, §12.3) for more information. 

=== Hidden Tasks ===

==== guideline ====

* Within a specification , document any tasks that would be activated by with'ing the specification and by using any part of the specification. 
* Document which generic formal parameters are accessed from a task hidden inside the generic unit.
* Document any multithreaded components. 

==== rationale ====
The effects of tasking become a major factor when reusable code enters the domain of real-time systems. Even though tasks may be used for other purposes, their effect on scheduling algorithms is still a concern and must be clearly documented. With the task clearly documented, the real-time programmer can then analyze performance, priorities, and so forth to meet timing requirements, or, if necessary, he can modify or even redesign the component.

Concurrent access to datastructures must be carefully planned to avoid errors, especially for data structures that are not atomic (see Chapter 6 for details). If a generic unit accesses one of its generic formal parameters (reads or writes the value of a generic formal object or calls a generic formal subprogram that reads or writes data) from within a task contained in the generic unit, then there is the possibility of concurrent access for which the user may not have planned. In such a case, the user should be warned by a comment in the generic specification. 

=== Exceptions ===

==== guideline ====

* Propagate exceptions out of reusable parts. Handle exceptions within reusable parts only when you are certain that the handling is appropriate in all circumstances. 
* Propagate exceptions raised by generic formal subprograms after performing any cleanup necessary to the correct operation of future invocations of the generic instantiation. 
* Leave state variables in a valid state when raising an exception. 
* Leave parameters unmodified when raising an exception. 

==== example ====

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Number is limited private;
   with procedure Get (Value :    out Number);
procedure Process_Numbers;

------------------------------------------------------------------------
procedure Process_Numbers is
   Local : Number;
   procedure Perform_Cleanup_Necessary_For_Process_Numbers is separate;
   ...
begin  -- Process_Numbers
   ...
   Catch_Exceptions_Generated_By_Get:
      begin
         Get (Local);
      exception
         when others =&gt;
            Perform_Cleanup_Necessary_For_Process_Numbers;
            raise;
      end Catch_Exceptions_Generated_By_Get;
   ...
end Process_Numbers;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

On most occasions, an exception is raised because an undesired event (such as floating-point overflow) has occurred. Such events often need to be dealt with entirely differently with different uses of a particular software part. It is very difficult to anticipate all the ways that users of the part may wish to have the exceptions handled. Passing the exception out of the part is the safest treatment. 

In particular, when an exception is raised by a generic formal subprogram, the generic unit is in no position to understand why or to know what corrective action to take. Therefore, such exceptions should always be propagated back to the caller of the generic instantiation. However, the generic unit must first clean up after itself, restoring its internal data structures to a correct state so that future calls may be made to it after the caller has dealt with the current exception. For this reason, all calls to generic formal subprograms should be within the scope of a when others exception handler if the internal state is modified, as shown in the example above. 

When a reusable part is invoked, the user of the part should be able to know exactly what operation (at the appropriate level of abstraction) has been performed. For this to be possible, a reusable part must always do all or none of its specified function; it must never do half. Therefore, any reusable part that terminates early by raising or propagating an exception should return to the caller with no effect on the internal or external state. The easiest way to do this is to test for all possible exceptional conditions before making any state changes (modifying internal state variables, making calls to other reusable parts to modify their states, updating files, etc.). When this is not possible, it is best to restore all internal and external states to the values that were current when the part was invoked before raising or propagating the exception. Even when this is not possible, it is important to document this potentially hazardous situation in the comment header of the specification of the part. 

A similar problem arises with parameters of mode out or in out when exceptions are raised. The Ada language distinguishes between &quot;by-copy&quot; and &quot;by-reference&quot; parameter passing. In some cases, &quot;by-copy&quot; is required; in other cases, &quot;by-reference&quot; is required; and in the remaining cases, either mechanism is allowed. The potential problem arises in those cases where the language does not specify the parameter passing mechanism to use. When an exception is raised, the copy-back does not occur, but for an Ada compiler, which passes parameters by reference (in those cases where a choice is allowed), the actual parameter has already been updated. When parameters are passed by copy, the update does not occur. To reduce ambiguity, increase portability, and avoid situations where some but not all of the actual parameters are updated when an exception is raised, it is best to treat values of out and in out parameters like state variables, updating them only after it is certain that no exception will be raised. 
See also Guideline 7.1.8. 

==== notes ====

A reusable part could range from a low-level building block (e.g., data structure, sorting algorithm, math function) to a large reusable subsystem. The lower level the building block, the less likely that the reusable part will know how to handle exceptions or produce meaningful results. Thus, the low-level parts should propagate exceptions. A large reusable subsystem, however, should be able to handle any anticipated exceptions independently of the variations across which it is reused. 

== Adaptability ==

Reusable parts often need to be changed before they can be used in a specific application. They should be structured so that change is easy and as localized as possible. One way of achieving adaptability is to create general parts with complete functionality, only a subset of which might be needed in a given application. Another way to achieve adaptability is to use Ada's generic construct to produce parts that can be appropriately instantiated with different parameters. Both of these approaches avoid the error-prone process of adapting a part by changing its code but have limitations and can carry some overhead. 
Anticipated changes, that is, changes that can be reasonably foreseen by the developer of the part, should be provided for as far as possible. Unanticipated changes can only be accommodated by carefully structuring a part to be adaptable. Many of the considerations pertaining to maintainability apply. If the code is of high quality, clear, and conforms to well-established design principles such as information hiding, it is easier to adapt in unforeseen ways. 

=== Complete Functionality ===

==== guideline ====

* Provide core functionality in a reusable part or set of parts so that the functionality in this abstraction can be meaningfully extended by its reusers. 
* More specifically, provide initialization and finalization procedures for every data structure that may contain dynamic data. 
* For data structures needing initialization and finalization, consider deriving them, when possible, from the types Ada.Finalization.Controlled or Ada.Finalization.Limited_Controlled. 

==== example ====

&lt;source lang=ada&gt;
   Incoming : Queue;
   ...
   Set_Initial (Incoming);     -- initialization operation
   ...
   if Is_Full (Incoming) then  -- query operation
      ...
   end if;
   ...
   Clean_Up (Incoming);        -- finalization operation
&lt;/source&gt;

==== rationale ====

This functionality is particularly important in designing/programming an abstraction. You have to balance the completeness of the abstraction against its extensibility. Completeness ensures that you have configured the abstraction correctly, without built-in assumptions about its execution environment. It also ensures the proper separation of functions so that they are useful to the current application and, in other combinations, to other applications. Extensibility ensures that reusers can add functionality by extension, using tagged type hierarchies (see Guideline 8.4.8 and Chapter 9) or child library packages (see Guidelines 4.1.6, 8.4.1, and 9.4.1). 

In designing for reuse, you need to think in terms of clean abstractions. If you provide too little functionality and rely on your reusers to extend the abstraction, they risk having an abstraction that lacks cohesion. This hodgepodge abstraction has inherited many operations, not all of which are necessary or work together. 

When a reusable part can be implemented reasonably using dynamic data, then any application that must control memory can use the initialization and finalization routines to guard against memory leakage. Then, if data structures become dynamic, the applications that are sensitive to these concerns can be easily adapted. 

The predefined types Ada.Finalization.Controlled or Ada.Finalization.Limited_Controlled provide automatic, user-definable initialization, adjustment, and finalization procedures. When you declare controlled types and objects, you are guaranteed that the compiler will insert the necessary calls to initialization, adjustment, and finalization, making your code less error-prone and more maintainable. When overriding the Initialize and Finalize routines on the controlled types, make sure to call the parent Initialize or Finalize. 

==== notes ====

The example illustrates end condition functions. An abstraction should be automatically initialized before its user gets a chance to damage it. When that is not possible, it should be supplied with initialization operations. In any case, it needs finalization operations. One way to supply the initialization and finalization operations is to derive the abstraction from the predefined types Ada.Finalization.Controlled or Ada.Finalization.Limited_Controlled. Wherever possible, query operations should be provided to determine when limits are about to be exceeded, so that the user can avoid causing exceptions to be raised. 

It is also useful to provide reset operations for many objects. To see that a reset and an initiation can be different, consider the analogous situation of a &quot;warm boot&quot; and a &quot;cold boot&quot; on a personal computer. 

Even if all of these operations are not appropriate for the abstraction, the exercise of considering them aids in formulating a complete set of operations, others of which may be used by another application. 

Some implementations of the language link all subprograms of a package into the executable file, ignoring whether they are used or not, making unused operations a liability (see Guideline 8.4.5). In such cases, where the overhead is significant, create a copy of the fully functional part and comment out the unused operations with an indication that they are redundant in this application. 

=== Generic Units ===

==== guideline ====

* Use generic units to avoid code duplication. 
* Parameterize generic units for maximum adaptability. 
* Reuse common instantiations of generic units, as well as the generic units themselves. 

==== rationale ====
Ada does not allow data types to be passed as actual parameters to subprograms during execution. Such parameters must be specified as generic formal parameters to a generic unit when it is instantiated. Therefore, if you want to write a subprogram for which there is variation from call to call in the data type of objects on which it operates, then you must write the subprogram as a generic unit and instantiate it once for each combination of data type parameters. The instantiations of the unit can then be called as regular subprograms. 

You can pass subprograms as actual parameters either by declaring access-to-subprogram values or generic formal subprogram parameters. See Guideline 5.3.4 for a discussion of the tradeoffs. 

If you find yourself writing two very similar routines differing only in the data type they operate on or the subprograms they call, then it is probably better to write the routine once as a generic unit and instantiate it twice to get the two versions you need. When the need arises later to modify the two routines, the change only needs to be made in one place. This greatly facilitates maintenance. 

Once you have made such a choice, consider other aspects of the routine that these two instances may have in common but that are not essential to the nature of the routine. Factor these out as generic formal parameters. When the need arises later for a third similar routine, it can be automatically produced by a third instantiation if you have foreseen all the differences between it and the other two. A parameterized generic unit can be very reusable. 

It may seem that the effort involved in writing generic rather than nongeneric units is substantial. However, making units generic is not much more difficult or time-consuming than making them nongeneric once you become familiar with the generic facilities. It is, for the most part, a matter of practice. Also, any effort put into the development of the unit will be recouped when the unit is reused, as it surely will be if it is placed in a reuse library with sufficient visibility. Do not limit your thinking about potential reuse to the application you are working on or to other applications with which you are very familiar. Applications with which you are not familiar or future applications might be able to reuse your software. 

After writing a generic unit and placing it in your reuse library, the first thing you are likely to do is to instantiate it once for your particular needs. At this time, it is a good idea to consider whether there are instantiations that are very likely to be widely used. If so, place each such instantiation in your reuse library so that they can be found and shared by others. 

See also Guideline 9.3.5. 

=== Formal Private and Limited Private Types ===

==== guideline ====

* Consider using a limited private type for a generic formal type when you do not need assignment on objects of the type inside the generic body. 
* Consider using a nonlimited private type for a generic formal type when you need normal assignment on objects of the type inside the body of the generic. 
* Consider using a formal tagged type derived from Ada.Finalization.Controlled when you need to enforce special assignment semantics on objects of the type in the body of the generic. 
* Export the least restrictive type that maintains the integrity of the data and abstraction while allowing alternate implementations. 
* Consider using a limited private abstract type for generic formal types of a generic that extends a formal private tagged type. 

==== example ====
The first example shows a case of a template providing only a data structure, a case in which assignment is clearly not needed in the body of the generic: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Element_Type is limited private;
package Generic_Doubly_Linked_Lists is
   type Cell_Type;
   type List_Type is access all Element_Type;
   type Cell_Type is
      record
         Data     : Element_Type;
         Next     : List_Type;
         Previous : List_Type;
      end record;
end Generic_Doubly_Linked_Lists;
&lt;/source&gt;

The second example shows a template that composes new operations out of (nonassignment) operations passed as generic formal parameters: 

&lt;source lang=ada&gt;
generic
   type Element_Type is limited private;
   with procedure Process_Element (X : in out Element_Type);
   type List_Type is array (Positive range &lt;&gt;) of Element_Type;
procedure Process_List (L : in out List_Type);
procedure Process_List (L : in out List_Type) is
begin -- Process_List
   for I in L'Range loop
      Process_Element (L(I));
   end loop;
end Process_List;
------------------------------------------------------------------------
generic
   type Domain_Type is limited private;
   type Intermediate_Type is limited private;
   type Range_Type is limited private;
   with function Left (X : Intermediate_Type) return Range_Type;
   with function Right (X : Domain_Type) return Intermediate_Type;
function Generic_Composition (X : Domain_Type) return Range_Type;
-- the function Left o Right
function Generic_Composition (X : Domain_Type) return Range_Type is
begin  -- generic_Composition
   return Left (Right (X));
end Generic_Composition;
&lt;/source&gt;

The third example shows how to use Ada's controlled types to provide special assignment semantics: 

&lt;source lang=ada&gt;
with Ada.Finalization;
generic
   type Any_Element is new Ada.Finalization.Controlled with private;
   Maximum_Stack_Size : in Natural := 100;
package Bounded_Stack is
   type Stack is private;
   procedure Push (On_Top      : in out Stack;
                   New_Element : in     Any_Element);
   procedure Pop  (From_Top    : in out Stack;
                   Top_Element :    out Any_Element);
   Overflow  : exception;
   Underflow : exception;
   ...
private
   type Stack_Information;
   type Stack is access Stack_Information;
end Bounded_Stack;
&lt;/source&gt;

==== rationale ====

For a generic component to be usable in as many contexts as possible, it should minimize the assumptions that it makes about its environment and should make explicit any assumptions that are necessary. In Ada, the assumptions made by generic units can be stated explicitly by the types of the generic formal parameters. A limited private generic formal type prevents the generic unit from making any assumptions about the structure of objects of the type or about operations defined for such objects. A private (nonlimited) generic formal type allows the assumption that assignment and equality comparison operations are defined for the type. Thus, a limited private data type cannot be specified as the actual parameter for a private generic formal type. 

In general, you should choose the private or limited private generic formal type based on the need for assignment inside a generic. Limited private types should be used for abstractions that do not need assignment, as in the first two examples above. In the third example, where assignment is needed, a type derived from a controlled type is specified to ensure that the correct assignment semantics will be available. If you need equality in the body of the generic, you may need to redefine equality as well to get the correct semantics; you would then need to include a formal generic subprogram parameter for the = function. 

The situation is reversed for types exported by a reusable part. For exported types, the restrictions specified by limited and limited private are restrictions on the user of the part, not on the part itself. To provide maximum capability to the user of a reusable part, export types with as few restrictions as possible. Apply restrictions as necessary to protect the integrity of the exported data structures and the abstraction for the various implementations envisioned for that generic. 

Because they are so restrictive, limited private types are not always the best choice for types exported by a reusable part. In a case where it makes sense to allow the user to make copies of and compare data objects, and when the underlying data type does not involve access types (so that the entire data structure gets copied or compared), then it is better to export a (nonlimited) private type. In a case where it makes sense to allow the user to make copies of and compare data objects and when the underlying data type involves access types (so that the entire data structure gets copied or compared), then it is better to export a controlled type and an (overridden) equality operation. In cases where it does not detract from the abstraction to reveal even more about the type, then a nonprivate type (e.g., a numeric, enumerated, record, or array type) should be used. 

One use of generic units is to create a mixin generic (see Guideline 8.3.8) to extend a tagged type. In this situation, you want to use the most restrictive type as the generic formal type, that is, a formal type that is both limited and abstract. When you instantiate the generic, if the actual type is nonlimited, the type extension will also be nonlimited. In the generic package, you must declare the type extension as abstract. The instantiator of the generic can then extend the type again to achieve the desired mixin configuration. 

==== notes ====

The predefined packages, Sequential_IO and Direct_IO, take private types. This will complicate I/O requirements for limited private types and should be considered during design. 

There are also some cases where you must use a limited private formal type. These cases arise when the formal type has an access discriminant, or the formal is used as the parent type in defining a type extension that itself includes a component of a limited type (e.g., task type), or the formal defines a new discriminant part with an access discriminant. 

=== Using Generic Units to Encapsulate Algorithms ===

==== guideline ====

* Use generic units to encapsulate algorithms independently of data type. 

==== example ====
This is the specification of a generic sort procedure: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Element is private;
   type Data    is array (Positive range &lt;&gt;) of Element;
   with function Should_Precede (Left  : in     Element;
                                 Right : in     Element)
          return Boolean is &lt;&gt;;
 with procedure Swap (Left  : in out Element;
                        Right : in out Element) is &lt;&gt;;
procedure Generic_Sort (Data_To_Sort : in out Data);
------------------------------------------------------------------------
&lt;/source&gt;

The generic body looks just like a regular procedure body and can make full use of the generic formal parameters in implementing the sort algorithm: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
procedure Generic_Sort (Data_To_Sort : in out Data) is
begin
   ...
   for I in Data_To_Sort'Range loop
      ...
         ...
         if Should_Precede (Data_To_Sort(J), Data_To_Sort(I)) then
            Swap(Data_To_Sort(I), Data_To_Sort(J));
         end if;
         ...
      ...
   end loop;
   ...
end Generic_Sort;
------------------------------------------------------------------------
&lt;/source&gt;

The generic procedure can be instantiated as: 

&lt;source lang=ada&gt;
   type Integer_Array is array (Positive range &lt;&gt;) of Integer;
   function Should_Precede (Left  : in     Integer;
                            Right : in     Integer)
     return Boolean;

   procedure Swap (Left  : in out Integer;
                   Right : in out Integer);
   procedure Sort is
      new Generic_Sort (Element =&gt; Integer,
                        Data    =&gt; Integer_Array);
&lt;/source&gt;

or: 

&lt;source lang=ada&gt;
   subtype String_80    is String (1 .. 80);
   type    String_Array is array (Positive range &lt;&gt;) of String_80;
   function Should_Precede (Left  : in     String_80;
                            Right : in     String_80)
     return Boolean;

   procedure Swap (Left  : in out String_80;
                   Right : in out String_80);

   procedure Sort is
      new Generic_Sort (Element =&gt; String_80,
                        Data    =&gt; String_Array);
&lt;/source&gt;

and called as: 

&lt;source lang=ada&gt;
   Integer_Array_1 : Integer_Array (1 .. 100);
   ...
   Sort (Integer_Array_1);
&lt;/source&gt;

or: 

&lt;source lang=ada&gt;
   String_Array_1  : String_Array  (1 .. 100);
   ...
   Sort (String_Array_1);
&lt;/source&gt;

==== rationale ====

A sort algorithm can be described independently of the data type being sorted. This generic procedure takes the Element data type as a generic limited private type parameter so that it assumes as little as possible about the data type of the objects actually being operated on. It also takes Data as a generic formal parameter so that instantiations can have entire arrays passed to them for sorting. Finally, it explicitly requires the two operators that it needs to do the sort: Should_Precede and Swap. The sort algorithm is encapsulated without reference to any data type. The generic can be instantiated to sort an array of any data type. 
8.3.5 Using Generic Units for Data Abstraction 
==== guideline ====

* Consider using abstract data types (not to be confused with Ada's abstract types) in preference to abstract data objects. 
* Consider using generic units to implement abstract data types independently of their component data type. 

==== example ====
This example presents a series of different techniques that can be used to generate abstract data types and objects. A discussion of the merits of each follows in the rationale section below. The first is an abstract data object (ADO), which can be used to encapsulate an abstract state machine. It encapsulates one stack of integers: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
package Bounded_Stack is
   subtype Element is Integer;
   Maximum_Stack_Size : constant := 100;
   procedure Push (New_Element : in     Element);
   procedure Pop  (Top_Element :    out Element);
   Overflow  : exception;
   Underflow : exception;
   ...
end Bounded_Stack;
------------------------------------------------------------------------
&lt;/source&gt;

The second example is an abstract data type (ADT). It differs from the ADO by exporting the Stack type, which allows the user to declare any number of stacks of integers. Because multiple stacks may now exist, it is necessary to specify a Stack argument on calls to Push and Pop: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
package Bounded_Stack is
   subtype Element is Integer;
   type    Stack   is limited private;
   Maximum_Stack_Size : constant := 100;
   procedure Push (On_Top      : in out Stack;
                   New_Element : in     Element);
   procedure Pop  (From_Top    : in out Stack;
                   Top_Element :    out Element);
   Overflow  : exception;
   Underflow : exception;
   ...
private
   type Stack_Information;
   type Stack is access Stack_Information;
end Bounded_Stack;
------------------------------------------------------------------------
&lt;/source&gt;

The third example is a parameterless generic abstract data object (GADO). It differs from the ADO (the first example) simply by being generic, so that the user can instantiate it multiple times to obtain multiple stacks of integers: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
package Bounded_Stack is
   subtype Element is Integer;
   Maximum_Stack_Size : constant := 100;
   procedure Push (New_Element : in     Element);
   procedure Pop  (Top_Element :    out Element);
   Overflow  : exception;
   Underflow : exception;
   ...
end Bounded_Stack;
------------------------------------------------------------------------
&lt;/source&gt;

The fourth example is a slight variant on the third, still a GADO but with parameters. It differs from the third example by making the data type of the stack a generic parameter so that stacks of data types other than Integer can be created. Also, Maximum_Stack_Size has been made a generic parameter that defaults to 100 but can be specified by the user, rather than a constant defined by the package: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Element is private;
   Maximum_Stack_Size : in Natural := 100;
package Bounded_Stack is
   procedure Push (New_Element : in     Element);
   procedure Pop  (Top_Element :    out Element);
   Overflow  : exception;
   Underflow : exception;
   ...
end Bounded_Stack;
------------------------------------------------------------------------
&lt;/source&gt;

The fifth example is a generic abstract data type (GADT). It differs from the GADO in the fourth example in the same way that the ADT in the second example differed from the ADO in the first example; it exports the Stack type, which allows the user to declare any number of stacks: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Element is private;
   Maximum_Stack_Size : in Natural := 100;
package Bounded_Stack is
   type Stack is private;
   procedure Push (On_Top      : in out Stack;
                   New_Element : in     Element);
   procedure Pop  (From_Top    : in out Stack;
                   Top_Element :    out Element);
   Overflow  : exception;
   Underflow : exception;
   ...
private
   type Stack_Information;
   type Stack is access Stack_Information;
end Bounded_Stack;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

The biggest advantage of an ADT over an ADO (or a GADT over a GADO) is that the user of the package can declare as many objects as desired with an ADT. These objects can be declared as standalone variables or as components of arrays and records. They can also be passed as parameters. None of this is possible with an ADO, where the single data object is encapsulated inside of the package. Furthermore, an ADO provides no more protection of the data structure than an ADT. When a private type is exported by the ADT package, as in the example above, then for both the ADO and ADT, the only legal operations that can modify the data are those defined explicitly by the package (in this case, Push and Pop). For these reasons, an ADT or GADT is almost always preferable to an ADO or GADO, respectively. 

A GADO is similar to an ADT in one way: it allows multiple objects to be created by the user. With an ADT, multiple objects can be declared using the type defined by the ADT package. With a GADO (even a GADO with no generic formal parameters, as shown in the third example), the package can be instantiated multiple times to produce multiple objects. However, the similarity ends there. The multiple objects produced by the instantiations suffer from all restrictions described above for ADOs; they cannot be used in arrays or records or passed as parameters. Furthermore, the objects are each of a different type, and no operations are defined to operate on more than one of them at a time. For example, there cannot be an operation to compare two such objects or to assign one to another. The multiple objects declared using the type defined by an ADT package suffer from no such restrictions; they can be used in arrays and records and can be passed as parameters. Also, they are all declared to be of the same type, so that it is possible for the ADT package to provide operations to assign, compare, copy, etc. For these reasons, an ADT is almost always preferable to a parameterless GADO. 

The biggest advantage of a GADT or GADO over an ADT or ADO, respectively, is that the GADT and GADO are generic and can thus be parameterized with types, subprograms, and other configuration information. Thus, as shown above, a single generic package can support bounded stacks of any data type and any stack size, while the ADT and ADO above are restricted to stacks of Integer, no more than 100 in size. For this reason, a GADO or GADT is almost always preferable to an ADO or ADT. 

The list of examples above is given in order of increasing power and flexibility, starting with an ADO and ending with a GADT. These advantages are not expensive in terms of complexity or development time. The specification of the GADT above is not significantly harder to write or understand than the specification of the ADO. The bodies are also nearly identical. 

Compare the body for the simplest version, the ADO: 

------------------------------------------------------------------------
package body Bounded_Stack is
   type Stack_Slots is array (Natural range &lt;&gt;) of Element;
   type Stack_Information is
      record
         Slots : Stack_Slots (1 .. Maximum_Stack_Size);
         Index : Natural := 0;
      end record;
   Stack : Stack_Information;
   ---------------------------------------------------------------------
   procedure Push (New_Element : in     Element) is
   begin
      if Stack.Index &gt;= Maximum_Stack_Size then
         raise Overflow;
      end if;
      Stack.Index := Stack.Index + 1;
      Stack.Slots(Stack.Index) := New_Element;
   end Push;
   ---------------------------------------------------------------------
   procedure Pop (Top_Element :    out Element) is
   begin
      if Stack.Index &lt;= 0 then
         raise Underflow;
      end if;
      Top_Element := Stack.Slots(Stack.Index);
      Stack.Index := Stack.Index - 1;
   end Pop;
   ---------------------------------------------------------------------
   ...
end Bounded_Stack;
------------------------------------------------------------------------

with the body for the most powerful and flexible version, the GADT: 

------------------------------------------------------------------------
package body Bounded_Stack is
   type Stack_Slots is array (Natural range &lt;&gt;) of Element;
   type Stack_Information is
      record
         Slots : Stack_Slots (1 .. Maximum_Stack_Size);
         Index : Natural := 0;
      end record;
   ---------------------------------------------------------------------
   procedure Push (On_Top      : in out Stack;
                   New_Element : in     Element) is
   begin
      if On_Top.Index &gt;= Maximum_Stack_Size then
         raise Overflow;
      end if;
      On_Top.Index := On_Top.Index + 1;
      On_Top.Slots(On_Top.Index) := New_Element;
   end Push;
   ---------------------------------------------------------------------
   procedure Pop (From_Top    : in out Stack;
                  Top_Element :    out Element) is
   begin
      if From_Top.Index &lt;= 0 then
         raise Underflow;
      end if;
      Top_Element := From_Top.Slots(From_Top.Index);

      From_Top.Index := From_Top.Index - 1;
   end Pop;
   ---------------------------------------------------------------------
   ...
end Bounded_Stack;
------------------------------------------------------------------------

There is only one difference. The ADO declares a local object called Stack, while the GADT has one additional parameter (called Stack) on each of the exported procedures Push and Pop. 

=== Iterators ===

==== guideline ====

* Provide iterators for traversing complex data structures within reusable parts. 
* Consider providing both active and passive iterators. 
* Protect the iterators from errors due to modification of the data structure during iteration. 
* Document the behavior of the iterators when the data structure is modified during traversal. 

==== example ====
Ada provides several mechanisms for building reusable iterators. The following examples discuss the alternatives of &quot;simple&quot; generics, access discriminants, and type extension. The terms active and passive are used to differentiate whether the iteration mechanism (i.e., the way in which the complex data structure is traversed) is exposed or hidden. A passive iterator hides the traversal (e.g., looping mechanism) and consists of a single operation, iterate, that is parameterized by the processing you do on each element of the data structure. By contrast, an active iterator exposes the primitive operations by which you traverse the data structure (Booch 1987). 

The first example shows a generic package that defines an abstract list data type, with both active and passive iterators for traversing a list: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Element is limited private;
   ...
package Unbounded_List is
   type List is limited private;
   procedure Insert (New_Element : in     Element;
                     Into        : in out List);
   -- Passive (generic) iterator.
   generic
      with procedure Process (Each : in out Element);
   procedure Iterate (Over : in     List);
   -- Active iterator
   type Iterator is limited private;

   procedure Initialize (Index         : in out Iterator;
                         Existing_List : in     List);

   function  More       (Index         : in     Iterator)
     return Boolean;

   -- The procedure Get_Next combines an &quot;Advance&quot; and &quot;Current&quot; function
   procedure Get_Next   (Index           : in out Iterator;
                         Current_Element :    out Element);
   ...
private
   ...
end Unbounded_List;
------------------------------------------------------------------------
&lt;/source&gt;

After instantiating the generic package and declaring a list as: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
with Unbounded_List;
procedure List_User is
   type Employee is ...;
   package Roster is
      new Unbounded_List (Element =&gt; Employee, ...);
   Employee_List : Roster.List;
&lt;/source&gt;

the passive iterator is instantiated, specifying the name of the routine that should be called for each list element when the iterator is called. 

&lt;source lang=ada&gt;
   ---------------------------------------------------------------------
   procedure Process_Employee (Each : in out Employee) is
   begin
      ...
      -- Perform the required action for EMPLOYEE here.
   end Process_Employee;
   ---------------------------------------------------------------------
   procedure Process_All is
      new Roster.Iterate (Process =&gt; Process_Employee);
&lt;/source&gt;

The passive iterator can then be called as: 

&lt;source lang=ada&gt;
begin  -- List_User
   Process_All (Employee_List);
end List_User;
------------------------------------------------------------------------
&lt;/source&gt;

Alternatively, the active iterator can be used without the second instantiation required by the passive iterator: 

&lt;source lang=ada&gt;
   Iterator         : Roster.Iterator;
   Current_Employee : Employee;
   procedure Process_Employee (Each : in     Employee) is separate;
begin  -- List_User
   Roster.Initialize (Index         =&gt; Iterator,
                      Existing_List =&gt; Employee_List);

   while Roster.More (Iterator) loop

      Roster.Get_Next (Index           =&gt; Iterator,
                       Current_Element =&gt; Current_Employee);

      Process_Employee (Current_Employee);

   end loop;
end List_User;
------------------------------------------------------------------------
&lt;/source&gt;

The second example shows a code excerpt from Rationale (1995, §3.7.1) on how to construct iterators using access discriminants: 

&lt;source lang=ada&gt;
generic
   type Element is private;
package Sets is
   type Set is limited private;
   ... -- various set operations
   type Iterator (S : access Set) is limited private;
   procedure Start (I : Iterator);
   function Done (I : Iterator) return Boolean;
   procedure Next (I : in out Iterator);
   ...  -- other iterator operations
private
   type Node;
   type Ptr is access Node;
   type Node is
      record
         E    : Element;
         Next : Ptr;
      end record;
   type Set is new Ptr;
   type Iterator (S : access Set) is
      record
         This : Ptr;
      end record;
end Sets;
package body Sets is
   ...  -- bodies of the various set operations
   procedure Start (I : in out Iterator) is
   begin
      I.This := Ptr(I.S.all);
   end Start;
   function Done (I : Iterator) return Boolean is
   begin
      return I.This = null;
   end Done;
   procedure Next (I : in out Iterator) is
   begin
      I.This := I.This.Next;
   end Next;
   ...
end Sets;
&lt;/source&gt;

The iterator operations allow you to iterate over the elements of the set with the component This of the iterator object accessing the current element. The access discriminant always points to the enclosing set to which the current element belongs. 

The third example uses code fragments from Rationale (1995, §4.4.4) to show an iterator using type extension and dispatching: 

&lt;source lang=ada&gt;
type Element is ...
package Sets is
   type Set is limited private;
   -- various set operations
   type Iterator is abstract tagged null record;
   procedure Iterate (S : in Set; IC : in out Iterator'Class);
   procedure Action (E : in out Element;
                     I : in out Iterator) is abstract;
private
   -- definition of Node, Ptr (to Node), and Set
end Sets;
package body Sets is
   ...
   procedure Iterate (S : in Set; IC : in out Iterator'Class) is
      This : Ptr := Ptr (S);
   begin
      while This /= null loop
         Action (This.E, IC);  -- dispatch
         This := This.Next;
      end loop;
   end Iterate;
end Sets;
&lt;/source&gt;

The general purpose iterator looks like this: 

&lt;source lang=ada&gt;
package Sets.Something is
   procedure Do_Something (S : Set; P : Parameters);
end Sets.Something;
package body Sets.Something is
   type My_Iterator is new Iterator with
      record
         -- components for parameters and workspace
      end record;
   procedure Action (E : in out Element;
                     I : in out My_Iterator) is
   begin
      -- do something to element E using data from iterator I
   end Action;
   procedure Do_Something (S : Set; P : Parameters) is
      I : My_Iterator;
   begin  -- Do_Something
      ...  -- copy parameters into iterator
      Iterate (S, I);
      ... copy any results from iterator back to parameters
   end Do_Something;

end Sets.Something;
&lt;/source&gt;

==== rationale ====

Iteration over complex data structures is often required and, if not provided by the part itself, can be difficult to implement without violating information hiding principles. 

Active and passive iterators each have their advantages, but neither is appropriate in all situations. Therefore, it is recommended that both be provided to give the user a choice of which to use in each situation. 

Passive iterators are simpler and less error-prone than active iterators, in the same way that the for loop is simpler and less error-prone than the while loop. There are fewer mistakes that the user can make in using a passive iterator. Simply instantiate it with the routine to be executed for each list element, and call the instantiation for the desired list. Active iterators require more care by the user. Care must be taken to invoke the iterator operations in the proper sequence and to associate the proper iterator variable with the proper list variable. It is possible for a change made to the software during maintenance to introduce an error, perhaps an infinite loop. 

On the other hand, active iterators are more flexible than passive iterators. With a passive iterator, it is difficult to perform multiple, concurrent, synchronized iterations. For example, it is much easier to use active iterators to iterate over two sorted lists, merging them into a third sorted list. Also, for multidimensional data structures, a small number of active iterator routines may be able to replace a large number of passive iterators, each of which implements one combination of the active iterators. Finally, active iterators can be passed as generic formal parameters while passive iterators cannot because passive iterators are themselves generic, and generic units cannot be passed as parameters to other generic units. 

For either type of iterator, semantic questions can arise about what happens when the data structure is modified as it is being iterated. When writing an iterator, be sure to consider this possibility, and indicate with comments the behavior that occurs in such a case. It is not always obvious to the user what to expect. For example, to determine the &quot;closure&quot; of a mathematical &quot;set&quot; with respect to some operation, a common algorithm is to iterate over the members of the set, generating new elements and adding them to the set. In such a case, it is important that elements added to the set during the iteration be encountered subsequently during the iteration. On the other hand, for other algorithms, it may be important that the iterated set is the same set that existed at the beginning of the iteration. In the case of a prioritized list data structure, if the list is iterated in priority order, it may be important that elements inserted at lower priority than the current element during iteration not be encountered subsequently during the iteration but that elements inserted at a higher priority should be encountered. In any case, make a conscious decision about how the iterator should operate, and document that behavior in the package specification. 

Deletions from the data structure also pose a problem for iterators. It is a common mistake for a user to iterate over a data structure, deleting it piece by piece during the iteration. If the iterator is not prepared for such a situation, it is possible to end up dereferencing a null pointer or committing a similar error. Such situations can be prevented by storing extra information with each data structure, which indicates whether it is currently being iterated, and using this information to disallow any modifications to the data structure during iteration. When the data structure is declared as a limited private type, as should usually be the case when iterators are involved, the only operations defined on the type are declared explicitly in the package that declares the type, making it possible to add such tests to all modification operations. 

The Rationale (1995, §4.4.4) notes that the access discriminant and type extension techniques are inversions of each other. In the access discriminant approach, you have to write out the looping mechanism for each action. In the type extension approach, you write one loop and dispatch to the desired action. Thus, an iterator that uses the access discriminant technique would be considered active, while an iterator that uses the type extension technique would be considered passive. 

==== notes ====

You can use an access to subprogram type as an alternative to generic instantiation, using a nongeneric parameter as a pointer to subprogram. You would then apply the referenced subprogram to every element in a collection ( Rationale 1995, §3.7.2). There are drawbacks to this approach, however, because you cannot use it to create a general purpose iterator. Anonymous access to subprogram parameters is not allowed in Ada; thus, the following fragment is illegal: 

&lt;source lang=ada&gt;
procedure Iterate (C      : Collection;
                   Action : access procedure (E : in out Element));
&lt;/source&gt;

The formal parameter Action must be of a named access subtype, as in: 

&lt;source lang=ada&gt;
type Action_Type is access procedure (E : in out Element);
procedure Iterate (C      : Collection;
                   Action : Action_Type);
&lt;/source&gt;

In order for this to work, you must make sure that the action subprogram is in scope and not defined internal to another subprogram. If it is defined as a nested procedure, it would be illegal to access it. See the Rationale (1995, §4.4.4) for a more complete example. 

For further discussion of passive and active iterators, see the Rationale (1995, §3.7.1 and §4.4.4), Ross (1989), and Booch (1987). 

=== Decimal Type Output and Information Systems Annex ===

==== guideline ====

* Localize the currency symbol, digits separator, radix mark, and fill character in picture output. 
* Consider using the # character in picture layouts so that the edited numeric output lengths are invariant across currency symbols of different lengths. 

==== example ====

&lt;source lang=ada&gt;
with Ada.Text_IO.Editing;
package Currency is

   type Dollars is delta 0.01 digits 10;
   type Marks   is delta 0.01 digits 10;

   package Dollar_Output is
      new Ada.Text_IO.Editing.Decimal_Output
             (Num                =&gt; Dollars,
              Default_Currency   =&gt; &quot;$&quot;,
              Default_Fill       =&gt; '*',
              Default_Separator  =&gt; ',',
              Default_Radix_Mark =&gt; '.');

   package Mark_Output is
      new Ada.Text_IO.Editing.Decimal_Output
             (Num                =&gt; Marks,
              Default_Currency   =&gt; &quot;DM&quot;,
              Default_Fill       =&gt; '*',
              Default_Separator  =&gt; '.',
              Default_Radix_Mark =&gt; ',');

end Currency;
with Ada.Text_IO.Editing;
with Currency;  use Currency;
procedure Test_Picture_Editing is

   DM_Amount     : Marks;
   Dollar_Amount : Dollars;

   Amount_Picture : constant Ada.Text_IO.Editing.Picture 
      := Ada.Text_IO.Editing.To_Picture (&quot;##ZZ_ZZZ_ZZ9.99&quot;);

begin   -- Test_Picture_Editing

   DM_Amount     := 1_234_567.89;
   Dollar_Amount := 1_234_567.89;

   DM_Output.Put (Item =&gt; DM_Amount,
                  Pic  =&gt; Amount_Picture);

   Dollar_Output.Put (Item =&gt; Dollar_Amount,
                      Pic  =&gt; Amount_Picture);
   
end Test_Picture_Editing;
&lt;/source&gt;

==== rationale ====

Currencies differ in how they are displayed in a report. Currencies use different symbols of different lengths (e.g., the American $, the German DM, and the Austrian ÖS). They use different symbols to separate digits. The United States and the United Kingdom use the comma to separate groups of thousands, whereas Continental Europe uses the period. The United States and the United Kingdom use a period as a decimal point; Continental Europe uses the comma. For a program involving financial calculations that is to be reused across countries, you need to take these differences into account. By encapsulating them, you limit the impact of change in adapting the financial package. 

=== Implementing Mixins ===

==== guideline ====

* Consider using abstract tagged types and generics to define reusable units of functionality that can be &quot;mixed into&quot; core abstractions (also known as mixins). 

==== example ====
Note the use of an abstract tagged type as a generic formal parameter and as the exported extended type in the pattern that follows, excerpted from the Rationale (1995, §4.6.2): 

&lt;source lang=ada&gt;
generic
   type S is abstract tagged private;
package P is
   type T is abstract new S with private;
   -- operations on T
private
   type T is abstract new S with
      record
         -- additional components
      end record;
end P;
&lt;/source&gt;

The following code shows how the generic might be instantiated to &quot;mixin&quot; the desired features in the final type extension. See also Guideline 9.5.1 for a related example of code. 

&lt;source lang=ada&gt;
-- Assume that packages P1, P2, P3, and P4 are generic packages which take a tagged
-- type as generic formal type parameter and which export a tagged type T
package Q is
   type My_T is new Basic_T with private;
   ... -- exported operations
private
   package Feature_1 is new P1 (Basic_T);
   package Feature_2 is new P2 (Feature_1.T);
   package Feature 3 is new P3 (Feature_2.T);
   package Feature_4 is new P4 (Feature_3.T);
   -- etc.
   type My_T is new Feature_4.T with null record;
end Q;
&lt;/source&gt;

==== rationale ====

The Rationale (1995, §4.6.2) discusses the use of a generic template to define the properties to be mixed in to your abstraction: 

The generic template defines the mixin. The type supplied as generic actual parameter determines the parent . . . the body provides the operations and the specification exports the extended type.

If you have defined a series of generic mixin packages, you would then serialize the instantiations. The actual parameter to the next instantiation is the exported tagged type from the previous instantiation. This is shown in the second code segment in the example. Each extension is derived from a previous extension, so you have a linearized succession of overriding subprograms. Because they are linearized, you have a derivation order you can use to resolve any conflicts. 

You should encapsulate one extension (and related operations) per generic package. This provides a better separation of concerns and more maintainable, reusable components. 

See Guideline 9.5.1 for a full discussion of the use of mixins. 

== Independence ==

A reusable part should be as independent as possible from other reusable parts. A potential user is less inclined to reuse a part if that part requires the use of other parts that seem unnecessary. The &quot;extra baggage&quot; of the other parts wastes time and space. A user would like to be able to reuse only that part that is perceived as useful. 
The concept of a &quot;part&quot; is intentionally vague here. A single package does not need to be independent of each other package in a reuse library if the &quot;parts&quot; from that library that are typically reused are entire subsystems. If the entire subsystem is perceived as providing a useful function, the entire subsystem is reused. However, the subsystem should not be tightly coupled to all the other subsystems in the reuse library so that it is difficult or impossible to reuse the subsystem without reusing the entire library. Coupling between reusable parts should only occur when it provides a strong benefit perceptible to the user. 

=== Subsystem Design ===

==== guideline ====

* Consider structuring subsystems so that operations that are only used in a particular context are in different child packages than operations used in a different context. 
* Consider declaring context-independent functionality in the parent package and context-dependent functionality in child packages. 

==== rationale ====
The generic unit is a basic building block. Generic parameterization can be used to break dependencies between program units so that they can be reused separately. However, it is often the case that a set of units, particularly a set of packages, are to be reused together as a subsystem. In this case, the packages can be collected into a hierarchy of child packages, with private packages to hide internal details. The hierarchy may or may not be generic. Using the child packages allows subsystems to be reused without incorporating too many extraneous operations because the unused child packages can be discarded in the new environment. 

See also Guidelines 4.1.6 and 8.3.1. 

=== Using Generic Parameters to Reduce Coupling ===

==== guideline ====

* Minimize with clauses on reusable parts, especially on their specifications. 
* Consider using generic parameters instead of with statements to reduce the number of context clauses on a reusable part. 
* Consider using generic formal package parameters to import directly all the types and operations defined in an instance of a preexisting generic. 

==== example ====
A procedure like the following: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
with Package_A;
procedure Produce_And_Store_A is
   ...
begin  -- Produce_And_Store_A
   ...
   Package_A.Produce (...);
   ...
   Package_A.Store (...);
   ...
end Produce_And_Store_A;
------------------------------------------------------------------------
&lt;/source&gt;

can be rewritten as a generic unit: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   with procedure Produce (...);
   with procedure Store   (...);
procedure Produce_And_Store;
------------------------------------------------------------------------
procedure Produce_And_Store is
   ...
begin  -- Produce_And_Store
   ...
   Produce (...);
   ...
   Store   (...);
   ...
end Produce_And_Store;
------------------------------------------------------------------------
&lt;/source&gt;

and then instantiated: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
with Package_A;
with Produce_And_Store;
procedure Produce_And_Store_A is
   new Produce_And_Store (Produce =&gt; Package_A.Produce,
                          Store   =&gt; Package_A.Store);
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Context (with) clauses specify the names of other units upon which this unit depends. Such dependencies cannot and should not be entirely avoided, but it is a good idea to minimize the number of them that occur in the specification of a unit. Try to move them to the body, leaving the specification independent of other units so that it is easier to understand in isolation. Also, organize your reusable parts in such a way that the bodies of the units do not contain large numbers of dependencies on each other. Partitioning your library into independent functional areas with no dependencies spanning the boundaries of the areas is a good way to start. Finally, reduce dependencies by using generic formal parameters instead of with statements, as shown in the example above. If the units in a library are too tightly coupled, then no single part can be reused without reusing most or all of the library. 

The first (nongeneric) version of Produce_And_Store_A above is difficult to reuse because it depends on Package_A that may not be general purpose or generally available. If the operation Produce_And_Store has reuse potential that is reduced by this dependency, a generic unit and an instantiation should be produced as shown above. The with clause for Package_A has been moved from the Produce_And_Store generic procedure, which encapsulates the reusable algorithm to the Produce_And_Store_A instantiation. Instead of naming the package that provides the required operations, the generic unit simply lists the required operations themselves. This increases the independence and reusability of the generic unit. 

This use of generic formal parameters in place of with clauses also allows visibility at a finer granularity. The with clause on the nongeneric version of Produce_And_Store_A makes all of the contents of Package_A visible to Produce_And_Store_A, while the generic parameters on the generic version make only the Produce and Store operations available to the generic instantiation. 

Generic formal packages allow for &quot;safer and simpler composition of generic abstractions&quot; ( Rationale 1995, §12.6). The generic formal package allows you to group a set of related types and their operations into a single unit, avoiding having to list each type and operation as an individual generic formal parameter. This technique allows you to show clearly that you are extending the functionality of one generic with another generic, effectively parameterizing one abstraction with another. 

=== Coupling Due to Pragmas ===

==== guideline ====

* In the specification of a generic library unit, use pragma Elaborate_Body. 

==== example ====
&lt;source lang=ada&gt;
---------------------------------------------------------------------------
generic
   ...
package Stack is

   pragma Elaborate_Body (Stack); -- in case the body is not yet elaborated

   ...
end Stack;
---------------------------------------------------------------------------
with Stack;
package My_Stack is
   new Stack (...);
---------------------------------------------------------------------------
package body Stack is
begin
   ...
end Stack;
---------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

The elaboration order of compilation units is only constrained to follow the compilation order. Furthermore, any time you have an instantiation as a library unit or an instantiation in a library package, Ada requires that you elaborate the body of the generic being instantiated before elaborating the instantiation itself. Because a generic library unit body may be compiled after an instantiation of that generic, the body may not necessarily be elaborated at the time of the instantiation, causing a Program_Error. Using pragma Elaborate_Body avoids this by requiring that the generic unit body be elaborated immediately after the specification, whatever the compilation order. 

When there is clear requirement for a recursive dependency, you should use pragma Elaborate_Body. This situation arises, for example, when you have a recursive dependency (i.e., package A's body depends on package B's specification and package B's body depends on package A's specification). 

==== notes ====

Pragma Elaborate_All controls the order of elaboration of one unit with respect to another. This is another way of coupling units and should be avoided when possible in reusable parts because it restricts the number of configurations in which the reusable parts can be combined. Recognize, however, that pragma Elaborate_All provides a better guarantee of elaboration order because if using this pragma uncovers elaboration problems, they will be reported at link time (as opposed to a run-time execution error). 

Any time you call a subprogram (typically a function) during the elaboration of a library unit, the body of the subprogram must have been elaborated before the library unit. You can ensure this elaboration happens by adding a pragma Elaborate_Body for the unit containing the function. If, however, that function calls other functions, then it is safer to put a pragma Elaborate_All on the unit containing the function. 

For a discussion of the pragmas Pure and Preelaborate, see also the Ada Reference Manual (1995, §10.2.1) and the Rationale (1995, §10.3). If you use either pragma Pure or Preelaborate, you will not need the pragma Elaborate_Body. 

The idea of a registry is fundamental to many object-oriented programming frameworks. Because other library units will need to call it during their elaboration, you need to make sure that the registry itself is elaborated early. Note that the registry should only depend on the root types of the type hierarchies and that the registry should only hold &quot;class-wide&quot; pointers to the objects, not more specific pointers. The root types should not themselves depend on the registry. See Chapter 9 for a more complete discussion of the use of object-oriented features. 

=== Part Families ===

==== guideline ====

* Create families of generic or other parts with similar specifications. 

==== example ====
The Booch parts (Booch 1987) are an example of the application of this guideline. 

==== rationale ====

Different versions of similar parts (e.g., bounded versus unbounded stacks) may be needed for different applications or to change the properties of a given application. Often, the different behaviors required by these versions cannot be obtained using generic parameters. Providing a family of parts with similar specifications makes it easy for the programmer to select the appropriate one for the current application or to substitute a different one if the needs of the application change. 

==== notes ====

A reusable part that is structured from subparts that are members of part families is particularly easy to tailor to the needs of a given application by substitution of family members. 

Guideline 9.2.4 discusses the use of tagged types in building different versions of similar parts (i.e., common interface, multiple implementations). 

=== Conditional Compilation ===

==== guideline ====

* Structure reusable code to take advantage of dead code removal by the compiler. 

==== example ====

&lt;source lang=ada&gt;
------------------------------------------------------------------------
package Matrix_Math is
   ...
   type Algorithm is (Gaussian, Pivoting, Choleski, Tri_Diagonal);
   generic
      Which_Algorithm : in     Algorithm := Gaussian;
   procedure Invert ( ... );
end Matrix_Math;
------------------------------------------------------------------------
package body Matrix_Math is
   ...
   ---------------------------------------------------------------------
   procedure Invert ( ... ) is
      ...
   begin  -- Invert
      case Which_Algorithm is
         when Gaussian     =&gt; ... ;
         when Pivoting     =&gt; ... ;
         when Choleski     =&gt; ... ;
         when Tri_Diagonal =&gt; ... ;
      end case;
   end Invert;
   ---------------------------------------------------------------------
end Matrix_Math;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Some compilers omit object code corresponding to parts of the program that they detect can never be executed. Constant expressions in conditional statements take advantage of this feature where it is available, providing a limited form of conditional compilation. When a part is reused in an implementation that does not support this form of conditional compilation, this practice produces a clean structure that is easy to adapt by deleting or commenting out redundant code where it creates an unacceptable overhead. 

This feature should be used when other factors prevent the code from being separated into separate program units. In the above example, it would be preferable to have a different procedure for each algorithm. But the algorithms may differ in slight but complex ways to make separate procedures difficult to maintain. 

==== caution ====

Be aware of whether your implementation supports dead code removal, and be prepared to take other steps to eliminate the overhead of redundant code if necessary. 

=== Table-Driven Programming ===

==== guideline ====

* Write table-driven reusable parts wherever possible and appropriate. 

==== example ====
The epitome of table-driven reusable software is a parser generation system. A specification of the form of the input data and of its output, along with some specialization code, is converted to tables that are to be &quot;walked&quot; by preexisting code using predetermined algorithms in the parser produced. Other forms of &quot;application generators&quot; work similarly. 

==== rationale ====

Table-driven (sometimes known as data-driven) programs have behavior that depends on data with'ed at compile time or read from a file at run-time. In appropriate circumstances, table-driven programming provides a very powerful way of creating general-purpose, easily tailorable, reusable parts. 

See Guideline 5.3.4 for a short discussion of using access-to-subprogram types in implementing table-driven programs. 

==== notes ====

Consider whether differences in the behavior of a general-purpose part could be defined by some data structure at compile- or run-time, and if so, structure the part to be table-driven. The approach is most likely to be applicable when a part is designed for use in a particular application domain but needs to be specialized for use in a specific application within the domain. Take particular care in commenting the structure of the data needed to drive the part. 

Table-driven programs are often more efficient and easier to read than the corresponding case or 
if-elsif-else networks to compute the item being sought or looked up. 

=== String Handling ===

==== guideline ====

* Use the predefined packages for string handling. 

==== example ====
Writing code such as the following is no longer necessary in Ada 95: 

&lt;source lang=ada&gt;
function Upper_Case (S : String) return String is

   subtype Lower_Case_Range is Character range 'a'..'z';

   Temp : String := S;
   Offset : constant := Character'Pos('A') - Character'Pos('a');

begin
   for Index in Temp'Range loop
      if Temp(Index) in Lower_Case_Range then
         Temp(Index) := Character'Val (Character'Pos(Temp(Index)) + Offset);
      end if;
   end loop;
   return Temp;
end Upper_Case;


with Ada.Characters.Latin_1;
function Trim (S : String) return String is
   Left_Index  : Positive := S'First;
   Right_Index : Positive := S'Last;
   Space : constant Character := Ada.Characters.Latin_1.Space;
begin
   while (Left_Index &lt; S'Last) and then (S(Left_Index) = Space) loop
      Left_Index := Positive'Succ(Left_Index);
   end loop;

   while (Right_Index &gt; S'First) and then (S(Right_Index) = Space) loop
      Right_Index := Positive'Pred(Right_Index);
   end loop;

   return S(Left_Index..Right_Index);
end Trim;
&lt;/source&gt;

Assuming a variable S of type String, the following expression: 

&lt;source lang=ada&gt;
Upper_Case(Trim(S))
&lt;/source&gt;

can now be replaced by more portable and preexisting language-defined operations such as: 

&lt;source lang=ada&gt;
with Ada.Characters.Handling;  use Ada.Characters.Handling;
with Ada.Strings;              use Ada.Strings;
with Ada.Strings.Fixed;        use Ada.Strings.Fixed;

...
To_Upper (Trim (Source =&gt; S, Side =&gt; Both))
&lt;/source&gt;

==== rationale ====

The predefined Ada language environment includes string handling packages to encourage portability. They support different categories of strings: fixed length, bounded length, and unbounded length. They also support subprograms for string construction, concatenation, copying, selection, ordering, searching, pattern matching, and string transformation. You no longer need to define your own string handling packages. 

=== Tagged Type Hierarchies ===

==== guideline ====

* Consider using hierarchies of tagged types to promote generalization of software for reuse.
* Consider using a tagged type hierarchy to decouple a generalized algorithm from the details of dependency on specific types. 

==== example ====

&lt;source lang=ada&gt;
with Wage_Info;
package Personnel is
   type Employee is abstract tagged limited private;
   type Employee_Ptr is access all Employee'Class;
   ...
   procedure Compute_Wage (E : Employee) is abstract;
private
   type Employee is tagged limited record
      Name  : ...;
      SSN   : ... ;
      Rates : Wage_Info.Tax_Info;
      ...
   end record;
end Personnel;
package Personnel.Part_Time is
   type Part_Timer is new Employee with private;
   ...
   procedure Compute_Wage (E : Part_Timer);
private
   ...
end Personnel.Part_Time;
package Personnel.Full_Time is
   type Full_Timer is new Employee with private;
   ...
   procedure Compute_Wage (E : Full_Timer);
private
   ...
end Personnel.Full_Time;
&lt;/source&gt;

Given the following array declaration: 

&lt;source lang=ada&gt;
type Employee_List is array (Positive range &lt;&gt;) of Personnel.Employee_Ptr;
&lt;/source&gt;

you can write a procedure that computes the wage of each employee, regardless of the different types of employees that you create. The Employee_List consists of an array of pointers to the various kinds of employees, each of which has an individual Compute_Wage procedure. (The primitive Compute_Wage is declared as an abstract procedure and, therefore, must be overridden by all descendants.) You will not need to modify the payroll code as you specialize the kinds of employees: 

&lt;source lang=ada&gt;
procedure Compute_Payroll (Who : Employee_List) is
begin -- Compute_Payroll
   for E in Who'Range loop
      Compute_Wage (Who(E).all);
   end loop;
end Compute_Payroll;
&lt;/source&gt;

==== rationale ====

The general algorithm can depend polymorphically on objects of the class-wide type of the root tagged type without caring what specialized types are derived from the root type. The generalized algorithm does not need to be changed if additional types are added to the type hierarchy. See also Guideline 5.4.2. Furthermore, the child package hierarchy then mirrors the inheritance hierarchy. 

A general root tagged type can define the common properties and have common operations for a hierarchy of more specific types. Software that depends only on this root type will be general, in that it can be used with objects of any of the more specific types. Further, the general algorithms of clients of the root type do not have to be changed as more specific types are added to the type hierarchy. This is a particularly effective way to organize object-oriented software for reuse. 

Separating the hierarchy of derived tagged types into individual packages enhances reusability by reducing the number of items in package interfaces. It also allows you to with only the capabilities needed. 

See also Guidelines 9.2, 9.3.1, 9.3.5, and 9.4.1. 

== Summary ==

=== understanding and clarity ===

* Select the least restrictive names possible for reusable parts and their identifiers. 
* Select the generic name to avoid conflicting with the naming conventions of instantiations of the generic. 
* Use names that indicate the behavioral characteristics of the reusable part, as well as its abstraction . 
* Do not use abbreviations in identifier or unit names.
* Document the expected behavior of generic formal parameters just as you document any package specification. 

=== robustness ===

* Use named numbers and static expressions to allow multiple dependencies to be linked to a small number of symbols. 
* Use unconstrained array types for array formal parameters and array return values. 
* Make the size of local variables depend on actual parameter size, where appropriate. 
* Minimize the number of assumptions made by a unit. 
* For assumptions that cannot be avoided, use subtypes or constraints to automatically enforce conformance. 
* For assumptions that cannot be automatically enforced by subtypes, add explicit checks to the code. 
* Document all assumptions. 
* If the code depends upon the implementation of a specific Special Needs Annex for proper operation, document this assumption in the code. 
* Use first subtypes when declaring generic formal objects of mode in out. 
* Beware of using subtypes as subtype marks when declaring parameters or return values of generic formal subprograms. 
* Use attributes rather than literal values. 
* Be careful about overloading the names of subprograms exported by the same generic package. 
* Within a specification, document any tasks that would be activated by with'ing the specification and by using any part of the specification. 
* Document which generic formal parameters are accessed from a task hidden inside the generic unit. 
* Document any multithreaded components. 
* Propagate exceptions out of reusable parts. Handle exceptions within reusable parts only when you are certain that the handling is appropriate in all circumstances. 
* Propagate exceptions raised by generic formal subprograms after performing any cleanup necessary to the correct operation of future invocations of the generic instantiation. 
* Leave state variables in a valid state when raising an exception. 
* Leave parameters unmodified when raising an exception. 

=== adaptability ===

* Provide core functionality in a reusable part or set of parts so that the functionality in this abstraction can be meaningfully extended by its reusers. 
* More specifically, provide initialization and finalization procedures for every data structure that may contain dynamic data. 
* For data structures needing initialization and finalization, consider deriving them, when possible, from the types Ada.Finalization.Controlled or Ada.Finalization.Limited_Controlled. 
* Use generic units to avoid code duplication. 
* Parameterize generic units for maximum adaptability. 
* Reuse common instantiations of generic units, as well as the generic units themselves. 
* Consider using a limited private type for a generic formal type when you do not need assignment on objects of the type inside the generic body. 
* Consider using a nonlimited private type for a generic formal type when you need normal assignment on objects of the type inside the body of the generic. 
* Consider using a formal tagged type derived from Ada.Finalization.Controlled when you need to enforce special assignment semantics on objects of the type in the body of the generic. 
* Export the least restrictive type that maintains the integrity of the data and abstraction while allowing alternate implementations. 
* Consider using a limited private abstract type for generic formal types of a generic that extends a formal private tagged type. 
* Use generic units to encapsulate algorithms independently of data type. 
* Consider using abstract data types (not to be confused with Ada's abstract types) in preference to abstract data objects. 
* Consider using generic units to implement abstract data types independently of their component data type. 
* Provide iterators for traversing complex data structures within reusable parts. 
* Consider providing both active and passive iterators. 
* Protect the iterators from errors due to modification of the data structure during iteration. 
* Document the behavior of the iterators when the data structure is modified during traversal. 
* Localize the currency symbol, digits separator, radix mark, and fill character in picture output. 
* Consider using the # character in picture layouts so that the edited numeric output lengths are invariant across currency symbols of different lengths. 
* Consider using abstract tagged types and generics to define reusable units of functionality that can be &quot;mixed into&quot; core abstractions (also known as mixins). 
* Consider structuring subsystems so that operations that are only used in a particular context are in different child packages than operations used in a different context. 
* Consider declaring context-independent functionality in the parent package and context-dependent functionality in child packages. 

=== independence ===

* Minimize with clauses on reusable parts, especially on their specifications. 
* Consider using generic parameters instead of with statements to reduce the number of context clauses on a reusable part. 
* Consider using generic formal package parameters to import directly all the types and operations defined in an instance of a preexisting generic. 
* In the specification of a generic library unit, use pragma Elaborate_Body. 
* Create families of generic or other parts with similar specifications. 
* Structure reusable code to take advantage of dead code removal by the compiler. 
* Write table-driven reusable parts wherever possible and appropriate. 
* Use the predefined packages for string handling. 
* Consider using hierarchies of tagged types to promote generalization of software for reuse. 
* Consider using a tagged type hierarchy to decouple a generalized algorithm from the details of dependency on specific types.

{{Chapter navigation||Object-Oriented Features}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>l1v4z3iwwqgyxoejrl0ax7g7eni7nbd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Object-Oriented Features</title>
    <ns>0</ns>
    <id>200804</id>
    <revision>
      <id>2307265</id>
      <parentid>2053134</parentid>
      <timestamp>2012-04-16T07:12:17Z</timestamp>
      <contributor>
        <username>Metamorf</username>
        <id>615983</id>
      </contributor>
      <minor />
      <comment>/* Introduction */ Spelling Error</comment>
      <text xml:space="preserve">{{Chapter navigation|Reusability|Improving Performance}}

{{TOC|limit=3|float=none}}

== Introduction ==

This chapter recommends ways of using Ada's object-oriented features. Ada supports inheritance and polymorphism, providing the programmer some effective techniques and building blocks. Disciplined use of these features will promote programs that are easier to read and modify. These features also give the programmer flexibility in building reusable components. 

The following definitions are provided in order to make this chapter more understandable. The essential characteristics of object-oriented programming are encapsulation, inheritance, and polymorphism. These are defined as follows in the Rationale (1995, §§4.1 and III.1.2): 

; Inheritance: A means for incrementally building new abstractions from an existing one by &quot;inheriting&quot; their properties without disturbing the implementation of the original abstraction or the existing clients. 
; Multiple Inheritance: The means of inheriting components and operations from two or more parent abstractions. 
; Mixin Inheritance: Multiple inheritance in which one or more of the parent abstractions cannot have instances of their own and exist only to provide a set of properties for abstractions inheriting from them. 
;Polymorphism: A means of factoring out the differences among a collection of abstractions, such that programs may be written in terms of the common properties. 

* Static polymorphism is provided through the generic parameter mechanism whereby a generic unit may be instantiated at compile time with any type from a class of types. 
* Dynamic polymorphism is provided through the use of so-called class-wide types and the distinction is then made at runtime on the basis of the value of the tag (&quot;effectively a hidden discriminant identifying the type&quot; [Rationale 1995, §II.1]). 

As stated in the Ada Reference Manual (1995, Annex N): 

:A type has an associated set of values and a set of primitive operations that implement the fundamental aspects of its semantics. 

A class is a set of types that is closed under derivation, which means that if a given type is in the class, then all types derived from that type are also in the class. The set of types of a class share common properties, such as their primitive operations. The semantics of a class include expected behavior and exceptions. 

An object is either a constant or variable defined from a type (class). An object contains a value. A subcomponent of an object is itself an object. 

Guidelines in this chapter are frequently worded &quot;consider ...&quot; because hard and fast rules cannot apply in all situations. The specific choice you make in a given situation involves design tradeoffs. The rationale for these guidelines is intended to give you insight into some of these tradeoffs.

== Object-Oriented Design ==

You will find it easier to take advantage of many of the concepts in this chapter if you have done an object-oriented design. The results of an object-oriented design would include a set of meaningful abstractions and hierarchy of classes. The abstractions need to include the definition of the design objects, including structure and state, the operations on the objects, and the intended encapsulation for each object. The details on designing these abstractions and the hierarchy of classes are beyond the scope of this book. A number of good sources exist for this detail, including Rumbaugh et al. (1991), Jacobson et al. (1992), Software Productivity Consortium (1993), and Booch (1994). 

An important part of the design process is deciding on the overall organization of the system. Looking at a single type, a single package, or even a single class of types by itself is probably the wrong place to start. The appropriate level to start is more at the level of &quot;subsystem&quot; or &quot;framework.&quot; You should use child packages (Guidelines 4.1.1 and 4.2.2) to group sets of abstractions into subsystems representing reusable frameworks. You should distinguish the &quot;abstract&quot; reusable core of the framework from the particular &quot;instantiation&quot; of the framework. Presuming the framework is constructed properly, the abstract core and its instantiation can be separated into distinct subsystems within the package hierarchy because the internals of an abstract reusable framework probably do not need to be visible to a particular instantiation of the framework. 

== Tagged Type Hierarchies ==

You should use inheritance primarily as a mechanism for implementing a class hierarchy from an object-oriented design. A class hierarchy should be a generalization/specialization (&quot;is-a&quot;) relationship. This relationship may also be referred to as &quot;is-a-kind-of,&quot; not to be confused with &quot;is an instance of.&quot; This &quot;is-a&quot; usage of inheritance is in contrast to other languages in which inheritance is used also to provide the equivalent of the Ada context clauses with and use. In Ada, you first identify the external modules of interest via with clauses and then choose selectively whether to make only the name of the module (package) visible or its contents (via a use clause). 

=== Tagged Types ===

==== guideline ====

* Consider using type extension when designing an is-a (generalization/specialization) hierarchy. 
* Use tagged types to preserve a common interface across differing implementations (Taft 1995a). 
* When defining a tagged type in a package, consider including a definition of a general access type to the corresponding class-wide type. 
* In general, define only one tagged type per package. 

==== example ====

Consider the type structure for a set of two-dimensional geometric objects positioned in a Cartesian coordinate system (Barnes 1996). The ancestor or root type Object is a tagged record. The components common to this type and all its descendants are an x and y coordinate. Various descendant types include points, circles, and arbitrary shapes. Except for points, these descendant types extend the root type with additional components; for example, the circle adds a radius component: 

&lt;source lang=ada&gt;
type Object is tagged
   record
      X_Coord : Float;
      Y_Coord : Float;
   end record;

type Circle is new Object with
   record
      Radius : Float;
   end record;

type Point is new Object with null record;

type Shape is new Object with
   record
      -- other components
      ...
   end record;
&lt;/source&gt;

The following is an example of general access type to the corresponding class-wide type: 

&lt;source lang=ada&gt;
package Employee is
   type Object is tagged limited private;
   type Reference is access all Object'class;
   ...
private
   ...
end Employee;
&lt;/source&gt;

==== rationale ====

You can derive new types from both tagged and untagged types, but the effects of this derivation are different. When you derive from an untagged type, you are creating a new type whose implementation is identical to the parent. Values of the derived types are subject to strong type checking; thus, you cannot mix the proverbial apples and oranges. When you derive a new type from an untagged type, you are not allowed to extend it with new components. You are effectively creating a new interface without changing the underlying implementation (Taft 1995a). 

In deriving from a tagged type, you can extend the type with new components. Each descendant can extend a common interface (the parent's). The union of a tagged type and its descendants form a class, and a class offers some unique features not available to untagged derivations. You can write class-wide operations that can be applied to any object that is a member of the class. You can also provide new implementations for the descendants of tagged types, either by overriding inherited primitive operations or by creating new primitive operations. Finally, tagged types can be used as the basis for multiple inheritance building blocks (see Guideline 9.5.1). 

Reference semantics are very commonly used in object-oriented programming. In particular, heterogeneous polymorphic data structures based on tagged types require the use of access types. It is convenient to have a common definition for such a type provided to any client of the package defining the tagged type. A heterogeneous polymorphic data structure is a composite data structure (such as an array) whose elements have a homogeneous interface (i.e., an access to class-wide type) and whose elements' implementations are heterogeneous (i.e., the implementation of the elements uses different specific types). See also Guidelines 9.3.5 on polymorphism and 9.4.1 on managing visibility of tagged type hierarchies. 

In Ada, the primitive operations of a type are implicitly associated with the type through scoping rules. The definition of a tagged type and a set of operations corresponds together to the &quot;traditional&quot; object-oriented programming concept of a &quot;class.&quot; Putting these into a package provides a clean encapsulation mechanism. 

==== exceptions ====

If the root of the hierarchy does not define a complete set of values and operations, then use an abstract tagged type (see Guideline 9.2.4). This abstract type can be thought of as the least common denominator of the class, essentially a conceptual and incomplete type. 

If a descendant needs to remove one of the components or primitive operations of its ancestor, it may not be appropriate to extend the tagged type. 

An exception to using reference semantics is when a type is exported that would not be used in a data structure or made part of a collection. 

If the implementation of two tagged types requires mutual visibility and the two types are generally used together, then it may be best to define them together in one package, though thought should be given to using child packages instead (see Guideline 9.4.1). Also, it can be convenient to define a small hierarchy of (completely) abstract types (or a small part of a larger hierarchy) all in one package specification; however, the negative impact on maintainability may outweigh the convenience. You do not provide a package body in this situation unless you have declared nonabstract operations on members of the hierarchy. 

=== Properties of Dispatching Operations ===

==== guideline ====

* The implementation of the dispatching operations of each type in a derivation class rooted in a tagged type T should conform to the expected semantics of the corresponding dispatching operations of the class-wide type T'Class. 

==== example ====
The key point of both of the alternatives in the following example is that it must be possible to use the 
class-wide type Transaction.Object'Class polymorphically without having to study the implementations of each of the types derived from the root type Transaction.Object. In addition, new transactions can be added to the derivation class without invalidating the existing transaction processing code. These are the important practical consequences of the design rule captured in the guideline: 

&lt;source lang=ada&gt;
with Database;
package Transaction is

   type Object (Data : access Database.Object'Class) is abstract tagged limited
      record
         Has_Executed : Boolean := False;
      end record;

   function Is_Valid (T : Object) return Boolean;
   -- checks that Has_Executed is False

   procedure Execute (T : in out Object);
   -- sets Has_Executed to True

   Is_Not_Valid : exception;

end Transaction;
&lt;/source&gt;

The precondition of Execute(T) for all T in Transaction.Object'Class is that Is_Valid(T) is True. The postcondition is the T.Has_Executed = True. This model is trivially satisfied by the root type Transaction.Object. 

Consider the following derived type: 

&lt;source lang=ada&gt;
with Transaction;
with Personnel;
package Pay_Transaction is
   type Object is new Transaction.Object with
      record
         Employee     : Personnel.Name;
         Hours_Worked : Personnel.Time;
      end record;
   function Is_Valid (T : Object) return Boolean;
   -- checks that Employee is a valid name, Hours_Worked is a valid
   -- amount of work time and Has_Executed = False
   procedure Has_Executed (T : in out Object);
   -- computes the pay earned by the Employee for the given Hours_Worked
   -- and updates this in the database T.Data, then sets Has_Executed to True
end Pay_Transaction;
&lt;/source&gt;

The precondition for the specific operation Pay_Transaction.Execute(T) is that Pay_Transaction.Is_Valid(T) is True, which is the same precondition as for the dispatching operation Execute on the class-wide type. (The actual validity check is different, but the statement of the &quot;precondition&quot; is the same.) The postcondition for Pay_Transaction.Execute(T) includes T.Has_Executed = True but also includes the appropriate condition on T.Data for computation of pay. 

The class-wide transaction type can then be properly used as follows: 

&lt;source lang=ada&gt;
type Transaction_Reference is access all Transaction.Object'Class;
type Transaction_List is array (Positive range &lt;&gt;) of Transaction_Reference;
procedure Process (Action : in Transaction_List) is
begin
   for I in Action'Range loop
   -- Note that calls to Is_Valid and Execute are dispatching
      if Transaction.Is_Valid(Action(I).all) then
         -- the precondition for Execute is satisfied
         Transaction.Execute(Action(I).all);
         -- the postcondition Action(I).Has_Executed = True is
         -- guaranteed to be satisfied (as well as any stronger conditions
         -- depending on the specific value of Action(I))
      else
         -- deal with the error
         ...
      end if;
   end loop;
end Process;
&lt;/source&gt;

If you had not defined the operation Is_Valid on transactions, then the validity condition for pay computation (valid name and hours worked) would have to directly become the precondition for Pay_Transaction.Execute. But this would be a &quot;stronger&quot; precondition than that on the class-wide dispatching operation, violating the guideline. As a result of this violation, there would be no way to guarantee the precondition of a dispatching call to Execute, leading to unexpected failures. 

An alternative resolution to this problem is to define an exception to be raised by an Execute operation when the transaction is not valid. This behavior becomes part of the semantic model for the class-wide type: the precondition for Execute(T) becomes simply True (i.e., always valid), but the postcondition becomes &quot;either&quot; the exception is not raised and Has_Executed = True &quot;or&quot; the exception is raised and Has_Executed = False. The implementations of Execute in all derived transaction types would then need to satisfy the new postcondition. It is important that the &quot;same&quot; exception be raised by &quot;all&quot; implementations because this is part of the expected semantic model of the class-wide type. 

With the alternative approach, the above processing loop becomes: 

&lt;source lang=ada&gt;
procedure Process (Action : in Transaction_List) is
begin

   for I in Action'Range loop

    Process_A_Transaction:
      begin

         -- there is no precondition for Execute
         Transaction.Execute (Action(I).all);
         -- since no exception was raised, the postcondition
         -- Action(I).Has_Executed = True is guaranteed (as well as
         -- any stronger condition depending on the specific value of
         -- Action(I))

      exception
         when Transaction.Is_Not_Valid =&gt;
            -- the exception was raised, so Action(I).Has_Executed = False

            -- deal with the error
            ...

      end Process_A_Transaction;

   end loop;

end Process;
&lt;/source&gt;

==== rationale ====

All the properties expected of a class-wide type by clients of that type should be meaningful for any specific types in the derivation class of the class-wide type. This rule is related to the object-oriented programming 
&quot;substitutability principle&quot; for consistency between the semantics of an object-oriented superclass and its subclasses (Wegner and Zdonik 1988). However, the separation of the polymorphic class-wide type T'Class from the root specific type T in Ada 95 clarifies this principle as a design rule on derivation classes rather than a correctness principle for derivation itself. 

When a dispatching operation is used on a variable of a class-wide type T'Class, the actual implementation executed will depend dynamically on the actual tag of the value in the variable. In order to rationally use T'Class, it must be possible to understand the semantics of the operations on T'Class without having to study the implementation of the operations for each of the types in the derivation class rooted in T. Further, a new type added to this derivation class should not invalidate this overall understanding of T'Class because this could invalidate existing uses of the class-wide type. Thus, there needs to be an overall set of semantic properties of the operations of T'Class that is preserved by the implementations of the corresponding dispatching operations of all the types in the derivation class. 

One way to capture the semantic properties of an operation is to define a &quot;precondition&quot; that must be true before the operation is invoked and a &quot;postcondition&quot; that must be true (given the precondition) after the operation has executed. You can (formally or informally) define pre- and postconditions for each operation of T'Class without reference to the implementations of dispatching operations of specific types. These semantic properties define the &quot;minimum&quot; set of properties common to all types in the derivation class. To preserve this minimum set of properties, the implementation of the dispatching operations of all the types in the derivation class rooted in T (including the root type T) should have (the same or) weaker preconditions than the corresponding operations of T'Class and (the same or) stronger postconditions than the T'Class operations. This means that any invocation of a dispatching operation on T'Class will result in the execution of an implementation that requires no more than what is expected of the dispatching operation in general (though it could require less) and delivers a result that is no less than what is expected (though it could do more). 

==== exceptions ====

Tagged types and type extension may sometimes be used primarily for type implementation reasons rather than for polymorphism and dispatching. In particular, a nontagged private type may be implemented using a type extension of a tagged type. In such cases, it may not be necessary for the implementation of the derived type to preserve the semantic properties of the class-wide type because the membership of the new type in the tagged type derivation class will not generally be known to clients of the type. 

=== Controlled Types ===

==== guideline ====

* Consider using a controlled type whenever a type allocates resources that must be deallocated or otherwise &quot;cleaned up&quot; on destruction or overwriting. 
* Use a derivation from a controlled type in preference to providing an explicit &quot;cleanup&quot; operation that must be called by clients of the type. 
* When overriding the adjustment and finalization procedures derived from controlled types, define the finalization procedure to undo the effects of the adjustment procedure. 
* Derived type initialization procedures should call the initialization procedure of their parent as part of their type-specific initialization. 
* Derived type finalization procedures should call the finalization procedure of their parent as part of their type-specific finalization. 
* Consider deriving a data structure's components rather than the enclosing data structure from a controlled type. 

==== example ====
The following example demonstrates the use of controlled types in the implementation of a simple linked list. Because the Linked_List type is derived from Ada.Finalization.Controlled, the Finalize procedure will be called automatically when objects of the Linked_List type complete their scope of execution: 

&lt;source lang=ada&gt;
with Ada.Finalization;
package Linked_List_Package is
   type Iterator is private;
   type Data_Type is ...
   type Linked_List is new Ada.Finalization.Controlled with private;
   function Head (List : Linked_List) return Iterator;
   procedure Get_Next (Element  : in out Iterator;
                       Data     :    out Data_Type);
   procedure Add (List     : in out Linked_List;
                  New_Data : in     Data_Type);
   procedure Finalize (List : in out Linked_List); -- reset Linked_List structure
   -- Initialize and Adjust are left to the default implementation.
private
   type Node;
   type Node_Ptr is access Node;
   type Node is
      record
         Data : Data_Type;
         Next : Node_Ptr;
      end record;
   type Iterator is new Node_Ptr;
   type Linked_List is new Ada.Finalization.Controlled with
      record
         Number_Of_Items : Natural := 0;
         Root            : Node_Ptr;
      end record;
end Linked_List_Package;
--------------------------------------------------------------------------
package body Linked_List_Package is

   function Head (List : Linked_List) return Iterator is
      Head_Node_Ptr : Iterator;
   begin
      Head_Node_Ptr := Iterator (List.Root);
      return Head_Node_Ptr;  -- Return the head element of the list
   end Head;

   procedure Get_Next (Element : in out Iterator;
                       Data    :    out Data_Type) is
   begin
      --
      -- Given an element, return the next element (or null)
      --
   end Get_Next;

   procedure Add (List     : in out Linked_List;
                  New_Data : in     Data_Type) is
   begin
      --
      -- Add a new element to the head of the list
      --
   end Add;

   procedure Finalize (List : in out Linked_List) is
   begin
      -- Release all storage used by the linked list
      --   and reinitialize.
   end Finalize;

end Linked_List_Package;
&lt;/source&gt;
==== rationale ====

The three controlling operations, Initialize, Adjust, and Finalize, serve as automatically called procedures that control three primitive activities in the life of an object (Ada Reference Manual 1995, §7.6). When an assignment to an object of a type derived from Controlled occurs, adjustment and finalization work in tandem. Finalization cleans up the object being overwritten (e.g., reclaims heap space), then adjustment finishes the assignment work once the value being assigned has been copied (e.g., to implement a deep copy). 

You can ensure that the derived type's initialization is consistent with that of the parent by calling the parent type's initialization from the derived type's initialization. 

You can ensure that the derived type's finalization is consistent with that of the parent by calling the parent type's finalization from the derived type's finalization. 

In general, you should call parent initialization before descendant-specific initialization. Similarly, you should call parent finalization after descendant-specific finalization. (You may position the parent initialization and/or finalization at the beginning or end of the procedure.) 

=== Abstract Types ===

==== guideline ====

* Consider using abstract types and operations in creating classification schemes, for example, a taxonomy, in which only the leaf objects will be meaningful in the application. 
* Consider declaring root types and internal nodes in a type tree as abstract. 
* Consider using abstract types for generic formal derived types. 
* Consider using abstract types to develop different implementations of a single abstraction. 

==== example ====
In a banking application, there are a wide variety of account types, each with different features and restrictions. Some of the variations are fees, overdraft protection, minimum balances, allowable account linkages (e.g., checking and savings), and rules on opening the account. Common to all bank accounts are ownership attributes: unique account number, owner name(s), and owner tax identification number(s). Common operations across all types of accounts are opening, depositing, withdrawing, providing current balance, and closing. The common attributes and operations describe the conceptual bank account. This idealized bank account can form the root of a generalization/specialization hierarchy that describes the bank's array of products. By using abstract tagged types, you ensure that only account objects corresponding to a specific product will be created. Because any abstract operations must be overridden with each derivation, you ensure that any restrictions for a specialized account are implemented (e.g., how and when the account-specific fee structure is applied): 

&lt;source lang=ada&gt;
--------------------------------------------------------------------------
package Bank_Account_Package is

   type Bank_Account_Type is abstract tagged limited private;
   type Money is delta 0.01 digits 15;

   -- The following abstract operations must be overridden for
   --   each derivation, thus ensuring that any restrictions
   --   for specialized accounts will be implemented.

   procedure Open (Account : in out Bank_Account_Type) is abstract;

   procedure Close (Account : in out Bank_Account_Type) is abstract;

   procedure Deposit (Account : in out Bank_Account_Type;
                      Amount  : in     Money) is abstract;

   procedure Withdraw (Account : in out Bank_Account_Type;
                       Amount  : in     Money) is abstract;

   function Balance (Account : Bank_Account_Type)
     return Money is abstract;

private
   type Account_Number_Type is ...
   type Account_Owner_Type  is ...
   type Tax_ID_Number_Type  is ...

   type Bank_Account_Type is abstract tagged limited
      record
         Account_Number : Account_Number_Type;
         Account_Owner  : Account_Owner_Type;
         Tax_ID_Number  : Tax_ID_Number_Type;
      end record;
end Bank_Account_Package;
--------------------------------------------------------------------------
-- Now, other specialized accounts such as a savings account can
-- be derived from Bank_Account_Type as in the following example.
-- Note that abstract types are still used to ensure that only
-- account objects corresponding to specific products will be
-- created.with Bank_Account_Package;
with Bank_Account_Package;
package Savings_Account_Package is
   type Savings_Account_Type is abstract
      new Bank_Account_Package.Bank_Account_Type with private;
   -- We must override the abstract operations provided
   --   by Bank_Account_Package.  Since we are still declaring
   --   these operations to be abstract, they must also be
   --   overridden by the specializations of Savings_Account_Type.
   procedure Open (Account : in out Savings_Account_Type) is abstract;
   procedure Close (Account : in out Savings_Account_Type) is abstract;

   procedure Deposit (Account : in out Savings_Account_Type;
                      Amount  : in     Bank_Account_Package.Money) is abstract;


   procedure Withdraw (Account : in out Savings_Account_Type;
                       Amount  : in     Bank_Account_Package.Money) is abstract;

   function Balance (Account : Savings_Account_Type)
     return Bank_Account_Package.Money is abstract;

private
   type Savings_Account_Type is abstract
      new Bank_Account_Package.Bank_Account_Type with
         record
            Minimum_Balance : Bank_Account_Package.Money;
         end record;
end Savings_Account_Package;

--------------------------------------------------------------------------
&lt;/source&gt;
See the abstract set package in Guideline 9.5.1 for an example of creating an abstraction with a single interface and the potential for multiple implementations. The example only shows one possible implementation; however, you could provide an alternate implementation of the Hashed_Set abstraction using other data structures. 

==== rationale ====

In many classification schemes, for example, a taxonomy, only objects at the leaves of the classification tree are meaningful in the application. In other words, the root of the hierarchy does not define a complete set of values and operations for use by the application. The use of &quot;abstract&quot; guarantees that there will be no objects of the root or intermediate nodes. Concrete derivations of the abstract types and subprograms are required so that the leaves of the tree become objects that a client can manipulate. 

You can only declare abstract subprograms when the root type is also abstract. This is useful as you build an abstraction that forms the basis for a family of abstractions. By declaring the primitive subprograms to be abstract, you can write the &quot;common class-wide parts of a system . . . without being dependent on the properties of any specific type at all&quot; (Rationale 1995, §4.2). 

Abstract types and operations can help you resolve problems when your tagged type hierarchy violates the expected semantics of the class-wide type dispatching operations. The Rationale (1995, §4.2) explains: 

:When building an abstraction that is to form the basis of a class of types, it is often convenient not to provide actual subprograms for the root type but just abstract subprograms which can be replaced when inherited. This is only allowed if the root type is declared as abstract; objects of an abstract type cannot exist. This technique enables common class-wide parts of a system to be written without being dependent on the properties of any specific type at all. Dispatching always works because it is known that there can never be any objects of the abstract type and so the abstract subprograms could never be called. 

See Guidelines 8.3.8 and 9.2.1. 

The multiple inheritance techniques discussed in Guideline 9.5.1 make use of abstract tagged types. The basic abstraction is defined using an abstract tagged (limited) private type (whose full type declaration is a null record) with a small set of abstract primitive operations. While abstract operations have no bodies and thus cannot be called, they are inherited. Derivatives of the abstraction then extend the root type with components that provide the data representation and override the abstract operations to provide callable implementations (Rationale 1995, §4.4.3). This technique allows you to build multiple implementations of a single abstraction. You declare a single interface and vary the specifics of the data representation and operation implementation. 

==== notes ====

When you use abstract data types as described in this guideline, you can have multiple implementations of the same abstraction available to you within a single program. This technique differs from the idea of writing multiple package bodies to provide different implementations of the abstraction defined in a package specification because with the package body technique, you can only include one of the implementations (i.e., bodies) in your program. 

== Tagged Type Operations ==
You can use three options when you define the operations on a tagged type and its descendants. These categories are primitive abstract, primitive nonabstract, and class-wide operations. An abstract operation must be overridden for a nonabstract derived type. A nonabstract operation may be redefined for a subclass. A class-wide operation cannot be overridden by a subclass definition. A class-wide operation can be redefined for the derivation class rooted in the derived type; however, this practice is discouraged because of the ambiguities it introduces in the code. 
Through careful usage of these options, you can ensure that your abstractions preserve class-wide properties, as discussed in Guideline 9.2.1. As stated above, this principle requires that any type that is visibly derived from some parent type must fully support the semantics of the parent type. 

=== Primitive Operations and Redispatching ===

==== guideline ====

* Consider declaring a primitive abstract operation based on the absence of a meaningful &quot;default&quot; behavior. 
* Consider declaring a primitive nonabstract operation based on the presence of a meaningful &quot;default&quot; behavior. 
* When overriding an operation, the overriding subprogram should not raise exceptions that are not known to the users of the overridden subprogram. 
* If redispatching is used in the implementation of the operations of a type, with the specific intent that some of the redispatched-to operations be overridden by specializations for the derived types, then document this intent clearly in the specification as part of the &quot;interface&quot; of a parent type with its derived types. 
* When redispatching is used (for any reason) in the implementation of a primitive operation of a tagged type, then document (in some project-consistent way) this use in the body of the operation subprogram so that it can be easily found during maintenance. 

==== example ====
This example (Volan 1994) is intended to show a clean derivation of a square from a rectangle. You do not want to derive Square from Rectangle because Rectangle has semantics that are inappropriate for Square. (For instance, you can make a rectangle with any arbitrary height and width, but you should not be able to make a square this way.) Instead, both Square and Rectangle should be derived from some common abstract type, such as: 

&lt;source lang=ada&gt;
Any_Rectangle:
type Figure is abstract tagged
   record
      ...
   end record;
type Any_Rectangle is abstract new Figure with private;
-- No Make function for this; it's abstract.
function Area (R: Any_Rectangle) return Float;
  -- Overrides abstract Area function inherited from Figure.
  -- Computes area as Width(R) * Height(R), which it will
  -- invoke via dispatching calls.
function Width (R: Any_Rectangle) return Float is abstract;
function Height (R: Any_Rectangle) return Float is abstract;
type Rectangle is new Any_Rectangle with private;
function Make_Rectangle (Width, Height: Float) return Rectangle;
function Width (R: Rectangle) return Float;
function Height (R: Rectangle) return Float;
-- Area for Rectangle inherited from Any_Rectangle
type Square is new Any_Rectangle with private;
function Make_Square (Side_Length: Float) return Square;
function Side_Length (S: Square) return Float;
function Width (S: Square) return Float;
function Height (S: Square) return Float;
-- Area for Square inherited from Any_Rectangle
...
-- In the body, you could just implement Width and Height for
-- Square as renamings of Side_Length:
function Width (S: Square) return Float renames Side_Length;
function Height (S: Square) return Float renames Side_Length;
function Area (R: Any_Rectangle) return Float is
begin
  return Width(Any_Rectangle'Class(R)) * Height(Any_Rectangle'Class(R));
  -- Casting [sic, i.e., converting] to the class-wide type causes the function calls to
  -- dynamically dispatch on the 'Tag of R.
  -- [sic, i.e., redispatch on the tag of R.]
end Area;

Alternatively, you could just wait until defining types Rectangle and Square to provide actual Area functions: 

type Any_Rectangle is abstract new Figure with private;
-- Inherits abstract Area function from Figure,
-- but that's okay, Any_Rectangle is abstract too.
function Width (R: Any_Rectangle) return Float is abstract;
function Height (R: Any_Rectangle) return Float is abstract;
type Rectangle is new Any_Rectangle with private;
function Make_Rectangle (Width, Height: Float) return Rectangle;
function Width (R: Rectangle) return Float;
function Height (R: Rectangle) return Float;
function Area (R: Rectangle) return Float; -- Overrides Area from Figure
type Square is new Any_Rectangle with private;
function Make_Square (Side_Length: Float) return Square;
function Side_Length (S: Square) return Float;
function Width (S: Square) return Float;
function Height (S: Square) return Float;
function Area (S: Square) return Float;  -- Overrides Area from Figure
...
function Area (R: Rectangle) return Float is
begin
  return Width(R) * Height(R); -- Non-dispatching calls
end Area;
function Area (S: Square) return Float is
begin
  return Side_Length(S) ** 2;
end Area;
&lt;/source&gt;

==== rationale ====

The behavior of a nonabstract operation can be interpreted as the expected behavior for all members of the class; therefore, the behavior must be a meaningful default for all descendants. If the operation must be tailored based on the descendant abstraction (e.g., computing the area of a geometric shape depends on the specific shape), then the operation should be primitive and possibly abstract. The effect of making the operation abstract is that it guarantees that each descendant must define its own version of the operation. Thus, when there is no acceptable basic behavior, an abstract operation is appropriate because a new version of the operation must be provided with each derivation. 

All operations declared in the same package as the tagged type and following the tagged type's declaration but before the next type declaration are considered its primitive operations. Therefore, when a new type is derived from the tagged type, it inherits the primitive operations. If there are any operations that you do not want to be inherited, you must choose whether to declare them as class-wide operations (see Guideline 9.3.2) or to declare them in a separate package (e.g., a child package). 

Exceptions are part of the semantics of the class. By modifying the exceptions, you are violating the semantic properties of the class-wide type (see Guideline 9.2.1). 

There are (at least) two distinct users of a tagged type and its primitives. The &quot;ordinary&quot; user uses the type and its primitives without enhancement. The &quot;extending&quot; user extends the type by deriving a type based on the existing (tagged) type. Extending users and maintainers must determine the ramifications of a possibly incorrect extension. The guidelines here try to strike a balance between too much documentation (that can then easily get out of synch with the actual code) and an appropriate level of documentation to enhance the maintainability of the code. 

One of the major maintenance headaches associated with inheritance and dynamic binding relates to undocumented interdependencies among primitive (dispatching) operations of tagged types (the equivalent of &quot;methods&quot; in typical object-oriented terminology). If a derived type inherits some and overrides other primitive operations, there is the question of what indirect effects on the inherited primitives are produced. If no redispatching is used, the primitives may be inherited as &quot;black boxes.&quot; If redispatching is used internally, then when inherited, the externally visible behavior of an operation may change, depending on what other primitives are overridden. Maintenance problems (here, finding and fixing bugs) occur when someone overrides incorrectly (on purpose or by accident) an operation used in redispatching. Because this overriding can invalidate the functioning of another operation defined perhaps several levels of inheritance up from the incorrect operation, it can be extremely difficult to track down. 

In the object-oriented paradigm, redispatching is often used to parameterize abstractions. In other words, certain primitives are intended to be overridden precisely because they are redispatching. These primitives may even be declared as abstract, requiring that they be overridden. Because they are redispatching, they act as &quot;parameters&quot; for the other operations. Although in Ada much of this parameterization can be done using generics, there are cases where the redispatching approach leads to a clearer object-oriented design. When you document the redispatching connection between the operations that are to be overridden and the operations that use them, you make the intended use of the type much clearer. 

Hence, any use of redispatching within a primitive should be considered part of the &quot;interface&quot; of the primitive, at least as far as any inheritor, and requires documentation at the specification level. The alternative (i.e., not providing such documentation in the specification) is to have to delve deep into the code of all the classes in the derivation hierarchy in order to map out the redispatching calls. Such detective work compromises the black-box nature of object-oriented class definitions. Note that if you follow Guideline 9.2.1 on preserving the semantics of the class-wide dispatching operations in the extensions of derived types, you will minimize or avoid the problems discussed here about redispatching. 

=== Class-Wide Operations ===

==== guideline ====

* Consider using a class-wide operation (i.e., an operation with parameter[s] of a class-wide type) when an operation can be written, compiled, and tested without knowing all the possible descendants of a given tagged type (Barnes 1996). 
* Consider using a class-wide operation when you do not want an operation to be inherited and/or overridden. 

==== example ====
The following example is adapted from Barnes (1996) using the geometric objects from the example of Guideline 9.2.1 and declaring the following functions as primitives in the package specification: 
&lt;source lang=ada&gt;

function Area (O : in Object) return Float;

function Area (C : in Circle) return Float;

function Area (S : in Shape) return Float;

&lt;/source&gt;

A function for computing the moment of a force about a fulcrum can now be created using a class-wide type as follows: 
&lt;source lang=ada&gt;

function Moment (OC : Object'Class) return Float is
begin
   return OC.X_Coord*Area(OC);
end Moment;
&lt;/source&gt;

Because Moment accepts the class-wide formal parameter of Object'Class, it can be called with an actual parameter that is any derivation of type Object. Assuming that all derivations of type object have defined a function for Area, Moment will dispatch to the appropriate function when called. For example:

&lt;source lang=ada&gt;
C : Circle;
M : Float;

...

-- Moment will dispatch to the Area function for the Circle type.
M := Moment(C);
&lt;/source&gt;

==== rationale ====

The use of class-wide operations avoids unnecessary duplication of code. Run-time dispatching may be used where necessary to invoke appropriate type-specific operations based on an operand's tag. 

See also Guideline 8.4.3 for a discussion of class-wide pointers in an object-oriented programming framework registry. 

=== Constructors ===

Ada does not define a unique syntax for constructors. In Ada a constructor for a type is defined as an operation that produces as a result a constructed object, i.e., an initialized instance of the type. 

==== guideline ====

* Avoid declaring a constructor as a primitive abstract operation. 
* Use a primitive abstract operation to declare an initialization function or constructor only when objects of the inheriting derived types will not require additional parameters for initialization. 
* Consider using access discriminants to provide parameters to default initialization. 
* Use constructors for explicit initialization. 
* Consider splitting the initialization and construction of an object. 
* Consider declaring a constructor operation in a child package. 
* Consider declaring a constructor operation to return an access value to the constructed object (Dewar 1995). 

==== example ====
The following example illustrates the declaration of a constructor in a child package: 
&lt;source lang=ada&gt;
--------------------------------------------------------------------------
package Game is
   type Game_Piece is tagged ...
   ...

end Game;
--------------------------------------------------------------------------
package Game.Constructors is
   function Make_Piece return Game_Piece;
   ...
end Game.Constructors;
--------------------------------------------------------------------------
&lt;/source&gt;

The following example shows how to split the initialization and construction of an object: 
&lt;source lang=ada&gt;
type Vehicle is tagged ...

procedure Initialize (Self : in out Vehicle;
                      Make : in     String);

...

type Car is new Vehicle with ... ;
type Car_Ptr is access all Car'Class;

...

procedure Initialize (Self  : in out Car_Ptr;
                      Make  : in     String;
                      Model : in     String) is
begin -- Initialize
   Initialize (Vehicle (Self.all), Make);
   ...
   -- initialization of Car
end Initialize;

function Create (Make  : in String;
                 Model : in String) return Car_Ptr is
   Temp_Ptr : Car_Ptr;
begin -- Create
   Temp_Ptr := new Car;
   Initialize (Temp_Ptr, Make, Model);
   return Temp_Ptr;
end Create;
&lt;/source&gt;

==== rationale ====

Constructor operations for the types in a type hierarchy (assuming tagged types and their derivatives) usually differ in their parameter profiles. The constructor will typically need more parameters because of the added components in the descendant types. You run into a problem when you let constructor operations be inherited because you now have operations for which there is no meaningful implementation (default or overridden). Effectively, you violate the class-wide properties (see Guideline 9.2.1) because the root constructor will not successfully construct a descendant object. Inherited operations cannot add parameters to their parameter profile, so these are inappropriate to use as constructors. 

You cannot initialize a limited type at its declaration, so you may need to use an access discriminant and rely on default initialization. For a tagged type, however, you should not assume that any default initialization is sufficient, and you should declare constructors. For limited types, the constructors must be separate procedures or functions that return an access to the limited type. 

The example shows using a constructor in a child package. By declaring constructor operations in either a child package or a nested package, you avoid the problems associated with making them primitive operations. Because they are no longer primitive operations, they cannot be inherited. By declaring them in a child package (see also Guidelines 4.1.6 and 4.2.2 on using child packages versus nested packages), you gain the ability to change them without affecting the clients of the parent package (Taft 1995b). 

You should put the construction logic and initialization logic in distinct subprograms so that you are able to call the initialization routine for the parent tagged type. 

==== notes ====

When you extend a tagged type (regardless whether it is an abstract type), you can choose to declare as abstract some of the additional operations. Doing so, however, means that the derived type must also be declared as abstract. If this newly derived type has inherited any functions that name it as the return type, these inherited functions now also become abstract (Barnes 1996). If one of these primitive functions served as the constructor function, you have now violated the first guideline in that the constructor has become a primitive abstract operation. 

=== Equality ===

==== guideline ====

* When you redefine the &quot;=&quot; operator on a tagged type, make sure that it has the expected behavior in extensions of this type and override it if necessary. 

==== example ====
The following example is adapted from the discussion of equality and inheritance in Barnes (1996): 
&lt;source lang=ada&gt;
----------------------------------------------------------------------------
package Object_Package is

   Epsilon : constant Float := 0.01;

   type Object is tagged
      record
         X_Coordinate : Float;
         Y_Coordinate : Float;
      end record;

   function &quot;=&quot; (A, B : Object) return Boolean;

end Object_Package;
----------------------------------------------------------------------------
package body Object_Package is

   -- redefine equality to be when two objects are located within a delta
   -- of the same point
   function &quot;=&quot; (A, B : Object) return Boolean is
   begin
      return (A.X_Coordinate - B.X_Coordinate) ** 2
           + (A.Y_Coordinate - B.Y_Coordinate) ** 2 &lt; Epsilon**2;
   end &quot;=&quot;;

end Object_Package;

----------------------------------------------------------------------------
with Object_Package;  use Object_Package;
package Circle_Package_1 is
   type Circle is new Object with
      record
         Radius : Float;
      end record;
  function &quot;=&quot; (A, B : Circle) return Boolean;
end Circle_Package_1;
----------------------------------------------------------------------------
package body Circle_Package_1 is

   -- Equality is overridden, otherwise two circles must have exactly
   -- equal radii to be considered equal.
   function &quot;=&quot; (A, B : Circle) return Boolean is
   begin
      return (Object(A) = Object(B)) and
             (abs (A.Radius - B.Radius) &lt; Epsilon);
   end &quot;=&quot;;

end Circle_Package_1;
----------------------------------------------------------------------------
with Object_Package;  use Object_Package;
package Circle_Package_2 is

   type Circle is new Object with
      record
         Radius : Float;
      end record;

   -- don't override equality in this package

end Circle_Package_2;
----------------------------------------------------------------------------
with Object_Package;
with Circle_Package_1;
with Circle_Package_2;
with Ada.Text_IO;
procedure Equality_Test is
   use type Object_Package.Object;
   use type Circle_Package_1.Circle;
   use type Circle_Package_2.Circle;
   Object_1 : Object_Package.Object;
   Object_2 : Object_Package.Object;
   Circle_1 : Circle_Package_1.Circle;
   Circle_2 : Circle_Package_1.Circle;
   Circle_3 : Circle_Package_2.Circle;
   Circle_4 : Circle_Package_2.Circle;
begin
   Object_1 := (X_Coordinate =&gt; 1.000, Y_Coordinate =&gt; 2.000);
   Object_2 := (X_Coordinate =&gt; 1.005, Y_Coordinate =&gt; 2.000);
   -- These Objects are considered equal.  Equality has been redefined to be
   -- when two objects are located within a delta of the same point.
   if Object_1 = Object_2 then
      Ada.Text_IO.Put_Line (&quot;Objects equal.&quot;);
   else
      Ada.Text_IO.Put_Line (&quot;Objects not equal.&quot;);
   end if;
   Circle_1 := (X_Coordinate =&gt; 1.000, Y_Coordinate =&gt; 2.000, Radius =&gt; 5.000);
   Circle_2 := (X_Coordinate =&gt; 1.005, Y_Coordinate =&gt; 2.000, Radius =&gt; 5.005);
   -- These Circles are considered equal.  Equality has been redefined to be
   -- when the X-Y locations of the circles and their radii are both within
   -- the delta.
   if Circle_1 = Circle_2 then
      Ada.Text_IO.Put_Line (&quot;Circles equal.&quot;);
   else
      Ada.Text_IO.Put_Line (&quot;Circles not equal.&quot;);
   end if;
   Circle_3 := (X_Coordinate =&gt; 1.000, Y_Coordinate =&gt; 2.000, Radius =&gt; 5.000);
   Circle_4 := (X_Coordinate =&gt; 1.005, Y_Coordinate =&gt; 2.000, Radius =&gt; 5.005);
   -- These Circles are not considered equal because predefined equality of
   -- the extension component Radius will evaluate to False.
   if Circle_3 = Circle_4 then
      Ada.Text_IO.Put_Line (&quot;Circles equal.&quot;);
   else
      Ada.Text_IO.Put_Line (&quot;Circles not equal.&quot;);
   end if;
end Equality_Test;
&lt;/source&gt;

==== rationale ====

Equality is applied to all components of a record. When you extend a tagged type and compare two objects of the derived type for equality, the parent components as well as the new extension components will be compared. Therefore, when you redefine equality on a tagged type and define extensions on this type, the parent components are compared using the redefined equality. The extension components are also compared, using either predefined equality or some other redefined equality if appropriate. The behavior of inherited equality differs from the behavior of other inherited operations. When other primitives are inherited, if you do not override the inherited primitive, it can only operate on the parent components of the object of the extended type. Equality, on the other hand, generally does the right thing. 

=== Polymorphism ===

==== guideline ====

* Consider using class-wide programming to provide run-time, dynamic polymorphism when constructing larger, reusable, extensible frameworks. 
* When possible, use class-wide programming rather than variant records. 
* Use class-wide programming to provide a consistent interface across the set of types in the tagged type hierarchy (i.e., class). 
* Consider using generics to define a new type in terms of an existing type, either as an extension or as a container, collection, or composite data structure. 
* Avoid using type extensions for parameterized abstractions when generics provide a more appropriate mechanism. 

==== example ====
&lt;source lang=ada&gt;
  generic
     type Element is private;
  package Stack is
     ...
  end Stack;

is preferable to: 

  package Stack is
     type Element is tagged null record;
     -- Elements to be put on the stack must be of a descendant type
     -- of this type.
     ...
  end Stack;
&lt;/source&gt;

==== rationale ====

Both generics and class-wide types allow a single algorithm to be applicable to multiple, specific types. With generics, you achieve polymorphism across unrelated types because the type used in the instantiation must match the generic formal part. You specify required operations using generic formal subprograms, constructing them as needed for a given instantiation. Generics are ideal for capturing relatively small, reusable algorithms and programming idioms, for example, sorting algorithms, maps, bags, and iterators. As generics become large, however, they become unwieldy, and each instantiation may involve additional generated code. Class-wide programming, including class-wide types and type extension, is more appropriate for building a large subsystem because you avoid the additional generated code and unwieldy properties of generics.

Class-wide programming enables you to take a set of heterogeneous data structures and provide a homogeneous-looking interface across the whole set. See also Guideline 9.2.1 on using tagged types to describe heterogeneous polymorphic data. 

In object-oriented programming languages without generic capabilities, it was common to use inheritance to achieve much the same effect. However, this technique is generally less clear and more cumbersome to use than the equivalent explicit generic definition. The nongeneric, inheritance approach can always be recovered using a specific instantiation of the generic. Also see Guidelines 5.3.2 and 5.4.7 for a discussion of 
self-referential data structures. 

== Managing Visibility ==
=== Derived Tagged Types ===
==== guideline ====

* Consider giving derived tagged types the same visibility to the parent type as other clients of the parent. 
* Define a derived tagged type in a child of the package that defines the base type if the implementation of the derived type requires greater visibility into the implementation of the base type than other clients of the base type require. 

==== example ====
The following example illustrates the need for a derived type to have greater visibility into the implementation of the base type than other clients of the base type. In this example of a stack class hierarchy, Push and Pop routines provide a homogeneous interface for all variations of stacks. However, the implementation of these operations requires greater visibility into the base types due to the differences in the data elements. This example is adapted from Barbey, Kempe, and Strohmeier (1994): 

&lt;source lang=ada&gt;
generic
   type Item_Type is private;
package Generic_Stack is
   type Abstract_Stack_Type is abstract tagged limited private;
   procedure Push (Stack : in out Abstract_Stack_Type;
                   Item  : in     Item_Type) is abstract;
   procedure Pop (Stack : in out Abstract_Stack_Type;
                  Item  :    out Item_Type) is abstract;
   function Size (Stack : Abstract_Stack_Type) return Natural;
   Full_Error  : exception; -- May be raised by Push
   Empty_Error : exception; -- May be raised by Pop
private
   type Abstract_Stack_Type is abstract tagged limited
      record
         Size : Natural := 0;
      end record;
end Generic_Stack;
package body Generic_Stack is
   function Size (Stack : Abstract_Stack_Type)
      return Natural is
   begin
      return Stack.Size;
   end Size;
end Generic_Stack;
--
-- Now, a bounded stack can be derived in a child package as follows:
--
----------------------------------------------------------------------
generic
package Generic_Stack.Generic_Bounded_Stack is
   type Stack_Type (Max : Positive) is
      new Abstract_Stack_Type with private;
   -- override all abstract subprograms
   procedure Push (Stack : in out Stack_Type;
                   Item  : in     Item_Type);
   procedure Pop (Stack : in out Stack_Type;
                  Item  :    out Item_Type);
private
   type Table_Type is array (Positive range &lt;&gt;) of Item_Type;
   type Stack_Type (Max : Positive) is new Abstract_Stack_Type with
      record
         Table : Table_Type (1 .. Max); 
      end record;
end Generic_Stack.Generic_Bounded_Stack;
----------------------------------------------------------------------
package body Generic_Stack.Generic_Bounded_Stack is

   procedure Push (Stack : in out Stack_Type;
                   Item  : in     Item_Type) is
   begin

      -- The new bounded stack needs visibility into the base type
      --   in order to update the Size element of the stack type
      --   when adding or removing items.

      if (Stack.Size = Stack.Max) then
         raise Full_Error;
      else
         Stack.Size := Stack.Size + 1;
         Stack.Table(Stack.Size) := Item;
      end if;
   end Push;

   procedure Pop (Stack : in out Stack_Type;
                  Item  :    out Item_Type) is
   begin
      ...
   end Pop;

end Generic_Stack.Generic_Bounded_Stack;
&lt;/source&gt;

==== rationale ====

If the derived type can be defined without any special visibility of the base type, this provides for the best possible decoupling of the implementation of the derived type from changes in the implementation of the base type. On the other hand, the operations of an extension of a tagged type may need additional information from the base type that is not commonly needed by other clients. 

When the implementation of a derived tagged type requires visibility of the implementation of the base type, use a child package to define the derived type. Rather than providing additional public operations for this information, it is better to place the definition of the derived type in a child package. This gives the derived type the necessary visibility without risking misuse by other clients. 

This situation is likely to arise when you build a data structure with a homogeneous interface but whose data elements have a heterogeneous implementation. See also Guidelines 8.4.8, 9.2.1, and 9.3.5. 

== Multiple Inheritance ==
Ada provides several mechanisms to support multiple inheritance, where multiple inheritance is a means for incrementally building new abstractions from existing ones, as defined at the beginning of this chapter. Specifically, Ada supports multiple inheritance module inclusion (via multiple with/use clauses), multiple inheritance &quot;is-implemented-using&quot; via private extensions and record composition, and multiple inheritance mixins via the use of generics, formal packages, and access discriminants (Taft 1994). 

=== Multiple Inheritance Techniques ===

==== guideline ====

* Consider using type composition for implementation, as opposed to interface, inheritance. 
* Consider using a generic to &quot;mix in&quot; functionality to a derivative of some core abstraction. 
* Consider using access discriminants to support &quot;full&quot; multiple inheritance where an object must be referenceable as an entity of two or more distinct unrelated abstractions. 

==== example ====
Both examples that follow are taken directly from Taft (1994). The first shows how to use multiple inheritance techniques to create an abstract type whose interface inherits from one type and whose implementation inherits from another type. The second example shows how to enhance the functionality of a basic abstraction by mixing in new features. 

The abstract type Set_Of_Strings provides the interface to inherit: 
&lt;source lang=ada&gt;

type Set_Of_Strings is abstract tagged limited private;
type Element_Index is new Natural;  -- Index within set.
No_Element : constant Element_Index := 0;
Invalid_Index : exception;
procedure Enter(
  -- Enter an element into the set, return the index
  Set : in out Set_Of_Strings;
  S : String;
  Index : out Element_Index) is abstract;
procedure Remove(
  -- Remove an element from the set; ignore if not there
  Set : in out Set_Of_Strings;
  S : String) is abstract;
procedure Combine(
  -- Combine Additional_Set into Union_Set
  Union_Set : in out Set_Of_Strings;
  Additional_Set : Set_Of_Strings) is abstract;
procedure Intersect(
  -- Remove all elements of Removal_Set from Intersection_Set
  Intersection_Set : in out Set_Of_Strings;
  Removal_Set : Set_Of_Strings) is abstract;
function Size(Set : Set_Of_Strings) return Element_Index 
  is abstract;
  -- Return a count of the number of elements in the set
function Index(
  -- Return the index of a given element;
  -- return No_Element if not there.
  Set : Set_Of_Strings;
  S : String) return Element_Index is abstract;
function Element(Index : Element_Index) return String is abstract;
  -- Return element at given index position
  -- raise Invalid_Index if no element there.
private
  type Set_Of_Strings is abstract tagged limited ...

The type Hashed_Set derives its interface from Set_of_Strings and its implementation from an existing (concrete) type Hash_Table: 

type Hashed_Set(Table_Size : Positive) is
  new Set_Of_Strings with private;
-- Now we give the specs of the operations being implemented
procedure Enter(
  -- Enter an element into the set, return the index
  Set : in out Hashed_Set;
  S : String;
  Index : out Element_Index);
procedure Remove(
  -- Remove an element from the set; ignore if not there
  Set : in out Hashed_Set;
  S : String);
  -- . . . etc.
private
  type Hashed_Set(Table_Size : Positive) is
    new Set_Of_Strings with record
      Table : Hash_Table(1..Table_Size);
    end record;
&lt;/source&gt;

In the package body, you define the bodies of the operations (i.e., Enter, Remove,Combine, Size, etc.) using the operations available on Hash_Table. You must also provide any necessary &quot;glue&quot; code. 

In this second example, the type Basic_Window responds to various events and calls: 

&lt;source lang=ada&gt;

type Basic_Window is tagged limited private;
procedure Display(W : Basic_Window);
procedure Mouse_Click(W     : in out Basic_Window;
                      Where :        Mouse_Coords);
          . . .
&lt;/source&gt;

You use mixins to add features such as labels, borders, menu bar, etc.: 
&lt;source lang=ada&gt;
generic
  type Some_Window is new Window with private;
  -- take in any descendant of Window
package Label_Mixin is
  type Window_With_Label is new Some_Window with private;
    -- Jazz it up somehow.
  -- Overridden operations:
  procedure Display(W : Window_With_Label);
  -- New operations:
  procedure Set_Label(W : in out Window_With_Label; S : String);
    -- Set the label
  function Label(W : Window_With_Label) return String;
    -- Fetch the label
private
  type Window_With_Label is
    new Some_Window with record
      Label : String_Quark := Null_Quark;
        -- An XWindows-Like unique ID for a string
    end record;
&lt;/source&gt;

In the generic body, you implement any overridden operations as well as the new operations. For example, you could implement the overridden Display operation using some of the inherited operations: 
&lt;source lang=ada&gt;
procedure Display(W : Window_With_Label) is
begin
    Display(Some_Window(W));
      -- First display the window normally,
      -- by passing the buck to the parent type.
    if W.Label /= Null_Quark then
      -- Now display the label if it is not null
        Display_On_Screen(XCoord(W), YCoord(W)-5, Value(W.Label));
          -- Use two inherited functions on Basic_Window
          -- to get the coordinates where to display the label.
    end if;
end Display;
&lt;/source&gt;

Assuming you have defined several generics with these additional features, to create the desired window, you use a combination of generic instantiations and private type extension, as shown in the following code: 
&lt;source lang=ada&gt;

  type My_Window is new Basic_Window with private;
  . . .
private
  package Add_Label is new Label_Mixin(Basic_Window);
  package Add_Border is
    new Border_Mixin(Add_Label.Window_With_Label);
  package Add_Menu_Bar is
    new Menu_Bar_Mixin(Add_Border.Window_With_Border);
  type My_Window is
    new Add_Menu_Bar.Window_With_Menu_Bar with null record;
      -- Final window is a null extension of Window_With_Menu_Bar.
      -- We could instead make a record extension and
      -- add components for My_Window over and above those
      -- needed by the mixins.
&lt;/source&gt;
The following example shows &quot;full&quot; multiple inheritance. 

Assume previous definition of packages for Savings_Account and Checking_Account. The following example shows the definition of an interest-bearing checking account (NOW account): 
&lt;source lang=ada&gt;
with Savings_Account;
with Checking_Account;
package NOW_Account is

   type Object is tagged limited private;

   type Savings (Self : access Object'Class) is
      new Savings_Account.Object with null record;

   -- These need to be overridden to call through to &quot;Self&quot;
   procedure Deposit (Into_Account : in out Savings; ...);
   procedure Withdraw (...);
   procedure Earn_Interest (...);
   function Interest (...) return Float;
   function Balance (...) return Float;
   type Checking (Self : access Object'Class) is
      new Checking_Account.Object with null record;

   procedure Deposit (Into_Account : in out Checking; ...);
   ...
   function Balance (...) return Float;

   -- These operations will call-through to Savings_Account or
   -- Checking_Account operations. &quot;Inherits&quot; in this way all savings and
   -- checking operations

   procedure Deposit (Into_Account : in out Object; ...);
   ...
   procedure Earn_Interest (...);
   ...
   function Balance (...) return Float;

private

   -- Could alternatively have Object be derived from either
   -- Savings_Account.Object or Checking_Account.Object
   type Object is tagged
      record
         As_Savings  : Savings (Object'Access);
         As_Checking : Checking (Object'Access);
      end record;

end NOW_Account;
&lt;/source&gt;

Another possibility is that the savings and checking accounts are both implemented based on a common Account abstraction, resulting in inheriting a Balance state twice for NOW_Account.Object. To resolve this ambiguity, you need to use an abstract type hierarchy for the multiple inheritance of interface and separate mixins for the multiple inheritance of implementation.

==== rationale ====

In other languages such as Eiffel and C++, multiple inheritance serves many purposes. In Eiffel, for instance, you must use inheritance both for module inclusion and for inheritance itself (Taft 1994). Ada provides context clauses for module inclusion and child libraries for finer modularization control. Ada does not provide a separate syntax for multiple inheritance. Rather, it provides a set of building blocks in type extension and composition that allow you to mix in additional behaviors. 

A library of mixins allows the client to mix and match in order to develop an implementation. Also see Guideline 8.3.8 about implementing mixins. 

You should not use multiple inheritance to derive an abstraction that is essentially unrelated to its parent(s). Thus, you should not try to derive a menu abstraction by inheriting from a command line type and a window type. However, if you have a basic abstraction such as a window, you can use multiple inheritance mixins to create a more sophisticated abstraction, where a mixin is the package containing the type(s) and operations that will extend the parent abstraction. 

Use self-referential data structures to implement types with &quot;full&quot; multiple inheritance (&quot;multiple polymorphism&quot;). 

A common mistake is to use multiple inheritance for parts-of relations. When a type is composed of several others types, you should use heterogeneous data structuring techniques, discussed in Guideline 5.4.2. 

== Summary ==

=== tagged type hierarchies ===

* Consider using type extension when designing an is-a (generalization/specialization) hierarchy. 
* Use tagged types to preserve a common interface across differing implementations (Taft 1995a). 
* When defining a tagged type in a package, consider including a definition of a general access type to the corresponding class-wide type. 
* In general, define only one tagged type per package. 
* The implementation of the dispatching operations of each type in a derivation class rooted in a tagged type T should conform to the expected semantics of the corresponding dispatching operations of the class-wide type T'Class. 
* Consider using a controlled type whenever a type allocates resources that must be deallocated or otherwise &quot;cleaned up&quot; on destruction or overwriting. 
* Use a derivation from a controlled type in preference to providing an explicit &quot;cleanup&quot; operation that must be called by clients of the type. 
* When overriding the adjustment and finalization procedures derived from controlled types, define the finalization procedure to undo the effects of the adjustment procedure. 
* Derived type initialization procedures should call the initialization procedure of their parent as part of their type-specific initialization. 
* Derived type finalization procedures should call the finalization procedure of their parent as part of their type-specific finalization. 
* Consider deriving a data structure's components rather than the enclosing data structure from a controlled type. 
* Consider using abstract types and operations in creating classification schemes, for example, a taxonomy, in which only the leaf objects will be meaningful in the application. 
* Consider declaring root types and internal nodes in a type tree as abstract. 
* Consider using abstract types for generic formal derived types. 
* Consider using abstract types to develop different implementations of a single abstraction. 

=== tagged type operations ===

* Consider declaring a primitive abstract operation based on the absence of a meaningful &quot;default&quot; behavior. 
* Consider declaring a primitive nonabstract operation based on the presence of a meaningful &quot;default&quot; behavior. 
* When overriding an operation, the overriding subprogram should not raise exceptions that are not known to the users of the overridden subprogram. 
* If redispatching is used in the implementation of the operations of a type, with the specific intent that some of the redispatched-to operations be overridden by specializations for the derived types, then document this intent clearly in the specification as part of the &quot;interface&quot; of a parent type with its derived types. 
* When redispatching is used (for any reason) in the implementation of a primitive operation of a tagged type, then document (in some project-consistent way) this use in the body of the operation subprogram so that it can be easily found during maintenance. 
* Consider using a class-wide operation (i.e., an operation with parameter[s] of a class-wide type) when an operation can be written, compiled, and tested without knowing all the possible descendants of a given tagged type (Barnes 1996). 
* Consider using a class-wide operation when you do not want an operation to be inherited and/or overridden. 
* Avoid declaring a constructor as a primitive abstract operation. 
* Use a primitive abstract operation to declare an initialization function or constructor only when objects of the inheriting derived types will not require additional parameters for initialization. 
* Consider using access discriminants to provide parameters to default initialization. 
* Use constructors for explicit initialization. 
* Consider splitting the initialization and construction of an object. 
* Consider declaring a constructor operation in a child package. 
* Consider declaring a constructor operation to return an access value to the constructed object (Dewar 1995). 
* When you redefine the &quot;=&quot; operator on a tagged type, make sure that it has the expected behavior in extensions of this type and override it if necessary. 
* Consider using class-wide programming to provide run-time, dynamic polymorphism when constructing larger, reusable, extensible frameworks. 
* When possible, use class-wide programming rather than variant records. 
* Use class-wide programming to provide a consistent interface across the set of types in the tagged type hierarchy (i.e., class). 
* Consider using generics to define a new type in terms of an existing type, either as an extension or as a container, collection, or composite data structure. 
* Avoid using type extensions for parameterized abstractions when generics provide a more appropriate mechanism. 

=== managing visibility ===

* Consider giving derived tagged types the same visibility to the parent type as other clients of the parent. 
* Define a derived tagged type in a child of the package that defines the base type if the implementation of the derived type requires greater visibility into the implementation of the base type than other clients of the base type require. 

=== multiple inheritance ===

* Consider using type composition for implementation, as opposed to interface, inheritance. 
* Consider using a generic to &quot;mix in&quot; functionality to a derivative of some core abstraction. 
* Consider using access discriminants to support &quot;full&quot; multiple inheritance where an object must be referenceable as an entity of two or more distinct unrelated abstractions.


{{Chapter navigation||Improving Performance}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>eqem0rros5meg894n2q5xe6eb58ejvh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Improving Performance</title>
    <ns>0</ns>
    <id>200805</id>
    <revision>
      <id>2054421</id>
      <parentid>2053133</parentid>
      <timestamp>2011-02-22T19:15:21Z</timestamp>
      <contributor>
        <username>ManuelGR</username>
        <id>3056</id>
      </contributor>
      <minor />
      <comment>Undid revision 2053133 by [[Special:Contributions/Avicennasis|Avicennasis]] ([[User talk:Avicennasis|discuss]]) It was not an error, but an Ada programming language operator.</comment>
      <text xml:space="preserve">{{Chapter navigation|Object-Oriented Features|Portable Dining Philosophers Example}}

{{TOC|limit=3|float=none}}

== Introduction ==

In many ways, performance is at odds with maintainability and portability. To achieve improved speed or memory usage, the most clear algorithm sometimes gives way to confusing code. To exploit special purpose hardware or operating system services, non-portable implementation dependencies are introduced. When concerned about performance, you must decide how well each algorithm meets its performance and maintainability goals. Use the guidelines in this chapter with care; they may be hazardous to your software. 

The best way to build a system that satisfies its performance requirements is through good design. You should not assume that speeding up your code will result in a visible increase in system execution. In most applications, the overall throughput of the system is not defined by the execution speed of the code but by the interaction between concurrent processes and the response time of the system peripherals. 

Most of the guidelines in this chapter read &quot;... when measured performance indicates.&quot; &quot;Indicates&quot; means that you have determined that the benefit in increased performance to your application in your environment outweighs the negative side effects on understandability, maintainability, and portability of the resulting code. Many of the guideline examples show the alternatives that you will need to measure in order to determine if the guideline is indicated. 

== Performance Issues ==
Performance has at least four aspects: execution speed, code size, compilation speed, and linking speed. Although all four are important, most people think of execution speed when performance is mentioned, and most of the guidelines in this chapter focus on execution speed. 

Performance is influenced by many factors, including the compilation software, hardware, system load, and coding style. While only coding style is typically under the control of the programmer, the other factors have so much influence that it is impossible to make flat statements such as &quot;case statements are more efficient than if-then-else structures.&quot; When performance is critical, you cannot assume that a coding style that proves more efficient on one system will also be more efficient on another. Decisions made for the sake of performance must be made on the basis of testing the alternatives on the actual system on which the application will be fielded. 

== Performance Measurement ==

While most well-known tools for measuring performance are stand-alone programs that concentrate on execution speed, there is a comprehensive tool that covers all four aspects of performance. The Ada Compiler Evaluation System (ACES) is the result of merging two earlier products: the United States Department of Defense's Ada Compiler Evaluation Capability and the United Kingdom Ministry of Defence's Ada Evaluation System. It offers a comprehensive set of nearly 2,000 performance tests along with automated setup, test management, and analysis software. This system reports (and statistically analyzes) compilation time, linking time, execution time, and code size. The analysis tools make comparisons among multiple compilation-execution systems and also provide comparisons of the run-time performance of tests using different coding styles to achieve similar purposes. 

Performance Issues Working Group (PIWG) suite. The Quick-Look facility is advertised as being easy to download, install, and execute in less than a day, while providing information that is as useful as that generated by the PIWG suite. In addition, sw-eng.falls-church.va.us, directory /public/AdaIC/testing/aces. For World Wide Web access, use the following uniform resource locator (URL): http://sw-eng.falls-church.va.us/AdaIC/testing/aces/. 

While measuring performance may seem to be a relatively straightforward matter, there are significant issues that must be addressed by any person or toolset planning to do such measurement. For detailed information, see the following sources: ACES (1995a, 1995b, 1995c); Clapp, Mudge, and Roy (1990); Goforth, Collard, and Marquardt (1990); Knight (1990); Newport (1995); and Weidermann (1990). 

== Program Structure ==
=== Blocks ===
==== guideline ====

* Use blocks (see Guideline 5.6.9) to introduce late initialization when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   ...
   Initial : Matrix;

begin  -- Find_Solution

   Initialize_Solution_Matrix:
      for Row in Initial'Range(1) loop
         for Col in Initial'Range(2) loop
            Initial (Row, Col) := Get_Value (Row, Col);
         end loop;
      end loop Initialize_Solution_Matrix;

   Converge_To_The_Solution:
      declare

         Solution       : Matrix           := Identity;
         Min_Iterations : constant Natural := ...;

      begin  -- Converge_To_The_Solution
         for Iterations in 1 .. Min_Iterations loop
            Converge (Solution, Initial);
         end loop;

      end Converge_To_The_Solution;

   ...
end Find_Solution;
&lt;/source&gt;

==== rationale ====

Late initialization allows a compiler more choices in register usage optimization. Depending on the circumstance, this may introduce a significant performance improvement. 

Some compilers incur a performance penalty when declarative blocks are introduced. Careful analysis and timing tests by the programmer may identify those declarative blocks that should be removed. 

==== notes ====

It is difficult to accurately predict through code inspections which declarative blocks improve performance and which degrade performance. However, with these general guidelines and a familiarity with the particular implementation, performance can be improved. 

== Data Structures ==
=== Dynamic Arrays ===
==== guideline ====

* Use constrained arrays when measured performance indicates. 

==== rationale ====
If array bounds are not known until run-time, then calculations of these bounds may affect run-time performance. Using named constants or static expressions as array bounds may provide better performance than using variables or nonstatic expressions. Thus, if the values of Lower and Upper are not determined until run-time, then: 

... is array (Lower .. Upper) of ...

may cause address and offset calculations to be delayed until run-time, introducing a performance penalty. See NASA (1992) for a detailed discussion of the tradeoffs and alternatives. 

=== Zero-Based Arrays ===

==== guideline ====
* Use zero-based indexing for arrays when measured performance indicates. 

==== rationale ====
For some compilers, offset calculations for an array whose lower bound is 0 (either the integer zero or the first value of an enumeration type) are simplified. For other compilers, optimization is more likely if the lower bound is 1. 

=== Unconstrained Records ===

==== guideline ====

* Use fixed-size components for records when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
subtype Line_Range   is Integer range 0 .. Max_Lines;
subtype Length_Range is Integer range 0 .. Max_Length;

-- Note that Max_Lines and Max_Length need to be static
type Paragraph_Body is array (Line_Range range &lt;&gt;, Length_Range range &lt;&gt;) of Character;

type Paragraph (Lines : Line_Range := 0; Line_Length : Length_Range := 0) is
   record
      Text : Paragraph_Body (1 .. Lines, 1 .. Line_Length);
   end record;
&lt;/source&gt;

==== rationale ====

Determine the size and speed impact of unconstrained records having components depending on discriminants. Some compilers will allocate the maximum possible size to each object of the type; others will use pointers to the dependent components, incurring a possible heap performance penalty. Consider the possibility of using fixed-size components. 

=== Records and Arrays ===

==== guideline ====

* Define arrays of records as parallel arrays when measured performance indicates. 
==== example ====
&lt;source lang=ada&gt;
    -- Array of records
    Process (Student (Index).Name, Student (Index).Grade);
    -- Record of arrays
    Process (Student.Name (Index), Student.Grade (Index));
    -- Parallel arrays
    Process (Name (Index), Grade (Index));
&lt;/source&gt;
==== rationale ====

Determine the impact of structuring data as arrays of records, records containing arrays, or parallel arrays. Some implementations of Ada will show significant performance differences among these examples. 

=== Record and Array Aggregates ===

==== guideline ====

* Use a sequence of assignments for an aggregation when measured performance indicates. 

==== rationale ====
Determine the impact of using an aggregate versus a sequence of assignments. Using an aggregate generally requires the use of a temporary variable. If the aggregate is &quot;static&quot; (i.e., its size and components are known at compile- or link-time, allowing link-time allocation and initialization), then it will generally be more efficient than a sequence of assignments. If the aggregate is &quot;dynamic,&quot; then a series of assignments may be more efficient because no temporary variable is needed. 

See Guideline 5.6.10 for a discussion of aggregates from the point of view of readability and maintainability. 

See Guideline 10.6.1 for a discussion of extension aggregates. 

== Algorithms ==

=== Mod and rem Operators ===
==== guideline ====

* Use incremental schemes instead of mod and rem when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   -- Using mod
   for I in 0 .. N loop
      Update (Arr (I mod Modulus));
   end loop;

   -- Avoiding mod
   J := 0;
   for I in 0 .. N loop
      Update (Arr (J));
      J := J + 1;
      if J = Modulus then
         J := 0;
      end if;
   end loop;
&lt;/source&gt;

==== rationale ====

Determine the impact of using the mod and rem operators. One of the above styles may be significantly more efficient than the other. 

=== Short-Circuit Operators ===

==== guideline ====

* Use the short-circuit control form when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   -- Nested &quot;if&quot;
   if Last &gt;= Target_Length then
      if Buffer (1 .. Target_Length) = Target then
         ...
      end if;
   end if;

   -- &quot;and then&quot;
   if Last &gt;= Target_Length and then Buffer (1 .. Target_Length) = Target then
      ...
   end if;
&lt;/source&gt;

==== rationale ====

Determine the impact of using nested if statements versus using the &lt;code&gt;and then&lt;/code&gt; or &lt;code&gt;or else&lt;/code&gt; operator. One of the above may be significantly more efficient than the other. 

=== Case Statement Versus elsif ===

==== guideline ====

* Use the case statement when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   subtype Small_Int is Integer range 1 .. 5;
   Switch : Small_Int;
   ...
   -- Case statement
   case Switch is
      when 1 =&gt; ...
      when 2 =&gt; ...
      when 3 =&gt; ...
      when 4 =&gt; ...
      when 5 =&gt; ...
   end case;

   -- &quot;elsif construct&quot;
   if Switch = 1 then
      ...
   elsif Switch = 2 then
      ...
   elsif Switch = 3 then
      ...
   elsif Switch = 4 then
      ...
   elsif Switch = 5 then
      ...
   end if;
&lt;/source&gt;

==== rationale ====

Determine the impact of using case statements versus the elsif construct. If the case statement is implemented using a small jump table, then it may be significantly more efficient than the if .. then .. elsif construct. 

See also Guideline 8.4.6 for a discussion of the table-driven programming alternative. 

=== Checking for Constraint Errors ===

==== guideline ====

* Use hard-coded constraint checking when measured performance indicates. 

==== example ====

&lt;source lang=ada&gt;
   subtype Small_Int is Positive range Lower .. Upper;
   Var : Small_Int;
   ...

   -- Using exception handler
   Double:
      begin
         Var := 2 * Var;
      exception
         when Constraint_Error =&gt;
            ...
      end Double;

      -- Using hard-coded check
      if Var &gt; Upper / 2 then
         ...
      else
         Var := 2 * Var;
      end if;
&lt;/source&gt;

==== rationale ====

Determine the impact of using exception handlers to detect constraint errors. If the exception handling mechanism is slow, then hard-coded checking may be more efficient. 

=== Order of Array Processing ===

==== guideline ====

* Use column-first processing of two-dimensional arrays when measured performance indicates. 

==== example ====

&lt;source lang=ada&gt;
    type Table_Type is array (Row_Min .. Row_Max, Col_Min .. Col_Max) of ...
    Table : Table_Type;
    ...
    -- Row-order processing
    for Row in Row_Min .. Row_Max loop
       for Col in Col_Min .. Col_Max loop
          -- Process Table (Row, Col)
       end loop;
    end loop;
    -- Column-order processing
    for Col in Col_Min .. Col_Max loop
       for Row in Row_Min .. Row_Max loop
          -- Process Table (Row, Col)
       end loop;
    end loop;
&lt;/source&gt;

==== rationale ====

Determine the impact of processing two-dimensional arrays in row-major order versus column-major order. While most Ada compilers are likely to use row-major order, it is not a requirement. In the presence of good optimization, there may be no significant difference in the above examples. Using static array bounds is also likely to be significant here. See Guidelines 10.4.1 and 10.4.2. 

=== Assigning Alternatives ===

==== guideline ====

* Use overwriting for conditional assignment when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   -- Using &quot;if .. else&quot;
   if Condition then
      Var := One_Value;
   else
      Var := Other_Value;
   end if;
   -- Using overwriting
   Var := Other_Value;
   if Condition then
      Var := One_Value;
   end if;
&lt;/source&gt;

==== rationale ====

Determine the impact of styles of assigning alternative values. The examples illustrate two common methods of doing this; for many systems, the performance difference is significant. 

=== Packed Boolean Array Shifts ===

==== guideline ====

* When measured performance indicates, perform packed Boolean array shift operations by using slice assignments rather than repeated bit-wise assignment. 

==== example ====
&lt;source lang=ada&gt;
   subtype Word_Range is Integer range 0 .. 15;
   type Flag_Word is array (Word_Range) of Boolean;
   pragma Pack (Flag_Word);
   Word : Flag_Word;
   ...

   -- Loop to shift by one bit
   for Index in 0 .. 14 loop
      Word (Index) := Word (Index + 1);
   end loop;
   Word (15) := False;

   -- Use slice assignment to shift by one bit
   Word (0 .. 14) := Word (1 .. 15);
   Word (15) := False;
&lt;/source&gt;

==== rationale ====

Determine the impact of slice manipulation when shifting packed Boolean arrays. For Ada 83 implementations using packed Boolean arrays, shift operations may be much faster when slice assignments are used as opposed to for loop moving one component at a time. For Ada 95 implementations, consider using modular types instead (see Guideline 10.6.3). 

=== Subprogram Dispatching ===

==== guideline ====

* Use static subprogram dispatching when measured performance indicates. 
==== example ====

The term &quot;static dispatching&quot; in this example refers to the use of if/elsif sequences to explicitly determine which subprograms to call based on certain conditions: 

&lt;source lang=ada&gt;
    -- (1) Dispatching where tag is not known at compile time
    --     (See ACES V2.0 test &quot;a9_ob_class_wide_dynamic_01&quot;)
    -- Object_Type is a tagged type
    -- The_Pointer designates Object_Type'Class;
    -- Subclass1_Pointer designates Subclass1 (derived from Object_Type)
    -- Subclass2_Pointer designates Subclass2 (derived from Subclass1)
    -- Subclass3_Pointer designates Subclass3 (derived from Subclass2)
    Random_Value := Simple_Random; -- Call to a random number generator
    if Random_Value &lt; 1.0/3.0 then
       The_Pointer := Subclass1_Pointer;
    elsif Random_Value &gt; 2.0/3.0 then
       The_Pointer := Subclass2_Pointer;
    else
       The_Pointer := Subclass3_Pointer;
    end if;
    Process (The_Pointer.all);  -- Tag is unknown
    -- (2) Tag is determinable at compile time (static dispatching)
    --     (See ACES V2.0, test &quot;a9_ob_class_wide_static_01&quot;)
    -- Object_Type is a tagged type
    -- The_Pointer designates Object_Type'Class;
    -- Subclass1_Pointer designates Subclass1 (derived from Object_Type)
    -- Subclass2_Pointer designates Subclass2 (derived from Subclass1)
    -- Subclass3_Pointer designates Subclass3 (derived from Subclass2)
    Random_Value := Simple_Random; -- Call to a random number generator
    if Random_Value &lt; 1.0/3.0 then
       Process (Subclass1_Pointer.all);
    elsif Random_Value &gt; 2.0/3.0 then
       Process (Subclass2_Pointer.all);
    else
       Process (Subclass3_Pointer.all);
    end if;
    -- (3) No tagged types are involved (no dispatching)
    --     (See ACES V2.0, test &quot;ap_ob_class_wide_01&quot;)
    -- Object_type is a discriminated type with variants; possible
    -- discriminant values are Subclass1, Subclass2, and Subclass3
    -- All the pointers designate values of Object_Type
    -- Subclass1_Pointer := new Object_Type (Subclass1);
    -- Subclass2_Pointer := new Object_Type (Subclass2);
    -- Subclass3_Pointer := new Object_Type (Subclass3);
    -- There is only one &quot;Process&quot; procedure (operating on Object_Type)
    Random_Value := Simple_Random; -- Call to a random number generator
    if Random_Value &lt; 1.0/3.0 then
       Process (Subclass1_Pointer.all);
    elsif Random_Value &gt; 2.0/3.0 then
       Process (Subclass2_Pointer.all);
    else
       Process (Subclass3_Pointer.all);
    end if;
&lt;/source&gt;

==== rationale ====

Determine the impact of dynamic and static subprogram dispatching. The compiler may generate much more efficient code for one form of dispatching than the other. 

==== notes ====

Dynamic dispatching will almost certainly be more efficient than an explicit if . . . elsif sequence. However, you should be aware of any optimizing decisions made by a compiler that might affect this situation. 

== Types ==

=== Aggregates for Type Extensions ===

==== guideline ====

* Use only simple aggregates when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   type Parent is tagged
      record
         C1 : Float;
         C2 : Float;
      end record;

   type Extension is new Parent with
      record
         C3 : Float;
         C4 : Float;
      end record;

   Parent_Var : Parent := (C1 =&gt; Float_Var1, C2 =&gt; Float_Var2);
   Exten_Var  : Extension;
   ...
   -- Simple aggregate
   -- (See ACES V2.0, test &quot;a9_ob_simp_aggregate_02&quot;)
   Exten_Var := (C1 =&gt; Float_Var1, C2 =&gt; Float_Var2,
                 C3 =&gt; Float_Var3, C4 =&gt; Float_Var4);
   -- Extension aggregate
   -- (See ACES V2.0, test &quot;a9_ob_ext_aggregate_02&quot;)
   Exten_Var := (Parent_Var with C3 =&gt; Float_Var3, C4 =&gt; Float_Var4);
&lt;/source&gt;

==== rationale ====

Determine the impact of using extension aggregates. There may be a significant performance difference between evaluation of simple aggregates and evaluation of extension aggregates. 

=== Protected Types ===

==== guideline ====

* For mutual exclusion, when measured performance indicates, use protected types as an alternative to tasking rendezvous. 
* To implement an interrupt handler, when performance measurement indicates, use a protected procedure. 

==== example ====
&lt;source lang=ada&gt;
   -- (1) Using protected objects
   --     (See ACES V2.0, test &quot;a9_pt_prot_access_02&quot;)
   protected Object is
      function Read return Float;
      procedure Write (Value : in Float);
   private
      Data : Float;
   end Object;
   protected body Object is
      function Read return Float is
      begin
         return Data;
      end Read;
      procedure Write (Value : in Float) is
      begin
         Data := Value;
      end Write;
   end Object;
   task type Modify is
   end Modify;
   type Mod_Bunch is array (1 .. 5) of Modify;
   task body Modify is
      ...
   begin -- Modify
      for I in 1 .. 200 loop
         The_Value := Object.Read;
         Object.Write (The_Value - 0.125);
         if The_Value &lt; -1.0E7 then
            The_Value := 1.0;
         end if;
      end loop;
   end Modify;
   ...
   -- Block statement to be timed
   declare
      Contending_Tasks : array (1 .. 5) of Modify;
   begin
      null;  -- 5 tasks contend for access to protected data
   end;
   ------------------------------------------------------------------------------
   -- (2) Using monitor task
   --     (See ACES V2.0, test &quot;tk_rz_entry_access_02&quot;)
   Task Object is
      entry Write (Value : in     Float);
      entry Read  (Value :    out Float);
   end Object;
   task body Object is
      Data : Float;
   begin -- Object
      loop
         select
            accept Write (Value : in     Float) do
               Data := Value;
            end Write;
         or
            accept Read  (Value :    out Float) do
               Value := Data;
            end Read;
         or
            terminate;
         end select;
      end loop;
   end Object;
   -- Task type Modify declared as above
   -- Block statement to be timed as above
&lt;/source&gt;
==== rationale ====

Protected objects are meant to be much faster than tasks used for the same purpose (see Guideline 6.1.1). Determine the impact of using protected objects to provide access safely to encapsulated data in a concurrent program. 

=== Bit Operations on Modular Types ===

==== guideline ====

* Use modular types rather than packed Boolean arrays when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   -- (1) Packed Boolean arrays
   --     (See ACES V2.0, test &quot;dr_ba_bool_arrays_11&quot;)

   type Set is array (0 .. 15) of Boolean;
   pragma Pack (Set);

   S1     : Set;
   S2     : Set;
   Empty  : Set := (Set'Range =&gt; False);
   Result : Boolean;

   ...

   -- Is S1 a subset of S2?
   Result := ((S1 and not S2) = Empty);

   ---------------------------------------------------------------------

   -- (2) Modular types
   --     (See ACES V2.0, test &quot;a9_ms_modular_oper_02&quot;)

   type Set is mod 16;

   S1     : Set;
   S2     : Set;
   Empty  : Set := 0;
   Result : Boolean;

   ...

   -- Is S1 a subset of S2?
   Result := ((S1 and not S2) = Empty);
&lt;/source&gt;

==== rationale ====

Determine the impact of performing bit-wise operations on modular types. The performance of these operations may be significantly different from similar operations on packed Boolean arrays. See also Guideline 10.5.7. 

=== Bounded Strings ===

==== guideline ====

* Use the predefined bounded strings when predictable performance is an issue and measured performance indicates. 

==== rationale ====
The unbounded strings may be allocated on the heap. If bounded strings are not allocated on the heap, then they may provide better performance. Determine the impact of using the string type declared in instantiations of Ada.Strings.Bounded.Generic_Bounded_Length versus the type declared in Ada.Strings.Unbounded. 

The predefined Ada 95 language environment defines packages that support both bounded and unbounded strings. Using bounded strings may avoid the unpredictable duration of delays associated with using heap storage. 

=== String Handling Subprograms ===

==== guideline ====

* Use the procedural form of the string handling subprograms when measured performance indicates. 

==== rationale ====
Determine the relative performance cost of functions and procedures having the same name and functionality in Ada.Strings.Fixed, Ada.Strings.Bounded, Ada.Strings.Unbounded and the corresponding child packages whose names include Wide. 

While functional notation typically leads to clearer code, it may cause the compiler to generate additional copying operations. 

=== Constraint Checking ===

==== guideline ====

* Use strong typing with carefully selected constraints to reduce run-time constraint checking when measured performance indicates. 

==== example ====
In this example, two potential constraint checks are eliminated. If the function Get_Response returns String, then the initialization of the variable Input would require constraint checking. If the variable Last is type Positive, then the assignment inside the loop would require constraint checking: 

&lt;source lang=ada&gt;
   ...
   subtype Name_Index is Positive range 1 .. 32;
   subtype Name       is String (Name_Index);
   ...
   function Get_Response return Name is separate;
   ...
begin
   ...
   Find_Last_Period:
      declare
         -- No Constraint Checking needed for initialization
         Input       : constant Name       := Get_Response;
         Last_Period :          Name_Index := 1;
      begin  -- Find_Last_Period
         for I in Input'Range loop
            if Input(I) = '.' then
               -- No Constraint Checking needed in  this `tight' loop
               Last_Period := I;
            end if;
         end loop;
         ...
      end Find_Last_Period;
&lt;/source&gt;

==== rationale ====

Because run-time constraint checking is associated with slow performance, it is not intuitive that the addition of constrained subtypes could actually improve performance. However, the need for constraint checking appears in many places regardless of the use of constrained subtypes. Even assignments to variables that use the predefined subtypes may need constraint checks. By consistently using constrained subtypes, many of the unnecessary run-time checking can be eliminated. Instead, the checking is usually moved to less frequently executed code involved in system input. In the example, the function Get_Response may need to check the length of a user-supplied string and raise an exception. 

Some compilers can do additional optimizations based on the information provided by constrained subtypes. For example, although an unconstrained array does not have a fixed size, it has a maximum size that can be determined from the range of its index. Performance can be improved by limiting this maximum size to a &quot;reasonable&quot; number. Refer to the discussion on unconstrained arrays found in NASA (1992). 

=== Real-Time System Annex ===

==== guideline ====

* For cases where both rendezvous and protected types are inefficient, consider the use of the Real-Time Systems Annex (Ada Reference Manual 1995, Annex D). 

==== rationale ====
The packages Ada.Synchronous_Task_Control and Ada.Asynchronous_Task_Control have been defined to provide an alternative to tasking and protected types for use in applications where a minimal run-time is desired (Ada Reference Manual 1995, Annex D). 

== Pragmas ==
=== Pragma Inline ===

==== guideline ====

* When measured performance indicates, use pragma Inline when calling overhead is a significant portion of the routine's execution time. 

==== example ====
&lt;source lang=ada&gt;
procedure Assign (Variable : in out Integer;
                  Value    : in     Integer);
pragma Inline (Assign);
...
procedure Assign (Variable : in out Integer;
                  Value    : in     Integer) is
begin
   Variable := Value;
end Assign;
&lt;/source&gt;

==== rationale ====

If calling overhead is a significant portion of a subprogram's execution time, then using pragma Inline may reduce execution time. 

Procedure and function invocations include overhead that is unnecessary when the code involved is very small. These small routines are usually written to maintain the implementation hiding characteristics of a package. They may also simply pass their parameters unchanged to another routine. When one of these routines appears in some code that needs to run faster, either the implementation-hiding principle needs to be violated or a pragma Inline can be introduced. 

The use of pragma Inline does have its disadvantages. It can create compilation dependencies on the body; that is, when the specification uses a pragma Inline, both the specification and corresponding body may need to be compiled before the specification can be used. As updates are made to the code, a routine may become more complex (larger) and the continued use of a pragma Inline may no longer be justified. 

==== exceptions ====

Although it is rare, inlining code may increase code size, which can lead to slower performance caused by additional paging. A pragma Inline may actually thwart a compiler's attempt to use some other optimization technique, such as register optimization. 

When a compiler is already doing a good job of selecting routines to be inlined, the pragma may accomplish little, if any, improvement in execution speed. 

=== Pragma Restrictions ===

==== guideline ====

* Use pragma Restrictions to express the user's intent to abide by certain restrictions. 

==== rationale ====
This may facilitate the construction of simpler run-time environments (Ada Reference Manual 1995, §§13.12, D.7, and H.4). 

=== Pragma Preelaborate ===

==== guideline ====

* Use pragma Preelaborate where allowed. 

==== rationale ====
This may reduce memory write operations after load time (Ada Reference Manual 1995, §§10.2.1 and C.4). 

=== Pragma Pure ===

==== guideline ====

* Use pragma Pure where allowed. 

==== rationale ====
This may permit the compiler to omit calls on library-level subprograms of the library unit if the results are not needed after the call (Ada Reference Manual 1995, §10.2.1). 

=== Pragma Discard_Names ===

==== guideline ====

* Use pragma Discard_Names when the names are not needed by the application and data space is at a premium. 

==== rationale ====
This may reduce the memory needed to store names of Ada entities, where no operation uses those names (Ada Reference Manual 1995, §C.5). 

=== Pragma Suppress ===

==== guideline ====

* Use pragma Suppress where necessary to achieve performance requirements. 

==== rationale ====
See Guideline 5.9.5. 

=== Pragma Reviewable ===

==== guideline ====

* Use pragma Reviewable to aid in the analysis of the generated code. 

==== rationale ====
See the Ada Reference Manual (1995, Annex H). 

== Summary ==

* Use the guidelines in this chapter with care; they may be hazardous to your software. 

==== program structure ====

* Use blocks to introduce late initialization when measured performance indicates . 

=== data structures ===

* Use constrained arrays when measured performance indicates. 
* Use zero-based indexing for arrays when measured performance indicates. 
* Use fixed-size components for records when measured performance indicates. 
* Define arrays of records as parallel arrays when measured performance indicates. 
* Use a sequence of assignments for an aggregation when measured performance indicates. 

=== algorithms ===

* Use incremental schemes instead of mod and rem when measured performance indicates. 
* Use the short-circuit control form when measured performance indicates. 
* Use the case statement when measured performance indicates. 
* Use hard-coded constraint checking when measured performance indicates. 
* Use column-first processing of two-dimensional arrays when measured performance indicates. 
* Use overwriting for conditional assignment when measured performance indicates. 
* When measured performance indicates, perform packed Boolean array shift operations by using slice assignments rather than repeated bit-wise assignment. 
* Use static subprogram dispatching when measured performance indicates.&lt; 

=== types ===

* Use only simple aggregates when measured performance indicates. 
* For mutual exclusion, when measured performance indicates, use protected types as an alternative to tasking rendezvous. 
* To implement an interrupt handler, when measured performance indicates, use a protected procedure. 
* Use modular types rather than packed Boolean arrays when measured performance indicates. 
* Use the predefined bounded strings when predictable performance is an issue and measured performance indicates. 
* Use the procedural form of the string handling subprograms when measured performance indicates. 
* Use strong typing with carefully selected constraints to reduce run-time constraint checking when measured performance indicates. 
* For cases where both rendezvous and protected types are inefficient, consider the use of the Real-Time Systems Annex (Ada Reference Manual 1995, Annex D). 

=== pragmas ===

* When measured performance indicates, use pragma Inline when calling overhead is a significant portion of the routine's execution time. 
* Use pragma Restrictions to express the user's intent to abide by certain restrictions. 
* Use pragma Preelaborate where allowed. 
* Use pragma Pure where allowed. 
* Use pragma Discard_Names when the names are not needed by the application and data space is at a premium. 
* Use pragma Suppress where necessary to achieve performance requirements. 
* Use pragma Reviewable to aid in the analysis of the generated code.


{{Chapter navigation||Portable Dining Philosophers Example}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>5mwh50igpw1cyzah3uwnfrtg7lp09jh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Portable Dining Philosophers Example</title>
    <ns>0</ns>
    <id>200806</id>
    <revision>
      <id>1550576</id>
      <parentid>1549804</parentid>
      <timestamp>2009-06-28T09:14:28Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>{{Chapter navigation|Improving Performance|References}}</comment>
      <text xml:space="preserve">{{Chapter navigation|Improving Performance|References}}


This chapter presents an elaborate implementation of Edsger Dijkstra's famous [[w:Dining Philosophers|Dining Philosophers]]; a classical demonstration of [[w:deadlock|deadlock]] problems in concurrent programming. This example demonstrates the portability of Ada packages and tasking and illustrates many of the Ada 95 quality and style guidelines. Since many of the guidelines leave the program writer to decide what is best, there is no single best or correct example of how to use Ada. Instead, you will find several styles that differ from your own that may deserve consideration. 


&lt;source lang=ada&gt;
--::::::::::
--random_generic.ads
--::::::::::
generic
  type Result_Subtype is (&lt;&gt;);
package Random_Generic is
 
  -- Simple integer pseudo-random number generator package.
  -- Michael B. Feldman, The George Washington University, 
  -- June 1995.
 
  function Random_Value return Result_Subtype;  
 
end Random_Generic;
--::::::::::
--screen.ads
--::::::::::
package Screen is

  -- simple ANSI terminal emulator
  -- Michael Feldman, The George Washington University
  -- July, 1995

  ScreenHeight : constant Integer := 24;
  ScreenWidth  : constant Integer := 80;

  subtype Height is Integer range 1 .. ScreenHeight;
  subtype Width  is Integer range 1 .. ScreenWidth;

  type Position is record
    Row    : Height := 1;
    Column : Width  := 1;
  end record;

  procedure Beep; 
  -- Pre:  none
  -- Post: the terminal beeps once
  
  procedure ClearScreen; 
  -- Pre:  none
  -- Post: the terminal screen is cleared
  
  procedure MoveCursor (To : in Position);
  -- Pre:  To is defined
  -- Post: the terminal cursor is moved to the given position
  
end Screen;   
--::::::::::
--windows.ads
--::::::::::
with Screen;
package Windows is

  -- manager for simple, nonoverlapping screen windows
  -- Michael Feldman, The George Washington University
  -- July, 1995

  type Window is private;

  function Open (UpperLeft : Screen.Position;
                 Height    : Screen.Height;
                 Width     : Screen.Width) return Window;
  -- Pre:  W, Height, and Width are defined
  -- Post: returns a Window with the given upper-left corner,
  --   height, and width

  procedure Title (W     : in out Window;
                   Name  : in     String;
                   Under : in     Character);
  -- Pre:  W, Name, and Under are defined
  -- Post: Name is displayed at the top of the window W, underlined
  -- with the character Under. 

  procedure Borders (W      : in out Window;
                     Corner : in     Character
                     Down   : in     Character
                     Across : in     Character);
  -- Pre:  All parameters are defined
  -- Post: Draw border around current writable area in window with 
  -- characters specified.  Call this BEFORE Title.  

  procedure MoveCursor (W : in out Window;
                        P : in     Screen.Position);
  -- Pre:  W and P are defined, and P lies within the area of W
  -- Post: Cursor is moved to the specified position.
  --   Coordinates are relative to the
  --   upper left corner of W, which is (1, 1) 

  procedure Put (W  : in out Window;
                 Ch : in     Character);
  -- Pre:  W and Ch are defined.
  -- Post: Ch is displayed in the window at 
  --   the next available position.
  --   If end of column, go to the next row.
  --   If end of window, go to the top of the window. 

  procedure Put (W : in out Window;
                 S : in     String);
  -- Pre:  W and S are defined
  -- Post: S is displayed in the window, &quot;line-wrapped&quot; if necessary

  procedure New_Line (W : in out Window);
  -- Pre:  W is defined
  -- Post: Cursor moves to beginning of next line of W;
  --   line is not blanked until next character is written  

private
  type Window is record
    First   : Screen.Position; -- coordinates of upper left
    Last    : Screen.Position; -- coordinates of lower right
    Current : Screen.Position; -- current cursor position
  end record;

end Windows;
--::::::::::
--Picture.ads
--::::::::::
with Windows;
with Screen;
package Picture is

  -- Manager for semigraphical presentation of the philosophers
  -- i.e. more application oriented windows, build on top of
  -- the windows package.
  -- Each picture has an orientation, which defines which borders
  -- top-bottom, bottom-top, left-right, or right-left correspond
  -- to the left and right hand of the philosopher.
  --
  -- Bjorn Kallberg, CelsiusTech Systems, Sweden
  -- July, 1995

  type Root is abstract tagged private;
  type Root_Ptr is access Root'Class;

  procedure Open (W         : in out Root;
                  UpperLeft : in     Screen.Position;
                  Height    : in     Screen.Height;
                  Width     : in     Screen.Width);
  -- Pre:  Not opened
  -- Post: An empty window exists

  procedure Title (W     : in out Root;
                   Name  : in     String);
  -- Pre:  An empty window
  -- Post: Name and a border is drawn.

  procedure Put_Line (W : in out Root; 
                      S : in     String);

  procedure Left_Fork  (W    : in out Root; 
                        Pick : in     Boolean) is abstract;
  procedure Right_Fork (W    : in out Root; 
                        Pick : in     Boolean) is abstract;
  -- left and right relates to philosopher position around table

  type North is new Root with private;
  type South is new Root with private;
  type East  is new Root with private;
  type West  is new Root with private;


private
  type Root is abstract tagged record
      W : Windows.Window;
  end record;

  type North is new Root with null record;
  type South is new Root with null record;
  type East  is new Root with null record;
  type West  is new Root with null record;

  procedure Left_Fork  (W    : in out North; 
                        Pick : in     Boolean);
  procedure Right_Fork (W    : in out North; 
                        Pick : in     Boolean);

  procedure Left_Fork  (W    : in out South; 
                        Pick : in     Boolean);
  procedure Right_Fork (W    : in out South; 
                        Pick : in     Boolean);

  procedure Left_Fork  (W    : in out East; 
                        Pick : in     Boolean);
  procedure Right_Fork (W    : in out East; 
                        Pick : in     Boolean);

  procedure Left_Fork  (W    : in out West; 
                        Pick : in     Boolean);
  procedure Right_Fork (W    : in out West; 
                        Pick : in     Boolean);

end Picture;
--::::::::::
--chop.ads
--::::::::::
package Chop is

  -- Dining Philosophers - Ada 95 edition
  -- Chopstick is an Ada 95 protected type
  -- Michael B. Feldman, The George Washington University,
  -- July, 1995.
 
  protected type Stick is
    entry Pick_Up;
    procedure Put_Down;
  private
    In_Use: Boolean := False;
  end Stick;
 
end Chop;

--::::::::::
--society.ads
--::::::::::
package Society is

  -- Dining Philosophers - Ada 95 edition
  -- Society gives unique ID's to people, and registers their names
  -- Michael B. Feldman, The George Washington University,
  -- July, 1995.

  subtype Unique_DNA_Codes is Positive range 1 .. 5;

  Name_Register : array (Unique_DNA_Codes) of String (1 .. 18) :=

     (&quot;Edsger Dijkstra   &quot;,
      &quot;Bjarne Stroustrup &quot;,
      &quot;Chris Anderson    &quot;,
      &quot;Tucker Taft       &quot;,
      &quot;Jean Ichbiah      &quot;);

end Society;
--::::::::::
--phil.ads
--::::::::::
with Society;
package Phil is
 
  -- Dining Philosophers - Ada 95 edition
  -- Philosopher is an Ada 95 task type with discriminant
  -- Michael B. Feldman, The George Washington University,
  -- July 1995
  --
  -- Revisions:
  -- July 1995. Bjorn Kallberg, CelsiusTech
  --            Reporting left or right instead of first stick

  task type Philosopher (My_ID : Society.Unique_DNA_Codes) is
 
    entry Start_Eating (Chopstick1 : in Positive;
                        Chopstick2 : in Positive);
 
  end Philosopher;
 
  type States is (Breathing, Thinking, Eating, Done_Eating, 
                  Got_Left_Stick, Got_Right_Stick, Got_Other_Stick, Dying);

end Phil;
--::::::::::
--room.ads
--::::::::::
with Chop;
with Phil;
with Society;
package Room is
 
  -- Dining Philosophers - Ada 95 edition

  -- Room.Maitre_D is responsible for assigning seats at the
  --   table, &quot;left&quot; and &quot;right&quot; chopsticks, and for reporting
  --   interesting events to the outside world.

  -- Michael B. Feldman, The George Washington University,
  -- July, 1995.

  Table_Size : constant := 5;
  subtype Table_Type is Positive range 1 .. Table_Size;
 
  Sticks : array (Table_Type) of Chop.Stick;
 
  task Maitre_D is
    entry Start_Serving;
    entry Report_State (Which_Phil : in Society.Unique_DNA_Codes;
                        State      : in Phil.States;
                        How_Long   : in Natural := 0;
                        Which_Meal : in Natural := 0);
  end Maitre_D;
 
end Room;
--::::::::::
--random_generic.adb
--::::::::::
with Ada.Numerics.Discrete_Random;
package body Random_Generic is
 
  -- Body of random number generator package.
  -- Uses Ada 95 random number generator; hides generator parameters
  -- Michael B. Feldman, The George Washington University, 
  -- June 1995.
 
  package Ada95_Random is new Ada.Numerics.Discrete_Random
    (Result_Subtype =&gt; Result_Subtype);

  G : Ada95_Random.Generator;

  function Random_Value return Result_Subtype is 
  begin
    return Ada95_Random.Random (Gen =&gt; G);
  end Random_Value;

begin -- Random_Generic

  Ada95_Random.Reset (Gen =&gt; G);  -- time-dependent initialization

end Random_Generic;
--::::::::::
--screen.adb
--::::::::::
with Text_IO;
package body Screen is

  -- simple ANSI terminal emulator
  -- Michael Feldman, The George Washington University
  -- July, 1995

  -- These procedures will work correctly only if the actual
  -- terminal is ANSI compatible. ANSI.SYS on a DOS machine
  -- will suffice.

  package Int_IO is new Text_IO.Integer_IO (Num =&gt; Integer);

  procedure Beep is
  begin
    Text_IO.Put (Item =&gt; ASCII.BEL);
  end Beep;

  procedure ClearScreen is
  begin
    Text_IO.Put (Item =&gt; ASCII.ESC);
    Text_IO.Put (Item =&gt; &quot;[2J&quot;);
  end ClearScreen;

  procedure MoveCursor (To : in Position) is
  begin                                                
    Text_IO.New_Line;
    Text_IO.Put (Item =&gt; ASCII.ESC);
    Text_IO.Put (&quot;[&quot;);
    Int_IO.Put (Item =&gt; To.Row, Width =&gt; 1);
    Text_IO.Put (Item =&gt; ';');
    Int_IO.Put (Item =&gt; To.Column, Width =&gt; 1);
    Text_IO.Put (Item =&gt; 'f');
  end MoveCursor;  

end Screen;
--::::::::::
--windows.adb
--::::::::::
with Text_IO, with Screen;
package body Windows is

  -- manager for simple, nonoverlapping screen windows
  -- Michael Feldman, The George Washington University
  -- July, 1995

  function Open (UpperLeft : Screen.Position;
                 Height    : Screen.Height;
                 Width     : Screen.Width) return Window is
    Result : Window;
  begin
    Result.Current := UpperLeft;
    Result.First   := UpperLeft;
    Result.Last    := (Row    =&gt; UpperLeft.Row + Height - 1, 
                       Column =&gt; UpperLeft.Column + Width - 1);
    return Result; 
  end Open;

  procedure EraseToEndOfLine (W : in out Window) is
  begin
    Screen.MoveCursor (W.Current);
    for Count in W.Current.Column .. W.Last.Column loop
      Text_IO.Put (' ');
    end loop;
    Screen.MoveCursor (W.Current);
  end EraseToEndOfLine;

  procedure Put (W  : in out Window;
                 Ch : in     Character) is
  begin

    -- If at end of current line, move to next line 
    if W.Current.Column &gt; W.Last.Column then
      if W.Current.Row = W.Last.Row then
        W.Current.Row := W.First.Row;
      else
        W.Current.Row := W.Current.Row + 1;
      end if;
      W.Current.Column := W.First.Column;
    end if;

    -- If at First char, erase line
    if W.Current.Column = W.First.Column then
      EraseToEndOfLine (W);
    end if;

    Screen.MoveCursor (To =&gt; W.Current);

     -- here is where we actually write the character!
     Text_IO.Put (Ch);
     W.Current.Column := W.Current.Column + 1;
 
  end Put;

  procedure Put (W : in out Window;
                 S : in     String) is
  begin
    for Count in S'Range loop
      Put (W, S (Count));
    end loop;
  end Put;

  procedure New_Line (W : in out Window) is
  begin
    if W.Current.Column = 1 then
      EraseToEndOfLine (W);
    end if;
    if W.Current.Row = W.Last.Row then
      W.Current.Row := W.First.Row;
    else
      W.Current.Row := W.Current.Row + 1;
    end if;
    W.Current.Column := W.First.Column;
  end New_Line;
  procedure Title (W     : in out Window;
                   Name  : in     String;
                   Under : in     Character) is
  begin
    -- Put name on top line
    W.Current := W.First;
    Put (W, Name);
    New_Line (W);
    -- Underline name if desired, and reduce the writable area
    -- of the window by one line
    if Under = ' ' then   -- no underlining
      W.First.Row := W.First.Row + 1;      
    else                  -- go across the row, underlining
      for Count in W.First.Column .. W.Last.Column loop 
        Put (W, Under);
      end loop;
      New_Line (W);
      W.First.Row := W.First.Row + 2; -- reduce writable area
    end if;
  end Title;
 
  procedure Borders (W       : in out Window;
                     Corner  : in     Character
                     Down    : in     Character
                     Across  : in     Character is
, 
  begin
    -- Put top line of border
    Screen.MoveCursor (W.First);
    Text_IO.Put (Corner);
    for Count in W.First.Column + 1 .. W.Last.Column - 1 loop
      Text_IO.Put (Across);
    end loop;
    Text_IO.Put (Corner);

    -- Put the two side lines
    for Count in W.First.Row + 1 .. W.Last.Row - 1 loop
      Screen.MoveCursor ((Row =&gt; Count, Column =&gt; W.First.Column));
      Text_IO.Put (Down);
      Screen.MoveCursor ((Row =&gt; Count, Column =&gt; W.Last.Column));
      Text_IO.Put (Down);
    end loop;

    -- Put the bottom line of the border
    Screen.MoveCursor ((Row =&gt; W.Last.Row, Column =&gt; W.First.Column));
    Text_IO.Put (Corner);
    for Count in W.First.Column + 1 .. W.Last.Column - 1 loop
      Text_IO.Put (Across);
    end loop;
    Text_IO.Put (Corner);

    -- Make the Window smaller by one character on each side
    W.First   := (Row =&gt; W.First.Row + 1, Column =&gt; W.First.Column + 1);
    W.Last    := (Row =&gt; W.Last.Row - 1,  Column =&gt; W.Last.Column - 1);
    W.Current := W.First;
  end Borders;

  procedure MoveCursor (W : in out Window;
                        P : in     Screen.Position) is
    -- Relative to writable Window boundaries, of course
  begin 
    W.Current.Row    := W.First.Row + P.Row;
    W.Current.Column := W.First.Column + P.Column;
  end MoveCursor;

begin -- Windows

  Text_IO.New_Line;
  Screen.ClearScreen;
  Text_IO.New_Line;

end Windows;
--------------------
package Windows.Util is
  --
  -- Child package to change the borders of an existing window
  -- Bjorn Kallberg, CelsiusTech Systems, Sweden
  -- July, 1995.
  
  -- call these procedures after border and title
  procedure Draw_Left   (W  : in out Window; 
                         C  : in     Character);
  procedure Draw_Right  (W  : in out Window; 
                         C  : in     Character);
  procedure Draw_Top    (W  : in out Window; 
                         C  : in     Character);
  procedure Draw_Bottom (W  : in out Window; 
                         C  : in     Character);

end Windows.Util;
--------------------
with Text_IO;
package body Windows.Util is

  -- Bjorn Kallberg, CelsiusTech Systems, Sweden
  -- July, 1995.
 
  -- When making borders and titles, the size has shrunk, so
  -- we must now draw outside the First and Last points


   procedure Draw_Left (W  : in out Window; 
                        C  : in     Character) is
   begin
     for R in W.First.Row - 3  .. W.Last.Row + 1 loop
       Screen.MoveCursor ((Row =&gt; R, Column =&gt; W.First.Column-1));
       Text_IO.Put (C);
      end loop;
   end;
 
   procedure Draw_Right (W  : in out Window; 
                         C  : in     Character) is
   begin
     for R in W.First.Row - 3  .. W.Last.Row + 1 loop
       Screen.MoveCursor ((Row =&gt; R, Column =&gt; W.Last.Column + 1));
       Text_IO.Put (C);
     end loop;
   end;

   procedure Draw_Top (W  : in out Window; 
                       C  : in     Character) is
   begin
     for I in W.First.Column - 1 .. W.Last.Column + 1 loop
       Screen.MoveCursor ((Row =&gt; W.First.Row - 3, Column =&gt; I));
       Text_IO.Put (C);
     end loop;
   end;

   procedure Draw_Bottom (W  : in out Window; 
                          C  : in     Character) is
   begin
     for I in W.First.Column - 1 .. W.Last.Column + 1 loop
       Screen.MoveCursor ((Row =&gt; W.Last.Row + 1, Column =&gt; I));
       Text_IO.Put (C);
     end loop;
   end;

end Windows.Util;

--::::::::::
--Picture.adb
--::::::::::
with Windows.Util;
package body Picture is
  -- 
  -- Bjorn Kallberg, CelsiusTech Systems, Sweden
  -- July, 1995


  function Vertical_Char (Stick : Boolean) return Character is
  begin
     if Stick then 
        return '#'; 
     else 
       return ':'; 
     end if;
  end;

  function Horizontal_Char (Stick : Boolean) return Character is
  begin
    if Stick then 
       return '#'; 
    else 
       return '-'; 
    end if;
  end;


  procedure Open (W         : in out Root;
                  UpperLeft : in     Screen.Position;
                  Height    : in     Screen.Height;
                  Width     : in     Screen.Width) is
  begin 
     W.W := Windows.Open (UpperLeft, Height, Width);
  end;


  procedure Title (W     : in out Root;
                   Name  : in     String) is
  -- Pre:  An empty window
  -- Post: Name and a boarder is drawn.

  begin
      Windows.Borders (W.W, '+', ':', '-');
      Windows.Title (W.W, Name,'-');
  end;
 
  procedure Put_Line (W : in out Root; 
                      S : in     String) is
  begin
     Windows.Put (W.W, S);
     Windows.New_Line (W.W);
  end;


  -- North
  procedure Left_Fork  (W    : in out North; 
                        Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Right (W.W, Vertical_Char (Pick));
  end; 

  procedure Right_Fork  (W    : in out North; 
                         Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Left (W.W, Vertical_Char (Pick));
  end;


  -- South
  procedure Left_Fork  (W    : in out South; 
                        Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Left (W.W, Vertical_Char (Pick));
  end;

  procedure Right_Fork  (W    : in out South; 
                         Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Right (W.W, Vertical_Char (Pick));
  end;


  -- East
  procedure Left_Fork  (W    : in out East; 
                        Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Bottom (W.W, Horizontal_Char (Pick));
  end;
  procedure Right_Fork  (W    : in out East; 
                         Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Top (W.W, Horizontal_Char (Pick));
  end;


  -- West
  procedure Left_Fork  (W    : in out West; 
                        Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Top (W.W, Horizontal_Char (Pick));
  end;

  procedure Right_Fork  (W    : in out West; 
                         Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Bottom (W.W, Horizontal_Char (Pick));
  end;


end Picture;

--::::::::::
--chop.adb
--::::::::::
package body Chop is

  -- Dining Philosophers - Ada 95 edition
  -- Chopstick is an Ada 95 protected type
  -- Michael B. Feldman, The George Washington University,
  -- July, 1995.
 
  protected body Stick is

    entry Pick_Up when not In_Use is
    begin
      In_Use := True;
    end Pick_Up;

    procedure Put_Down is
    begin
      In_Use := False;
    end Put_Down;

  end Stick;
 
end Chop;
--::::::::::
--phil.adb
--::::::::::
with Society;
with Room;
with Random_Generic;
package body Phil is
 
  -- Dining Philosophers - Ada 95 edition
  -- Philosopher is an Ada 95 task type with discriminant.

  -- Chopsticks are assigned by a higher authority, which
  --   can vary the assignments to show different algorithms.
  -- Philosopher always grabs First_Grab, then Second_Grab.
  -- Philosopher is oblivious to outside world, but needs to
  --   communicate is life-cycle events the Maitre_D.
  -- Chopsticks assigned to one philosopher must be
  -- consecutive numbers, or the first and last chopstick.

  -- Michael B. Feldman, The George Washington University,
  -- July, 1995.
  -- Revisions:
  -- July, 1995. Bjorn Kallberg, CelsiusTech

  subtype Think_Times is Positive range 1 .. 8;
  package Think_Length is 
    new Random_Generic (Result_Subtype =&gt; Think_Times);

  subtype Meal_Times is Positive range 1 .. 10;
  package Meal_Length is
    new Random_Generic (Result_Subtype =&gt; Meal_Times);

  task body Philosopher is  -- My_ID is discriminant
 
    subtype Life_Time is Positive range 1 .. 5;
 
    Who_Am_I    : Society.Unique_DNA_Codes := My_ID; -- discriminant
    First_Grab  : Positive;
    Second_Grab : Positive;
    Meal_Time   : Meal_Times; 
    Think_Time  : Think_Times;
    First_Stick : States;
     
  begin
      -- get assigned the first and second chopsticks here
    accept Start_Eating (Chopstick1 : in Positive;
                         Chopstick2 : in Positive) do
      First_Grab  := Chopstick1;
      Second_Grab := Chopstick2;
      if (First_Grab mod Room.Table_Type'Last) + 1 = Second_Grab then
         First_Stick := Got_Right_Stick;
      else
         First_Stick := Got_Left_Stick;
      end if;
    end Start_Eating;
    Room.Maitre_D.Report_State (Who_Am_I, Breathing);
 
    for Meal in Life_Time loop
      Room.Sticks (First_Grab).Pick_Up;
      Room.Maitre_D.Report_State (Who_Am_I, First_Stick, First_Grab);
      Room.Sticks (Second_Grab).Pick_Up;
      Room.Maitre_D.Report_State (Who_Am_I, Got_Other_Stick, Second_Grab);
      Meal_Time := Meal_Length.Random_Value;
      Room.Maitre_D.Report_State (Who_Am_I, Eating, Meal_Time, Meal);
      delay Duration (Meal_Time);
      Room.Maitre_D.Report_State (Who_Am_I, Done_Eating);
      Room.Sticks (First_Grab).Put_Down;
      Room.Sticks (Second_Grab).Put_Down;
      Think_Time := Think_Length.Random_Value; 
      Room.Maitre_D.Report_State (Who_Am_I, Thinking, Think_Time);
      delay Duration (Think_Time);
    end loop;
    Room.Maitre_D.Report_State (Who_Am_I, Dying);
  end Philosopher;
end Phil;
--::::::::::
--room.adb
--::::::::::
with Picture;
with Chop;
with Phil;
with Society;
with Calendar;
pragma Elaborate (Phil);
package body Room is
 
  -- Dining Philosophers, Ada 95 edition
  -- A line-oriented version of the Room package
  -- Michael B. Feldman, The George Washington University, 
  -- July, 1995.
  -- Revisions
  -- July, 1995. Bjorn Kallberg, CelsiusTech Systems, Sweden.
  --             Pictorial display of stick in use 

  -- philosophers sign into dining room, giving Maitre_D their DNA code
 
  Dijkstra   : aliased Phil.Philosopher (My_ID =&gt; 1);
  Stroustrup : aliased Phil.Philosopher (My_ID =&gt; 2);
  Anderson   : aliased Phil.Philosopher (My_ID =&gt; 3);
  Taft       : aliased Phil.Philosopher (My_ID =&gt; 4);
  Ichbiah    : aliased Phil.Philosopher (My_ID =&gt; 5);
 
  type Philosopher_Ptr is access all Phil.Philosopher;

  Phils      : array (Table_Type) of Philosopher_Ptr;
  Phil_Pics  : array (Table_Type) of Picture.Root_Ptr;
  Phil_Seats : array (Society.Unique_DNA_Codes) of Table_Type;

  task body Maitre_D is
 
    T          : Natural;
    Start_Time : Calendar.Time;
    Blanks     : constant String := &quot;     &quot;;


  begin
 
    accept Start_Serving;

    Start_Time := Calendar.Clock;
 
    -- now Maitre_D assigns phils to seats at the table

    Phils :=
      (Dijkstra'Access,
       Anderson'Access,
       Ichbiah'Access,
       Taft'Access,
       Stroustrup'Access);
  
    -- Which seat each phil occupies.
    for I in Table_Type loop
       Phil_Seats (Phils(I).My_Id) := I;
    end loop;

    Phil_Pics :=
       (new Picture.North, 
        new Picture.East, 
        new Picture.South,
        new Picture.South,
        new Picture.West);
  
    Picture.Open (Phil_Pics(1).all,( 1, 24), 7, 30);
    Picture.Open (Phil_Pics(2).all,( 9, 46), 7, 30);
    Picture.Open (Phil_Pics(3).all,(17, 41), 7, 30);
    Picture.Open (Phil_Pics(4).all,(17,  7), 7, 30);
    Picture.Open (Phil_Pics(5).all,( 9,  2), 7, 30);


    -- and assigns them their chopsticks.

    Phils (1).Start_Eating (1, 2);
    Phils (3).Start_Eating (3, 4);
    Phils (2).Start_Eating (2, 3);
    Phils (5).Start_Eating (1, 5);
    Phils (4).Start_Eating (4, 5);
 
    loop
      select
        accept Report_State (Which_Phil : in Society.Unique_DNA_Codes;
                             State      : in Phil.States;
                             How_Long   : in Natural := 0;
                             Which_Meal : in Natural := 0) do

          T := Natural (Calendar.&quot;-&quot; (Calendar.Clock, Start_Time));
 
          case State is
 
            when Phil.Breathing =&gt;
              Picture.Title (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     Society.Name_Register (Which_Phil));
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;Breathing...&quot;);

            when Phil.Thinking =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;Thinking&quot; 
                      &amp; Integer'Image (How_Long) &amp; &quot; seconds.&quot;);

            when Phil.Eating =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;Meal&quot;  
                      &amp; Integer'Image (Which_Meal)
                      &amp; &quot;,&quot;  
                      &amp; Integer'Image (How_Long) &amp; &quot; seconds.&quot;);

            when Phil.Done_Eating =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;Yum-yum (burp)&quot;);
              Picture.Left_Fork (Phil_Pics (Phil_Seats (Which_Phil)).all, False);
              Picture.Right_Fork (Phil_Pics (Phil_Seats (Which_Phil)).all, False);

            when Phil.Got_Left_Stick =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;First chopstick&quot; 
                      &amp; Integer'Image (How_Long));
              Picture.Left_Fork (Phil_Pics (Phil_Seats (Which_Phil)).all, True);

            when Phil.Got_Right_Stick =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;First chopstick&quot; 
                      &amp; Integer'Image (How_Long));
              Picture.Right_Fork (Phil_Pics (Phil_Seats (Which_Phil)).all, True);

            when Phil.Got_Other_Stick =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;Second chopstick&quot; 
                      &amp; Integer'Image (How_Long));
              Picture.Left_Fork (Phil_Pics (Phil_Seats (Which_Phil)).all, True);
              Picture.Right_Fork (Phil_Pics (Phil_Seats (Which_Phil)).all, True);

            when Phil.Dying =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;Croak&quot;);

          end case; -- State
          
        end Report_State;
 
      or
        terminate;
      end select;
 
    end loop;
 
  end Maitre_D;
 
end Room;

--::::::::::
--diners.adb
--::::::::::
with Text_IO;
with Room;
procedure Diners is

  -- Dining Philosophers - Ada 95 edition

  -- This is the main program, responsible only for telling the
  --   Maitre_D to get busy.

  -- Michael B. Feldman, The George Washington University,
  -- July, 1995.
 
begin
  --Text_IO.New_Line;     -- artifice to flush output buffer
  Room.Maitre_D.Start_Serving;
end Diners;
&lt;/source&gt;


This version of the Dining Philosophers example was provided by Dr. Michael B. Feldman of the George Washington University and Bjorn Kallberg of CelciusTech Systems, Sweden. This example was compiled using the GNAT Ada 95 compiler, version 2.07, on a Sun platform.


{{Chapter navigation||References}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>qq4qs4fxtatcrr7y9cmd46aca6fmbb7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/References</title>
    <ns>0</ns>
    <id>200807</id>
    <revision>
      <id>1550577</id>
      <parentid>1550565</parentid>
      <timestamp>2009-06-28T09:15:13Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>{{Chapter navigation|Portable Dining Philosophers Example|Bibliography}}</comment>
      <text xml:space="preserve">{{Chapter navigation|Portable Dining Philosophers Example|Bibliography}}

{{TOC|limit=3|float=none}}

* ACES
** 1995a. Ada Compiler Evaluation System Primer, version 2.0. Wright-Patterson Air Force Base, Ohio: High Order Language Control Facility (88 CG/SCTL). 
** 1995b. Ada Compiler Evaluation System Reader's Guide, version 2.0. Wright-Patterson Air Force Base, Ohio: High Order Language Control Facility (88 CG/SCTL). 
** 1995c. Ada Compiler Evaluation System User's Guide, version 2.0. Wright-Patterson Air Force Base, Ohio: High Order Language Control Facility (88 CG/SCTL). 
* Ada Reference Manual
** 1983. Reference Manual for the Ada Programming Language. Department of Defense, ANSI/MIL-STD-1815A. 
** 1995. Ada 95 Reference Manual, ISO/8652-1995 Cambridge, Massachusetts: Intermetrics, Inc. 
*AIRMICS - 1990 . Software Reuse Guidelines, ASQB-GI-90-015. U.S. Army Institute for Research in Management Information, Communications, and Computer Sciences. 
* Anderson, T., and R.W. Witty - 1978. Safe Programming. BIT (Tidscrift Nordisk for Informations Behandling) 18:1-8. 
* ARTEWG - 1986. Catalogue of Ada Runtime Implementation Dependencies. Draft version. Association for Computing Machinery, Special Interest Group for Ada, Ada Run-Time Environments Working Group. 
* Baker, Henry G. - 1991. &quot;A Heavy Thought . . .&quot; Ada Letters. 11,2:45. 
* Barbey, S., M. Kempe, and A. Strohmeier - 1994. &quot;Advanced Object-Oriented Programming With Ada 9X.&quot; TRI-Ada '94 Tutorial Proceedings, pp. 373-467. 
* Barnes, J.G.P.
** 1989. Programming in Ada. 3d ed. Reading, Massachusetts: Addison-Wesley. 
** 1996. Programming in Ada 95. Reading, Massachusetts: Addison-Wesley. 
* Booch, G.
** 1986. Software Engineering With Ada. 2d ed. Menlo Park, California: The Benjamin/Cummings Publishing Company, Inc. 
** 1987. Software Components With Ada-Structures, Tools and Subsystems. Menlo Park, California: The Benjamin/Cummings Publishing Company, Inc. 
** 1994. Object-Oriented Analysis and Design. 2d ed. Menlo Park, California: The Benjamin/Cummings Publishing Company, Inc. 
* Brosgol, B., R. Eachus, and D. Emery - 1994. Ada for Information Systems: A Style Guide. Bedford, Massachusetts: MITRE. 
* CECOM - 1989. CECOM &quot;Final Report-Catalogue of Ada Runtime Implementation Dependencies,&quot; CIN; C02092JNB0001. 
* Charette, R.N. - 1986. Software Engineering Environments Concepts and Technology. Intertext Publications Inc. New York, New York: McGraw-Hill Inc. 
* Clapp, R.M, T. Mudge, and D.M. Roy - 1990. &quot;Rationale,&quot; Ada Letters. 10,3. 
* Cohen, N.H. 
** 1986. Ada as a Second Language. New York, New York: McGraw-Hill Inc. 
** 1996. Ada as a Second Language. 2nd edition. New York, New York: McGraw-Hill Inc. 
* Cohen, N., M. Kamrad, E. Schonberg, and R. Dewar - 1993.&quot;Ada 9X as a Second Ada.&quot; TRI-Ada '93 Tutorial Proceedings, pp. 1115-1196. 
* Conti, R.A. - 1987. Critical Run-Time Design Tradeoffs in an Ada Implementation. Proceedings of the Joint Ada Conference, Fifth National Conference on Ada Technology and Washington Ada Symposium. pp. 486-495. 
* Dewar, R. - 1995. Newsgroup discussion on comp.lang.ada. February 11, 1994. Subject: Constructor in ADA9X. 
* Edwards, S. - 1990. An Approach for Constructing Reusable Software Components in Ada, IDA Paper P-2378. Institute for Defense Analyses. 
* Goforth, A., P. Collard, and M. Marquardt - 1990. &quot;Performance Measurement of Parallel Ada,&quot; Ada Letters. 10,3. 
* Gonzalez, Dean W. - 1991. &quot;'=' Considered Harmful,&quot; Ada Letters. 11,2:56. 
* Goodenough, J., and L. Sha - 1988. The Priority Ceiling Protocol: A Method for Minimizing the Blocking of High Priority Ada Tasks, Tech. Rep. SEI-SSR-4. Pittsburgh, Pennsylvania: Software Engineering Institute. 
* Griest - 1989. &quot;Limitations on the Portability of Real Time Ada Programs,&quot; Proceedings of the 1989 Tri-Ada Conference, Tom Griest. 
* Hefley, W., J. Foreman, C. Engle, and J. Goodenough - 1992. Ada Adoption Handbook: A Program Manager's Guide, version 2.0. CMU/SEI-92-TR-29. Pittsburgh, Pennsylvania: Software Engineering Institute. 
* Honeywell - 1986. A Guidebook for Writing Reusable Source Code in Ada. Corporate Systems Development Division. Version 1.1. CSC-86-3:8213. 
* IEEE Dictionary - 1984. IEEE Standard Dictionary of Electrical and Electronics Terms. ANSI/IEEE STD 100-1984. 
* Intermetrics - 1995. Changes to Ada-1987 to 1995, version 6.0. ISO/IEC 8652:1995(E), 1995. 
* Jacobson, I. et al. - 1992. Object-Oriented Software Engineering. Reading, Massachusetts: Addison-Wesley. 
* Knight, J. - 1990. &quot;On the Assessment of Ada Performance,&quot; Ada Letters. 10,3. 
* MacLaren, L. - 1980. Evolving Toward Ada in Real Time Systems. ACM Sigplan Notices. 15(11):146-155. 
* Matthews, E.R. - 1987. Observations on the Portability of Ada I/O. ACM Ada Letters. VII(5): 100-103. 
* Melliar-Smith, P.M., and B. Randell - 1987. Software Reliability: The Role of Programmed Exception Handling. ACM Sigplan Notices.12(3):95-100. 
* NASA 1987. Ada Style Guide. Version 1.1, SEL-87-002. Greenbelt, Maryland: NASA, Goddard Space Flight Center. 
* 1992. Ada Efficiency Guide. Technical Note 552-FDD-91/068R0UD0. Greenbelt, Maryland: NASA, Goddard Space Flight Center. 
* Newport, J.R. - 1995. &quot;A Performance Model for Real-Time Systems,&quot; Ada Letters. 15,2. 
* Nissen, J., and P. Wallis - 1984. Portability and Style in Ada. Cambridge University Press. 
* Pappas, F. - 1985. Ada Portability Guidelines. DTIC/NTIS #AD-A160 390. 
* Pyle, I.C. - 1985. The Ada Programming Language. 2d ed. United Kingdom: Prentice-Hall International. 
* Rationale - 1995. Ada 95 Rationale, Cambridge, Massachusetts: Intermetrics, Inc. 
* Rosen, J.P. 1987. In Defense of the 'Use' Clause. ACM Ada Letters. VII(7):77-81. 
* 1995. A Naming Convention for Classes in Ada 9X. ACM Ada Letters. VXV(2):54-58. 
* Ross, D. - 1989. The Form of a Passive Iterator. ACM Ada Letters. IX(2):102-105.
* Rumbaugh, J., M. Blaha, W. Premerlani, F. Eddy, and W. Lorensen - 1991. Object-Oriented Modeling and Design. Englewood Cliffs, New Jersey: Prentice-Hall. 
* Sanden, B. - 1994. Software Systems Construction With Examples in Ada. Englewood Cliffs, New Jersey: Prentice-Hall. 
* Schneiderman, B. - 1986. Empirical Studies of Programmers: The Territory, Paths and Destinations. Empirical Studies of Programmers, edited by E. Soloway and S. Iyengar. Norwood, NJ: Ablex Publishing Corp. pp. 1-12. 
* Software Productivity Consortium
** 1992. Ada Quality and Style: Guidelines for Professional Programmers, SPC-91061-CMC, version 02.01.01. Herndon, Virginia: Software Productivity Consortium. 
** 1993. ADARTS Guidebook, SPC-91104-MC, version 03.00.09. 2 vols. Herndon, Virginia: Software Productivity Consortium. 
* Soloway, E., J. Pinto, S. Fertig, S. Letovsky, R. Lampert, D. Littman, and K. Ewing - 1986. Studying Software Documentation From a Cognitive Perspective: A Status Report. Proceedings of the Eleventh Annual Software Engineering Workshop. Report SEL-86-006, Software Engineering Laboratory. Greenbelt, Maryland: NASA, Goddard Space Flight Center.
* Taft, S.T.
** 1994. Multiple Inheritance in Ada 9X. Cambridge, Massachusetts: Intermetrics, Inc. 
** 1995a. Newsgroup discussion on comp.lang.ada. January 22, 1995. Subject: Ada.strings.bounded problems?
** 1995b. Newsgroup discussion on comp.lang.ada. February 11, 1995. Subject: Constructor in ADA9X. 
* Taylor, B. - 1995. Ada Compatibility Guide, version 6.0. United Kingdom: Transition Technology Limited. 
* United Technologies - 1987. CENC Programmer's Guide. Appendix A: Ada Programming Standards. 
* Volan, J. - 1994. Newsgroup discussion on comp.lang.ada. December 9, 1995. Subject: Type extension vs. inheritance. 
* Volz, R.A., Mudge, Naylor, and Mayer - 1985. Some Problems in Distributing Real-Time Ada Programs Across Machines. Ada in Use, Proceedings of the Ada International Conference. pp. 14-16. Paris. 
* Wegner, P., and S.B. Zdonik - 1988. Inheritance as an Incremental Modification Mechanism or What Like Is and Isn't Like. Proceedings of the European Conference on Object-Oriented Programming. LNCS 322. Springer-Verlag. 
* Weidermann, N. - 1990. &quot;Hartstone: Synthetic Benchmark Requirements for Hard Real-Time Applications,&quot; Ada Letters. 10,3. 
* Wheeler, David A. - 1992. Analysis and Guidelines for Reusable Ada Software. IDA Paper P-2765. Alexandria, Virginia: Institute for Defense Analyses.


{{Chapter navigation||Bibliography}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>n9ut143vv6oauta5edqry4qkrnftp40</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Bibliography</title>
    <ns>0</ns>
    <id>200808</id>
    <revision>
      <id>1550585</id>
      <parentid>1550584</parentid>
      <timestamp>2009-06-28T10:09:16Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>URL and DOI for each Ada-Letters paper</comment>
      <text xml:space="preserve">{{Chapter navigation|References|}}


*ACVC (Ada Compiler Validation Capability). Ada Validation Facility, ASD/SIOL. Wright-Patterson Air Force Base, Ohio.
*{{cite book
 |    author = AIRMICS
 |     title = Software Reuse Guidelines
 |   edition = 
 |      date = 
 |      year = 1990
 |     month = 
 |        id = ASQB-GI-90-015
 | publisher = U.S. Army Institute for Research in Management Information, Communications, and Computer Sciences
 |  location = 
 }}
*{{cite conference
 |    author = Ausnit, C., and K.A. Johnson. 
 |     title = Ada 95 Quality and Style
 | booktitle = Proceedings of the Thirteenth Annual National Conference on Ada Technology
 |     month = March 
 |      year = 1995
 }}
*{{Ada/Cite ACM
 |     author = Bardin, Thompson
 |      title = Composable Ada Software Components and the Re-Export Paradigm
 |       year = 1988
 |      month = January/February
 |     volume = VIII
 |      issue = 1
 |      pages = 58&amp;ndash;79
 |        doi = 10.1145/44766.44769
 |        url = http://portal.acm.org/citation.cfm?id=44766.44769
 |      quote = 
 | accessdate = 2009-06-28
 }}
*{{Ada/Cite ACM
 |     author = Bardin, Thompson
 |      title = Using the Re-Export Paradigm to Build Composable Ada Software Components
 |       year = 1988
 |      month = March/April
 |     volume = VIII
 |      issue = 2
 |      pages = 39&amp;ndash;54
 |        doi = 10.1145/45380.45381
 |        url = http://portal.acm.org/citation.cfm?id=45380.45381
 |      quote = 
 | accessdate = 2009-06-28
 }}
*{{cite book
 |     author = Brooks, F.B
 |      title = The Mythical Man-Month. Essays on Software Engineering
 |    edition = 
 |       date = 
 |       year = 1975
 |      month = 
 |         id = 
 |  publisher = Addison-Wesley
 |   location = Reading, Massachusetts
 }}
*{{cite journal
 |     author = Cristian, F
 |       year = 1984
 |      month = March
 |      title = Correct and Robust Programs
 |    journal = IEEE Transactions on Software Engineering
 |     volume = 10
 |      issue = 2
 |      pages = 163&amp;ndash;174
 |        doi = 
 |         id = 
 |        url = 
 |     format = 
 | accessdate = 
 }}
* Department of Defense, Ada Joint Program Office. Rationale for the Design of the Ada Programming Language, 1984. 
* Department of Defense, Ada Joint Program Office. Reference Manual for the Ada Programming Language. ANSI/MIL-STD-1815A, January 1983. 
*{{cite book
 |     author = Foreman, J., and J. Goodenough
 |      title = Ada Adoption Handbook: A Program Manager's Guide
 |    edition = Version 1.0
 |       date = 
 |       year = 1987
 |      month = May
 |         id = CMU/SEI-87-TR-9 ESD-TR-87-110
 |  publisher = Software Engineering Institute
 |   location = Pittsburgh, Pennsylvania
 }}
*{{cite book
 |     author = Gary, B., and D. Pokrass
 |      title = Understanding Ada: A Software Engineering Approach
 |    edition = 
 |       date = 
 |       year = 1985
 |      month = 
 |         id = 
 |  publisher = John Wiley &amp; Sons
 |   location = 
 }}
*{{cite paper
 |     author = Goodenough, J. B.
 |      title = A Sample of Ada Programmer Errors
 |    version = 
 |      pages = 
 |  publisher = 
 |      month = March
 |       year = 1986
 |        url = 
 |     format = 
 |         id = Unpublished draft resident in the Ada Repository under file name PD2:&lt;ADA.EDUCATION&gt;PROGERRS.DOC.2
 | accessdate = 
 }}
*{{cite paper
 |     author = Herr, C.S.
 |      title = Compiler Validation and Reusable Software
 |    version = 
 |      pages = 
 |  publisher = McDonnell Douglas Astronautics Company
 |   location = St. Louis, Missouri
 |       date = 
 |       year = 1987
 |      month = August
 |        url = 
 |     format = 
 |         id = 
 | accessdate = 
 }} A Report from the CAMP Project
* International Workshop on Real-Time Ada Issues. ACM Ada Letters. VII(6). Mortonhampstead, Devon, U.K., 1987.
* International Workshop on Real-Time Ada Issues II. ACM Ada Letters. VIII(6). Mortonhampstead, Devon, U.K., 1988.
*{{Ada/Cite cla
 |     author = Magnus Kempe
 |      title = Ada Programmer's Frequently Asked Questions (FAQ)
 |       date = 1995-08-19
 |        url = http://groups.google.es/group/news.answers/msg/f001f14822b17426
 |      quote = 
 | accessdate = 2009-06-28
}} [http://groups.google.es/group/comp.lang.ada/msg/33004d41f35bdead Part 2], [http://groups.google.es/group/news.answers/msg/0731234b0047f985 Part 3]
*{{cite book
 |     author = Kernighan, B., and P.J. Plauger
 |      title = The Elements of Programming Style
 |    edition = 
 |       date = 
 |       year = 1978
 |      month = 
 |         id = 
 |  publisher = McGraw-Hill, Inc.
 |   location = New York, New York
 }}
*{{cite journal
 |     author = MacLaren, L.
 |       year = 1980
 |      month = November
 |      title = Evolving Toward Ada in Real Time Systems
 |    journal = ACM Sigplan Notices
 |     volume = 15
 |      issue = 11
 |      pages = 146&amp;ndash;155
 |        doi = 
 |         id = 
 |        url = 
 |     format = 
 | accessdate = 
 }}
*{{cite paper
 |     author = Mowday, B.L., and E. Normand
 |      title = Ada Programming Standards
 |    version = 
 |      pages = 
 |  publisher = General Dynamics Data Systems Division Departmental Instruction
 |      month = November
 |       year = 1986
 |        url = 
 |     format = 
 |         id = 414.717
 | accessdate = 
 }}
*{{Ada/Cite ACM
 |     author = Nissen, J.C.D., P. Wallis, B.A. Wichmann, et al.
 |      title = Ada-Europe Guidelines for the Portability of Ada Programs
 |       year = 1982
 |      month = March/April
 |     volume = I
 |      issue = 3
 |      pages = 44&amp;ndash;61
 |        doi = 10.1145/989791.989793
 |        url = http://portal.acm.org/citation.cfm?id=989791.989793
 |      quote = 
 | accessdate = 2009-06-28
 }}
*{{cite paper
 |     author = Rymer, J., and T. McKeever
 |      title = The FSD Ada Style Guide
 |    version = 
 |      pages = 
 |  publisher = IBM Federal Systems Division Ada Coordinating Group
 |       date = 
 |       year = 1986
 |      month = September
 |        url = 
 |     format = 
 |         id = 
 | accessdate = 
 }}
*{{cite paper
 |     author = SofTech Inc.
 |      title = ISEC Reusability Guidelines
 |    version = 
 |      pages = 
 |  publisher = 
 |       year = 1985
 |      month = December
 |        url = 
 |     format = Report 3285-4-247/2
 |         id = 
 | accessdate = 
 }} Also U.S. Army Information Systems Engineering Command. Waltham, Massachusetts. 
*{{cite conference
 |     author = Stark M., and E. Seidewitz
 |      title = Towards A General Object-Oriented Ada Lifecycle
 | conference = Fifth National Conference on Ada Technology and Washington Ada Symposium
 |  booktitle = Proceedings of the Joint Ada Conference
 |      month = March
 |       year = 1987
 |      pages = 213&amp;ndash;222
 |        doi = 
 |         id = 
 |        url = 
 |     format = 
 }}
*{{cite book
 |     author = St. Dennis, R.
 |      title = A Guidebook for Writing Reusable Source Code in Ada
 |    edition = version 1.1
 |       date = 
 |       year = 1986
 |      month = May
 |         id = Report CSC-86-3:8213
 |  publisher = Honeywell Corporate Systems Development Division
 |   location = Golden Valley, Minnesota
 }}
*{{Ada/Cite ACM
 |     author = VanNeste, K.F.
 |      title = Ada Coding Standards and Conventions
 |       year = 1986
 |      month = January/February
 |     volume = VI
 |      issue = 1
 |      pages = 41&amp;ndash;48
 |        doi = 10.1145/382256.382796
 |        url = http://portal.acm.org/citation.cfm?id=382256.382796
 |      quote = 
 | accessdate = 2009-06-28
 }}


{{Chapter navigation||}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>k2c6ojix3ozbj6jsbkfpdjqucme1ogv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:15sa1898</title>
    <ns>3</ns>
    <id>200809</id>
    <revision>
      <id>1549875</id>
      <parentid>1549771</parentid>
      <timestamp>2009-06-27T18:39:32Z</timestamp>
      <contributor>
        <username>15sa1898</username>
        <id>247265</id>
      </contributor>
      <text xml:space="preserve">==  Gholam Ali Nuri ==





Gholam ALI Nuri (غلامعلي نوري) Born june,13, 1968 ,Kermanshah ,Iran
Iranian physician &amp; scientist.
His works have been extended in many

subjects:mathematics,chemistry,physics, persian litrerature,
Quran interpretation,medical practice &amp; philosophy,... some of his attractive works are brought below for instance: 1- Expression of speed of light by abstract mathematics as following: c = 670^3-99^3-6^3-3^3 = velocity of light in vacuum = 299792458 Another equality is: square root 2 multiplied by c is an integer number i.e 423970560 =2^8×1656135 . &quot; As constant pi(3.1415926...)that can be exhibited by pure math (e.g Wallis formula) speed of the light (as an universal constant) can also be expressed by abstract mathematical series or sequential real numbers&quot; Nuri says. 2-Getting exact percentage&amp; ratio of the Earth‘s hydrosphere versus land (73.33% vs 26.66%)by means of holy Quran(ie total repetitions of the word (بحر = sea) in Quran is 33 times , and total repetitions of the word (بر = land) in Quran is 12 times.Then,33 divided by 12 results in 2.75,the same as hydrosphere/land ratio.

This article, (with new cases)  to be continued in future.</text>
      <sha1>il7ty7r9a7odw6juu1i8zghizwi35s2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Ada Style Guide</title>
    <ns>14</ns>
    <id>200810</id>
    <revision>
      <id>1549774</id>
      <timestamp>2009-06-27T16:56:01Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>[[Category:Ada programming language]]</comment>
      <text xml:space="preserve">{{center|This category contains pages that are part of the [[{{PAGENAME}}]] book.}}
{{CategoryTOC}}

[[Category:Ada programming language]]</text>
      <sha1>erp5mkr46kc4mcfqhjfrvsl0kisapti</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Summer Flowers of Northern New England/Blue and Purple Flowers</title>
    <ns>111</ns>
    <id>200811</id>
    <revision>
      <id>1549800</id>
      <timestamp>2009-06-27T17:26:38Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>Created page with 'To create new pages, paste this text in and fill it in. &lt;pre&gt; {{WJ Flower |common name = |binomial = |image1 = |caption1 = |image2= |caption2= |image3 = |caption3= |description =...'</comment>
      <text xml:space="preserve">To create new pages, paste this text in and fill it in.
&lt;pre&gt;
{{WJ Flower
|common name =
|binomial =
|image1 =
|caption1 =
|image2=
|caption2=
|image3 =
|caption3=
|description =
|facts = 
}}

&lt;/pre&gt;</text>
      <sha1>is5eur0nmzzropeiw6r6vje81igmwzv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Solanum dulcamara</title>
    <ns>110</ns>
    <id>200812</id>
    <revision>
      <id>1876076</id>
      <parentid>1549810</parentid>
      <timestamp>2010-07-07T18:34:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Solanum dulcamara&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Bittersweet Nightshade
|binomial =Solanum dulcamara
|image1 =Solanum dulcamara ENBLA03.jpg
|caption1 =Flower
|image2=Morelle douce-amere (Solanum dulcamara) (2543000478).jpg
|caption2=Flowers, vine, leaves, and an unripe berry
|image3 =XN Solanum dulcamara 00.jpg
|caption3=Flowers and ripe berries
|description =Bittersweet Nightshade is a poisonous plant related to tomatoes and potatoes.  The flowers have five purple petals, with a yellow ''style'' coming out of the center.  The leaves and berries of this plant are poisonous to humans and cattle, but not to birds.  Birds eat the berries and spread the seeds over wide areas.  The leaves have an arrowhead shape, sometimes with a lobe near the base.  The berries start off green, but ripen to a bright red.  

Bittersweet Nightshade can climb to a height of 13 feet, but six feet is more common.
|facts = The poison in Bittersweet is called ''solanine'' and is named after this plant's genus ''Solanum''.  Note that the leaves of tomatoes and potatoes (which are in the same genus) are poisonous too!
}}</text>
      <sha1>fwgj7lrdtgcijnd4jw2w5yi1c62dnax</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Userbox design templates</title>
    <ns>14</ns>
    <id>200813</id>
    <revision>
      <id>1549849</id>
      <timestamp>2009-06-27T18:17:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">These templates allow for the creation of new userboxes through their transclusion on a userbox's template page. See [[Wikibooks:Userboxes]] for details.

[[Category:Userboxes| {{PAGENAME}}]]</text>
      <sha1>stfvsoy0357671ud8i4h6lwdyqyectv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Userbox layout templates</title>
    <ns>14</ns>
    <id>200814</id>
    <revision>
      <id>1549857</id>
      <timestamp>2009-06-27T18:21:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">These templates assist in the positioning or display of userboxes on your user page.

[[Category:Userboxes| {{PAGENAME}}]]</text>
      <sha1>74qoihl9ddrmvofjtu8jdeqo7cwfz5u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Computer-related user templates</title>
    <ns>14</ns>
    <id>200815</id>
    <revision>
      <id>1549862</id>
      <timestamp>2009-06-27T18:27:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
</mediawiki>